export default {
  packageId: ["Ludeon.RimWorld"],
  author: ["Ludeon Studios"],
  li: [
    "Ludeon.RimWorld.Ideology",
    "Ludeon.RimWorld.Royalty",
    "InsectsRelated",
    "Offworld",
    "Scientist",
    "Intellectual",
    "Violent",
    "Social",
    "Caring",
    "Artistic",
    "Pirate",
    "ManualDumb",
    "Crafting",
    "Cooking",
    "Farmer",
    "PlantWork",
    "Mining",
    "ManualSkilled",
    "Hauling",
    "ImperialCommon",
    "Outlander",
    "Cleaning",
    "Madman",
    "Miner",
    "Animals",
    "Hunter",
    "Logger",
    "Constructing",
    "ImperialFighter",
    "Vatgrown",
    "Firefighting",
    "Outsider",
    "Newborn",
    "Child",
    "ChildTribal",
    "AdultColonist",
    "AdultTribal",
    "VatGrown",
    "Tribal",
    "TribalHunter",
    "TribalLogger",
    "TribalFarmer",
    "TribalMiner",
    "ImperialRoyal",
    "Slave",
    "Trader",
    "Civil",
    "NoBeard",
    "BeardPunk",
    "BeardShort",
    "BeardTribal",
    "Bushy",
    "BeardLong",
    "BeardUrban",
    "BeardRural",
    "BeardBushy",
    "MoustacheOnly",
    "Ambient_NightInsects_Standard",
    "Muffalo",
    "Ambient_Wind_Desolate",
    "Alpaca",
    "Ambient_NightInsects_Jungle",
    "Ambient_DayInsects_Jungle",
    "Elephant",
    "Dromedary",
    "HeadAttackTool",
    "Beak",
    "Feet",
    "Mouth",
    "HeadClaw",
    "Teeth",
    "FrontLeftPaw",
    "FrontRightPaw",
    "FrontLeftLeg",
    "FrontRightLeg",
    "TuskAttackTool",
    "HornAttackTool",
    "FrontLeftClaws",
    "FrontRightClaws",
    "TurtleBeakAttackTool",
    "LeftHand",
    "MiddleFingers",
    "RightHand",
    "Torso",
    "Neck",
    "UpperHead",
    "FullHead",
    "Eyes",
    "Shoulders",
    "Arms",
    "Hands",
    "Waist",
    "Legs",
    "LeftBlade",
    "RightBlade",
    "MovingLimbCore",
    "ManipulationLimbCore",
    "EatingSource",
    "TalkingSource",
    "HearingSource",
    "BloodPumpingSource",
    "BloodFiltrationSource",
    "MetabolismSource",
    "BreathingSource",
    "BreathingPathway",
    "EatingPathway",
    "TalkingPathway",
    "MovingLimbSegment",
    "MovingLimbDigit",
    "ManipulationLimbDigit",
    "ConsciousnessSource",
    "SightSource",
    "BreathingSourceCage",
    "Spine",
    "Tongue",
    "ManipulationLimbSegment",
    "Pelvis",
    "BloodFiltrationKidney",
    "BloodFiltrationLiver",
    "1800",
    "3600",
    "7200",
    "10800",
    "14800",
    "21600",
    "28800",
    "36000",
    "(0, 0)",
    "(1800, 1.2)",
    "(36000, 1.5)",
    "OriginSpacer",
    "OriginTribal",
    "0, 0",
    "0.6, 1",
    "0.9, 2",
    "1, 3",
    "(0.04, 0.20)",
    "(0.5, 1)",
    "(0.4, 0)",
    "(0.9, 0.15)",
    "Melee",
    "MeleeBlunt",
    "Blunt",
    "Poke",
    "Manufactured",
    "RawHops",
    "Brain",
    "(0.45, 99999)",
    "(0.5, 60)",
    "(1, 45)",
    "Liver",
    "(0.5, 180)",
    "(1, 150)",
    "\r\n      ",
    "",
    "Drugs",
    "(10, 0)",
    "(60, 0.25)",
    "DrugLab",
    "(0.5, 120)",
    "(1, 90)",
    "ExoticMisc",
    "RewardStandardCore",
    "Malaria",
    "SleepingSickness",
    "Plague",
    "Campfire",
    "ElectricStove",
    "FueledStove",
    "(1, 135)",
    "Kidney",
    "CraftingSpot",
    "Lung",
    "(0.36, 99999)",
    "(0.4, 180)",
    "Heart",
    "(35,     15)",
    "(100,   120)",
    "(1000,  500)",
    "(2000,  800)",
    "(4000, 1000)",
    "Synthread",
    "Hyperweave",
    "Plasteel",
    "(0.78, 0.79, 0.71)",
    "(300,  0)",
    "(700,  1)",
    "(1400, 1.8)",
    "(2800, 2.2)",
    "(4000, 2.6)",
    "(35,     8)",
    "(100,   60)",
    "(1000, 250)",
    "(2000, 400)",
    "(4000, 500)",
    "(400,200)",
    "(900,300)",
    "(100000,10000)",
    "(0.44, 0.41, 0.32)",
    "(0.61, 0.58, 0.49)",
    "(0.60, 0.49, 0.36)",
    "ComponentIndustrial",
    "Rustican",
    "Caravan_Outlander_BulkGoods",
    "Caravan_Outlander_CombatSupplier",
    "Caravan_Outlander_Exotic",
    "Caravan_Outlander_PirateMerchant",
    "Visitor_Outlander_Standard",
    "Base_Outlander_Standard",
    "(0,35)",
    "(70, 50)",
    "(700, 100)",
    "(1300, 150)",
    "(100000, 10000)",
    "(0.35, 0.30, 0.60)",
    "(0.45, 0.40, 0.90)",
    "(0, 0.4, 0.94)",
    "(0.64, 0.8, 1)",
    "Corunan",
    "Caravan_Neolithic_BulkGoods",
    "Caravan_Neolithic_WarMerchant",
    "Caravan_Neolithic_Slaver",
    "Caravan_Neolithic_ShamanMerchant",
    "Visitor_Neolithic_Standard",
    "Base_Neolithic_Standard",
    "(0, 1)",
    "(800, 100)",
    "(0.85, 0.75, 0.37)",
    "(0.94, 0.61, 0.06)",
    "(0.03, 0.47, 0.16)",
    "(0.49, 0.96, 0.51)",
    "(0.85, 0, 0)",
    "(0.85, 0.7, 0.7)",
    "(0.78, 0, 0.27)",
    "(1, 0.74, 0.83)",
    "Kriminul",
    "Siege",
    "Silver",
    "MedicineIndustrial",
    "MealSurvivalPack",
    "Neutroamine",
    "Jade",
    "MedicineHerbal",
    "Pemmican",
    "Flake",
    "Yayo",
    "GoJuice",
    "WakeUp",
    "SmokeleafJoint",
    "Luciferium",
    "(0, 0.737, 0.847)",
    "Astropolitan",
    "ClassicStart",
    "ClassicStartTechprints",
    "TribalStart",
    "TribalStartTechprints",
    "Cloth",
    "PsychicSoothe",
    "PsychicDrone",
    "ColdSnap",
    "VolcanicWinter",
    "PassiveCooler",
    "Cooler",
    "HeatWave",
    "PartySpot",
    "HairColor",
    "SkinColor",
    "BodyPartsArchotech",
    "ArchotechEye",
    "Eye",
    "ArchotechArm",
    "Shoulder",
    "ArchotechLeg",
    "Leg",
    "TechHediff",
    "Human",
    "Medicine",
    "BodyPartsBionic",
    "Bionic",
    "Advanced",
    "FabricationBench",
    "RewardStandardMidFreq",
    "GutWorms",
    "BionicEye",
    "BionicArm",
    "BionicLeg",
    "BionicSpine",
    "BionicHeart",
    "BionicStomach",
    "Stomach",
    "DeathAcidifier",
    "BionicEar",
    "Ear",
    "BionicTongue",
    "WoodLog",
    "Hand",
    "Foot",
    "Jaw",
    "BodyPartsNatural",
    "BodyPartsProsthetic",
    "TableMachining",
    "Simple",
    "RewardStandardLowFreq",
    "AdvancedWeapon",
    "SimpleProstheticLeg",
    "SimpleProstheticArm",
    "SimpleProstheticHeart",
    "CochlearImplant",
    "PowerClaw",
    "Joywire",
    "Painstopper",
    "Scratch",
    "(2, 0)",
    "(7, 0.5)",
    "(20, 1)",
    "(4, 0.05)",
    "(12, 0.15)",
    "(20, 0.25)",
    "(0.5, 8)",
    "(1, 0.5)",
    "Sterilized",
    "ReversibleSterilized",
    "PsylinkNeuroformer",
    "(0.6, 9999999)",
    "(0.8, 2500)",
    "(1, 300)",
    "(0.28, 0)",
    "(1, 0.0011)",
    "(1.5, 0.0015)",
    "(0.5, 0)",
    "(0.625, 0.0093)",
    "(0.75, 0.01395)",
    "(0.875, 0.01395)",
    "(1, 0.0186)",
    "(0.625, 0)",
    "(0.875, 0.02604)",
    "(0.6, 0)",
    "(0.75, 0.0053)",
    "(0.875, 0.011045)",
    "(0.85, 0)",
    "(0.95, 0.0093)",
    "(1.15, 0.093)",
    "(0.42, 0)",
    "(0.7, 0.00061)",
    "(0.9, 0.0012)",
    "(1, 0.002)",
    "(1.5, 0.003)",
    "(0.2, 0.00048)",
    "(0.3, 0.00096)",
    "(0.5, 0.001344)",
    "(0.25, 0)",
    "(0.3, 0.001)",
    "(0.5, 0.00145)",
    "(1, 0.0016)",
    "(1.5, 0.0017)",
    "Moving",
    "ShootingAccuracyPawn",
    "Shooting",
    "TradePriceImprovement",
    "NegotiationAbility",
    "Warden",
    "Talking",
    "TameAnimalChance",
    "Handling",
    "MedicalSurgerySuccessChance",
    "Doctor",
    "Manipulation",
    "Art",
    "Smithing",
    "Construction",
    "Tailoring",
    "r_logentry(p=5)->[INITIATOR_nameDef] [tamed] [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] sat near [RECIPIENT_nameDef] and talked to [INITIATOR_objective]self about [TalkTopicAny].",
    "r_logentry->[INITIATOR_nameDef] approached [RECIPIENT_nameDef] while whispering to [INITIATOR_objective]self about [TalkTopicAny].",
    "r_logentry->[INITIATOR_nameDef] came near [RECIPIENT_nameDef] while talking to [INITIATOR_objective]self about [TalkTopicAny].",
    "tamed->made calming noises towards",
    "tamed->offered slow, friendly gestures to",
    "tamed->made shushing noises at",
    "tamed->made happy clicking noises at",
    "tamed->gestured gently and approached",
    "tamed->slowly approached",
    "tamed->gently touched",
    "tamed->calmed and encouraged",
    "tamed->matched breathing with",
    "tamed->took a low stance while approaching",
    "tamed->showed no fear or anger to",
    "tamed->feigned inattention towards",
    "tamed->gently hummed a song at",
    "tamed->sang an old lullaby at",
    "tamed->firmly yet softly touched",
    "tamed->showed a relaxed attitude towards",
    "tamed->sat patiently near",
    "tamed->whispered a story about [TalkTopicAny] to",
    "r_logentry->[INITIATOR_nameDef] tried to tame [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] tried to bring [RECIPIENT_nameDef] under control.",
    "r_logentry->[INITIATOR_nameDef] attempted to collar [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] demanded obedience from [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] called [RECIPIENT_nameDef] to come to [INITIATOR_objective].",
    "r_logentry->[INITIATOR_nameDef] tried to make [RECIPIENT_nameDef] sit still.",
    "r_logentry->[INITIATOR_nameDef] seized [RECIPIENT_nameDef] sharply and barked a command.",
    "r_logentry->[INITIATOR_nameDef] attempted to hold [RECIPIENT_nameDef] still.",
    "r_logentry->[INITIATOR_nameDef] shouted a command at [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] slapped [RECIPIENT_nameDef] in a show of dominance.",
    "r_logentry->[INITIATOR_nameDef] directed [RECIPIENT_nameDef] back towards the community.",
    "r_logentry->[INITIATOR_nameDef] called [RECIPIENT_nameDef] to come back to the community.",
    "r_logentry->[INITIATOR_nameDef] touched a vulnerable body part of [RECIPIENT_nameDef], demanding obedience.",
    "r_logentry->[INITIATOR_nameDef] pointed at the ground, demanding that [RECIPIENT_nameDef] come.",
    "r_logentry->[INITIATOR_nameDef] gave [RECIPIENT_nameDef] a first command.",
    "r_logentry->[INITIATOR_nameDef] [trained] [RECIPIENT_nameDef].",
    "trained(p=2)->[tried] to train",
    "trained->[tried] to show a new trick to",
    "trained->[tried] to discipline",
    "trained->[tried] to instruct",
    "trained->[tried] to encourage a new skill in",
    "trained->demonstrated a skill to",
    "trained->encouraged a new response from",
    "tried->tried",
    "tried->attempted",
    "r_logentry(p=2)->[INITIATOR_nameDef] [nuzzleadverb] [nuzzled] [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] [nuzzleadverb] rubbed [INITIATOR_possessive] nose against [RECIPIENT_nameDef]'s [rubbedpart].",
    "nuzzled(p=2)->nuzzled",
    "nuzzled->snuggled up to",
    "nuzzleadverb(p=4)->",
    "nuzzleadverb->gently",
    "nuzzleadverb->encouragingly",
    "nuzzleadverb->happily",
    "nuzzleadverb->softly",
    "nuzzleadverb->supportively",
    "nuzzleadverb->lightly",
    "nuzzleadverb->warmly",
    "nuzzleadverb->plaintively",
    "nuzzleadverb->lovingly",
    "nuzzleadverb->affectionately",
    "rubbedpart->leg",
    "rubbedpart->knee",
    "rubbedpart->foot",
    "rubbedpart->elbow",
    "rubbedpart->hip",
    "rubbedpart->shoulder",
    "rubbedpart->hand",
    "rubbedpart->side",
    "rubbedpart->arm",
    "r_logentry->[farewell] [released]",
    "farewell->[INITIATOR_nameDef] gently pet [RECIPIENT_nameDef] one last time",
    "farewell->[INITIATOR_nameDef] said some warm words to [RECIPIENT_nameDef]",
    "farewell->[INITIATOR_nameDef] removed [RECIPIENT_nameDef]'s collar",
    "farewell->[INITIATOR_nameDef] reminisced about the good time [INITIATOR_pronoun] had with [RECIPIENT_nameDef]",
    "released->and released [RECIPIENT_objective] to the wild.",
    "released->and set [RECIPIENT_objective] free.",
    "released->and sent [RECIPIENT_objective] off.",
    "released->and let [RECIPIENT_objective] go.",
    "released->then turned away and let [RECIPIENT_objective] leave the colony.",
    "released->before letting [RECIPIENT_objective] go to live in freedom.",
    "r_logentry->[INITIATOR_nameDef] [toldastoryabout] [subject] to [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] told [RECIPIENT_nameDef] about [subject].",
    "r_logentry->[INITIATOR_nameDef] described [subject] to [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] encouraged [RECIPIENT_nameDef] to [talkabout] [subject].",
    "r_logentry->[INITIATOR_nameDef] offered a chance for [RECIPIENT_nameDef] to [talkabout] [subject].",
    "r_logentry->[INITIATOR_nameDef] expressed interest in [RECIPIENT_nameDef]'s [PersonalCharacteristic].",
    "r_logentry->[INITIATOR_nameDef] asked [RECIPIENT_nameDef] about [RECIPIENT_possessive] [PersonalCharacteristic].",
    "toldastoryabout(p=2)->told a story about",
    "toldastoryabout->told a funny story about",
    "toldastoryabout->told a heartfelt story about",
    "toldastoryabout->told an old story about",
    "toldastoryabout->told a family story about",
    "toldastoryabout->told a childhood story about",
    "toldastoryabout->mentioned an anecdote about",
    "talkabout->talk about",
    "talkabout->discuss",
    "talkabout->have a discussion about",
    "talkabout->ask about",
    "talkabout->think about",
    "talkabout->find common ground around",
    "subject->the colony",
    "subject->the community",
    "subject->joining the colony",
    "subject->changing teams",
    "subject->finding friends",
    "subject->meeting new people",
    "subject->reconsidering [RECIPIENT_possessive] ideas",
    "subject->rethinking [RECIPIENT_possessive] loyalties",
    "subject->health",
    "subject->the future",
    "subject->letting go",
    "subject(p=4)->[ConceptPositive]",
    "subject(p=2)->[INITIATOR_possessive] [PersonalCharacteristic]",
    "subject(p=8)->[TalkTopicLight]",
    "r_logentry->[INITIATOR_nameDef] asked [RECIPIENT_nameDef] to join.",
    "r_logentry->[INITIATOR_nameDef] promised [goodthing] to [RECIPIENT_nameDef], and asked [RECIPIENT_objective] to join.",
    "goodthing(p=15)->[ConceptPositive]",
    "goodthing->free, fresh [Vegetable]s",
    "r_logentry->[INITIATOR_nameDef] spoke about the joy of [freedom], and offered a means of escape.",
    "r_logentry->[INITIATOR_nameDef] talked about how beautiful the [TerrainFeature] is, and offered freedom.",
    "r_logentry->[INITIATOR_nameDef] demonstrated a means of escape to [RECIPIENT_nameDef], and promised [freedom].",
    "r_logentry->[INITIATOR_nameDef] told [RECIPIENT_nameDef] that security is lax, and encouraged escape.",
    "freedom->freedom",
    "freedom->opportunity",
    "freedom->home",
    "freedom->self-determination",
    "sent->[RECIPIENT_nameDef] has accepted and joined [INITIATOR_nameDef]'s community.",
    "sent->[RECIPIENT_nameDef] refused.",
    "r_logentry->[INITIATOR_nameDef] [wooed] [RECIPIENT_nameDef] by [wootactic].",
    "wooed->tried to flirt with",
    "wooed->flirted with",
    "wooed->tried to attract",
    "wooed->tried to romance",
    "wooed->tried to woo",
    "wooed->wooed",
    "wooed->pursued",
    "wooed->charmed",
    "wooed->courted",
    "wootactic(p=4)->[complimenting] [RECIPIENT_possessive] [PersonalCharacteristic]",
    "wootactic->telling a story about [TalkTopicAny]",
    "wootactic->telling a tale about [TalkTopicAny]",
    "wootactic->joking about [TalkTopicAny]",
    "wootactic->making an observation about [TalkTopicAny]",
    "wootactic(p=2)->[boasting] [INITIATOR_possessive] own [PersonalCharacteristic]",
    "wootactic->comparing [RECIPIENT_objective] to a [romantic_adj] [romantic_noun]",
    "wootactic->describing [RECIPIENT_objective] as a [romantic_adj] [romantic_noun]",
    "boasting->boasting about",
    "boasting->mentioning",
    "boasting->implying good things about",
    "boasting->exaggerating",
    "boasting->talking about",
    "boasting->drawing attention to",
    "complimenting(p=3)->complimenting",
    "complimenting->subtly complimenting",
    "complimenting->lauding",
    "complimenting->commending",
    "complimenting->saying good things about",
    "complimenting(p=2)->playfully making fun of",
    "complimenting->jokingly poking at",
    "complimenting->jokingly half-complimenting",
    "complimenting->impishly questioning",
    "complimenting->cheerfully making fun of",
    "romantic_adj->beautiful",
    "romantic_adj->shining",
    "romantic_adj->glimmering",
    "romantic_adj->heavenly",
    "romantic_adj->golden",
    "romantic_adj->bright",
    "romantic_adj->breathtaking",
    "romantic_adj->charming",
    "romantic_adj->dazzling",
    "romantic_adj->delicate",
    "romantic_adj->fine",
    "romantic_adj->magnificent",
    "romantic_adj->lovely",
    "romantic_adj->wonderful",
    "romantic_adj(p=3)->[AdjectiveBadass]",
    "romantic_noun->flower",
    "romantic_noun->spring",
    "romantic_noun->river",
    "romantic_noun->star",
    "romantic_noun->moon",
    "romantic_noun->sun",
    "romantic_noun->house",
    "romantic_noun->aurora",
    "romantic_noun->[TreeType] tree",
    "romantic_noun(p=2)->[TerrainFeature]",
    "romantic_noun(p=2)->[NaturalObject]",
    "r_logentry->[INITIATOR_nameDef] proposed marriage to [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] proposed a lifelong commitment to [RECIPIENT_nameDef].",
    "r_logentry->[INITIATOR_nameDef] told [RECIPIENT_nameDef] that [INITIATOR_pronoun] wants to spend [INITIATOR_possessive] life with [RECIPIENT_objective].",
    "r_logentry->[INITIATOR_nameDef] asked [RECIPIENT_nameDef] for a break.",
    "r_logentry->[INITIATOR_nameDef] asked [RECIPIENT_nameDef] for some space.",
    "r_logentry->[INITIATOR_nameDef] told [RECIPIENT_nameDef] that it's not working out.",
    "r_logentry->[INITIATOR_nameDef] told [RECIPIENT_nameDef] that it would be best to see other people.",
    "sent->[RECIPIENT_nameDef] was attracted and is now [INITIATOR_nameDef]'s lover.",
    "sent->[RECIPIENT_nameDef] responded well and is now [INITIATOR_nameDef]'s lover.",
    "sent->[RECIPIENT_nameDef] became aroused and agreed to become [INITIATOR_nameDef]'s lover.",
    "sent->[RECIPIENT_nameDef] rejected the advance.",
    "sent->[RECIPIENT_nameDef] ignored the advance.",
    "sent->[RECIPIENT_nameDef] turned [RECIPIENT_possessive] back.",
    "sent->[RECIPIENT_nameDef] turned away.",
    "sent->[RECIPIENT_nameDef] gave a minimal response.",
    "sent->[RECIPIENT_nameDef] did not respond.",
    "sent->[RECIPIENT_nameDef] turned [INITIATOR_objective] down.",
    "sent->[RECIPIENT_nameDef] agreed and the two are now engaged.",
    "sent->[RECIPIENT_nameDef] rejected the proposal.",
    "sent->It was too much for the relationship to continue, and the two have now broken up.",
    "r_logentry->[INITIATOR_nameDef] and [RECIPIENT_nameDef] [talkedabout] [TalkTopicLight].",
    "r_logentry->[INITIATOR_nameDef] [talkedabout] [TalkTopicLight] with [RECIPIENT_nameDef].",
    "r_logentry(p=0.8)->[INITIATOR_nameDef] [commentedabout] [TalkTopicLight] to [RECIPIENT_nameDef].",
    "talkedabout(p=4)->chatted about",
    "talkedabout->shared a word about",
    "talkedabout->spoke about",
    "talkedabout->gabbed about",
    "talkedabout->talked about",
    "talkedabout->joked about",
    "talkedabout->quipped about",
    "commentedabout->said something about",
    "commentedabout->said a word about",
    "commentedabout->made a comment about",
    "commentedabout->commented about",
    "commentedabout->told a joke about",
    "r_logentry->[INITIATOR_nameDef] and [RECIPIENT_nameDef] [talkedabout] [subject].",
    "r_logentry->[INITIATOR_nameDef] [talkedabout] [subject] with [RECIPIENT_nameDef].",
    "talkedabout->communicated thoughts about",
    "talkedabout->exchanged thoughts about",
    "talkedabout->exchanged ideas about",
    "talkedabout->shared views on",
    "talkedabout->shared beliefs on",
    "talkedabout->discussed the topic of",
    "talkedabout->had a heartfelt conversation about",
    "talkedabout->talked quietly about",
    "talkedabout->talked deeply about",
    "talkedabout->connected on the topic of",
    "subject->[TalkTopicHeavy]",
    "r_logentry->[INITIATOR_nameDef] [madefunof] [target]'s [PersonalCharacteristic].",
    "target(p=4)->[RECIPIENT_nameDef]",
    "target->[RECIPIENT_nameDef]'s [PersonFamily]",
    "madefunof->made fun of",
    "madefunof->disrespected",
    "madefunof->subtly scorned",
    "madefunof->subtly shamed",
    "madefunof->spoke badly of",
    "madefunof->spoke negatively of",
    "madefunof->laughed at",
    "madefunof->sniggered at",
    "madefunof->implied negative things about",
    "madefunof->belittled",
    "madefunof->made a contemptuous remark about",
    "madefunof->offered a backhanded compliment about",
    "r_logentry(p=3)->[INITIATOR_nameDef] [insulted] [target]'s [PersonalCharacteristic].",
    "r_logentry->[INITIATOR_nameDef] compared [target] to a [insultcomparison].",
    "r_logentry->[INITIATOR_nameDef] called [target] a [insultcomparison].",
    "insulted(p=3)->insulted",
    "insulted->openly insulted",
    "insulted->loudly insulted",
    "insulted->flagrantly insulted",
    "insulted->directly insulted",
    "insulted->viciously insulted",
    "insulted->flagrantly disrespected",
    "insulted->slandered",
    "insulted->hurled invective about",
    "insulted->derided",
    "insultcomparison(p=2)->[Animal]",
    "insultcomparison->[Enemy]",
    "r_logentry->[INITIATOR_nameDef] [complimented] [RECIPIENT_nameDef]'s [PersonalCharacteristic].",
    "complimented(p=3)->complimented",
    "complimented->praised",
    "complimented->commended",
    "complimented->lauded",
    "complimented->applauded",
    "complimented->celebrated",
    "complimented->saluted",
    "complimented->spoke kindly of",
    "complimented->expressed good things about",
    "complimented->offered kinds words about",
    "complimented->verbally appreciated",
    "complimented->expressed appreciation for",
    "complimented->said good things about",
    "sent->This drove [RECIPIENT_nameDef] into a rage and [RECIPIENT_pronoun] began a fight!",
    "Sight",
    "HorseshoesPin",
    "HoopstoneRing",
    "BilliardsTable",
    "GameOfUrBoard",
    "ChessTable",
    "PokerTable",
    "TubeTelevision",
    "FlatscreenTelevision",
    "MegascreenTelevision",
    "Telescope",
    "Chocolate",
    "InsectJelly",
    "RocksFromGrid",
    "Settlement",
    "SettlementPower",
    "ScatterShrines",
    "CaveHives",
    "ElevationFertility",
    "Caves",
    "Terrain",
    "CavesTerrain",
    "Roads",
    "RockChunks",
    "ScatterRuinsSimple",
    "SteamGeysers",
    "FindPlayerStartSpot",
    "ScenParts",
    "Plants",
    "Snow",
    "Fog",
    "Road",
    "RocksFromGrid_NoMinerals",
    "EscapeShip",
    "Insult",
    "(2, 0.1)",
    "(7, 1)",
    "(7, 0)",
    "(12, 1)",
    "Designator_Cancel",
    "Designator_Deconstruct",
    "Designator_Mine",
    "Designator_PlantsHarvestWood",
    "Designator_PlantsCut",
    "Designator_PlantsHarvest",
    "Designator_Hunt",
    "Designator_Slaughter",
    "Designator_Tame",
    "Designator_Haul",
    "Designator_Unforbid",
    "Designator_Forbid",
    "Designator_Claim",
    "Designator_SmoothSurface",
    "Designator_PaintBuilding",
    "Designator_PaintFloor",
    "Designator_RemovePaint",
    "Designator_PlanAdd",
    "Designator_PlanRemove",
    "Designator_ZoneAddStockpile_Resources",
    "Designator_ZoneAddStockpile_Dumping",
    "Designator_ZoneAdd_Growing",
    "Designator_ZoneDelete",
    "Designator_AreaHomeExpand",
    "Designator_AreaHomeClear",
    "Designator_AreaAllowedExpand",
    "Designator_AreaAllowedClear",
    "Designator_AreaBuildRoof",
    "Designator_AreaNoRoof",
    "Designator_AreaIgnoreRoof",
    "Designator_AreaSnowClearExpand",
    "Designator_AreaSnowClearClear",
    "Designator_RemoveBridge",
    "Electricity",
    "Designator_RemoveFloor",
    "Designator_RemoveFloorPaint",
    "ShipBasics",
    "Lake",
    "Ocean",
    "Desert",
    "ExtremeDesert",
    "AridShrubland",
    "TemperateSwamp",
    "TropicalSwamp",
    "ColdBog",
    "TemperateForest",
    "BorealForest",
    "TropicalRainforest",
    "Tundra",
    "IceSheet",
    "SeaIce",
    "Rural",
    "HairShort",
    "HairLong",
    "Soldier",
    "Balding",
    "Urban",
    "Punk",
    "Wild",
    "Bald",
    "Shaved",
    "Wealth_Total",
    "Wealth_Items",
    "Wealth_Buildings",
    "Wealth_Pawns",
    "FreeColonists",
    "Prisoners",
    "ColonistMood",
    "Adaptation",
    "ThreatPoints",
    "PopAdaptation",
    "PopIntent",
    "MedicineUltratech",
    "Development",
    "Game",
    "SelectionMisc",
    "MainTabs",
    "GameMapCamera",
    "ModifierIncrement",
    "(.00, 0)",
    "(.01, .01)",
    "(.15, .166)",
    "(.30, 1)",
    "(.59, 10)",
    "(.60, Infinity)",
    "(300, 1.0)",
    "(700, 0.4)",
    "(300, 0)",
    "(700, 0.30)",
    "(100, 0)",
    "(300, 0.3)",
    "(700, 0.5)",
    "0, 0.9",
    "(300, 0.2)",
    "(300, 0.0)",
    "(1000, 3.5)",
    "(1000, 1.3)",
    "0, 0.5",
    "5000, 0.3",
    "(1000, 1.9)",
    "0, 0.70",
    "5000, 0.45",
    "LabelShortWithIcon",
    "Faction",
    "CopyPasteWorkPriorities",
    "RemainingSpace",
    "HostilityResponse",
    "MedicalCare",
    "GapTiny",
    "Outfit",
    "FoodRestriction",
    "DrugPolicy",
    "Carry",
    "CopyPasteTimetable",
    "Timetable",
    "AllowedArea",
    "LabelWithIcon",
    "Gender",
    "Age",
    "LifeStage",
    "Pregnant",
    "FollowDrafted",
    "FollowFieldwork",
    "Master",
    "MentalState",
    "Bond",
    "Sterile",
    "Slaughter",
    "ReleaseAnimalToWild",
    "AllowedAreaWide",
    "Hunt",
    "ManhunterOnDamageChance",
    "Tame",
    "ManhunterOnTameFailChance",
    "Predator",
    "Info",
    "Ingest",
    "PredatorHunt",
    "Milk",
    "Shear",
    "Train",
    "BeatFire",
    "ExtinguishSelf",
    "PrisonerAttemptRecruit",
    "PrisonerExecution",
    "TakeWoundedPrisonerToBed",
    "EscortPrisonerToBed",
    "ReleasePrisoner",
    "FinishFrame",
    "PlaceNoCostFrame",
    "Deconstruct",
    "Uninstall",
    "TendPatient",
    "FeedPatient",
    "Research",
    "Clean",
    "Repair",
    "Mine",
    "Sow",
    "Harvest",
    "CutPlant",
    "Winter",
    "IndustrialBasic",
    "IndustrialAdvanced",
    "IndustrialMilitaryBasic",
    "BeltDefensePop",
    "Poor",
    "ImplantEmpireCommon",
    "Brawler",
    "GrenadeDestructive",
    "GrenadeEMP",
    "GrenadeSmoke",
    "IndustrialMilitaryAdvanced",
    "Gun",
    "SniperRifle",
    "Apparel_ShieldBelt",
    "MedievalMeleeDecent",
    "MedievalMeleeAdvanced",
    "GunHeavy",
    "GunSingleUse",
    "SpacerMilitary",
    "IndustrialGunAdvanced",
    "MedievalMeleeBasic",
    "Apparel_BowlerHat",
    "NeolithicMeleeBasic",
    "PainCauser",
    "Neolithic",
    "Nudist",
    "Revolver",
    "Apparel_CollarShirt",
    "Apparel_Pants",
    "Apparel_Duster",
    "Apparel_FlakVest",
    "Apparel_CowboyHat",
    "NeolithicRangedBasic",
    "Apparel_WarVeil",
    "NeolithicMeleeDecent",
    "NeolithicRangedDecent",
    "Apparel_TribalHeaddress",
    "Apparel_WarMask",
    "NeolithicMeleeAdvanced",
    "NeolithicRangedHeavy",
    "Apparel_PlateArmor",
    "NeolithicRangedChief",
    "NeolithicMeleeDestructive",
    "MechanoidGunBreach",
    "SoldMyLovedOne",
    "SoldMyBondedAnimal",
    "SoldMyBondedAnimalMood",
    "Ascetic",
    "questName->Saving [runnerIndef]",
    "questName->The Salvation of [runnerIndef]",
    "questName->Helping [runnerIndef]",
    "questName->Accepting [runnerIndef]",
    "questName->[enemyFaction_pawnsPlural] hunting [runnerIndef]",
    "questName->[runnerIndef] on the Run",
    "questName->[runnerIndef] Seeks a Home",
    "questName->[runnerIndef] Chased by [enemyFaction_pawnsPlural]",
    "questName->[runnerIndef] and [enemyFaction_pawnsPlural]",
    "runnerIndef->[joiner_titleIndef]",
    "runnerIndef->[joiner_nameIndef]",
    "runnerIndef->a Refugee",
    "runnerIndef(childCount==1,priority=1)->a child",
    "questDescription->[introduction] named [joiner_nameDef] is calling from nearby. [joiner_pronoun] is being chased by [enemyFaction_pawnsPlural] from [enemyFaction_name]!\r\n\\n[joiner_pronoun] begs for safety and offers to join you at [map_definite].[joiner_relationInfo]\r\n\\nIf you accept, you'll have to fight off [enemyFaction_pawnsPluralDef] on [joiner_possessive] tail. The group of [enemyFaction_pawnsPlural] is composed of: \\n\\n[raid/raidPawnKinds]\r\n\\n[joiner_nameDef] is too frantic to offer more information.",
    "introduction(childCount==1,priority=1)->A [joiner_age]-year-old child",
    "introduction->A [joiner_age]-year-old [joiner_title]",
    "200, 550",
    "400, 1100",
    "800, 1600",
    "1600, 2600",
    "3200, 3600",
    "20000, 20000",
    "rewardDescription->a [joiner_age]-year-old [joiner_title] named [joiner_nameDef] will arrive and join you. [joiner_relationInfo]",
    "rewardDescription->a [joiner_age]-year-old [joiner_title] named [joiner_nameDef] will arrive in a transport pod.[joinerFactionInfo][joiner_relationInfo]",
    "joinerFactionInfo(priority=1)-> [joiner_pronoun] is a member of [joiner_factionName].",
    "joinerFactionInfo->",
    "rewardDescription->transport pods with the following resources will arrive (total value [itemPodsTotalMarketValue_money]):\r\n\\n[itemPodsContents]",
    "   35,   35",
    "  400,  175",
    " 1000,  300",
    " 2000,  425",
    " 3000,  700",
    " 4000,  800",
    " 5000,  900",
    "10000, 1250",
    "threatDescription->[enemyFaction_pawnsPlural] from [enemyFaction_name] will attack you. Their group is composed of:\\n\\n[raidPawnKinds]\\n\\n[raidArrivalModeInfo]",
    "threatDescription->a mech cluster will land at [map_definite] containing:\\n\\n[allThreats]",
    "pawnKindsParagraph(raidCount==1)->The group of [enemyFaction_pawnsPlural] is composed of: \\n\\n[raid0/raidPawnKinds]\\n\\n[raid0/raidArrivalModeInfo]",
    "pawnKindsParagraph(raidCount==2)->The first group of [enemyFaction_pawnsPlural] is composed of: \\n\\n[raid0/raidPawnKinds]\\n\\nThe second similar-sized group will follow soon after.",
    "pawnKindsParagraph(raidCount==3)->The first group of [enemyFaction_pawnsPlural] is composed of: \\n\\n[raid0/raidPawnKinds]\\n\\nTwo similar-sized groups will follow soon after.",
    "pawnKindsParagraph(raidCount>=4)->The first group of [enemyFaction_pawnsPlural] is composed of: \\n\\n[raid0/raidPawnKinds]\\n\\n[raidCountMinusOne] similar-sized groups will follow soon after.",
    "numGroupsOf(raidCount==1)->",
    "numGroupsOf(raidCount==2)->two groups of",
    "numGroupsOf(raidCount==3)->three groups of",
    "numGroupsOf(raidCount>=4)->[raidCount] groups of",
    "root(priority=1,sitePart==ClimateAdjuster)->there's (*Threat)a climate adjuster machine(/Threat) there shifting the regional temperature by [temperatureOffset]",
    "root(priority=1,sitePart==PsychicDroner)->there's (*Threat)a psychic droner machine(/Threat) there tuned to the [affectedGender] gender",
    "root(priority=1,sitePart==PsychicSuppressor)->there's (*Threat)a psychic suppressor machine(/Threat) there tuned to the [affectedGender] gender",
    "root(priority=1,sitePart==WeatherController)->there's (*Threat)a weather controller machine(/Threat) there forcing weather in the whole region to [weather_label]",
    "root(priority=1,sitePart==SmokeSpewer)->there's (*Threat)a smoke spewer machine(/Threat) there belching smoke over the whole region",
    "root(priority=1,sitePart==SunBlocker)->there's (*Threat)a sun blocker machine(/Threat) there shadowing the whole region",
    "root(priority=1,sitePart==EMIDynamo)->there's (*Threat)an EMI dynamo machine(/Threat) there which can disable electrical devices across the region",
    "root(priority=1,sitePart==ToxicSpewer)->there's (*Threat)a toxic spewer machine(/Threat) there blanketing the whole region in poison",
    "root(priority=1,sitePart==RaidSource)->there's a military staging area guarded by (*Threat)[enemiesCount] [enemiesLabel](/Threat) that will launch raids on you every [mtbDays]",
    "root(priority=1,sitePart==Outpost)->there's an enemy outpost at the site guarded by (*Threat)[enemiesCount] [enemiesLabel](/Threat)",
    "root(priority=1,sitePart==BanditCamp)->there's a bandit camp at the site guarded by (*Threat)[enemiesCount] [enemiesLabel](/Threat)",
    "root(priority=1,sitePart==Manhunters,count==1)->(*Threat)a manhunting [kindLabel](/Threat) is wandering nearby",
    "root(priority=1,sitePart==Manhunters,count>1)->(*Threat)[count] manhunting [kindLabel](/Threat) are wandering nearby",
    "root(priority=1,sitePart==SleepingMechanoids,count==1)->(*Threat)a mechanoid(/Threat) is sleeping nearby",
    "root(priority=1,sitePart==SleepingMechanoids,count>1)->(*Threat)[count] mechanoids(/Threat) are sleeping nearby",
    "root(priority=1,sitePart==Turrets)->(*Threat)[threatsInfo](/Threat) defend the site",
    "root(priority=1,sitePart==AmbushEdge)->(*Threat)an enemy force(/Threat) is waiting to ambush anyone who comes near",
    "root(priority=1,sitePart==AmbushHidden)->(*Threat)an enemy force(/Threat) is waiting to ambush anyone who comes near",
    "root(priority=1,sitePart==MechCluster)->there's (*Threat)a cluster of hostile mechanoid structures(/Threat)",
    "root(priority=1,sitePart==PossibleUnknownThreatMarker)->there may be an (*Threat)unknown threat(/Threat)",
    "root->there's a [label]",
    "questName->The [bandit] [camp]",
    "questName->[bandit] [camp]",
    "questName->[asker_nameDef] and the [camp]",
    "camp->Camp",
    "camp->Outpost",
    "camp->Lair",
    "camp->Encampment",
    "bandit->Bandit",
    "bandit->Raider",
    "bandit->Outlaw",
    "bandit->Desperado",
    "bandit->Fugitive",
    "bandit->Marauder",
    "bandit->Robber",
    "bandit->Brigand",
    "questDescription->[asker_nameFull], [asker_faction_leaderTitle] of [asker_faction_name], has sent us a message. Apparently, [siteFaction_pawnsPlural] based in a nearby camp have been raiding their caravans. The camp is controlled by [siteFaction_name].\r\n\\n[asker_nameDef] is asking us to destroy the camp, which means eliminating all enemies and turrets. [asker_label] says that [sitePart0_description].",
    "questName->delayed reward",
    "questDescription->delayed reward",
    "questName->Saving [refugee_nameDef]",
    "questName->The Rescue of [refugee_nameDef]",
    "questName->[refugee_nameDef]'s Rescue",
    "questName->[refugee_nameDef]'s Salvation",
    "questDescription(askerIsNull==true)->[refugee_nameDef] contacts you and requests help. [refugee_pronoun] is wounded and unable to move.\r\n\\n[refugee_nameDef] is a [refugee_age]-year-old [refugee_title]. [refugee_pronoun] promises to join you if you rescue [refugee_objective].\r\n\\n[refugee_nameDef] says that [allSitePartsDescriptionsExceptFirst][pawnInvolvedInQuestInfo]",
    "questDescription(asker_factionLeader==True)->[asker_nameDef], [asker_faction_leaderTitle] of [asker_faction_name], says that [asker_possessive] friend has been wounded while traveling. The victim is [refugee_nameIndef], a [refugee_age]-year-old [refugee_title].\r\n\\n[asker_nameDef] has nobody to spare to rescue [refugee_nameDef], but says that if you can make it to [refugee_nameDef]'s position and rescue [refugee_objective], [refugee_pronoun] will join you.\r\n\\n[asker_nameDef] says that [allSitePartsDescriptionsExceptFirst][pawnInvolvedInQuestInfo]",
    "pawnInvolvedInQuestInfo(priority=1)->[refugee_pawnInvolvedInQuestInfo]",
    "pawnInvolvedInQuestInfo->",
    "questName->Ship to the Stars",
    "questDescription->A friendly AI from your past named (*Name)Charlon Whitestone(/Name) has sent you a message!\r\n\\nHe reveals that he has a starship hidden on this planet, and sends you its world coordinates.\r\n\\nThe starship is in deep hibernation mode. You'll have to start it up when you arrive, then defend it from raiders trying to steal it until the startup sequence completes. It will be a long, difficult series of battles.\r\n\\nIf you can get the ship off the ground, (*Name)Charlon Whitestone(/Name) will take you off this rimworld, to the stars.",
    "questName(priority=1)->[asker_nameDef]'s [stash] of [treasure]",
    "questName->[stash] of [treasure]",
    "stash->Stash",
    "stash->Cache",
    "stash->Collection",
    "stash->Shack",
    "treasure->Treasure",
    "treasure->Valuables",
    "treasure->Fortune",
    "treasure->Goodies",
    "treasure->Supplies",
    "questDescription(askerIsNull==true)->We've intercepted messages about a collection of valuable items worth [itemStashContentsValue] not far from [map_definite]. The collection consists of:\\n\\n[itemStashContents]\\n\\nIt seems that [allSitePartsDescriptionsExceptFirst]",
    "questDescription(asker_factionLeader==True)->[asker_nameDef], [asker_faction_leaderTitle] of [asker_faction_name], has informed us of a collection of valuable items worth [itemStashContentsValue] not far from us. The collection consists of:\\n\\n[itemStashContents]\\n\\n[asker_label] says that [allSitePartsDescriptionsExceptFirst]",
    "questName->[lump] of [targetMineableThing_label]",
    "questName->[targetMineableThing_label] [lump]",
    "questName->The [targetMineableThing_label] [lump]",
    "questName->[adj] [targetMineableThing_label]",
    "questName->[targetMineableThing_label] [discovered]",
    "lump->lump",
    "lump->pile",
    "lump->deposit",
    "lump->seam",
    "lump->chunk",
    "adj->distant",
    "adj->far",
    "adj->unknown",
    "adj->scanned",
    "discovered->discovered",
    "discovered->detected",
    "discovered->found",
    "discovered->scanned",
    "questDescription->Using your long-range mineral scanner, [worker_definite] has found a lump of [targetMineable_label] nearby.\\n\\nUnfortunately, it won't last - others will mine it first in [timeoutTicks_duration] if we don't.[lumpThreatDescription]",
    "questName->[faction_leader_nameDef]'s [peaceTalks]",
    "questName->[peaceTalks] with [faction_leader_nameDef]",
    "questName->The [peaceTalks]",
    "questName->[peaceTalks]",
    "peaceTalks->Peace Talks",
    "peaceTalks->Diplomacy",
    "peaceTalks->Meeting",
    "questDescription->[faction_leader_nameFull], [faction_leaderTitle] of [faction_name], has sent us a message. [faction_leader_pronoun] wants to talk with us in a nearby location.\r\n\\nIt could be a great opportunity to improve relations with their faction and receive gifts, but beware - a poor negotiator can cause more harm than good and may even anger them.[extraLeaderPart][favorRewardDetails]",
    "favorRewardDetails(faction_leader_royalInCurrentFaction==True,priority=1)->\\n\\nSuccessful peace talks can earn your negotiator a small amount of personal [faction_royalFavorLabel] with [faction_name].",
    "favorRewardDetails->",
    "extraLeaderPart->",
    "leaderRoleEffect->Other factions will respect you more if you send your leader to handle the negotiations",
    "leaderPawnInfo(playerFaction_hasLeader==True,priority=1)-> [playerFaction_leaderTitle] [playerFaction_leader_nameFull] will get a bonus to the chance of a successful outcome.",
    "leaderPawnInfo->",
    "questName->[prisoner_nameDef]'s Salvation",
    "questName->[prisoner_nameDef]'s Rescue",
    "questName->[prisoner_nameDef]'s Breakout",
    "questName->Rescuing [prisoner_nameDef]",
    "questName->Saving [prisoner_nameDef]",
    "questName->Breaking [prisoner_nameDef] Out",
    "questDescription->A prisoner being held by [siteFaction_name] has managed to steal a radio and call you!\r\n\\n[prisoner_nameDef] is being held at a camp near [map_definite][underArmedGuard]. Rescue [prisoner_objective], and [prisoner_pronoun] will join your colony. [prisoner_pronoun] is a [prisoner_age]-year-old [prisoner_title]. [prisoner_pronoun] says that [allSitePartsDescriptionsExceptFirst][formerColonistInfo][prisonerFullRelationInfo]\r\n\\nIf you miss this opportunity, you may never hear from [prisoner_nameDef] again.",
    "formerColonistInfo(priority=1)->\\n\\n[prisoner_formerlyColonistInfo]",
    "formerColonistInfo->",
    "underArmedGuard(allowViolentQuests==true,priority=1)-> under armed guard",
    "underArmedGuard->",
    "questName->Caravan to [settlement_label]",
    "questName->Trade with [settlement_label]",
    "questName->Selling to [settlement_label]",
    "questName->Supplies for [settlement_label]",
    "questName->A [special] [trade]",
    "special->Special",
    "special->Unique",
    "special->Non-traditional",
    "trade->Trade",
    "trade->Exchange",
    "trade->Deal",
    "trade->Offer",
    "questDescription->A nearby settlement, [settlement_label], has a special trade request. They would like to purchase:\r\n\\n  [requestedThingCount]x [requestedThing_label] [qualityInfo](worth [requestedThingMarketValue_money])\r\n\\nIf you want to make the trade, send a caravan with the requested items. The estimated travel time is [estimatedTravelTime_duration].",
    "qualityInfo(requestedThingHasQuality==True,priority=1)->of normal+ quality ",
    "qualityInfo->",
    "Leather_Patch",
    "0, 1.15",
    "50000, 1",
    "300000, 0.85",
    "$requestedThing",
    "questName->Transport pod crash",
    "questDescription->A transport pod crashes with a refugee",
    "questName->Wanderer joins",
    "questDescription->",
    "Corpses",
    "Butchery",
    "CorpsesMechanoid",
    "AllowRotten",
    "CorpsesAnimal",
    "Corpse_Human",
    "AllowCorpsesColonist",
    "AllowCorpsesStranger",
    "Apparel",
    "AllowNonBurnableApparel",
    "AllowBurnableApparel",
    "AllowSmeltableApparel",
    "AllowNonSmeltableApparel",
    "Apparel_SmokepopBelt",
    "Weapons",
    "AllowNonBurnableWeapons",
    "AllowBurnableWeapons",
    "AllowSmeltable",
    "AllowNonSmeltableWeapons",
    "MeatRaw",
    "AnimalProductRaw",
    "PlantFoodRaw",
    "Hay",
    "FoodRaw",
    "Foods",
    "EggsFertilized",
    "AllowPlantFood",
    "Meat_Human",
    "Meat_Megaspider",
    "TableStonecutter",
    "StoneChunks",
    "ChunkSlagSteel",
    "Smelted",
    "Gun_DoomsdayRocket",
    "Gun_TripleRocket",
    "TornadoGenerator",
    "OrbitalTargeterPowerBeam",
    "OrbitalTargeterBombardment",
    "PlantMatter",
    "FoodMeals",
    "Steel",
    "Gold",
    "ElectricTailoringBench",
    "HandTailoringBench",
    "Leathers",
    "Leather_Thrumbo",
    "Leather_Human",
    "(0, 0.7)",
    "(1, 1)",
    "(2, 1.3)",
    "TreeSowing",
    "DrugProduction",
    "ComplexClothing",
    "RecurveBow",
    "ComplexFurniture",
    "NutrientPaste",
    "Machining",
    "PlateArmor",
    "Gunsmithing",
    "BlowbackOperation",
    "GunTurrets",
    "Firefoam",
    "MicroelectronicsBasics",
    "SterileMaterials",
    "DeepDrilling",
    "BiofuelRefining",
    "GasOperation",
    "MultiAnalyzer",
    "HospitalBed",
    "Fabrication",
    "ReconArmor",
    "PrecisionRifling",
    "Prosthetics",
    "HeavyTurrets",
    "ShipRelated",
    "AdvancedFabrication",
    "Cryptosleep",
    "LongRangeMineralScanner",
    "(0.2, 0.0)",
    "(0.6, 0.2)",
    "(1.0, 0.3)",
    "(1.5, 0.4)",
    "(1,  0.07)",
    "(4,  0.22)",
    "(7,  0.33)",
    "(10, 0.4)",
    "0,  0",
    "50,  0.1",
    "120, 0.2",
    "(1.1, 1)",
    "(1.1, 0)",
    "(0, 0.9)",
    "(0.6, 0.8)",
    "(0.8, 0)",
    "(1.4, 1)",
    "(1.4, 0)",
    "(1.2, 0.8)",
    "(1.8, 1)",
    "(1.8, 0)",
    "(0, 0.8)",
    "(1.4, 0.8)",
    "(2.0, 0)",
    "(1.4, 0.6)",
    "(0, 0.001)",
    "(2.2, 0.001)",
    "(2.3, 0.5)",
    "(2.5, 0)",
    "(2.3, 0.4)",
    "(2.9, 0)",
    "(4, 1)",
    "(4, 0)",
    "(3.0, 1)",
    "(3.0, 0)",
    "(2.8, 0.8)",
    "(3.2, 0)",
    "(2.6, 0.8)",
    "(0, 0.003)",
    "(3.5, 0.003)",
    "(3.6, 1)",
    "(3.7, 0)",
    "(3.5, 0.8)",
    "(4.0, 0)",
    "Beauty",
    "Cleanliness",
    "Wealth",
    "Space",
    "Impressiveness",
    "(-5, 1.0)",
    "( 0, 0.5)",
    "( 1, 0.2)",
    "(-5, 0.6)",
    "( 0, 1.0)",
    "( 5, 1.15)",
    "(-5.0, 0.75 )",
    "(-2.5, 0.85 )",
    "( 0.0, 1.00 )",
    "( 1.0, 1.15 )",
    "(-150, 1.0)",
    "(   0, 1.0)",
    "( 150, 1.4)",
    "(-5, 0.05)",
    "(-3.5, 0.025)",
    "(-2, 0)",
    "r_art_description->[physical_description_root] [context_sentence]",
    "circumstance_group->[circumstance_phrase]",
    "desc_sentence_group->[desc_sentence] [style_group]",
    "context_sentence->This [depiction] refers to [tale_noun] on [DATE].",
    "context_sentence->This [depiction] relates to [tale_noun] on [DATE].",
    "context_sentence->This [depiction] tells the story of [tale_noun] on [DATE].",
    "r_art_description->[physical_description_root]",
    "desc_sentence_group->[style_group]",
    "style_group->[artextra_clause]. [style_clause].",
    "style_group->[style_clause]. [artconjunction] [artextra_clause].",
    "style_group->[style_clause].",
    "style_group->[artextra_clause].",
    "style_group->",
    "artconjunction(p=6)->",
    "artconjunction->as an interesting contrast,",
    "artconjunction->rounding out the work,",
    "artconjunction->in addition to that,",
    "artconjunction->strikingly,",
    "artconjunction->provocatively,",
    "artconjunction->unusually for this kind of work,",
    "artconjunction->though few would expect it,",
    "artconjunction->besides that,",
    "artextra_clause->the image is bordered by [subimageplural]",
    "artextra_clause->at the edge of the image are [subimageplural]",
    "artextra_clause->there is [subimagesingle] [side_position]",
    "artextra_clause->the subjects are in front of [subimageany]",
    "artextra_clause->the lower part of the image is dominated by [subimageany]",
    "artextra_clause->the scene takes place in the middle of a [Community]",
    "artextra_clause->the scene takes place on the outskirts of a [Community]",
    "artextra_clause->the scene takes place inside a [Community] built near a [TerrainFeature]",
    "artextra_clause->a [Character] [idles] [side_position]",
    "artextra_clause->a [PAWN_adj] [Character] [idles] [side_position]",
    "artextra_clause->[Quantity_adjphrase] [Character]s appear [side_position]",
    "artextra_clause->[Quantity_adjphrase] [PAWN_adj] [Character]s appear [side_position]",
    "artextra_clause->a [Animal] [idles] [side_position]",
    "artextra_clause->if you squint your eyes, the [composition] composition of the image reveals the outline of [subimageany]",
    "artextra_clause->the [emotional_expression] head of a [PAWN_adj] [PersonJob] watches over all",
    "artextra_clause->a [PAWN_adj] [PersonJob] watches over all while [emotional_expression]",
    "artextra_clause->the head of a [PAWN_adj] [PersonJob] watches over all",
    "artextra_clause->the whole image is depicted by the careful arrangement of [subimageplural]",
    "subimageany->[subimagesingle]",
    "subimageany->[subimageplural]",
    "subimagesingle(p=4)->a [Character]",
    "subimagesingle->a [TerrainFeature]",
    "subimagesingle->a [Community]",
    "subimagesingle->a [TreeType] tree",
    "subimagesingle->a [Vegetable]",
    "subimagesingle->a [AnimalGroup] of [Animal]s",
    "subimageplural(p=3)->[Quantity_adjphrase] [Character]s",
    "subimageplural->[Quantity_adjphrase] [Vegetable]s",
    "subimageplural->[Quantity_adjphrase] [Shape]s",
    "pawn_adj->dead",
    "pawn_adj->dying",
    "pawn_adj->injured",
    "pawn_adj->sleeping",
    "pawn_adj->standing",
    "pawn_adj->sitting",
    "pawn_adj->crazy",
    "pawn_adj->young",
    "pawn_adj->old",
    "pawn_adj->[Gore]-covered",
    "pawn_adj->filthy",
    "pawn_adj->[Apparel]-wearing",
    "pawn_adj->[Weapon]-wielding",
    "pawn_adj->[Vegetable]-eating",
    "emotional_expression->smiling",
    "emotional_expression->frowning",
    "emotional_expression->scowling",
    "emotional_expression->laughing",
    "emotional_expression->staring",
    "emotional_expression->crying",
    "emotional_expression->screaming",
    "emotional_expression->overjoyed",
    "idles->sits",
    "idles->stands",
    "idles->waits",
    "idles->smiles",
    "idles->lies",
    "idles->poses",
    "idles->appears",
    "idles->is shown",
    "idles->fades in",
    "idles->floats",
    "side_position->off to one side",
    "side_position->in the background",
    "side_position->in the distance",
    "side_position->in the lower part of the image",
    "side_position->in the upper part of the image",
    "side_position->to the left of the main scene",
    "side_position->to the right of the main scene",
    "side_position->near the edge of the image",
    "side_position->near the main subject",
    "side_position->far from the main subject",
    "side_position->beneath the main subject",
    "side_position->behind the focal point",
    "style_clause(p=4)->the work [symbolizes] [ConceptAny]",
    "artextra_clause->[subimagesingle] [side_position] [symbolizes] [ConceptAny]",
    "style_clause->the work is infused with the idea of [ConceptAny] and is done in a [artstyle_adj] style",
    "style_clause->the work is executed in a [artstyle_adj] style",
    "style_clause->the [artstyle_adj] style of the central scene clashes with the [artstyle_adj] depiction of the background",
    "style_clause->the work has a [artstyle_adj] feeling and a [composition] structure",
    "style_clause->the overall composition is [composition]",
    "style_clause->the style is [artstyle_adj] with [artstyle_adj] elements",
    "style_clause->the image somehow expresses both [ConceptAny] and [ConceptAny]",
    "style_clause->the image contrasts [ConceptAny] with [ConceptAny]",
    "style_clause->the [composition] structure of the image almost conflicts with its [artstyle_adj] style",
    "style_clause->the work is shaded in hues of [Color] and [Color]",
    "style_clause->almost every shape in the image seems to be [composition]",
    "symbolizes->symbolizes",
    "symbolizes->seems to symbolize",
    "symbolizes->represents",
    "symbolizes->seems to represent",
    "symbolizes->seems to express",
    "symbolizes->reminds the viewer of",
    "symbolizes->conveys the emotions of",
    "symbolizes->makes the viewer think of",
    "symbolizes->represents the artist's",
    "symbolizes->suggests the concept of",
    "depicts->depicts",
    "depicts->shows",
    "depicts->portrays",
    "depicts->resembles",
    "depicts->illustrates",
    "depicts->represents",
    "depicts->is shaped like",
    "depiction->depiction",
    "depiction->image",
    "depiction->portrayal",
    "depiction->representation",
    "depiction->illustration",
    "depiction->artwork",
    "composition->triangular",
    "composition->rectangular",
    "composition->square",
    "composition->unbalanced",
    "composition->well-balanced",
    "composition->dynamic",
    "composition->static",
    "composition->vertical",
    "composition->horizontal",
    "composition->focused",
    "artstyle_adj->unoriginal",
    "artstyle_adj->simple",
    "artstyle_adj->complex and realistic",
    "artstyle_adj->surrealistic",
    "artstyle_adj->classical",
    "artstyle_adj->modern",
    "artstyle_adj->symbolic",
    "artstyle_adj->amateurish yet attractive",
    "artstyle_adj->detail-oriented",
    "artstyle_adj->blocky",
    "artstyle_adj->cubist",
    "artstyle_adj->impressionistic",
    "artstyle_adj->expressionistic",
    "artstyle_adj->photographic",
    "artstyle_adj->baroque",
    "artstyle_adj->dadaist",
    "artstyle_adj->glitch-art",
    "artstyle_adj->pixelated",
    "artstyle_adj->fauvist",
    "artstyle_adj->folksy",
    "artstyle_adj->figurative",
    "artstyle_adj->sinuous",
    "artstyle_adj->geometric",
    "artstyle_adj->abstract",
    "artstyle_adj->hyper-realistic",
    "artstyle_adj->pop art",
    "artstyle_adj->minimalistic",
    "artstyle_adj->neoclassical",
    "artstyle_adj->cel-shaded",
    "artstyle_adj->post-impressionistic",
    "artstyle_adj->purist",
    "artstyle_adj->rococo",
    "artstyle_adj->romanesque",
    "artstyle_adj->romantic",
    "artstyle_adj->graffiti-like",
    "artstyle_adj->erotic",
    "artstyle_adj->sensual",
    "artstyle_adj->heartfelt",
    "physical_description_root->This [sculpture] [depicts] [image]. [desc_sentence_group]",
    "physical_description_root->This [sculpture] bears a [depiction] of [image]. [desc_sentence_group]",
    "physical_description_root->On this [sculpture] is a [depiction] of [image]. [desc_sentence_group]",
    "sculpture->sculpture",
    "sculpture->work",
    "sculpture->piece",
    "sculpture->carving",
    "physical_description_root->This weapon is engraved with a [depiction] of [image]. [desc_sentence_group]",
    "physical_description_root->This weapon bears a [depiction] of [image]. [desc_sentence_group]",
    "physical_description_root->An engraving on this weapon [depicts] [image]. [desc_sentence_group]",
    "physical_description_root->This furniture is engraved with a [depiction] of [image]. [desc_sentence_group]",
    "physical_description_root->This furniture bears a [depiction] of [image]. [desc_sentence_group]",
    "physical_description_root->An engraving on this furniture [depicts] [image]. [desc_sentence_group]",
    "physical_description_root->The sarcophagus is engraved with a [depiction] of [image]. [desc_sentence_group]",
    "physical_description_root->The sarcophagus bears a [depiction] of [image]. [desc_sentence_group]",
    "physical_description_root->An engraving on this sarcophagus [depicts] [image]. [desc_sentence_group]",
    "image->a solitary [Character] [desc_pawn]",
    "image->a solitary [Character] [desc_pawn] near a [TerrainFeature]",
    "image->a solitary [Character] [desc_pawn] near a [Community]",
    "image->a [Character] [desc_pawn] surrounded by [Character]s",
    "image->[Character]s playing [Game]",
    "image->a [Character] [desc_pawn] playing [Game] with [Quantity_adjphrase] [Character]s",
    "image->a [Character] [desc_pawn] holding a [Weapon]",
    "image->a [Character] [desc_pawn] eating a [Vegetable]",
    "image->[Quantity_adjphrase] [PersonJob]s and [PersonJob]s eating [Vegetable]s together",
    "image->the minor celebrity [NamePerson] [desc_pawn]",
    "image->a [Character] wearing a [Apparel] [desc_pawn]",
    "image->a [Community]",
    "image->a [TerrainFeature]",
    "image->a [Weapon]",
    "image->a [TreeType] tree",
    "image->a [NaturalObject]",
    "image->[Quantity_adjphrase] [Weapon]s",
    "image->[Quantity_adjphrase] [Vegetable]s",
    "image->an empty [Apparel]",
    "image->a [Shape]",
    "image->a [Shape] surrounded by [Shape]s",
    "image->an abstracted rendering of [ConceptAny]",
    "image->a [AdjectiveAny] abstract shape",
    "desc_pawn(p=12)->",
    "desc_pawn->flying through the air",
    "desc_pawn->suspended in the air",
    "desc_pawn->moving to the left",
    "desc_pawn->moving to the right",
    "desc_pawn->sitting on a table",
    "desc_pawn->seen through a looking glass",
    "desc_pawn->rendered in silhouette",
    "desc_pawn->riding on a [Animal] wearing a [Apparel]",
    "desc_pawn->looking [AdjectiveAny]",
    "desc_pawn->covered in [Gore]",
    "r_battlename->[PARTICIPANT1_nameDef]'s report",
    "r_battlename->[PARTICIPANT1_nameDef] vs [PARTICIPANT2_nameDef]",
    "r_battlename->[FACTION1_name] internal conflict",
    "r_battlename->[FACTION1_name] vs [FACTION2_name]",
    "r_battlename->Free-for-all",
    "r_logentry->[action], [result].",
    "r_logentry(priority=-10)->[action].",
    "implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]",
    "implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label]",
    "implement(IMPLEMENTOWNER_type==weapon,p=1)->a [WEAPON_label]'s [TOOL_label]",
    "implement(IMPLEMENTOWNER_type==weapon,p=0.5)->a [WEAPON_label]",
    "implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label]",
    "implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]",
    "implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label]",
    "implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label]",
    "targetlist(recipient_part_count==1)->[recipient_part0_label]",
    "targetlist(recipient_part_count==2)->[recipient_part0_label] and [recipient_part1_label]",
    "targetlist(recipient_part_count==3)->[recipient_part0_label], [recipient_part1_label], and [recipient_part2_label]",
    "targetlist->[recipient_part0_label], [recipient_part1_label], [recipient_part2_label], and [recipient_part3_label]",
    "damaged_present(deflected!=True)->wounding",
    "damaged_present(deflected!=True)->injuring",
    "destroyed(p=0.5)->destroyed",
    "destroyed(p=0.5)->demolished",
    "destroyed(p=0.5)->ruined",
    "destroyed(p=0.5)->wrecked",
    "wince(recipient_flesh==Normal)->wince",
    "wince(recipient_flesh==Normal)->grimace",
    "wince(recipient_flesh==Normal)->cringe",
    "wince(recipient_flesh==Normal)->groan",
    "wince(recipient_flesh!=Mechanoid)->scream",
    "wince(recipient_flesh!=Mechanoid)->shout",
    "wince->recoil",
    "wince->stumble",
    "painstate->in",
    "painstate->with",
    "painstate->from the",
    "painevent(recipient_flesh!=Mechanoid)->[painstate] pain",
    "painevent(recipient_flesh!=Mechanoid)->[painstate] agony",
    "painevent(recipient_flesh==Normal)->with misery",
    "painevent->from the injury",
    "painevent->from the wound",
    "to->to",
    "to->into",
    "result(p=1)->[damaged_present] [RECIPIENT_possessive] [targetlist]",
    "result(p=0.2)->[damaged_present] [RECIPIENT_possessive] [targetlist] and [flavortext_consequence]",
    "result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [strikeAdv]",
    "strikeAdv->painfully",
    "strikeAdv->horribly",
    "strikeAdv->savagely",
    "strikeAdv->viciously",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a disgusting wound",
    "flavortext_consequence->leaving a horrific wound",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->making [RECIPIENT_objective] [wince] [painevent]",
    "flavortext_consequence(p=0.2)->throwing [RECIPIENT_objective] off balance",
    "destroyed_targets(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_label]",
    "destroyed_targets(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_label] and [recipient_part_destroyed1_label]",
    "destroyed_targets(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], and [recipient_part_destroyed2_label]",
    "destroyed_targets->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label], and [recipient_part_destroyed3_label]",
    "damaged_targets(recipient_part_damaged_count==1)->[recipient_part_damaged0_label]",
    "damaged_targets(recipient_part_damaged_count==2)->[recipient_part_damaged0_label] and [recipient_part_damaged1_label]",
    "damaged_targets(recipient_part_damaged_count==3)->[recipient_part_damaged0_label], [recipient_part_damaged1_label], and [recipient_part_damaged2_label]",
    "damaged_targets->[recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label], and [recipient_part_damaged3_label]",
    "skillDescMelee->[wielding] [INITIATOR_possessive] [WEAPON_label] [skillAdv]",
    "skillDescMelee->[using] [implement] [skillAdv]",
    "wielding(p=4)->wielding",
    "wielding(p=3)->using",
    "wielding(p=2)->handling",
    "wielding->brandishing",
    "wielding->manipulating",
    "using(p=4)->using",
    "using->driving",
    "using->thrusting",
    "using->utilizing",
    "using->moving",
    "skillAdv(INITIATOR_skill<=3)->incompetently",
    "skillAdv(INITIATOR_skill<=3)->ineptly",
    "skillAdv(INITIATOR_skill<=3)->wildly",
    "skillAdv(INITIATOR_skill<=3)->randomly",
    "skillAdv(INITIATOR_skill<=3)->flailingly",
    "skillAdv(INITIATOR_skill<=4)->awkwardly",
    "skillAdv(INITIATOR_skill<=4)->clumsily",
    "skillAdv(INITIATOR_skill<=5)->fearfully",
    "skillAdv(INITIATOR_skill<=5)->falteringly",
    "skillAdv(INITIATOR_skill<=5)->foolishly",
    "skillAdv(INITIATOR_skill<=6)->hesitantly",
    "skillAdv(INITIATOR_skill<=6)->reluctantly",
    "skillAdv(INITIATOR_skill<=6)->slowly",
    "skillAdv(INITIATOR_skill<=6)->tentatively",
    "skillAdv(INITIATOR_skill<=6)->inexpertly",
    "skillAdv(INITIATOR_skill<=6)->amateurishly",
    "skillAdv(INITIATOR_skill<=6)->timidly",
    "skillAdv(INITIATOR_skill<=8)->enthusiastically",
    "skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->proficiently",
    "skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->competently",
    "skillAdv(INITIATOR_skill>=8)->professionally",
    "skillAdv(INITIATOR_skill>=8)->deftly",
    "skillAdv(INITIATOR_skill>=8)->aptly",
    "skillAdv(INITIATOR_skill>=8)->cleverly",
    "skillAdv(INITIATOR_skill>=8)->dexterously",
    "skillAdv(INITIATOR_skill>=8)->skillfully",
    "skillAdv(INITIATOR_skill>=10)->adeptly",
    "skillAdv(INITIATOR_skill>=10)->slickly",
    "skillAdv(INITIATOR_skill>=12)->expertly",
    "skillAdv(INITIATOR_skill>=12)->precisely",
    "skillAdv(INITIATOR_skill>=14)->masterfully",
    "skillAdv(INITIATOR_skill>=16)->artistically",
    "skillAdv(INITIATOR_skill>=16)->gracefully",
    "skillAdv(initiator_flesh==Mechanoid)->mechanically",
    "skillAdv(initiator_flesh==Mechanoid)->robotically",
    "skillAdv(initiator_flesh==Mechanoid)->directly",
    "action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite]",
    "action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite] with [implement]",
    "action->[INITIATOR_definite] [tried] to use [implement] to [damaged_inf] [RECIPIENT_definite]",
    "action->[INITIATOR_definite] swung [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite]",
    "action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] with [implement]",
    "action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]",
    "action(p=0.3)->[INITIATOR_definite] [verb_genericattack] with [implement]",
    "towardsat->towards",
    "towardsat->at",
    "verb_genericattack->swung",
    "verb_genericattack->flailed",
    "verb_genericattack->thrashed",
    "scraped_present->glancing",
    "scraped_present->bouncing",
    "scraped_present->grazing",
    "scraped_present->caroming",
    "scraped_present->skipping",
    "scraped_present->skating",
    "scraped_past->glanced",
    "scraped_past->bounced",
    "scraped_past->grazed",
    "scraped_past->caromed",
    "scraped_past->skipped",
    "scraped_past->skated",
    "Combat_MeleeIncludes",
    "Combat_MeleeDamageIncludes",
    "Combat_WoundIncludes",
    "Combat_SkillIncludes",
    "r_logentry(p=1.0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].",
    "r_logentry(p=0.4)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [strikeAdv].",
    "r_logentry(p=0.4)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label], [flavortext_consequence].",
    "r_logentry(p=0.4)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].",
    "r_logentry(p=0.2)->[INITIATOR_definite], [skillDescMelee], [strikeAdv] [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label].",
    "r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].",
    "r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [destroyed_suffix].",
    "r_logentry(p=0.4)->[INITIATOR_definite] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] with [implement].",
    "r_logentry(p=1,recipient_part_count==0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement].",
    "r_logentry(p=0.4,recipient_part_count==0)->[INITIATOR_definite] [skillAdv] [damaged_past] [RECIPIENT_definite] with [implement].",
    "result(p=1,recipient_part_damaged_count==0)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets]",
    "result(p=1,recipient_part_destroyed_count==0)->[damaged_present] [RECIPIENT_possessive] [damaged_targets]",
    "result(p=1)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets]",
    "action(p=1.0)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] with [implement]",
    "action(p=0.3)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite]",
    "action(p=0.3)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite]",
    "action(p=0.3)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement]",
    "action(p=0.3)->[INITIATOR_definite], [skillDescMelee], hit [RECIPIENT_definite] with a [damaged_inf] from [implement]",
    "action(p=0.3)->[INITIATOR_definite] used [implement] to [damaged_inf] [RECIPIENT_definite]",
    "action(p=0.3)->[INITIATOR_definite] used [implement] [skillAdv] to [damaged_inf] [RECIPIENT_definite]",
    "Combat_DeflectIncludes",
    "r_logentry(p=0.5)->[INITIATOR_definite] [damaged_past] [atMaybe] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].",
    "r_logentry(p=0.3)->[INITIATOR_definite] [skillAdvMaybe] [damaged_past] [atMaybe] [RECIPIENT_definite] with [implement] [deflected_result].",
    "r_logentry(p=0.3)->[INITIATOR_definite] [skillAdvMaybe] [damaged_past] [atMaybe] [RECIPIENT_definite] [deflected_result].",
    "r_logentry(p=0.1)->[INITIATOR_definite], [skillDescMelee], [damaged_past] [RECIPIENT_definite] in the [recipient_part0_label] [deflected_result].",
    "r_logentry(p=0.1)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement] [deflected_result].",
    "r_logentry(p=0.1)->[INITIATOR_definite] [skillAdvMaybe] used [implement] to [damaged_inf] [RECIPIENT_definite] [deflected_result].",
    "skillAdvMaybe->",
    "skillAdvMaybe->[skillAdv]",
    "atMaybe->",
    "atMaybe->at",
    "deflected_result->, but the [TOOL_label] [deflected] off [harmlessly_opt]",
    "deflected_result->, [deflecting] off [RECIPIENT_possessive] armor [harmlessly_opt]",
    "harmlessly_opt(p=4)->",
    "harmlessly_opt->[harmlessly]",
    "harmlessly->harmlessly",
    "harmlessly->uselessly",
    "deflected->deflected",
    "deflected->scraped",
    "deflected->slid",
    "deflected->grazed",
    "deflected->bounced",
    "deflected->glanced",
    "deflecting->deflecting",
    "deflecting->scraping",
    "deflecting->sliding",
    "deflecting->grazing",
    "deflecting->bouncing",
    "deflecting->glancing",
    "Combat_FailIncludes",
    "r_logentry(p=0.3)->[RECIPIENT_definite] avoided [INITIATOR_definite]'s [WEAPON_label] [damaged_inf].",
    "r_logentry(p=0.3)->[INITIATOR_definite] missed [RECIPIENT_definite] with a [damaged_inf] from [implement].",
    "r_logentry(p=0.3)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite] with [implement].",
    "r_logentry(p=0.3)->[INITIATOR_definite] [failtype] while trying to [damaged_inf] [RECIPIENT_definite].",
    "r_logentry(p=0.3)->[INITIATOR_definite] tried [skillAdvMaybe] to [damaged_inf] [RECIPIENT_definite], but [failtype].",
    "failtype(p=5)->missed",
    "failtype->stumbled",
    "failtype->tripped",
    "failtype->flailed",
    "failtype->floundered",
    "result(p=4)->but missed",
    "result->but hit only air",
    "result->but the swing went wide",
    "result->but stumbled at the last second",
    "result(initiator_flesh!=Mechanoid)->but hesitated at the last second",
    "r_logentry(p=0.5)->[RECIPIENT_definite] [skillAdvMaybe] dodged [INITIATOR_definite]'s [damaged_inf] from [implement].",
    "r_logentry(p=0.5)->[RECIPIENT_definite] [skillAdvMaybe] dodged [INITIATOR_definite]'s [damaged_inf].",
    "result->but [RECIPIENT_definite] leapt out of the way",
    "result->but was deceived by [RECIPIENT_definite]'s feint",
    "result->but the attack was cleverly avoided",
    "projectile(WEAPON_missing==True, p=3)->[PROJECTILE_label]",
    "projectile->[WEAPON_projectile_label]",
    "Combat_RangedBase",
    "r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite] with [INITIATOR_possessive] [WEAPON_label].",
    "r_logentry->[INITIATOR_definite] [shot] [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite].",
    "r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite].",
    "r_logentry->[INITIATOR_definite] [shot_a] [projectile] [burst] at [RECIPIENT_definite].",
    "r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [shot_a] [projectile].",
    "r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [shot] [INITIATOR_possessive] [WEAPON_label].",
    "shot_a(p=2)->[verb_shot] a",
    "shot_a->[skillAdv] [verb_shot] a",
    "shot(p=2)->[verb_shot]",
    "shot->[skillAdv] [verb_shot]",
    "shotat->shot [aburst] at",
    "shotat->[skillAdv] shot [aburst] at",
    "shotat(p=0.5)->tried to shoot [aburst] at",
    "shotat(p=0.3)->took a shot at",
    "shotat(p=0.2)->[skillAdv] took a shot at",
    "shotat->fired [aburst] at",
    "shotat->fired [aburst] [skillAdv] at",
    "shotat(p=0.5)->aimed and fired [aburst] at",
    "shotat(p=0.5)->[skillAdv] aimed and fired [aburst] at",
    "shotat(p=0.3)->opened fire at",
    "aburst->",
    "aburst(BURST==True,p=3)->a burst",
    "burst->",
    "burst(BURST==True,p=3)->burst",
    "verb_shot->shot",
    "verb_shot->fired",
    "verb_shot(p=0.2)->discharged",
    "r_logentry->[INITIATOR_definite] [threw] [INITIATOR_possessive] [projectile] at [RECIPIENT_definite].",
    "r_logentry->[INITIATOR_definite] [threw_a] [projectile] at [RECIPIENT_definite].",
    "r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [threw] [INITIATOR_possessive] [projectile].",
    "r_logentry(RECIPIENT_missing==True)->[INITIATOR_definite] [threw_a] [projectile].",
    "threw_a->[adverb_threw] [verb_threw] a",
    "threw_a(p=2)->[verb_threw] a",
    "threw(p=2)->[verb_threw]",
    "threw->[adverb_threw] [verb_threw]",
    "verb_threw->threw",
    "verb_threw->flung",
    "verb_threw->launched",
    "adverb_threw->carefully",
    "adverb_threw->quickly",
    "adverb_threw->precisely",
    "adverb_threw->deliberately",
    "adverb_threw(initiator_flesh!=Mechanoid)->gingerly",
    "adverb_threw(initiator_flesh!=Mechanoid)->warily",
    "adjective_threw->careful",
    "adjective_threw->quick",
    "adjective_threw->deliberate",
    "adjective_threw->precise",
    "adjective_threw(initiator_flesh!=Mechanoid)->wary",
    "r_logentry->[INITIATOR_definite]'s [projectile] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].",
    "r_logentry->[INITIATOR_definite]'s [projectile] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [to] [destroyed_suffix].",
    "r_logentry(p=2)->[INITIATOR_definite]'s [projectile] [missed] [ORIGINALTARGET_definite] and [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].",
    "r_logentry(p=2)->[INITIATOR_definite]'s [projectile] [missed] [ORIGINALTARGET_definite], [destroyed_present] [RECIPIENT_definite]'s [destroyed_targets].",
    "r_logentry->[RECIPIENT_definite]'s [destroyed_targets] was [destroyed_past] by [INITIATOR_definite]'s [projectile].",
    "r_logentry->[RECIPIENT_definite]'s [destroyed_targets] was [destroyed_past] into [destroyed_suffix] by [INITIATOR_definite]'s [projectile].",
    "r_logentry(recipient_part_destroyed_count==0)->[INITIATOR_definite]'s [projectile] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].",
    "r_logentry(recipient_part_destroyed_count==0,p=2)->[INITIATOR_definite]'s [projectile] [missed] [ORIGINALTARGET_definite] and [damaged_past] [RECIPIENT_definite]'s [damaged_targets].",
    "r_logentry(recipient_part_destroyed_count==0,p=2)->[INITIATOR_definite]'s [projectile] [missed] [ORIGINALTARGET_definite], [damaged_present] [RECIPIENT_definite]'s [damaged_targets].",
    "r_logentry(recipient_part_destroyed_count==0)->[RECIPIENT_definite]'s [damaged_targets] was [damaged_past] by [INITIATOR_definite]'s [projectile].",
    "r_logentry(p=3)->[INITIATOR_definite]'s [projectile] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] and [damaged_past] [RECIPIENT_possessive] [damaged_targets].",
    "r_logentry(p=6)->[INITIATOR_definite]'s [projectile] [missed] [ORIGINALTARGET_definite], [destroyed_present] [RECIPIENT_definite]'s [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets].",
    "r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [projectile].",
    "r_logentry(p=0.2)->[INITIATOR_definite]'s [projectile] hit [RECIPIENT_definite].",
    "r_logentry(p=0.4)->[INITIATOR_definite] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite] with a [projectile].",
    "r_logentry(p=0.4)->[INITIATOR_definite]'s [projectile] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite].",
    "r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [projectile] intended for [ORIGINALTARGET_definite].",
    "projectile(p=0.05)->shot",
    "destroyed_past->shattered",
    "destroyed_past->crushed",
    "destroyed_past->obliterated",
    "destroyed_past->annihilated",
    "destroyed_past->pierced",
    "destroyed_past->perforated",
    "destroyed_past->punctured",
    "destroyed_present->shattering",
    "destroyed_present->crushing",
    "destroyed_present->obliterating",
    "destroyed_present->annihilating",
    "destroyed_present->piercing",
    "destroyed_present->perforating",
    "destroyed_present->puncturing",
    "destroyed_suffix->pieces",
    "destroyed_suffix->bits",
    "destroyed_suffix->a fine mist",
    "destroyed_suffix->fragments",
    "destroyed_suffix(p=0.5)->a holey mess",
    "destroyed_suffix(recipient_flesh!=Mechanoid,p=0.2)->ground beef",
    "damaged_past->wounded",
    "damaged_past->injured",
    "damaged_past->pierced",
    "damaged_past->damaged",
    "damaged_past->shot",
    "damaged_present->wounding",
    "damaged_present->injuring",
    "damaged_present->piercing",
    "damaged_present->damaging",
    "damaged_present->shooting",
    "damaged_suffix->in an ugly fashion",
    "damaged_suffix(recipient_flesh!=Mechanoid)->with visible blood",
    "damaged_suffix(recipient_flesh!=Mechanoid)->with the flesh visible",
    "missed->missed",
    "missed->narrowly missed",
    "r_logentry->[INITIATOR_definite]'s [projectile] [damaged_past] [RECIPIENT_definite][damaged_target] [deflected_result].",
    "r_logentry(p=2)->[INITIATOR_definite]'s [projectile] [missed] [ORIGINALTARGET_definite] and [damaged_past] [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].",
    "r_logentry->[RECIPIENT_definite][damaged_target_possessive_opt] was [damaged_past] by [INITIATOR_definite]'s [projectile] [deflected_result].",
    "r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite][damaged_target_possessive_opt] with a [projectile] [deflected_result].",
    "r_logentry(p=0.2)->[INITIATOR_definite]'s [projectile] hit [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].",
    "r_logentry(p=0.4)->[INITIATOR_definite] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite][damaged_target_possessive_opt] with a [projectile] [deflected_result].",
    "r_logentry(p=0.4)->[INITIATOR_definite]'s [projectile] [missed] [ORIGINALTARGET_definite] and hit [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].",
    "r_logentry(p=0.2)->[INITIATOR_definite] hit [RECIPIENT_definite][damaged_target_possessive_opt] with a [projectile] intended for [ORIGINALTARGET_definite] [deflected_result].",
    "damaged_target_possessive_opt->",
    "damaged_target_possessive_opt(recipient_part_damaged0_outside==True)->'s [recipient_part_damaged0_label]",
    "deflected_result-> [adverb_deflected]",
    "deflected_result->, [deflected_consequence]",
    "adverb_deflected_opt(p=4)->",
    "adverb_deflected_opt->[adverb_deflected]",
    "adverb_deflected->harmlessly",
    "adverb_deflected->uselessly",
    "deflected_consequence->but it [scraped_past] off [adverb_deflected_opt]",
    "deflected_consequence->[scraped_present] off [RECIPIENT_possessive] armor [adverb_deflected_opt]",
    "scraped_past->ricocheted",
    "scraped_present->ricocheting",
    "r_logentry->[INITIATOR_definite]'s [projectile] [missed].",
    "r_logentry->[INITIATOR_definite] missed [ORIGINALTARGET_definite].",
    "r_logentry->[ORIGINALTARGET_definite] [avoidance], [INITIATOR_definite]'s [projectile] [missing].",
    "missed(p=4)->missed",
    "missed(p=2)->missed by a small margin",
    "missed(p=2)->missed by a wide margin",
    "missed->went wide",
    "missed->flew into the air",
    "missed->flew high into the air",
    "missed->dug into the ground",
    "missed->skipped off the ground and was lost",
    "missed->dug a divot out of the ground",
    "missed(p=0.2)->passed within millimeters of [ORIGINALTARGET_definite]",
    "missed->passed within centimeters of [ORIGINALTARGET_definite]",
    "missed->passed within a meter of [ORIGINALTARGET_definite]",
    "missed->was blown off course",
    "missing->missing",
    "missing->missing by a small margin",
    "missing->missing by a wide margin",
    "missing->going wide",
    "missing->flying into the air",
    "missing->flying high into the air",
    "missing->digging into the ground",
    "missing->skipping off the ground and becoming lost",
    "missing->digging a divot out of the ground",
    "missing(p=0.2)->passing within millimeters of [ORIGINALTARGET_definite]",
    "missing->passing within centimeters of [ORIGINALTARGET_definite]",
    "missing->passing within a meter of [ORIGINALTARGET_definite]",
    "missing->blowing offcourse",
    "avoidance(ORIGINALTARGET_mobile==True,p=2)->[moved] aside at the last [moment]",
    "avoidance(ORIGINALTARGET_mobile==True,p=0.3)->[ducked] behind [COVER_definite]",
    "moved->moved",
    "moved->jerked",
    "moved->jolted",
    "moved->ducked",
    "moment->moment",
    "moment->second",
    "moment->instant",
    "ducked->ducked",
    "ducked->crouched",
    "ducked->bent down",
    "ducked->hid",
    "prefix->The [blast] [fromof] [INITIATOR_definite]'s [projectile]",
    "prefix->The [blast] [fromof] [INITIATOR_definite]'s [WEAPON_label]",
    "prefix->[INITIATOR_definite]'s [blast]",
    "prefix->[INITIATOR_definite]'s [projectile] [blast]",
    "prefix->[INITIATOR_definite]'s [WEAPON_label] [blast]",
    "prefix->[INITIATOR_definite]'s [projectile]",
    "prefix->[INITIATOR_definite]'s [WEAPON_label]",
    "r_logentry->[prefix] [injured] [RECIPIENT_definite].",
    "r_logentry->[prefix] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].",
    "r_logentry->[prefix] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] [strikeAdv].",
    "r_logentry->[prefix] [strikeAdv] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets].",
    "r_logentry->[prefix] [destroyed_past] [RECIPIENT_definite]'s [destroyed_targets] and [damaged_past] [RECIPIENT_possessive] [damaged_targets].",
    "r_logentry(recipient_part_destroyed_count==0)->[prefix] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].",
    "r_logentry(recipient_part_destroyed_count==0)->[prefix] [damaged_past] [RECIPIENT_definite]'s [damaged_targets] [strikeAdv].",
    "r_logentry(recipient_part_destroyed_count==0)->[prefix] [strikeAdv] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].",
    "r_logentry->[RECIPIENT_definite] was [damaged_past] by [INITIATOR_definite].",
    "r_logentry->[RECIPIENT_definite] was [damaged_past] [strikeAdv] by [INITIATOR_definite].",
    "r_logentry->[RECIPIENT_definite] was [damaged_past].",
    "r_logentry(p=0.001)->[RECIPIENT_definite] was caught in an explosion.",
    "r_logentry(p=0.001)->[RECIPIENT_definite] was hit by an explosion.",
    "blast->explosion",
    "blast->blast",
    "blast->shockwave",
    "blast->detonation",
    "blast->discharge",
    "blast->impact",
    "fromof->from",
    "fromof->of",
    "WordTribal(p=3)->[tribal_word_file]",
    "WordTribal(p=3)->[SylG][SylG]",
    "WordTribal(p=2)->[SylG][SylG][SylG]",
    "WordTribal->[SylG][SylG][SylG][SylG]",
    "tribal_word_file->Words/Foreign/Tribal",
    "PlaceOutlander->[SylE][place_end]",
    "PlaceOutlander->[SylE][SylE][place_end]",
    "PlaceOutlander->[SylE][SylE][SylE][place_end]",
    "place_end->WordParts/PlaceEndings",
    "damaged_past(p=2)->blasted",
    "damaged_past(p=2)->exploded",
    "damaged_past->hurt",
    "destroyed_past->detonated",
    "damaged_past(p=2)->scorched",
    "damaged_past(p=2)->burned",
    "damaged_past(p=2)->blistered",
    "damaged_past(p=2)->ignited",
    "damaged_past(p=2)->seared",
    "damaged_present(p=2)->blasting",
    "damaged_present(p=2)->scorching",
    "damaged_present(p=2)->burning",
    "damaged_present(p=2)->blistering",
    "damaged_present(p=2)->igniting",
    "damaged_present(p=2)->searing",
    "damaged_present->hurting",
    "destroyed_past->cremated",
    "destroyed_past->incinerated",
    "destroyed_past->charred",
    "destroyed_present->cremating",
    "destroyed_present->incinerating",
    "destroyed_present->charring",
    "destroyed_present->detonating",
    "damaged_past->extinguished",
    "damaged_past->swamped",
    "damaged_past->foamed",
    "damaged_past->quenched",
    "destroyed_past->damaged_past",
    "damaged_past->stunned",
    "damaged_past->confused",
    "damaged_past->stopped",
    "damaged_past->dizzied",
    "damaged_past->electrified",
    "damaged_past->shocked",
    "damaged_past->zapped",
    "damaged_past->smoked",
    "damaged_past->fogged",
    "damaged_past->clouded",
    "r_logentry->[damage_source] [RECIPIENT_nameDef], [destroyed_present] [RECIPIENT_possessive] [destroyed_targets].",
    "r_logentry->[damage_source] [RECIPIENT_nameDef], [destroyed_present] [RECIPIENT_possessive] [destroyed_targets] and [damaged_present] [RECIPIENT_possessive] [damaged_targets].",
    "r_logentry(recipient_part_destroyed_count==0)->[damage_source] [RECIPIENT_nameDef], [damaged_present] [RECIPIENT_possessive] [damaged_targets].",
    "r_logentry(p=0.1)->[damage_source] [RECIPIENT_nameDef].",
    "DamageEvent_Include",
    "damage_source->the [roof] [collapsed] on",
    "roof->roof",
    "roof->roofing",
    "roof->ceiling",
    "collapsed->collapsed",
    "collapsed->fell",
    "collapsed->caved in",
    "damaged_present->smashing",
    "damaged_present->bashing",
    "damaged_present->bruising",
    "damaged_present->lacerating",
    "destroyed_present->breaking",
    "damage_source->[fire] burned",
    "fire(p=3)->fire",
    "fire(p=3)->a fire",
    "fire(p=3)->the fire",
    "fire->heat",
    "fire->a conflagration",
    "fire->an inferno",
    "damaged_present->scorching",
    "damaged_present->broiling",
    "damaged_present->searing",
    "damaged_present->singeing",
    "destroyed_present->roasting",
    "destroyed_present->cooking",
    "damage_source->[spiketrap] stabbed",
    "damage_source->[spiketrap] struck",
    "damage_source->[spiketrap] launched at",
    "spiketrap(p=3)->a spike trap",
    "spiketrap(p=3)->the spike trap",
    "spiketrap->spikes",
    "spiketrap->a sharp trap",
    "spiketrap->a spiky trap",
    "damaged_present->perforating",
    "damaged_present->spearing",
    "damaged_present->penetrating",
    "damaged_present->jabbing into",
    "destroyed_present->tearing apart",
    "destroyed_present->shredding",
    "destroyed_present->eviscerating",
    "destroyed_present->exploding",
    "Damage_Flame",
    "damage_source->The [sky] opened up on",
    "damage_source->A beam of incredible [power] [damaged_past]",
    "damage_source->A column of [light] [damaged_past]",
    "sky->sky",
    "sky->clouds",
    "sky->heavens",
    "power->power",
    "power->energy",
    "power->heat",
    "light->light",
    "light->heat",
    "light->flame",
    "light(p=0.2)->incandescence",
    "Maneuver_Scratch_Damage",
    "Maneuver_Smash_Damage",
    "damage_source->A [spiraling] tornado [enveloped]",
    "destroyed_present(p=3)->tearing off",
    "spiraling->spiraling",
    "spiraling->whirling",
    "spiraling->spinning",
    "spiraling(p=10)->",
    "enveloped(p=8)->enveloped",
    "enveloped->engulfed",
    "enveloped->surrounded",
    "r_logentry->[SUBJECT_definite] was [stunned] by the attack.",
    "r_logentry->[SUBJECT_definite] was [stunned] by [INITIATOR_definite]'s attack.",
    "stunned(p=3)->stunned",
    "stunned->staggered",
    "stunned->dazed",
    "stunned->disoriented",
    "r_logentry->[SUBJECT_definite] [staggered].",
    "r_logentry->[SUBJECT_definite] [staggered] from the attack.",
    "r_logentry->[SUBJECT_definite] [staggered] from [INITIATOR_definite]'s attack.",
    "staggered(p=3)->staggered",
    "staggered->faltered",
    "staggered->wobbled",
    "staggered->wavered",
    "r_logentry->[SUBJECT_definite] [stumbled] around blearily.",
    "r_logentry->[SUBJECT_definite] [stumbled] around in confusion.",
    "stumbled(p=3)->stumbled",
    "stumbled->wavered",
    "stumbled->wobbled",
    "stumbled->staggered",
    "r_logentry->[INITIATOR_definite] used [ABILITY_label] on [SUBJECT_definite].",
    "r_logentry->[INITIATOR_definite] used [ITEM_indefinite] on [SUBJECT_definite].",
    "r_tip->[tip_text]",
    "tip_text->Misc/Tips",
    "TalkTopicsUtility",
    "Trans->of",
    "Trans->for",
    "Trans->by",
    "Trans->with",
    "Character(p=6)->[PersonJob]",
    "Character(p=4)->[Animal]",
    "Character(p=3)->[Enemy]",
    "Character->[Mechanoid]",
    "Quantity_adjphrase->two",
    "Quantity_adjphrase->three",
    "Quantity_adjphrase->four",
    "Quantity_adjphrase->five",
    "Quantity_adjphrase->six",
    "Quantity_adjphrase->seven",
    "Quantity_adjphrase->eight",
    "Quantity_adjphrase->nine",
    "Quantity_adjphrase->ten",
    "Quantity_adjphrase->several",
    "Quantity_adjphrase->a group of",
    "Quantity_adjphrase->a large group of",
    "Quantity_adjphrase->dozens of",
    "Quantity_adjphrase->hundreds of",
    "Quantity_adjphrase->a thousand",
    "Quantity_adjphrase->thousands of",
    "Shape->triangle",
    "Shape->square",
    "Shape->rectangle",
    "Shape->cone",
    "Shape->line",
    "Shape->heart",
    "Shape->star",
    "Shape->circle",
    "Shape->ellipse",
    "AdjectiveAny->[AdjectiveBadass]",
    "AdjectiveAny->[AdjectiveAngsty]",
    "AdjectiveAny->[AdjectiveFriendly]",
    "AdjectiveAny->[AdjectiveNatural]",
    "ConceptAny->[ConceptPositive]",
    "ConceptAny->[ConceptBadass]",
    "ConceptAny->[ConceptAngsty]",
    "PersonalCharacteristic(p=0.15)->genitals",
    "PersonalCharacteristic(p=0.15)->pubic hair",
    "PersonalCharacteristic(p=0.15)->body hair",
    "PersonalCharacteristic(p=0.15)->toilet habits",
    "PersonalCharacteristic(p=0.15)->sexual prowess",
    "PersonalCharacteristic(p=0.15)->sexual preferences",
    "PersonalCharacteristic(p=0.15)->sexual experience",
    "RomanNumeral->Words/Misc/Numbers_SmallRoman",
    "Direction->Words/Adjectives/CompassDirections",
    "Letter->WordParts/CapitalLetters",
    "SylE->WordParts/Syllables_English",
    "SylG->WordParts/Syllables_Galician",
    "SylB->WordParts/Syllables_Byzantinian",
    "SylP->WordParts/Syllables_Pig",
    "Color->Words/Nouns/Colors",
    "ColorBadass->Words/Nouns/Colors_Badass",
    "Vegetable->Words/Nouns/Vegetables",
    "Game->Words/Nouns/Games",
    "Animal->Words/Nouns/Animals",
    "AnimalBadass->Words/Nouns/Animals_Badass",
    "AnimalGroup->Words/Nouns/AnimalGroups",
    "Weapon->Words/Nouns/Weapons",
    "TerrainFeature->Words/Nouns/TerrainFeatures",
    "NaturalObject->Words/Nouns/NaturalObject",
    "TreeType->Words/Nouns/TreeTypes",
    "PersonJob->Words/Nouns/People_Jobs",
    "PersonFamily->Words/Nouns/People_Family",
    "PersonAlly->Words/Nouns/People_Allies",
    "PersonBadass->Words/Nouns/People_Badass",
    "Enemy->Words/Nouns/Enemies",
    "Apparel->Words/Nouns/Apparel",
    "Gore->Words/Nouns/Gore",
    "Mechanoid->Words/Nouns/Mechanoid",
    "ConceptPositive->Words/Nouns/Concepts_Positive",
    "ConceptBadass->Words/Nouns/Concepts_Badass",
    "ConceptAngsty->Words/Nouns/Concepts_Angsty",
    "Community->Words/Nouns/Communities",
    "BodyPart->Words/Nouns/Bodyparts",
    "AdjectiveLarge->Words/Adjectives/Large",
    "AdjectiveBadass->Words/Adjectives/Badass",
    "AdjectiveAngsty->Words/Adjectives/Angsty",
    "AdjectiveFriendly->Words/Adjectives/Friendly",
    "AdjectiveNatural->Words/Adjectives/Natural",
    "VerbFriendly->Words/Verbs/Friendly",
    "PersonalCharacteristic->Words/Nouns/PersonalCharacteristics",
    "TalkTopicAny->[TalkTopicLight]",
    "TalkTopicAny->[TalkTopicHeavy]",
    "TalkTopicHeavy->[talktopicheavyfile]",
    "TalkTopicHeavy(p=0.08)->the link between [talktopicheavyfile] and [talktopicheavyfile]",
    "TalkTopicHeavy(p=0.08)->the connection between [talktopicheavyfile] and [talktopicheavyfile]",
    "TalkTopicHeavy(p=0.08)->the relationship between [talktopicheavyfile] and [talktopicheavyfile]",
    "TalkTopicLight(p=25)->[talktopiclightfile]",
    "TalkTopicLight->[Vegetable]s",
    "TalkTopicLight->eating [Vegetable]s",
    "TalkTopicLight->cooking with [Vegetable]s",
    "TalkTopicLight->[Game]",
    "TalkTopicLight->playing [Game]",
    "TalkTopicLight->practicing [Game]",
    "TalkTopicLight->learning [Game]",
    "TalkTopicLight->[Animal]s",
    "TalkTopicLight->training [Animal]s",
    "TalkTopicLight->taming [Animal]s",
    "TalkTopicLight->fighting [Animal]s",
    "TalkTopicLight->crazy [Animal]s",
    "TalkTopicLight->[Weapon]s",
    "TalkTopicLight->using [Weapon]s",
    "TalkTopicLight->practicing with [Weapon]s",
    "TalkTopicLight->[TerrainFeature]s",
    "TalkTopicLight->[NaturalObject]s",
    "TalkTopicLight->[TreeType] trees",
    "TalkTopicLight->[PersonJob]s",
    "TalkTopicLight->friendly [PersonJob]s",
    "TalkTopicLight->hostile [PersonJob]s",
    "TalkTopicLight->[Enemy]s",
    "TalkTopicLight->fighting [Enemy]s",
    "TalkTopicLight->[Apparel]s",
    "TalkTopicLight->wearing [Apparel]s",
    "TalkTopicLight->making [Apparel]s",
    "talktopicheavyfile(p=0.15)->sex",
    "talktopicheavyfile(p=0.15)->seduction",
    "talktopicheavyfile(p=0.15)->animal sexuality",
    "talktopicheavyfile(p=0.15)->sexual fetishes",
    "talktopicheavyfile->Words/Nouns/TalkTopics_Heavy",
    "talktopiclightfile->Words/Nouns/TalkTopics_Light",
    "damaged_inf(p=4)->slash",
    "damaged_inf->cut",
    "damaged_inf->chop",
    "damaged_inf->hack",
    "damaged_inf->slice",
    "damaged_inf(deflected!=True)->gash",
    "damaged_past(p=4)->slashed",
    "damaged_past->cut",
    "damaged_past->chopped",
    "damaged_past->hacked",
    "damaged_past->sliced",
    "damaged_past(deflected!=True)->gashed",
    "damaged_present->slashing",
    "damaged_present->cutting",
    "damaged_present->slicing",
    "damaged_present(deflected!=True)->gashing",
    "damaged_present(deflected!=True)->tearing",
    "damaged_present(deflected!=True)->lacerating",
    "woundname->wound",
    "woundname(p=0.3)->opening",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath",
    "flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a gory [woundname]",
    "destroyed_past->bisected",
    "destroyed_past->divided",
    "destroyed_past->halved",
    "destroyed_past->separated",
    "destroyed_past->split",
    "destroyed_present->bisecting",
    "destroyed_present->dividing",
    "destroyed_present->halving",
    "destroyed_present->separating",
    "destroyed_present->splitting",
    "destroyed_suffix->into neat pieces",
    "destroyed_suffix->cleanly",
    "destroyed_suffix(target_part_destroyed_count==1)->exposing its inner workings",
    "destroyed_suffix(target_part_destroyed_count==1)->slicing it in twain",
    "Maneuver_Slash",
    "Combat_Hit",
    "Combat_Deflect",
    "Combat_Miss",
    "Combat_Dodge",
    "damaged_inf(p=4)->stab",
    "damaged_inf->jab",
    "damaged_inf(deflected!=True)->pierce",
    "damaged_inf(deflected!=True)->puncture",
    "damaged_inf(deflected!=True)->skewer",
    "damaged_past(p=4)->stabbed",
    "damaged_past->jabbed",
    "damaged_past(deflected!=True)->pierced",
    "damaged_past(deflected!=True)->punctured",
    "damaged_past(deflected!=True)->skewered",
    "damaged_present(deflected!=True)->piercing",
    "damaged_present(deflected!=True)->puncturing",
    "damaged_present(deflected!=True)->penetrating",
    "damaged_present(deflected!=True)->skewering",
    "woundname->hole",
    "woundname->crevice",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bloody [woundname]",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a torn [woundname]",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bleeding [woundname]",
    "destroyed_past->impaled",
    "destroyed_past->skewered",
    "destroyed_present->impaling",
    "destroyed_present->skewering",
    "destroyed_suffix->straight through",
    "destroyed_suffix->leaving a clean hole",
    "destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->leaving it leaking gory fluids",
    "destroyed_suffix(target_part_destroyed_count==1)->leaving it leaking unrecognizable fluids",
    "Maneuver_Stab",
    "damaged_inf->hit",
    "damaged_inf->smash",
    "damaged_inf->bash",
    "damaged_inf->slam",
    "damaged_inf->strike",
    "damaged_inf->beat",
    "damaged_past->hit",
    "damaged_past->smashed",
    "damaged_past->bashed",
    "damaged_past->slammed",
    "damaged_past->struck",
    "damaged_past->beat",
    "damaged_present(deflected!=True)->bruising",
    "destroyed_past->broke",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise",
    "flavortext_consequence->leaving the area visibly deformed",
    "flavortext_consequence->knocking [RECIPIENT_objective] off balance",
    "flavortext_consequence->knocking [RECIPIENT_objective] to the side",
    "destroyed_suffix->[to] pieces",
    "destroyed_suffix->[to] bits",
    "destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist",
    "destroyed_suffix->[to] fragments",
    "Maneuver_Smash",
    "damaged_inf(p=4)->scratch",
    "damaged_inf(deflected!=True)->lacerate",
    "damaged_inf(deflected!=True)->tear",
    "damaged_past(p=4)->scratched",
    "damaged_past(deflected!=True)->lacerated",
    "damaged_past(deflected!=True)->tore",
    "damaged_present->scratching",
    "destroyed_past->mauled",
    "destroyed_past->lacerated",
    "destroyed_past->tore",
    "destroyed_past->shredded",
    "destroyed_past->ripped",
    "destroyed_present->mauling",
    "destroyed_present->lacerating",
    "destroyed_present->tearing",
    "destroyed_present->ripping",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->and exposing the flesh underneath",
    "flavortext_consequence(recipient_flesh==Mechanoid)->and exposing the machinery underneath",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->and leaving a gory [woundname]",
    "destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips",
    "destroyed_suffix->[to] strips",
    "destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy pieces",
    "destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a pile of gore",
    "Maneuver_Scratch",
    "damaged_inf(p=2)->poke",
    "damaged_inf(p=2)->jab",
    "damaged_inf->prod",
    "damaged_inf->shove",
    "damaged_inf->stab",
    "damaged_past(p=2)->poked",
    "damaged_past(p=2)->jabbed",
    "damaged_past->prodded",
    "damaged_past->shoved",
    "damaged_past->stabbed",
    "damaged_present(p=2)->poking",
    "damaged_present(p=2)->jabbing",
    "damaged_present->prodding",
    "damaged_present->shoving",
    "damaged_present->stabbing",
    "Maneuver_Poke",
    "damaged_inf->bite",
    "damaged_inf->chomp",
    "damaged_inf(p=0.5)->nip",
    "damaged_past->bit",
    "damaged_past->chomped",
    "damaged_past->nipped",
    "damaged_past->gnawed",
    "damaged_present->biting",
    "damaged_present->chomping",
    "damaged_present->nipped",
    "damaged_present->gnawing",
    "flavortext_consequence(recipient_flesh!=Mechanoid)->leaving grisly tears in the skin",
    "flavortext_consequence(recipient_flesh==Mechanoid)->leaving grisly tears in the metal",
    "destroyed_past->tore off",
    "destroyed_past->ripped off",
    "destroyed_past->bit off",
    "destroyed_present->tearing off",
    "destroyed_present->ripping off",
    "destroyed_present->biting off",
    "destroyed_suffix->[to] chunks",
    "destroyed_suffix(recipient_flesh!=Mechanoid)->[to] shreds",
    "destroyed_suffix(recipient_flesh!=Mechanoid)->[to] strips",
    "destroyed_suffix(recipient_flesh!=Mechanoid)->[to] an unrecognizable mess",
    "Maneuver_Bite",
    "r_logentry->[INITIATOR_definite] kicked [TOOL_label] in [RECIPIENT_definite]'s eyes.",
    "r_logentry(p=0.2)->[INITIATOR_definite] kicked a spray of [TOOL_label] in [RECIPIENT_definite]'s eyes.",
    "Maneuver_KickMaterialInEyes_MeleeMiss",
    "r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but missed.",
    "r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] dodged out of the way.",
    "r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] blocked it.",
    "NameAnimalUnisex->Names/Animal_Unisex",
    "NameAnimalMale->Names/Animal_Male",
    "NameAnimalFemale->Names/Animal_Female",
    "NamerAnimalUtility",
    "r_name(p=6)->[NameAnimalUnisex]",
    "r_name(p=6)->[NameAnimalMale]",
    "r_name(p=6)->[NamePersonMale]",
    "r_name->[exoticname]",
    "exoticname(p=2)->[AdjectiveBadass]",
    "exoticname(p=2)->[PersonBadass]",
    "exoticname->[Enemy]",
    "exoticname->[ConceptAny]",
    "exoticname->[Color]",
    "r_name(p=6)->[NameAnimalFemale]",
    "r_name(p=6)->[NamePersonFemale]",
    "Artwork->Words/Nouns/Artworks",
    "ArtNameUtility",
    "r_art_name(p=4)->[Artwork] [Trans] [ConceptAny]",
    "r_art_name(p=4)->[maybe_a] [maybe_adjective] [Artwork]",
    "r_art_name->[maybe_a] [maybe_adjective] [ConceptAny]",
    "r_art_name->[maybe_a] [maybe_adjective] [TerrainFeature]",
    "r_art_name->[maybe_a] [maybe_adjective] [Vegetable]",
    "r_art_name->[maybe_a] [maybe_adjective] [Game]",
    "r_art_name->[maybe_a] [maybe_adjective] [Animal]",
    "r_art_name->[maybe_a] [maybe_adjective] [Gore]",
    "r_art_name->[maybe_a] [maybe_adjective] [NaturalObject]",
    "r_art_name->[maybe_a] [maybe_adjective] [PersonFamily]",
    "r_art_name->[maybe_a] [maybe_adjective] [Enemy]",
    "r_art_name(p=2)->[Artwork] No. [art_name_numeric]",
    "r_art_name->No. [art_name_numeric]",
    "r_art_name->[art_name_numeric]",
    "r_art_name->[Artwork] [art_name_numeric]",
    "r_art_name->[ConceptAny] No. [art_name_numeric]",
    "r_art_name->[art_name_numeric] [Trans] [ANYPAWN_nameIndef]",
    "r_art_name(p=6)->[ANYPAWN_nameIndef]'s [Artwork]",
    "r_art_name(p=3)->[maybe_a] [ANYPAWN_nameIndef] [Trans] [Color]",
    "r_art_name(p=3)->[ANYPAWN_nameIndef]'s [PersonalCharacteristic]",
    "r_art_name(p=3)->[PersonalCharacteristic] of [ANYPAWN_nameIndef]",
    "r_art_name(p=3)->[ConceptAny] [Trans] [ANYPAWN_nameIndef]",
    "r_art_name(p=3)->[maybe_a] [Artwork] [Trans] [ANYPAWN_nameIndef]",
    "art_name_numeric->[maybe_letter][Digit][maybe_letter]",
    "art_name_numeric->[maybe_letter][Digit][Digit][maybe_letter]",
    "art_name_numeric->[maybe_letter][Digit][Digit][Digit][maybe_letter]",
    "art_name_numeric->[maybe_letter][RomanNumeral][maybe_letter]",
    "art_name_numeric->[maybe_letter][RomanNumeral][Digit][maybe_letter]",
    "art_name_numeric->[maybe_letter][Digit][RomanNumeral][maybe_letter]",
    "art_name_numeric->[maybe_letter][Digit][RomanNumeral][Digit][maybe_letter]",
    "art_name_numeric->[maybe_letter][RomanNumeral][Digit][RomanNumeral][maybe_letter]",
    "art_name_numeric->[maybe_letter][RomanNumeral][Digit][Digit][RomanNumeral][maybe_letter]",
    "maybe_letter(p=8)->",
    "maybe_letter->[Letter]",
    "maybe_letter->[Letter][Letter]",
    "maybe_a(p=3)->",
    "maybe_a->a",
    "maybe_adjective(p=5)->",
    "maybe_adjective(p=2)->[AdjectiveAngsty]",
    "maybe_adjective->[AdjectiveBadass]",
    "maybe_adjective->[Color]",
    "NamerArtCommon",
    "r_art_name->[ConceptBadass]",
    "r_art_name->The [AnimalBadass]",
    "r_art_name->[AdjectiveBadass] [AnimalBadass]",
    "r_art_name->[ColorBadass] [AnimalBadass]",
    "r_art_name->[ConceptBadass] [ColorBadass]",
    "r_art_name(p=3)->[ANYPAWN_nameIndef]'s [ConceptBadass]",
    "r_art_name(p=3)->[ANYPAWN_nameIndef]'s [AnimalBadass]",
    "r_art_name(p=3)->[ANYPAWN_nameIndef]'s [PersonBadass]",
    "r_art_name(p=3)->[ANYPAWN_nameIndef]'s [PersonAlly]",
    "r_art_name(p=3)->[ANYPAWN_nameIndef]'s [PersonFamily]",
    "r_art_name(p=3)->[ConceptBadass] of [ANYPAWN_nameIndef]",
    "r_art_name(p=3)->[ColorBadass] [ANYPAWN_nameIndef]",
    "NamerArtWeapon",
    "r_name->Colony",
    "r_name->Village",
    "OutlanderPlaceNameUtility",
    "r_name(p=3)->[nearnameinitial]",
    "r_name->[nearnameinitial] [political_union_outlander]",
    "r_name->[nearnameinitial] [political_adjective] [political_union_outlander]",
    "r_name->[political_union_outlander] of [nearnameinitial]",
    "r_name->[political_adjective] [political_union_outlander] of [nearnameinitial]",
    "nearnameinitial(p=3)->[PlaceOutlander]",
    "nearnameinitial->[Direction] [PlaceOutlander]",
    "political_union_outlander->Words/Nouns/PoliticalUnions_Outlander",
    "political_adjective->Words/Adjectives/PoliticalUnions",
    "r_name(p=12)->[townname_wordgen]",
    "r_name(p=6)->[townname_fixed]",
    "r_name(p=4)->[townname_combo]",
    "r_name->[townname_near]",
    "topicalnoun->[Vegetable]",
    "topicalnoun->[Game]",
    "topicalnoun->[BodyPart]",
    "townname_combo->[topicalnoun] [TerrainFeature]",
    "townname_combo->[topicalnoun] [Community]",
    "townname_combo->[topicalnoun]'s [TerrainFeature]",
    "townname_combo->[topicalnoun]'s [Community]",
    "townname_combo(p=2)->[concept_positive]'s [TerrainFeature]",
    "townname_combo(p=2)->[concept_positive] [TerrainFeature]",
    "townname_combo(p=2)->[concept_positive] [Community]",
    "townname_combo(p=3)->[Character]'s [TerrainFeature]",
    "townname_combo(p=3)->[Character]'s [Community]",
    "townname_near->[nearnameinitial]-at-the-[TerrainFeature]",
    "townname_near->[nearnameinitial]-by-the-[TerrainFeature]",
    "townname_near->[nearnameinitial]-on-the-[TerrainFeature]",
    "nearnameinitial->[townname_wordgen]",
    "nearnameinitial->[Community]",
    "townname_wordgen(p=2)->[SylE][SylE]",
    "townname_wordgen(p=2)->[SylE][SylE][SylE]",
    "townname_wordgen(p=2)->[SylE][townend]",
    "townname_wordgen(p=2)->[SylE][SylE][townend]",
    "townname_wordgen->[TerrainFeature][townend]",
    "townname_wordgen->[topicalnoun][townend]",
    "townend->ville",
    "townend->town",
    "townend->hurst",
    "townend->bourne",
    "townend->brad",
    "townend->dale",
    "townend->hope",
    "townend->ing",
    "townend->ness",
    "townend->mere",
    "townend->shaw",
    "townend->wick",
    "townend->ton",
    "townend->ston",
    "townend->os",
    "townend->den",
    "townend->tas",
    "townend->wood",
    "townend->land",
    "townend->worth",
    "townend->roon",
    "townend->ron",
    "townend->well",
    "townname_fixed->Names/OutlanderTown",
    "concept_positive->Words/Nouns/Concepts_Positive",
    "TribalWordUtility",
    "r_name->[WordTribal] [political_union_tribal]",
    "r_name->The [WordTribal] [political_union_tribal]",
    "r_name->The [Color] [TerrainFeature] [political_union_tribal]",
    "r_name->[political_union_tribal] of [WordTribal]",
    "r_name->The [Color] [Animal] [WordTribal]",
    "r_name->The [political_union_tribal] of the [TerrainFeature]",
    "political_union_tribal->Words/Nouns/PoliticalUnions_Tribal",
    "r_name(p=2)->[WordTribal]",
    "r_name->[Color] [WordTribal]",
    "r_name->[Color] [TerrainFeature]",
    "r_name->[WordTribal] [TerrainFeature]",
    "r_name->The [AnimalBadass]s",
    "r_name->The [AnimalBadass] Men",
    "r_name->The [AnimalBadass]s of [ConceptBadass]",
    "r_name->The [PersonBadass]s of [ConceptBadass]",
    "r_name->The [PersonBadass]s",
    "r_name->The [Enemy]s",
    "r_name->The [Weapon] Men",
    "r_name->The [Weapon]s",
    "r_name->The [Weapon] [AnimalBadass]s",
    "r_name->The [Weapon] [Enemy]s",
    "r_name->The [ColorBadass] [Weapon]s",
    "r_name->The [ColorBadass] [AnimalBadass]s",
    "r_name->The [ColorBadass] [PersonBadass]s",
    "r_name->The [ColorBadass] [Enemy]s",
    "r_name->The [PersonBadass] [groupname]",
    "r_name->The [Enemy] [Enemy]s",
    "r_name->The [AdjectiveBadass] [groupname]",
    "r_name->The [AdjectiveBadass] [AnimalBadass]s",
    "r_name->The [AdjectiveBadass] [Enemy]s",
    "r_name->The [AdjectiveBadass] [PersonBadass]s",
    "r_name->The [PersonAlly]s of [ConceptBadass]",
    "r_name(p=0.4)->The Eaters of [Gore]",
    "r_name->[NamePerson]'s [Enemy]s",
    "r_name->[NamePerson]'s [AnimalBadass]s",
    "r_name->[NamePerson]'s [Weapon]s",
    "r_name->[Weapon] [groupname]",
    "r_name->[ConceptBadass] [groupname]",
    "groupname->Words/Nouns/GroupNames",
    "r_name->[townname_wordgen]",
    "townname_combo->[AnimalBadass] [geography]",
    "townname_combo->[AnimalBadass]'s [geography]",
    "townname_combo->[ConceptBadass] [geography]",
    "townname_combo->[ConceptBadass]'s [geography]",
    "townname_combo->[PersonBadass] [geography]",
    "townname_combo->[PersonBadass]'s [geography]",
    "townname_combo->[Enemy]'s [geography]",
    "townname_combo->[Enemy] [geography]",
    "townname_combo->[Weapon]'s [geography]",
    "townname_combo->[Weapon] [geography]",
    "townname_combo->[ColorBadass] [geography]",
    "geography(p=2)->[TerrainFeature]",
    "geography->[Community]",
    "townname_wordgen(p=2)->[SylE][townendevil]",
    "townname_wordgen(p=2)->[SylE][SylE][townendevil]",
    "townendevil->vast",
    "townendevil->varg",
    "townendevil->vix",
    "townendevil->tor",
    "townendevil->tear",
    "townendevil->cut",
    "townendevil->lop",
    "townendevil->oze",
    "townendevil->ozzle",
    "townendevil->latch",
    "townendevil->lock",
    "townendevil->burn",
    "townendevil->sear",
    "townendevil->shank",
    "townendevil->hurt",
    "townendevil->vash",
    "townendevil->warg",
    "townendevil->wug",
    "townendevil->thot",
    "townendevil->thard",
    "townendevil->thad",
    "r_name->[msyl][msyl] [mechhive]",
    "mechhive->mechhive",
    "msyl->nyar",
    "msyl->alg",
    "msyl->xan",
    "msyl->zel",
    "msyl->kil",
    "msyl->len",
    "msyl->lax",
    "msyl->alph",
    "msyl->ome",
    "msyl->iri",
    "msyl->slin",
    "msyl->toth",
    "msyl->arth",
    "msyl->unth",
    "msyl->ox",
    "msyl->arm",
    "msyl->murd",
    "msyl->zen",
    "msyl->yoth",
    "msyl->lite",
    "r_name(p=2)->[WordTribal] [WordTribal]",
    "r_name->[WordTribal] '[AnimalBadass]' [WordTribal]",
    "r_name->[WordTribal] [Animal]",
    "r_name->[Animal] [WordTribal]",
    "r_name->[Color] [Animal]",
    "WordImperial(p=4)->[SylB][SylB]",
    "WordImperial(p=2)->[SylB][SylB][SylB]",
    "WordImperial(p=0.2)->[SylB][SylB][SylB][SylB]",
    "ImperialNameFirstMale->Names/Imperial_First_Male",
    "ImperialNameFirstFemale->Names/Imperial_First_Female",
    "ImperialNameLast->Names/Imperial_Last",
    "defaultQuestName->[adjectiveCurious] [quest]",
    "quest->Words/Nouns/Quests",
    "adjectiveCurious->Words/Adjectives/Curious",
    "r_name->[story] [Trans] the [Weapon]",
    "r_name->[story] [Trans] the [Animal]",
    "r_name->[story] [Trans] the [TerrainFeature]",
    "r_name->[story] [Trans] [PersonJob]s",
    "r_name->[story] [Trans] [ConceptAny]",
    "r_name->[ConceptAny] [story]",
    "r_name->[story] [Trans] a [Community]",
    "r_name->a [AdjectiveAny] [story]",
    "r_name->[story] [Trans] the [Game]",
    "r_name->[story] in [Color] and [Color]",
    "r_name->[Color] [story]",
    "r_name->[story] [RomanNumeral]",
    "story->Words/Nouns/Stories",
    "r_name(p=4)->[businessname] [businesstype]",
    "r_name->[NamePerson] [businesstype]",
    "r_name->[maybe_adjective] [Animal] [businesstype]",
    "r_name->[Letter][Letter] [businesstype]",
    "r_name(p=0.5)->[PersonAlly] [businesstype]",
    "r_name(p=0.5)->[AdjectiveFriendly] [businesstype]",
    "r_name(p=0.5)->[AdjectiveBadass] [businesstype]",
    "r_name(p=0.3)->[PersonFamily] [businesstype]",
    "r_name(p=0.3)->[maybe_adjective] [NaturalObject] [businesstype]",
    "r_name(p=0.2)->[maybe_adjective] [TreeType] [businesstype]",
    "r_name(p=0.2)->[maybe_adjective] [Vegetable] [businesstype]",
    "r_name(p=0.2)->[Direction] [businesstype]",
    "maybe_adjective->",
    "maybe_adjective->[AdjectiveFriendly]",
    "businessname->Names/Business",
    "businesstype->Words/Nouns/BusinessTypes",
    "r_name->[narrative_name] [terrain_word]",
    "r_name(p=0.05)->[storyname] [terrain_word]",
    "narrative_name(p=12)->[WordTribal]",
    "narrative_name(p=12)->[PlaceOutlander]",
    "narrative_name->[Color][NaturalObject]",
    "narrative_name->[AdjectiveNatural][BodyPart]",
    "narrative_name->[Animal]",
    "narrative_name->[Color]",
    "narrative_name->[Color][Animal]",
    "narrative_name->[AdjectiveNatural][Animal]",
    "narrative_name->[Animal][BodyPart]",
    "narrative_name->[Color] [Animal]",
    "narrative_name->[AdjectiveNatural] [Animal]",
    "narrative_name->[Animal] [BodyPart]",
    "storyname(p=50)->[subject]'s [story_result]",
    "storyname(p=2)->[subject]'s [BodyPart]",
    "storyname->[subject]'s [Gore]",
    "subject(p=5)->[NamePerson]",
    "subject->[Animal]",
    "subject->[WordTribal]",
    "subject->[PlaceOutlander]",
    "story_result->folly",
    "story_result->vice",
    "story_result->lunacy",
    "story_result->mistake",
    "story_result->fault",
    "story_result->misstep",
    "story_result->delusion",
    "story_result->joy",
    "story_result->delight",
    "story_result->wonder",
    "story_result->pride",
    "story_result->jewel",
    "story_result->prize",
    "story_result->bounty",
    "story_result->honor",
    "story_result->jackpot",
    "story_result->trophy",
    "story_result->conceit",
    "story_result->arrogance",
    "story_result->stand",
    "story_result->loss",
    "story_result->debt",
    "story_result->collapse",
    "story_result->destruction",
    "story_result->cataclysm",
    "story_result->ruin",
    "story_result->ruination",
    "story_result->undoing",
    "story_result->downfall",
    "story_result->end",
    "story_result->retirement",
    "story_result->achievement",
    "story_result->finale",
    "story_result->bluff",
    "story_result->ruse",
    "story_result->deception",
    "story_result->facade",
    "story_result->fraud",
    "WorldFeatureNamerCommon",
    "r_name(p=0.2)->mount [narrative_name]",
    "terrain_word(p=5)->mountains",
    "terrain_word(p=2)->range",
    "terrain_word->peaks",
    "terrain_word->hills",
    "terrain_word->cliffs",
    "r_name(p=0.2)->isle [narrative_name]",
    "terrain_word(p=4)->islands",
    "terrain_word(p=3)->isles",
    "terrain_word(p=3)->archipelago",
    "terrain_word->reef",
    "terrain_word->atoll",
    "terrain_word->rocks",
    "terrain_word->islets",
    "terrain_word->points",
    "terrain_word->chain",
    "terrain_word(p=4)->island",
    "terrain_word(p=2)->isle",
    "terrain_word->rock",
    "terrain_word->islet",
    "terrain_word->point",
    "r_name(p=0.2)->point [narrative_name]",
    "r_name(p=0.2)->cape [narrative_name]",
    "terrain_word(p=5)->peninsula",
    "terrain_word(p=2)->point",
    "terrain_word->cape",
    "terrain_word->headland",
    "terrain_word->horn",
    "r_name(p=0.2)->gulf of [narrative_name]",
    "terrain_word(p=6)->bay",
    "terrain_word->bight",
    "terrain_word->gulf",
    "terrain_word->anchorage",
    "terrain_word->cove",
    "r_name->lake [narrative_name]",
    "terrain_word(p=6)->lake",
    "terrain_word->sea",
    "terrain_word->pond",
    "terrain_word->basin",
    "terrain_word->reservoir",
    "terrain_word(p=0.3)->puddle",
    "terrain_word(p=0.3)->lagoon",
    "terrain_word(p=0.3)->loch",
    "r_name(p=0.1)->lake [narrative_name]",
    "terrain_word(p=6)->sea",
    "terrain_word->ocean",
    "terrain_word->lake",
    "r_name(p=0.4)->[ocean_adjective] [narrative_name]",
    "ocean_adjective->blue",
    "ocean_adjective->white",
    "ocean_adjective->gray",
    "ocean_adjective->clear",
    "ocean_adjective->windy",
    "ocean_adjective->stormy",
    "ocean_adjective->calm",
    "ocean_adjective->broad",
    "ocean_adjective->endless",
    "ocean_adjective->flat",
    "ocean_adjective->still",
    "ocean_adjective->wavy",
    "ocean_adjective->gentle",
    "terrain_word(p=6)->ocean",
    "terrain_word(p=3)->sea",
    "terrain_word->expanse",
    "r_name(p=0.4)->[desert_adjective] [narrative_name]",
    "desert_adjective->flat",
    "desert_adjective->white",
    "desert_adjective->endless",
    "desert_adjective->heartless",
    "desert_adjective->parched",
    "desert_adjective->dry",
    "desert_adjective->long",
    "desert_adjective->sunburned",
    "desert_adjective->sunny",
    "desert_adjective->dazzling",
    "desert_adjective->hot",
    "desert_adjective->sweaty",
    "desert_adjective->sandy",
    "desert_adjective->rocky",
    "terrain_word(p=6)->desert",
    "terrain_word->plateau",
    "terrain_word->flats",
    "terrain_word->wastes",
    "terrain_word->wasteland",
    "terrain_word->barrens",
    "r_name(p=0.1)->fen [narrative_name]",
    "r_name(p=0.3)->[swamp_adjective] [narrative_name]",
    "swamp_adjective->wet",
    "swamp_adjective->steamy",
    "swamp_adjective->choking",
    "swamp_adjective->rotten",
    "swamp_adjective->rotting",
    "swamp_adjective->overgrown",
    "swamp_adjective->tangled",
    "swamp_adjective->viny",
    "swamp_adjective->thorny",
    "terrain_word(p=6)->swamp",
    "terrain_word->wetlands",
    "terrain_word->bayou",
    "terrain_word->bog",
    "terrain_word->marsh",
    "terrain_word->fen",
    "r_name(p=0.3)->[rainforest_adjective] [narrative_name]",
    "rainforest_adjective->wet",
    "rainforest_adjective->steamy",
    "rainforest_adjective->choking",
    "rainforest_adjective->overgrown",
    "rainforest_adjective->tangled",
    "rainforest_adjective->viny",
    "rainforest_adjective->thorny",
    "terrain_word(p=6)->rainforest",
    "terrain_word(p=3)->jungle",
    "terrain_word->forest",
    "terrain_word->grove",
    "terrain_word->woodland",
    "terrain_word->tangle",
    "terrain_word(p=6)->forest",
    "terrain_word->thicket",
    "terrain_word(p=3)->taiga",
    "terrain_word->woods",
    "terrain_word(p=4)->shrubland",
    "terrain_word(p=4)->scrubland",
    "terrain_word(p=2)->plateau",
    "terrain_word(p=2)->scrub",
    "terrain_word->desert",
    "terrain_word->bush",
    "terrain_word->brush",
    "terrain_word->sheet",
    "terrain_word(p=0.5)->reach",
    "terrain_word(p=0.3)->field",
    "terrain_word(p=0.3)->span",
    "terrain_word(p=0.3)->stretch",
    "terrain_word(p=0.3)->tract",
    "terrain_word(p=4)->plateau",
    "terrain_word(p=4)->barrens",
    "terrain_word(p=2)->taiga",
    "terrain_word->scrub",
    "terrain_word->shrubland",
    "terrain_word->scrubland",
    "terrain_word->prairie",
    "r_name->[celestial_name]",
    "r_name->[celestial_prefix] [celestial_name]",
    "r_name->[celestial_name] [celestial_suffix]",
    "r_name->[world_name_numeric]",
    "r_name->[world_name_numeric] [celestial_suffix]",
    "r_name(p=0.5)->[celestial_name] [RomanNumeral]",
    "r_name(p=0.5)->[celestial_name]-[RomanNumeral]",
    "r_name(p=0.5)->[celestial_name]-[numbers]",
    "r_name->[celestial_name] [celestial_name]",
    "r_name->[NamePerson]'s [planet]",
    "world_name_numeric->[letters]-[numbers]",
    "world_name_numeric->[letters] [numbers]",
    "letters->[Letter]",
    "letters->[Letter][Letter]",
    "letters->[Letter][Letter][Letter]",
    "numbers->[Digit]",
    "numbers->[Digit][Digit]",
    "numbers->[Digit][Digit][Digit]",
    "planet->World",
    "planet->Planet",
    "celestial_name->Names/Celestial",
    "celestial_suffix->Names/CelestialSuffix",
    "celestial_prefix->Names/CelestialPrefix",
    "r_seed(p=3)->[NamePerson]",
    "r_seed->[Animal]",
    "r_seed->[TerrainFeature]",
    "r_seed->[PersonJob]",
    "r_seed->[Enemy]",
    "r_seed->[Gore]",
    "r_seed->[Apparel]",
    "r_seed->[AdjectiveAny]",
    "r_seed->[ConceptAny]",
    "r_seed->[Weapon]",
    "r_seed->[Color]",
    "r_seed->[Vegetable]",
    "r_seed->[Game]",
    "r_seed->[businessname]",
    "r_seed->[businesstype]",
    "r_seed->[Community]",
    "duetoa->due to",
    "duetoa(p=0.5)->because of",
    "duetoa(p=0.5)->thanks to",
    "Transition_Include",
    "r_logentry->[CULPRITHEDIFF_labelNoun] caused [SUBJECT_definite] to [collapsemeta].",
    "r_logentry->[CULPRITHEDIFF_labelNounPretty] caused [SUBJECT_definite] to [collapsemeta].",
    "r_logentry->[CULPRITHEDIFF_labelNoun] made [SUBJECT_definite] [collapsemeta].",
    "r_logentry->[CULPRITHEDIFF_labelNounPretty] made [SUBJECT_definite] [collapsemeta].",
    "r_logentry->[SUBJECT_definite] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNoun].",
    "r_logentry->[SUBJECT_definite] [collapsedmeta] [duetoa] [CULPRITHEDIFF_labelNounPretty].",
    "r_logentry(p=0.1)->[SUBJECT_definite] [collapsedmeta].",
    "collapse->collapse",
    "collapse->drop",
    "collapse(SUBJECT_flesh!=Mechanoid)->crumple",
    "collapse(SUBJECT_flesh==Mechanoid)->crash",
    "collapse(SUBJECT_flesh==Mechanoid)->lock up",
    "collapse(SUBJECT_flesh==Mechanoid)->lose main power",
    "collapsed->dropped",
    "collapsed(SUBJECT_flesh!=Mechanoid)->crumpled",
    "collapsed(SUBJECT_flesh==Mechanoid)->crashed",
    "collapsed(SUBJECT_flesh==Mechanoid)->locked up",
    "collapsed(SUBJECT_flesh==Mechanoid)->lost main power",
    "helplessly->helplessly",
    "helplessly(SUBJECT_flesh!=Mechanoid)->unconscious",
    "helplessly(SUBJECT_flesh!=Mechanoid)->weakly",
    "helplessly(SUBJECT_flesh!=Mechanoid)->feebly",
    "helplessly(SUBJECT_flesh==Mechanoid)->uncontrollably",
    "collapsemeta->[collapse]",
    "collapsemeta(p=0.5)->[collapse] [helplessly]",
    "collapsedmeta->[collapsed]",
    "collapsedmeta(p=0.5)->[collapsed] [helplessly]",
    "r_logentry(p=1.5)->[CULPRITHEDIFF_labelNoun] caused [SUBJECT_definite] to [die].",
    "r_logentry(p=1.5)->[CULPRITHEDIFF_labelNounPretty] caused [SUBJECT_definite] to [die].",
    "r_logentry->[SUBJECT_definite] [died] [duetoa] [CULPRITHEDIFF_labelNoun] [flavorsuffix].",
    "r_logentry->[SUBJECT_definite] [died] [duetoa] [CULPRITHEDIFF_labelNounPretty] [flavorsuffix].",
    "r_logentry->[SUBJECT_definite] [died].",
    "r_logentry->[SUBJECT_definite] [died] [flavorsuffix].",
    "Transition_DiedInclude",
    "die(SUBJECT_flesh!=Mechanoid,p=2)->die",
    "die(SUBJECT_flesh!=Mechanoid)->perish",
    "die(SUBJECT_flesh!=Mechanoid)->expire",
    "die(SUBJECT_flesh==Mechanoid)->shut down",
    "die(SUBJECT_flesh==Mechanoid)->stop functioning",
    "die(SUBJECT_flesh==Mechanoid)->lose power",
    "died(SUBJECT_flesh!=Mechanoid,p=2)->died",
    "died(SUBJECT_flesh!=Mechanoid)->perished",
    "died(SUBJECT_flesh!=Mechanoid)->expired",
    "died(SUBJECT_flesh==Mechanoid)->shut down",
    "died(SUBJECT_flesh==Mechanoid)->stopped functioning",
    "died(SUBJECT_flesh==Mechanoid)->lost power",
    "die(p=3)->explode [flavor]",
    "die(p=3)->explode [flavorsuffix]",
    "die->detonate [flavor]",
    "die->detonate [flavorsuffix]",
    "die->burst [flavor]",
    "die->burst [flavorsuffix]",
    "died(p=3)->exploded [flavor]",
    "died->detonated [flavor]",
    "died->burst [flavor]",
    "flavor(p=0.2)->in a chemical [fireball]",
    "flavor->in a [Color] [fireball]",
    "flavor->in a [AdjectiveLarge] [fireball]",
    "flavor(p=4)->in a [fireball]",
    "flavor(p=4)->",
    "flavorsuffix->, scattering [pieces] [everywhere]",
    "flavorsuffix(SUBJECT_flesh!=Mechanoid,p=2)->, scattering [Gore] [everywhere]",
    "flavorsuffix(SUBJECT_flesh!=Mechanoid)->, leaving a small pile of [Gore]",
    "flavorsuffix->, leaving a small crater",
    "flavorsuffix(p=4)->",
    "fireball(p=3)->fireball",
    "fireball->flameball",
    "fireball->shockwave",
    "fireball->conflagration",
    "pieces->pieces",
    "pieces->fragments",
    "everywhere->everywhere",
    "everywhere->far and wide",
    "r_root->[RULE]",
    "MineralScannerPreciousLumpThreat",
    "ItemStashQuestThreat",
    "DownedRefugeeQuestThreat",
    "QuestActiveThreatDefense",
    "MechCluster",
    "MechClusterForceNoConditionCauser",
    "SleepingMechanoids",
    "Manhunters",
    "BanditCamp",
    "DownedRefugee",
    "ItemStash",
    "QuestActiveThreatDefenseNoHidden",
    "Scaria",
    "Outpost",
    "PrisonerRescueQuestThreat",
    "PossibleUnknownThreatMarker",
    "PreciousLump",
    "MineableGold",
    "MineableSilver",
    "MineableSteel",
    "MineablePlasteel",
    "MineableComponentsIndustrial",
    "MineableUranium",
    "MineableJade",
    "PrisonerWillingToJoin",
    "Electrical",
    "(0,500)",
    "(1,5000)",
    "(0,0.93)",
    "(1,1.07)",
    "ludeon.rimworld.royalty",
    "Ability_EntropyGain",
    "(0.0, 0.0)",
    "(0.5, 0.1)",
    "(0.6, 0.5)",
    "(0.9, 1.0)",
    "(3,0.5)",
    "(13,0.9)",
    "(18,1)",
    "(0,0.75)",
    "(0.50,1.00)",
    "(-20, 0.05)",
    "(-10, 0.10)",
    "(0.0, 0.50)",
    "(10, 0.80)",
    "(20, 0.90)",
    "(40, 0.96)",
    "(60, 0.98)",
    "(4,0.05)",
    "(12,0.8)",
    "(13,1)",
    "(5, 0)",
    "(20, 0.30)",
    "(60, 0.50)",
    "(-20, 0.70)",
    "(-10, 0.80)",
    "(-6, 0.83)",
    "(-4, 0.85)",
    "(-2, 0.87)",
    "(0, 0.89)",
    "(2, 0.93)",
    "(4, 0.94)",
    "(6, 0.95)",
    "(8, 0.96)",
    "(10, 0.97)",
    "(12, 0.975)",
    "(14, 0.98)",
    "(16, 0.98333)",
    "(18, 0.98666)",
    "(20, 0.99)",
    "(22, 0.9925)",
    "(26, 0.995)",
    "(30, 0.9965)",
    "(40, 0.998)",
    "(60, 0.999)",
    "(4,1.8)",
    "(12,1.1)",
    "(0,0.80)",
    "(0.30,1.00)",
    "(0.65,1)",
    "(0.8,0.95)",
    "(1.0,0.9)",
    "(1.2,0.8)",
    "(1.5,0.5)",
    "(0,0)",
    "(5,14)",
    "(40,40)",
    "(100000,100000)",
    "ludeon.rimworld.biotech",
    "PsychicAmplifier",
    "PsychicSensitivity",
    "(3, 0.05)",
    "(13, 0.8)",
    "(18, 1)",
    "(4,0.2)",
    "WorkSpeedGlobal",
    "0.6",
    "0.7",
    "0.8",
    "0.85",
    "0.9",
    "0.925",
    "0.95",
    "0.975",
    "1",
    "1.01",
    "1.02",
    "1.03",
    "1.04",
    "1.05",
    "1.06",
    "1.07",
    "1.08",
    "1.09",
    "1.10",
    "1.12",
    "1.13",
    "0.75",
    "0.90",
    "PlantHarvestYield",
    "(0.1, 0.5)",
    "(0.2, 0.75)",
    "(0.5, 0.80)",
    "(1.0, 0.90)",
    "0.80",
    "0.875",
    "(1.0, 1.0)",
    "(2.0, 1.5)",
    "(4.0, 2.0)",
    "0.10",
    "0.20",
    "0.30",
    "0.40",
    "0.50",
    "0.60",
    "0.70",
    "0.92",
    "0.94",
    "0.96",
    "0.98",
    "1.00",
    "(-20, 0.01)",
    "(0, 0.4)",
    "(20, 1.6)",
    "0.050",
    "0.040",
    "0.030",
    "0.020",
    "0.015",
    "0.010",
    "0.005",
    "0.0025",
    "0.0015",
    "0.001",
    "Caravan",
    "Map_TempIncident",
    "Map_PlayerHome",
    "Map_Misc",
    "Map_RaidBeacon",
    "MechanoidShip",
    "World",
    "0, 1",
    "EdgeDrop",
    "EdgeWalkIn",
    "CenterDrop",
    "RandomDrop",
    "EdgeDropGroups",
    "EdgeWalkInGroups",
    "(1000,0.5)",
    "0, 0.95",
    "100,  1.0",
    "1000, 0.7",
    "5000, 0.5",
    "(700, 0)",
    "(2000, 0.6)",
    "(1000, 0.25)",
    "0, 0.85",
    "5000, 0.60",
    "(1000, 0.4)",
    "0, 0.80",
    "5000, 0.65",
    "(1000, 1.6)",
    "0,  8.0",
    "1,  2.0",
    "4,  1.0",
    "7,  0.35",
    "11, 0.0",
    "20,-1.0",
    "( 0, 0)",
    "( 8, 1)",
    "(10, 0.70)",
    "(40, 1.00)",
    "( 0, 30)",
    "(11, 30)",
    "(20, 20)",
    "(1,  8)",
    "(2,  6)",
    "(3,  6)",
    "(11, 5)",
    "(20, 3.5)",
    "(-30.01, 6)",
    "(-30,    3)",
    "(-0.01,  3)",
    "(0,      1)",
    "(59.99,  1)",
    "(60,     0.5)",
    "(119.99, 0.5)",
    "(120,    0.25)",
    "(-30, 0.40)",
    "(  0, 0.80)",
    "( 30, 1.00)",
    "( 60, 1.20)",
    "(120, 1.60)",
    "(180, 2.00)",
    "Ludeon.RimWorld.Biotech",
    "OpportunitySite_AncientComplex_Mechanitor",
    "MechanitorShip",
    "(800, 1)",
    "(2800, 0)",
    "(8, 0)",
    "(15, 1)",
    "tale_noun->[PAWN_nameDef] departing for adventure",
    "tale_noun->[PAWN_nameDef] forming a caravan",
    "image->[PAWN_nameFull] striding forward purposefully [circumstance_group]",
    "image->[PAWN_nameFull] looking towards the horizon [circumstance_group]",
    "image->[PAWN_nameFull] packing supplies for a journey [circumstance_group]",
    "image->[PAWN_nameFull] planning a journey [circumstance_group]",
    "circumstance_phrase->and equipped for a fight",
    "circumstance_phrase->and equipped for survival",
    "circumstance_phrase->and equipped for exploration",
    "circumstance_phrase->with an eager look in [PAWN_possessive] eyes",
    "circumstance_phrase->with a [AdjectiveAny] look in [PAWN_possessive] eyes",
    "desc_sentence->[Quantity_adjphrase] [ally]s watch the preparations.",
    "desc_sentence->[Quantity_adjphrase] [ally]s help with the preparations.",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s shrink away from the scene.",
    "desc_sentence->A [TerrainFeature] is visible in the distance.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s watch from a distance.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s wander peacefully.",
    "tale_noun->[PAWN_nameDef]'s caravan fleeing danger",
    "tale_noun->[PAWN_nameDef]'s caravan escaping danger",
    "tale_noun->[PAWN_nameDef]'s caravan narrowly escaping danger",
    "tale_noun->[PAWN_nameDef]'s caravan being chased away by enemies",
    "image->[PAWN_nameFull] running frantically [circumstance_group]",
    "image->[PAWN_nameFull] sprinting [circumstance_group]",
    "image->[PAWN_nameFull] tucked behind a [TerrainFeature], hiding [circumstance_group]",
    "image->[PAWN_nameFull] putting up a fighting retreat [circumstance_group]",
    "image->[PAWN_nameFull] casually strolling away [circumstance_group]",
    "circumstance_phrase->as [Quantity_adjphrase] [Enemy]s chase",
    "circumstance_phrase->while [Quantity_adjphrase] [Enemy]s search",
    "circumstance_phrase->from [Quantity_adjphrase] [Enemy]s",
    "circumstance_phrase->from [Quantity_adjphrase] enemy [Animal]s",
    "circumstance_phrase->from a [AdjectiveLarge] [Enemy]",
    "desc_sentence->[PAWN_nameDef]'s pursuers are brandishing [Weapon]s.",
    "desc_sentence->[PAWN_nameDef]'s pursuers are wreathed in [Color] smoke.",
    "desc_sentence->[PAWN_nameDef]'s pursuers wear [AdjectiveAngsty] expressions.",
    "desc_sentence->[PAWN_nameDef] is sweating.",
    "desc_sentence->[PAWN_nameDef] is gasping for breath.",
    "tale_noun->a successful defense of [PAWN_nameDef]'s caravan",
    "tale_noun->[PAWN_nameDef]'s caravan fighting off an ambush",
    "image->[PAWN_nameFull] organizing resistance while [circumstance_group]",
    "image->[PAWN_nameFull] wielding a [Weapon] defensively while [circumstance_group]",
    "image->[PAWN_nameFull] retaliating with [PAWN_possessive] [Weapon] while [circumstance_group]",
    "image->[PAWN_nameFull] standing as tall as a building while [circumstance_group]",
    "image->[PAWN_nameFull] wearing a [AdjectiveBadass] expression while [circumstance_group]",
    "image->[PAWN_nameFull] wearing a [AdjectiveAngsty] expression while [circumstance_group]",
    "circumstance_phrase->bracing against the advancing horde",
    "circumstance_phrase->circling the wagons",
    "circumstance_phrase->roaring in victory",
    "circumstance_phrase->brandishing [Weapon]s",
    "circumstance_phrase->covered in [Gore]",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s advance, brandishing [Weapon]s.",
    "desc_sentence->A huge [Enemy] advances, brandishing a [Weapon].",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s advance with a [AdjectiveBadass] look in their eyes.",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s advance with a [AdjectiveAngsty] look in their eyes.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s advance with glowing [Color] eyes.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s advance, covered in [Gore].",
    "desc_sentence->The ground is coated in [Gore].",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s flee the area.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s flee the area.",
    "tale_noun->[PAWN_nameDef]'s caravan mining a rich vein of [MATERIAL_label] in a foreign land",
    "image->[PAWN_nameFull] working a [MATERIAL_label] wall with mining tools, [circumstance_group]",
    "image->[PAWN_nameFull] holding up a chunk of [MATERIAL_label], [circumstance_group]",
    "image->[PAWN_nameFull] resting against a wall of [MATERIAL_label], [circumstance_group]",
    "image->[PAWN_nameFull] coordinating an excavation team against a rich vein of [MATERIAL_label], [circumstance_group]",
    "image->[PAWN_nameFull] carefully inspecting a rich vein of [MATERIAL_label], [circumstance_group]",
    "circumstance_phrase->sweating heavily",
    "circumstance_phrase->wearing a [AdjectiveFriendly] expression",
    "circumstance_phrase->smiling proudly",
    "circumstance_phrase->a satisfied expression on [PAWN_possessive] face",
    "circumstance_phrase->looking around warily for danger",
    "desc_sentence->[Quantity_adjphrase] [ally]s assist.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s wander the area.",
    "desc_sentence->There is a makeshift shelter in the background.",
    "desc_sentence->[Quantity_adjphrase] further veins are visible in the distance.",
    "desc_sentence->[PAWN_nameDef] is sweaty and dirty from work.",
    "tale_noun->[PAWN_nameDef]'s caravan defeating an enemy stronghold",
    "image->[PAWN_nameFull] running towards a [Enemy], [circumstance_group]",
    "image->[PAWN_nameFull] wielding a [Weapon], [circumstance_group]",
    "image->[PAWN_nameFull] swinging a [Weapon], [circumstance_group]",
    "image->[PAWN_nameFull] standing as tall as a building, [circumstance_group]",
    "circumstance_phrase->wearing a [AdjectiveBadass] look in [PAWN_possessive] eyes",
    "circumstance_phrase->wearing a [AdjectiveAngsty] look in [PAWN_possessive] eyes",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s cower from the assault.",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s flee the area.",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s are visibly wounded.",
    "desc_sentence->A [Community] burns in the distance.",
    "desc_sentence->A [Community] smokes in the distance.",
    "tale_noun->[CAPTURER_nameDef] capturing [PRISONER_nameDef]",
    "tale_noun->[PRISONER_nameDef] being captured by [CAPTURER_nameDef]",
    "tale_noun->the capturing of [PRISONER_nameDef]",
    "image->[CAPTURER_nameFull] capturing [PRISONER_nameFull] [circumstance_group]",
    "image->[CAPTURER_nameFull] tying [PRISONER_nameFull]'s hands [circumstance_group]",
    "image->[CAPTURER_nameFull] smacking [PRISONER_nameFull] while capturing [PRISONER_objective] [circumstance_group]",
    "circumstance_phrase->as [PRISONER_pronoun] writhes on the ground",
    "circumstance_phrase->as [PRISONER_pronoun] twists in pain",
    "circumstance_phrase->with professional efficiency",
    "circumstance_phrase->roughly and amateurishly",
    "circumstance_phrase->with obviously excessive force",
    "circumstance_phrase->with obvious pleasure",
    "circumstance_phrase->while smiling with dominance",
    "desc_sentence->[CAPTURER_nameDef] is looking into [PRISONER_nameDef]'s eyes with a sense of dominance.",
    "desc_sentence->[PRISONER_nameDef] is injured and seems to be in pain.",
    "desc_sentence->[PRISONER_nameDef] looks resigned to [PRISONER_possessive] fate.",
    "desc_sentence->[PRISONER_nameDef] is snarling with the fury of defeat.",
    "desc_sentence->[CAPTURER_nameDef] is slapping [PRISONER_nameDef] to subdue [PRISONER_objective].",
    "desc_sentence->[CAPTURER_nameDef] is twisting [PRISONER_nameDef]'s ear.",
    "desc_sentence->[CAPTURER_nameDef] is holding [PRISONER_nameDef] in a joint lock.",
    "desc_sentence->[CAPTURER_nameDef] is spitting into [PRISONER_nameDef]'s face.",
    "desc_sentence->[CAPTURER_nameDef] is laughing as tears well up in [PRISONER_nameDef]'s eyes.",
    "desc_sentence->[CAPTURER_nameDef] is kicking [PRISONER_nameDef] for no obvious reason.",
    "tale_noun->[RECRUITER_nameDef] recruiting [JOINER_nameDef]",
    "tale_noun->[JOINER_nameDef] being recruited by [RECRUITER_nameDef]",
    "tale_noun->the recruitment of [JOINER_nameDef]",
    "image->[RECRUITER_nameFull] recruiting [JOINER_nameFull] [circumstance_group]",
    "image->[RECRUITER_nameFull] welcoming [JOINER_nameFull] as [JOINER_pronoun] becomes a colonist [circumstance_group]",
    "image->[RECRUITER_nameFull] speaking convincingly to [JOINER_nameFull] [circumstance_group]",
    "circumstance_phrase->with obvious goodwill",
    "circumstance_phrase->with a hearty handshake",
    "circumstance_phrase->with smiles all around",
    "circumstance_phrase->in front of the whole colony",
    "circumstance_phrase->in a prison cell",
    "desc_sentence->[JOINER_nameDef] is nodding in understanding.",
    "desc_sentence->[JOINER_nameDef] is smiling and making eye contact.",
    "desc_sentence->[JOINER_nameDef] looks relieved.",
    "desc_sentence->[JOINER_nameDef] looks hopeful.",
    "tale_noun->[HUNTER_nameDef] hunting [PREY_nameDef]",
    "tale_noun->[PREY_nameDef] being hunted by [HUNTER_nameDef]",
    "tale_noun->[HUNTER_nameDef]'s successful hunt",
    "image->[PREY_nameFull] being hunted by [HUNTER_nameFull] [circumstance_group]",
    "image->[HUNTER_nameFull] stalking [PREY_nameFull] from afar [circumstance_group]",
    "image->[HUNTER_nameFull] hunting [PREY_nameFull] [circumstance_group]",
    "circumstance_phrase->as [PREY_nameDef] relaxes",
    "circumstance_phrase->as [PREY_nameDef] travels",
    "circumstance_phrase->as [PREY_nameDef] eats",
    "desc_sentence->[PREY_nameDef] seems totally oblivious.",
    "desc_sentence->[HUNTER_nameDef] is gripping [HUNTER_possessive] weapon tightly.",
    "desc_sentence->[PREY_nameDef] is looking around as though [PREY_pronoun] senses that something is wrong.",
    "tale_noun->[SURGEON_nameDef] operating on [PATIENT_nameDef]",
    "tale_noun->[SURGEON_nameDef] performing a medical operation on [PATIENT_nameDef]",
    "tale_noun->[PATIENT_nameDef]'s medical operation",
    "image->[SURGEON_nameFull] putting [PATIENT_nameFull] to sleep with anesthetic [circumstance_group]",
    "image->[SURGEON_nameFull] elbow-deep in [PATIENT_nameFull] during surgery [circumstance_group]",
    "image->[SURGEON_nameFull] slicing into [PATIENT_nameFull] during surgery [circumstance_group]",
    "circumstance_phrase->as [PATIENT_pronoun] trembles with fear",
    "circumstance_phrase->as blood pools at [SURGEON_nameDef]'s feet",
    "circumstance_phrase->while surrounded by scary-looking surgical tools",
    "circumstance_phrase->with improvised but effective tools",
    "desc_sentence->[SURGEON_nameDef] is sweating profusely.",
    "desc_sentence->[SURGEON_nameDef] looks incredibly focused on the task.",
    "desc_sentence->[SURGEON_nameDef] has blood smeared on [SURGEON_possessive] face.",
    "desc_sentence->[PATIENT_nameDef] is shaking and writhing.",
    "tale_noun->[EXECUTIONER_nameDef] executing [PRISONER_nameDef]",
    "tale_noun->[PRISONER_nameDef] being executed by [EXECUTIONER_nameDef]",
    "tale_noun->the execution of [PRISONER_nameDef]",
    "image->[EXECUTIONER_nameFull] executing [PRISONER_nameFull] [circumstance_group]",
    "image->[EXECUTIONER_nameFull] putting [PRISONER_nameFull] to death [circumstance_group]",
    "image->[EXECUTIONER_nameFull] preparing to execute [PRISONER_nameFull] [circumstance_group]",
    "image->[EXECUTIONER_nameFull] entering a prison cell, going to execute [PRISONER_nameFull] [circumstance_group]",
    "circumstance_phrase->as [PRISONER_pronoun] cries out in terror",
    "circumstance_phrase->with tears in [EXECUTIONER_possessive] eyes",
    "circumstance_phrase->with a look of utter indifference",
    "circumstance_phrase->while inflicting unnecessary pain",
    "circumstance_phrase->while thinking of something else",
    "circumstance_phrase->for the greater good",
    "desc_sentence->[EXECUTIONER_nameDef] is sweating profusely.",
    "desc_sentence->[EXECUTIONER_nameDef] is drooling a little bit.",
    "desc_sentence->[EXECUTIONER_nameDef] has blood smeared on [EXECUTIONER_possessive] face.",
    "desc_sentence->[PRISONER_nameDef] is shaking and writhing.",
    "desc_sentence->[PRISONER_nameDef] seems to have given up entirely.",
    "desc_sentence->[PRISONER_nameDef] has closed [PRISONER_possessive] eyes, seeming to pray to a higher power.",
    "desc_sentence->[PRISONER_nameDef] looks defiant.",
    "tale_noun->[KIDNAPPER_nameDef] kidnapping [VICTIM_nameDef]",
    "tale_noun->[VICTIM_nameDef] being kidnapped by [KIDNAPPER_nameDef]",
    "tale_noun->the kidnapping of [VICTIM_nameDef]",
    "image->[KIDNAPPER_nameFull] carrying [VICTIM_nameFull] away to [KIDNAPPER_factionName] [circumstance_group]",
    "image->[KIDNAPPER_nameFull] of [KIDNAPPER_factionName] kidnapping [VICTIM_nameFull] [circumstance_group]",
    "image->[KIDNAPPER_nameFull] kidnapping [VICTIM_nameFull] [circumstance_group]",
    "circumstance_phrase->as [VICTIM_pronoun] twists in pain",
    "circumstance_phrase->while covered in blood and filth",
    "desc_sentence->[VICTIM_nameDef] seems to have given up entirely.",
    "desc_sentence->[VICTIM_nameDef] has closed [VICTIM_possessive] eyes, seeming to pray to a higher power.",
    "desc_sentence->[VICTIM_nameDef] looks defiant.",
    "desc_sentence->[VICTIM_nameDef] is screaming with rage and terror.",
    "desc_sentence->[VICTIM_nameDef] looks broken and exhausted.",
    "desc_sentence->[VICTIM_nameDef] appears to be badly wounded.",
    "tale_noun->the taming of [ANIMAL_nameDef] by [TAMER_nameDef]",
    "tale_noun->[TAMER_nameDef]'s taming of [ANIMAL_nameDef]",
    "image->[TAMER_nameFull] taming [ANIMAL_nameFull] [circumstance_group]",
    "image->[TAMER_nameFull] offering a morsel of food to [ANIMAL_nameFull] [circumstance_group]",
    "image->[TAMER_nameFull] whispering to a skittish [ANIMAL_label] [circumstance_group]",
    "image->[TAMER_nameFull] calming a wild [ANIMAL_label] [circumstance_group]",
    "circumstance_phrase->with great care and caution",
    "circumstance_phrase->with a smile",
    "circumstance_phrase->while exhausted but happy",
    "desc_sentence->[ANIMAL_nameDef] is snarling aggressively.",
    "desc_sentence->[ANIMAL_nameDef] looks sleepy and drunk with love.",
    "desc_sentence->[ANIMAL_nameDef] appears to be in some sort of hypnotic state.",
    "desc_sentence->[ANIMAL_nameDef] looks scared but interested.",
    "desc_sentence->[ANIMAL_nameDef] appears fascinated.",
    "desc_sentence->[TAMER_nameDef] is projecting a powerful sense of love towards [ANIMAL_nameDef].",
    "tale_noun->[KILLER_nameDef] killing [VICTIM_nameDef]",
    "tale_noun->[VICTIM_nameDef] being killed by [KILLER_nameDef]",
    "tale_noun->the killing of [VICTIM_nameDef] by [KILLER_nameDef]",
    "tale_noun->the killing of [VICTIM_nameDef]",
    "image->[VICTIM_nameFull] being killed by [KILLER_nameFull] [circumstance_group]",
    "image->[KILLER_nameFull] killing [VICTIM_nameFull] [circumstance_group]",
    "image->[KILLER_nameFull] ending [VICTIM_nameFull]'s life [circumstance_group]",
    "image->[KILLER_nameFull] brutally murdering [VICTIM_nameFull] [circumstance_group]",
    "image->[VICTIM_nameFull] being killed [circumstance_group]",
    "circumstance_phrase->seemingly without remorse",
    "circumstance_phrase->with cold efficiency",
    "circumstance_phrase->with passionate rage",
    "circumstance_phrase->with quick, efficient movements",
    "circumstance_phrase->without emotion or expression",
    "circumstance_phrase->out of bleak necessity",
    "circumstance_phrase->in a cowardly, halfhearted way",
    "desc_sentence->The sun is setting behind them in a symbolic echo of the event.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s look on.",
    "desc_sentence->A [PersonJob] watches silently [side_position].",
    "desc_sentence->Blood is pooling around [VICTIM_nameDef]'s body.",
    "desc_sentence->[VICTIM_nameDef]'s eyes are rendered in a realistically lifeless fashion.",
    "desc_sentence->[KILLER_nameDef] is baring [KILLER_possessive] teeth.",
    "desc_sentence->[KILLER_nameDef] seems satisfied.",
    "desc_sentence->[KILLER_nameDef] looks distressed at what [KILLER_pronoun] is doing.",
    "desc_sentence->[KILLER_nameDef] looks pleased with the situation.",
    "desc_sentence->[KILLER_nameDef] looks triumphant.",
    "tale_noun->the selling of [PRISONER_nameDef] to a trader",
    "tale_noun->[SELLER_nameDef] selling [PRISONER_nameDef] as a slave",
    "tale_noun->[PRISONER_nameDef] being sold as a slave by [SELLER_nameDef]",
    "image->[TRADER_nameFull] buying [PRISONER_nameFull] from [SELLER_nameFull] [circumstance_group]",
    "image->[SELLER_nameFull] selling [PRISONER_nameFull] to [TRADER_nameFull] [circumstance_group]",
    "circumstance_phrase->as the other colonists look on in disapproval",
    "circumstance_phrase->while [SELLER_nameDef] counts [TRADER_possessive] money",
    "circumstance_phrase->while [PRISONER_nameDef] moans plaintively",
    "circumstance_phrase->to [PRISONER_nameDef]'s chagrin",
    "desc_sentence->[TRADER_nameDef] is smiling devilishly.",
    "desc_sentence->[SELLER_nameDef] is laughing maniacally.",
    "desc_sentence->[SELLER_nameDef] reluctantly hands [PRISONER_nameDef] over to the trader.",
    "desc_sentence->[PRISONER_nameDef] stares defiantly at [PRISONER_possessive] new master.",
    "desc_sentence->[TRADER_nameDef] drags [PRISONER_nameDef] away by [PRISONER_possessive] chains.",
    "desc_sentence->[PRISONER_nameDef] stares at [SELLER_nameDef], plotting [PRISONER_possessive] revenge.",
    "desc_sentence->[PRISONER_nameDef] is crying.",
    "desc_sentence->[PRISONER_nameDef] is spitting in [SELLER_nameDef]'s face.",
    "desc_sentence->[PRISONER_nameDef] is melting into the ground.",
    "desc_sentence->[SELLER_nameDef] is thrusting the chains of [PRISONER_nameDef] into [TRADER_nameDef]'s hands.",
    "desc_sentence->An air of hopelessness pervades the situation.",
    "tale_noun->[TRAINER_nameDef] training [ANIMAL_nameDef]",
    "tale_noun->the training of [ANIMAL_nameDef]",
    "tale_noun->the training of [ANIMAL_nameDef] by [TRAINER_nameDef]",
    "image->[TRAINER_nameFull] [train_syn] [ANIMAL_nameFull] in [TRAINABLE_label] [circumstance_group]",
    "image->[TRAINER_nameFull] teaching [TRAINABLE_label] to [ANIMAL_nameFull] [circumstance_group]",
    "image->[TRAINER_nameFull] practicing [TRAINABLE_label] with [ANIMAL_nameFull] [circumstance_group]",
    "train_syn->training",
    "train_syn->drilling",
    "train_syn->coaching",
    "train_syn->indoctrinating",
    "train_syn->educating",
    "circumstance_phrase->as others look on",
    "circumstance_phrase->as wild [Animal]s look on in disgust",
    "circumstance_phrase->as [ANIMAL_nameDef] thinks of the simpler days when [ANIMAL_pronoun] was a feral beast",
    "circumstance_phrase->as [TRAINER_nameDef] thinks of what's for lunch",
    "circumstance_phrase->as the other colonists do actual work",
    "desc_sentence->[TRAINER_nameDef] is showing pleasure.",
    "desc_sentence->[TRAINER_nameDef] is smiling.",
    "desc_sentence->[TRAINER_nameDef] looks bored.",
    "desc_sentence->[TRAINER_nameDef] is threateningly brandishing [TRAINER_possessive] fist.",
    "desc_sentence->[TRAINER_nameDef] is wrinkling [TRAINER_possessive] brow in concentration.",
    "desc_sentence->[ANIMAL_nameDef] looks puzzled.",
    "desc_sentence->[ANIMAL_nameDef] has a weapon in [ANIMAL_possessive] mouth.",
    "desc_sentence->[ANIMAL_nameDef] is emitting effortful grunts.",
    "desc_sentence->[TRAINER_nameDef] is shaking [TRAINER_possessive] head is frustration.",
    "desc_sentence->[ANIMAL_nameDef] is trembling in fear.",
    "desc_sentence->[ANIMAL_nameDef] appears to be morphing into a [Vegetable].",
    "desc_sentence->[ANIMAL_nameDef] is represented as a pile of power tools.",
    "desc_sentence->[ANIMAL_nameDef] is half [Color] and half [Color].",
    "desc_sentence->[ANIMAL_nameDef] is covered in scales.",
    "desc_sentence->[TRAINER_nameDef] is depicted with [Quantity_adjphrase] arms.",
    "desc_sentence->[TRAINER_nameDef] is morphing into [ANIMAL_definite].",
    "tale_noun->a trade between [SELLER_nameFull] and [BUYER_nameFull]",
    "image->[BUYER_nameFull] buying goods from [SELLER_nameFull] [circumstance_group]",
    "image->[SELLER_nameFull] selling goods to [BUYER_nameFull] [circumstance_group]",
    "circumstance_phrase->with greedy intent",
    "circumstance_phrase->while [SELLER_nameDef] smirks at [BUYER_shortNameDef]",
    "desc_sentence->[BUYER_nameDef] is examining [SELLER_nameDef]'s wares.",
    "desc_sentence->[SELLER_nameDef] considers an item.",
    "desc_sentence->[SELLER_nameDef] starts haggling.",
    "desc_sentence->[BUYER_nameDef] argues with [SELLER_nameDef].",
    "desc_sentence->[SELLER_nameDef] and [BUYER_nameDef] agree on a price.",
    "desc_sentence->[BUYER_nameDef] pays for the item.",
    "desc_sentence->[SELLER_nameDef] is counting [SELLER_possessive] money.",
    "desc_sentence->[BUYER_nameDef] is taking [BUYER_possessive] goods.",
    "tale_noun->[HUMAN_nameDef]'s bonding with [ANIMAL_nameDef]",
    "image->[HUMAN_nameFull] bonding with [ANIMAL_nameFull] [circumstance_group]",
    "image->[HUMAN_nameFull] forming a deep bond with [ANIMAL_nameFull] [circumstance_group]",
    "image->[HUMAN_nameFull] realizing [HUMAN_possessive] truly loves [ANIMAL_nameFull] [circumstance_group]",
    "circumstance_phrase->while other animals look on",
    "circumstance_phrase->while looking into [ANIMAL_nameDef]'s eyes",
    "circumstance_phrase->with a sense of satisfaction",
    "desc_sentence->[ANIMAL_nameDef] is snuggling up against [HUMAN_nameDef].",
    "desc_sentence->[ANIMAL_nameDef] stands tall and looks noble.",
    "desc_sentence->[ANIMAL_nameDef] is responding positively.",
    "tale_noun->[PURSUER_nameDef] and [ACCEPTER_nameDef] becoming lovers",
    "image->[PURSUER_nameFull] whispering sweet nothings into [ACCEPTER_nameFull]'s ear [circumstance_group]",
    "image->[PURSUER_nameFull] leading [ACCEPTER_nameFull] by the hand into bed [circumstance_group]",
    "image->[PURSUER_nameFull] gambolling in bed with [ACCEPTER_nameFull] [circumstance_group]",
    "image->[PURSUER_nameFull] deeply kissing [ACCEPTER_nameFull] [circumstance_group]",
    "circumstance_phrase->in an unrealistically large bed",
    "circumstance_phrase->between the sheets",
    "circumstance_phrase->with few clothes in sight",
    "circumstance_phrase->while both are drenched in sweat",
    "desc_sentence->[PURSUER_nameDef] is snuggling up against [ACCEPTER_nameDef].",
    "desc_sentence->[PURSUER_nameDef] is locking eyes with [ACCEPTER_nameDef].",
    "desc_sentence->[PURSUER_nameDef] is blowing air at [ACCEPTER_nameDef].",
    "desc_sentence->[PURSUER_nameDef] is stylistically bonded with [ACCEPTER_nameDef].",
    "desc_sentence->[PURSUER_nameDef] is a near-mirror image of [ACCEPTER_nameDef].",
    "desc_sentence->[PURSUER_nameDef] is touching [ACCEPTER_nameDef] aggressively.",
    "tale_noun->the breakup of [DUMPER_nameDef] and [REJECTED_nameDef]",
    "image->[DUMPER_nameFull] sitting [REJECTED_nameFull] down for an unpleasant talk [circumstance_group]",
    "image->[DUMPER_nameFull] standing at a distance from [REJECTED_nameFull] [circumstance_group]",
    "image->[DUMPER_nameFull] pushing [REJECTED_nameFull] out of bed [circumstance_group]",
    "image->[DUMPER_nameFull] rejecting a hug from [REJECTED_nameFull] [circumstance_group]",
    "circumstance_phrase->in a moment of great sadness",
    "circumstance_phrase->as others look away awkwardly",
    "desc_sentence->[REJECTED_nameDef] is sobbing uncontrollably.",
    "desc_sentence->[REJECTED_nameDef] is sneering and crying at the same time.",
    "desc_sentence->[REJECTED_nameDef] is stony-faced with shock.",
    "desc_sentence->[DUMPER_nameDef] is stylistically separated from [REJECTED_nameDef].",
    "desc_sentence->[REJECTED_nameDef] has collapsed on the floor in a quivering heap.",
    "desc_sentence->[REJECTED_nameDef] is gesticulating angrily at [DUMPER_nameDef].",
    "tale_noun->the marriage of [SPOUSE1_nameDef] and [SPOUSE2_nameDef]",
    "image->[SPOUSE1_nameFull] marrying [SPOUSE2_nameFull] [circumstance_group]",
    "image->[SPOUSE1_nameFull] saying [SPOUSE1_possessive] marriage vows to [SPOUSE2_nameFull] [circumstance_group]",
    "image->[SPOUSE1_nameFull] walking down the aisle with [SPOUSE2_nameFull] [circumstance_group]",
    "image->[SPOUSE1_nameFull] holding hands with [SPOUSE2_nameFull] during a marriage ceremony [circumstance_group]",
    "circumstance_phrase->in a dignified ceremony",
    "circumstance_phrase->while both laugh gaily",
    "circumstance_phrase->while others look on solemnly",
    "desc_sentence->[SPOUSE1_nameDef] is snuggling up against [SPOUSE2_nameDef].",
    "desc_sentence->[SPOUSE1_nameDef] is locking eyes with [SPOUSE2_nameDef].",
    "desc_sentence->[SPOUSE1_nameDef] is blowing air at [SPOUSE2_nameDef].",
    "desc_sentence->[SPOUSE1_nameDef] is stylistically bonded with [SPOUSE2_nameDef].",
    "desc_sentence->[SPOUSE1_nameDef] is a near-mirror image of [SPOUSE2_nameDef].",
    "desc_sentence->[SPOUSE1_nameDef] is touching [SPOUSE2_nameDef] aggressively.",
    "tale_noun->[PAWN_nameDef] escaping the planet",
    "tale_noun->[PAWN_nameDef] taking off in a spaceship",
    "image->[PAWN_nameFull] being launched towards the stars [circumstance_group]",
    "image->[PAWN_nameFull] racing towards the heavens [circumstance_group]",
    "image->[PAWN_nameFull] accelerating to escape velocity [circumstance_group]",
    "image->[PAWN_nameFull] piloting a rocket [circumstance_group]",
    "circumstance_phrase->in front of a [TerrainFeature]",
    "circumstance_phrase->with incredible force",
    "circumstance_phrase->in a plume of dust and rocks",
    "circumstance_phrase->with rockets firing dramatically",
    "circumstance_phrase->in a precision takeoff",
    "desc_sentence->[PAWN_pronoun] is concentrating intently on the controls.",
    "desc_sentence->[PAWN_pronoun] has [PAWN_possessive] eyes closed and looks confident.",
    "desc_sentence->[PAWN_pronoun] is sleeping, [PAWN_possessive] eyes closed peacefully.",
    "desc_sentence->[PAWN_pronoun] is smiling with grim joy.",
    "desc_sentence->[PAWN_pronoun] seems to be fully in control of the situation.",
    "desc_sentence->There is a flame trail licking off the back of the ship.",
    "desc_sentence->A nearby [Animal] is looking up, startled.",
    "desc_sentence->A [Animal] is fleeing the launch in fear.",
    "desc_sentence->There is a [TerrainFeature] in the background.",
    "desc_sentence->A [PersonJob] watches silently from afar.",
    "tale_noun->[INITIATOR_nameDef] [fight_name_present] [RESPONDER_nameDef]",
    "image->[INITIATOR_nameFull] insulting [RESPONDER_nameFull] [circumstance_group]",
    "image->[INITIATOR_nameFull] taunting [RESPONDER_nameFull] [circumstance_group]",
    "image->[INITIATOR_nameFull] threatening [RESPONDER_nameFull] [circumstance_group]",
    "image->[INITIATOR_nameFull] intimidating [RESPONDER_nameFull] [circumstance_group]",
    "image->[INITIATOR_nameFull] attacking [RESPONDER_nameFull] [circumstance_group]",
    "image->[INITIATOR_nameFull] assaulting [RESPONDER_nameFull] [circumstance_group]",
    "image->[INITIATOR_nameFull] punching [RESPONDER_nameFull] [circumstance_group]",
    "image->[INITIATOR_nameFull] kicking [RESPONDER_nameFull] [circumstance_group]",
    "image->[INITIATOR_nameFull] cowering from [RESPONDER_nameFull] [circumstance_group]",
    "fight_name_present->assaulting",
    "fight_name_present->attacking",
    "fight_name_present->fighting",
    "circumstance_phrase->while [RESPONDER_nameDef] insults [INITIATOR_objective]",
    "circumstance_phrase->while [RESPONDER_nameDef] taunts [INITIATOR_objective]",
    "circumstance_phrase->while [RESPONDER_nameDef] threatens [INITIATOR_objective]",
    "circumstance_phrase->while [RESPONDER_nameDef] intimidates [INITIATOR_objective]",
    "circumstance_phrase->while [RESPONDER_nameDef] attacks [INITIATOR_objective]",
    "circumstance_phrase->while [RESPONDER_nameDef] assaults [INITIATOR_objective]",
    "circumstance_phrase->while [RESPONDER_nameDef] punches [INITIATOR_objective]",
    "circumstance_phrase->while [RESPONDER_nameDef] kicks [INITIATOR_objective]",
    "circumstance_phrase->while [RESPONDER_nameDef] cowers from [INITIATOR_objective]",
    "desc_sentence->[target] appears without remorse.",
    "desc_sentence->[target] is consumed with passionate rage.",
    "desc_sentence->[target] has no emotion or expression.",
    "desc_sentence->[target]'s body is covered in [Gore].",
    "desc_sentence->[target] is screaming furiously.",
    "desc_sentence->[target] is visibly wounded.",
    "desc_sentence->[target]'s eyes are glowing [Color].",
    "target->[INITIATOR_nameDef]",
    "target->[RESPONDER_nameDef]",
    "tale_noun->[PAWN_nameDef] dodging a cave-in",
    "tale_noun->[PAWN_nameDef] nearly crushed by falling objects",
    "image->[PAWN_nameFull] leaping away from a collapse of debris [circumstance_group]",
    "image->[PAWN_nameFull] narrowly avoiding a cave-in [circumstance_group]",
    "image->[PAWN_nameFull] avoiding a falling ceiling [circumstance_group]",
    "image->[PAWN_nameFull] avoiding certain death by a falling rock [circumstance_group]",
    "circumstance_phrase->that vanishes behind a curtain of debris and dust",
    "circumstance_phrase->that pulverizes everything beneath it",
    "circumstance_phrase->which impacts with incredible force",
    "desc_sentence->[PAWN_pronoun] is sweating with exertion.",
    "desc_sentence->[PAWN_pronoun] appears to be terrified.",
    "desc_sentence->[PAWN_pronoun] is scratched and bleeding.",
    "desc_sentence->[PAWN_pronoun] has lost [PAWN_possessive] balance.",
    "tale_noun->[KILLER_nameDef] [wound_name_present] [VICTIM_nameDef]",
    "tale_noun->[KILLER_nameDef] [wound_name_present] [VICTIM_nameDef] with a [WEAPON_label]",
    "tale_noun->the [wound_name_present] of [VICTIM_nameDef] by [KILLER_nameDef]",
    "tale_noun->the [wound_name_present] of [VICTIM_nameDef] with a [WEAPON_label]",
    "tale_noun->the [wound_name_present] of [VICTIM_nameDef]",
    "image->[VICTIM_nameFull] being [wound_name_past] by [KILLER_nameFull] [with_weapon_optional]",
    "image->[KILLER_nameFull] [wound_name_present] [VICTIM_nameFull] [with_weapon_optional]",
    "image->[KILLER_nameFull] brutally [wound_name_present] [VICTIM_nameFull] [with_weapon_optional]",
    "image->[VICTIM_nameFull] being [wound_name_past] [with_weapon_optional]",
    "wound_name_past->wounded",
    "wound_name_past->harmed",
    "wound_name_past->hurt",
    "wound_name_past->assaulted",
    "wound_name_past->attacked",
    "wound_name_present->wounding",
    "wound_name_present->harming",
    "wound_name_present->hurting",
    "wound_name_present->assaulting",
    "wound_name_present->attacking",
    "with_weapon_optional->with a [WEAPON_label] [circumstance_group]",
    "with_weapon_optional->[circumstance_group]",
    "desc_sentence->[VICTIM_nameDef] is covered in [Gore].",
    "desc_sentence->[VICTIM_nameDef] looks [AdjectiveAngsty].",
    "desc_sentence->[VICTIM_nameDef] is wincing in pain.",
    "desc_sentence->[VICTIM_nameDef] is wincing in agony.",
    "wound_name_past->incapacitated",
    "wound_name_past->crippled",
    "wound_name_past->knocked unconscious",
    "wound_name_past->disabled",
    "wound_name_present->incapacitating",
    "wound_name_present->knocking unconscious",
    "wound_name_present->disabling",
    "desc_sentence->[VICTIM_nameDef]'s eyes are closed.",
    "tale_noun->[KILLER_nameDef] [wound_name_present] [VICTIM_nameDef] at extreme distance",
    "tale_noun->[KILLER_nameDef] [wound_name_present] [VICTIM_nameDef] at extreme distance with a [WEAPON_label]",
    "tale_noun->the long distance [wound_name_present] of [VICTIM_nameDef] by [KILLER_nameDef]",
    "tale_noun->the long distance [wound_name_present] of [VICTIM_nameDef] by [KILLER_nameDef] with a [WEAPON_label]",
    "image->[KILLER_nameFull] aiming at [VICTIM_nameFull] [with_weapon_optional]",
    "image->[KILLER_nameFull] coldly [wound_name_present] [VICTIM_nameFull] [with_weapon_optional]",
    "wound_name_past->murdered",
    "wound_name_past->slain",
    "wound_name_past->slaughtered",
    "wound_name_past->eliminated",
    "wound_name_present->murdering",
    "wound_name_present->slaying",
    "wound_name_present->slaughtering",
    "wound_name_present->eliminating",
    "circumstance_phrase->from a long distance",
    "circumstance_phrase->from a great height",
    "tale_noun->[KILLER_nameDef] [wound_name_present] [VICTIM_nameDef] in close combat",
    "tale_noun->[KILLER_nameDef] [wound_name_present] [VICTIM_nameDef] in melee with a [WEAPON_label]",
    "tale_noun->the melee [wound_name_present] of [VICTIM_nameDef] by [KILLER_nameDef]",
    "tale_noun->the close combat [wound_name_present] of [VICTIM_nameDef] by [KILLER_nameDef] with a [WEAPON_label]",
    "wound_name_past->mutilated",
    "wound_name_present->mutilating",
    "desc_sentence->[VICTIM_nameDef] and [KILLER_nameDef] are both covered in [Gore].",
    "desc_sentence->[KILLER_nameDef] is covered in [Gore].",
    "desc_sentence->[KILLER_nameDef] wears a feral expression.",
    "tale_noun->the [wound_name_present] of [VICTIM_nameDef] by [KILLER_nameDef] with a [WEAPON_label]",
    "wound_name_past->defeated",
    "wound_name_past->overcome",
    "wound_name_present->defeating",
    "wound_name_present->overcoming",
    "circumstance_phrase->with great heroism",
    "circumstance_phrase->with incredible strength",
    "desc_sentence->[VICTIM_nameDef]'s corpse towers over [KILLER_nameDef].",
    "desc_sentence->[VICTIM_nameDef]'s massive corpse covers a [TerrainFeature].",
    "desc_sentence->[VICTIM_nameDef]'s eyes glow [Color].",
    "desc_sentence->[KILLER_nameDef] looks [AdjectiveBadass].",
    "desc_sentence->[KILLER_nameDef] is glowing with a heroic aura.",
    "image->[KILLER_nameFull] [cap_removal] [VICTIM_nameFull]'s capacity for [CAPACITY_label] [with_weapon_optional]",
    "image->[KILLER_nameFull] [wound_name_present] [VICTIM_nameFull] by [cap_removal] [VICTIM_possessive] [CAPACITY_label] [with_weapon_optional]",
    "cap_removal->destroying",
    "cap_removal->eliminating",
    "cap_removal->ending",
    "wound_name_past->slayed",
    "wound_name_past->executed",
    "wound_name_past->assassinated",
    "wound_name_present->executing",
    "wound_name_present->assassinating",
    "tale_noun->[KILLER_nameDef] [wound_name_present] [VICTIM_nameDef] with a mortar",
    "tale_noun->[VICTIM_nameDef] being killed by [KILLER_nameDef]'s artillery",
    "image->[KILLER_nameFull] carefully adjusting a firing tube [circumstance_group]",
    "image->[KILLER_nameFull] looking into the distance [circumstance_group]",
    "image->[KILLER_nameFull] doing calculations on paper [circumstance_group]",
    "image->[KILLER_nameFull] testing wind direction [circumstance_group]",
    "circumstance_phrase->while [VICTIM_nameFull] is consumed in a massive explosion",
    "circumstance_phrase->as a shell arcs down towards [VICTIM_nameFull]",
    "circumstance_phrase->while [VICTIM_nameFull] walks around obliviously",
    "circumstance_phrase->as [VICTIM_nameFull] sprints",
    "desc_sentence->[VICTIM_nameDef] is surrounded by explosions.",
    "desc_sentence->[VICTIM_nameDef] is surrounded by craters.",
    "tale_noun->[PAWN_nameDef] collapsing from exhaustion",
    "image->[PAWN_nameFull] collapsing on the ground [circumstance_group]",
    "image->[PAWN_nameFull] lying on the ground [circumstance_group]",
    "image->[PAWN_nameFull] lying in bed [circumstance_group]",
    "image->[PAWN_nameFull] collapsed in a chair [circumstance_group]",
    "image->[PAWN_nameFull] peacefully sleeping [circumstance_group]",
    "circumstance_phrase->with eyes closed",
    "circumstance_phrase->with a visible look of exhaustion",
    "circumstance_phrase->while covered in sweat",
    "circumstance_phrase->and unable to move a muscle",
    "desc_sentence->[PAWN_nameDef]'s last project sits nearby, complete.",
    "desc_sentence->A marvelous construction surrounds [PAWN_nameDef].",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s look grateful for [PAWN_nameDef]'s heroic effort.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s lie nearby in a similar state.",
    "desc_sentence->The scene takes place inside a newly-built [Community].",
    "tale_noun->[PAWN_nameDef] being stricken with [ILLNESS_label]",
    "image->[PAWN_nameFull] staggering through a field [circumstance_group]",
    "image->[PAWN_nameFull] lying in a hospital bed [circumstance_group]",
    "image->[PAWN_nameFull] crouching next to a fire [circumstance_group]",
    "circumstance_phrase->and sweating uncontrollably",
    "circumstance_phrase->and shivering uncontrollably",
    "circumstance_phrase->while both sweating and shivering",
    "circumstance_phrase->with cracked dry lips",
    "circumstance_phrase->while vomiting",
    "circumstance_phrase->with a visible rash",
    "circumstance_phrase->while being tended to by a doctor",
    "desc_sentence->[Quantity_adjphrase] fly-ridden [Animal] corpses surround the area.",
    "desc_sentence->[Quantity_adjphrase] twisted [Color] [TerrainFeature]s surround the scene.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s are stricken with the same afflication.",
    "desc_sentence->The scene takes place inside a [TreeType] forest.",
    "desc_sentence->[Quantity_adjphrase] dying [Animal]s lay on the ground.",
    "tale_noun->[PAWN_nameDef] getting heatstroke",
    "tale_noun->[PAWN_nameDef] overheating",
    "image->[PAWN_nameFull] trudging through sand [circumstance_group]",
    "image->[PAWN_nameFull] huddled in the shade of a [TerrainFeature] [circumstance_group]",
    "image->[PAWN_nameFull] searching for water [circumstance_group]",
    "image->[PAWN_nameFull] searching for shade [circumstance_group]",
    "image->[PAWN_nameFull] crawling across sun-baked dirt [circumstance_group]",
    "circumstance_phrase->with red dry skin",
    "circumstance_phrase->and covered in sweat",
    "desc_sentence->[Quantity_adjphrase] dessicated [Animal] corpses surround the area.",
    "desc_sentence->[PAWN_nameDef]'s clothes are tattered and torn.",
    "desc_sentence->A blazing sun looms in the background.",
    "desc_sentence->The scene takes place inside a blazing desert.",
    "desc_sentence->The scene appears to take place inside, next to a heater.",
    "desc_sentence->[Quantity_adjphrase] unmoving [Animal]s surround the scene.",
    "tale_noun->[PAWN_nameDef] getting hypothermia",
    "image->[PAWN_nameFull] trudging through snow [circumstance_group]",
    "image->[PAWN_nameFull] huddled beside a [TerrainFeature] [circumstance_group]",
    "image->[PAWN_nameFull] searching for a warm [Apparel] [circumstance_group]",
    "image->[PAWN_nameFull] trying to light a fire [circumstance_group]",
    "circumstance_phrase->while [PAWN_possessive] face slowly turns blue",
    "circumstance_phrase->while covered in frost",
    "circumstance_phrase->while exhaling clouds of fog",
    "desc_sentence->[Quantity_adjphrase] frozen [Animal] corpses surround the area.",
    "desc_sentence->[PAWN_nameDef]'s clothes are tattered and worn.",
    "desc_sentence->A cold blue moon looms in the background.",
    "desc_sentence->The scene takes place inside a snow-covered [TreeType] forest.",
    "desc_sentence->The scene appears to take place inside a freezer.",
    "desc_sentence->[Quantity_adjphrase] shivering [Animal]s surround the scene.",
    "tale_noun->[PAWN_nameDef]'s body becoming toxic",
    "tale_noun->[PAWN_nameDef] being poisoned by toxins",
    "image->[PAWN_nameFull] mindlessly removing [PAWN_possessive] clothes [circumstance_group]",
    "desc_sentence->[Quantity_adjphrase] twisted [Animal] corpses surround the area.",
    "desc_sentence->[PAWN_nameDef]'s clothes are falling apart.",
    "desc_sentence->The sky is a murky [Color].",
    "desc_sentence->The scene takes place inside a twisted [TreeType] forest.",
    "tale_noun->[MOTHER_nameDef] giving birth to [CHILD_nameDef]",
    "image->[MOTHER_nameFull] giving birth to [circumstance_group]",
    "image->[MOTHER_nameFull] holding [MOTHER_possessive] [baby], [circumstance_group]",
    "image->[MOTHER_nameFull] lying in bed next to [MOTHER_possessive] [baby], [circumstance_group]",
    "image->[MOTHER_nameFull] collapsed in a chair with [MOTHER_possessive] [baby] [circumstance_group]",
    "baby->infant",
    "baby->newborn",
    "baby->baby",
    "circumstance_phrase->[CHILD_nameFull], who is bloody and crying",
    "circumstance_phrase->[CHILD_nameFull], who is glowing softly [Color]",
    "circumstance_phrase->[CHILD_nameFull], who is already trying to pull [CHILD_objective]self around",
    "circumstance_phrase->[CHILD_nameFull], who is looking around with an expression of serenity",
    "desc_sentence->[Quantity_adjphrase] [Animal]s sleep peacefully nearby.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s gaze upon the scene.",
    "desc_sentence->A [PersonJob]s watches from a distance.",
    "tale_noun->[PAWN_nameDef]'s caravan being ambushed",
    "image->[PAWN_nameFull] cowering [circumstance_group]",
    "image->[PAWN_nameFull] moving to protect an ally [circumstance_group]",
    "image->[PAWN_nameFull] moving to attack [circumstance_group]",
    "image->[PAWN_nameFull] attacking [circumstance_group]",
    "image->[PAWN_nameFull] shouting loudly [circumstance_group]",
    "image->[PAWN_nameFull] running [circumstance_group]",
    "image->[PAWN_nameFull] grapping with an opponent [circumstance_group]",
    "image->[PAWN_nameFull] defending [PAWN_objective]self [circumstance_group]",
    "circumstance_phrase->with a [AdjectiveBadass] expression",
    "circumstance_phrase->while wielding [PAWN_possessive] weapon",
    "circumstance_phrase->while sweating with exertion",
    "desc_sentence->[Quantity_adjphrase] distant figures approaches from behind a [TerrainFeature].",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s can be seen in the distance.",
    "desc_sentence->[PAWN_nameDef] is practically surrounded by [Enemy]s.",
    "desc_sentence->[PAWN_nameDef] is confronted by a [Enemy].",
    "desc_sentence->[Quantity_adjphrase] [Animal]s flee the scene of conflict in fear.",
    "desc_sentence->In the distance, a [PersonJob] observes.",
    "circumstance_phrase->while covered with [Gore]",
    "desc_sentence->[Quantity_adjphrase] distant animals approach from behind a [TerrainFeature].",
    "desc_sentence->[Gore] covers the ground.",
    "desc_sentence->The ground has been trampled into a mess of [Gore].",
    "tale_noun->[PAWN_nameDef]'s caravan being met by others",
    "image->[PAWN_nameFull] greeting a [PersonJob] [circumstance_group]",
    "image->[PAWN_nameFull] inspecting a [PersonJob] [circumstance_group]",
    "image->[PAWN_nameFull] calling out to a [PersonJob] [circumstance_group]",
    "image->[PAWN_nameFull] walking towards a [PersonJob] [circumstance_group]",
    "image->[PAWN_nameFull] talking quietly [circumstance_group]",
    "image->[PAWN_nameFull] playing [Game] with a [PersonJob] [circumstance_group]",
    "circumstance_phrase->with a [AdjectiveFriendly] expression",
    "circumstance_phrase->while [VerbFriendly]",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s are [event].",
    "desc_sentence->[Quantity_adjphrase] [Animal]s surround the group.",
    "desc_sentence->The sun sets over a [TerrainFeature].",
    "desc_sentence->The sun rises over a [TerrainFeature].",
    "event->throwing a party",
    "event->eating a communal meal",
    "event->discussing recent events",
    "event->rekindling old friendships",
    "event->talking hesitantly",
    "tale_noun->[PAWN_nameDef]'s caravan receiving a demand",
    "tale_noun->[PAWN_nameDef]'s caravan being threatened",
    "image->[PAWN_nameFull] thinking [circumstance_group]",
    "image->[PAWN_nameFull] glaring [circumstance_group]",
    "image->[PAWN_nameFull], threatened by a [PersonJob], [circumstance_group]",
    "image->[PAWN_nameFull] brandishing a [Weapon] [circumstance_group]",
    "circumstance_phrase->with a [AdjectiveAngsty] expression",
    "circumstance_phrase->while being threatened by [Enemy]s",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s are nearby, [action].",
    "action->sharpening their weapons",
    "action->watching for danger",
    "action->guarding hostages",
    "action->waiting for a decision",
    "action->taunting [PAWN_nameDef]",
    "tale_noun->a meteorite falling near [PAWN_nameDef]'s [Community]",
    "tale_noun->a meteorite impacting near [PAWN_nameDef]'s [Community]",
    "image->a [AdjectiveLarge] rock trailing [Color] flames [airborne_circumstance]",
    "image->a brightly-glowing spot [airborne_circumstance]",
    "image->a [AdjectiveLarge] [Color] fireball [airborne_circumstance]",
    "airborne_circumstance->blazing across the sky",
    "airborne_circumstance->falling to the ground in a cloud of ash",
    "airborne_circumstance->shedding rocks and debris as it flies",
    "image->a [AdjectiveLarge] monolith, [ground_circumstance]",
    "image->a [AdjectiveLarge] [Color] scorched stone, [ground_circumstance]",
    "image->a [Color] pillar of rock, [ground_circumstance]",
    "ground_circumstance->surrounded by smoke and ash",
    "ground_circumstance->smoking from heat",
    "ground_circumstance->surrounded by molten debris",
    "ground_circumstance->partially embedded in the ground",
    "ground_circumstance->lying in a cracked crater",
    "desc_sentence->[PAWN_nameDef] looks on in surprise.",
    "desc_sentence->[PAWN_nameDef] looks on with excitement.",
    "desc_sentence->[PAWN_nameDef] looks on in shock.",
    "desc_sentence->[Quantity_adjphrase] figures approach from a nearby [TerrainFeature].",
    "desc_sentence->[Quantity_adjphrase] figures prepare tools and equipment.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s mill around uncertainly.",
    "desc_sentence->The surroundings are muted and dull.",
    "tale_noun->fallout settling over [PAWN_nameDef]'s [Community]",
    "tale_noun->the atmosphere near [PAWN_nameDef]'s [Community] becoming toxic",
    "image->an ominous sky, [circumstance_group]",
    "image->the air becoming thick and [circumstance_group]",
    "image->the ground glowing gently and [circumstance_group]",
    "image->fields of dead plants [circumstance_group]",
    "image->[Quantity_adjphrase] graves [circumstance_group]",
    "circumstance_phrase->with no life in sight",
    "circumstance_phrase->covered by a faint sheen of luminous dust",
    "circumstance_phrase->arranged in a pattern that suggests bones",
    "circumstance_phrase->waiting for the poison to stop",
    "desc_sentence->[PAWN_nameDef] lies on the ground, [PAWN_possessive] body twisted at an unusual angle.",
    "desc_sentence->[PAWN_nameDef] hides near a [TerrainFeature], gazing out with a [AdjectiveAngsty] look.",
    "desc_sentence->[PAWN_nameDef] rests quietly with a layer of sweat upon [PAWN_possessive] face.",
    "desc_sentence->[Quantity_adjphrase] dead [Animal]s lay on the ground.",
    "tale_noun->volcanic winter beginning at [PAWN_nameDef]'s [Community]",
    "image->a dark and cold sky, [circumstance_group]",
    "image->the air filling with ash, [circumstance_group]",
    "image->a frost-covered barren [TerrainFeature] [circumstance_group]",
    "image->[Quantity_adjphrase] fields of ash-covered plants [circumstance_group]",
    "circumstance_phrase->barely illuminated by thin shafts of light",
    "circumstance_phrase->starkly illuminated with chilly blue light",
    "desc_sentence->[PAWN_nameDef] huddles near a fire.",
    "desc_sentence->To stay warm, [PAWN_nameDef] wears [Quantity_adjphrase] [Apparel]s.",
    "desc_sentence->[PAWN_nameDef] sits nearby, visibly exhausted by the ordeal.",
    "desc_sentence->[Quantity_adjphrase] starving [Animal]s surround the scene.",
    "tale_noun->the time an aurora appeared over [PAWN_nameDef]'s [Community]",
    "tale_noun->the time polar lights shone over [PAWN_nameDef]'s [Community]",
    "tale_noun->[PAWN_nameDef]'s [Community] illuminated by the light of an aurora",
    "image->the sky illuminated in [Color]s and [Color]s [circumstance_phrase]",
    "image->a fabulous pattern of [Color] rays [circumstance_phrase]",
    "image->a network of [Color] lights [circumstance_phrase]",
    "image->[Color] swooping arcs with [Color] highlights [circumstance_phrase]",
    "image->dancing [Color] lights [circumstance_group]",
    "circumstance_phrase->over a [TerrainFeature]",
    "circumstance_phrase->illuminating a [TerrainFeature]",
    "circumstance_phrase->floating over a [Community]",
    "circumstance_phrase->bracketed between a [TerrainFeature] and a [TerrainFeature]",
    "desc_sentence->Below, [PAWN_nameDef] plays [Game] with a [AdjectiveFriendly] look.",
    "desc_sentence->[PAWN_nameDef] watches with awe on [PAWN_possessive] face.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s watch from below.",
    "desc_sentence->[PAWN_nameDef] sits near a [TerrainFeature], gazing at the sky.",
    "desc_sentence->There is no [Enemy] in sight.",
    "tale_noun->a flashstorm that threatened [PAWN_nameDef]'s [Community]",
    "tale_noun->[PAWN_nameDef]'s [Community] being menaced by a deadly flashstorm",
    "image->[Quantity_adjphrase] lightning strikes [circumstance_phrase]",
    "image->[behavior] wall of flames [circumstance_phrase]",
    "image->[behavior] wall of [Color] flames [circumstance_phrase]",
    "image->[behavior] cloud of ash and smoke [circumstance_phrase]",
    "image->[behavior] wave of flames [circumstance_phrase]",
    "behavior->a",
    "behavior->an advancing",
    "behavior->an approaching",
    "circumstance_phrase->advancing towards a [Community]",
    "circumstance_phrase->underneath an intimidating cloud",
    "circumstance_phrase->nearly enveloping a [TerrainFeature]",
    "circumstance_phrase->nearly enveloping [Quantity_adjphrase] [TerrainFeature]s",
    "desc_sentence->[PAWN_nameDef] watches with visible fright.",
    "desc_sentence->[PAWN_nameDef] is coordinating defensive measures.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s rush to prepare.",
    "desc_sentence->All animal life has left the area.",
    "tale_noun->an raid on [PAWN_nameDef]'s [Community]",
    "tale_noun->an assault on [PAWN_nameDef]'s [Community]",
    "tale_noun->[PAWN_nameDef]'s [Community] being attacked by [Enemy]s",
    "image->[Quantity_adjphrase] [Enemy]s [circumstance_phrase]",
    "image->an army [circumstance_phrase]",
    "image->an overwhelming force [circumstance_phrase]",
    "image->an invading force [circumstance_phrase]",
    "image->stylized [Color] banners [circumstance_phrase]",
    "image->an enormous [Enemy] [circumstance_phrase]",
    "circumstance_phrase->advancing over a [TerrainFeature]",
    "circumstance_phrase->completely encircling a [Community]",
    "circumstance_phrase->attacking [Quantity_adjphrase] [PersonJob]s",
    "desc_sentence->[PAWN_nameDef] organizes a resistance while [defender_circumstance].",
    "desc_sentence->[PAWN_nameDef] wields a [Weapon] defensively while [defender_circumstance].",
    "desc_sentence->[PAWN_nameDef] lies on the ground, wounded.",
    "desc_sentence->[PAWN_nameDef] retaliates with [PAWN_possessive] [Weapon] while [defender_circumstance].",
    "desc_sentence->[PAWN_nameDef] stands as tall as a building, [defender_circumstance].",
    "desc_sentence->[PAWN_nameDef] wears a [AdjectiveBadass] expression.",
    "desc_sentence->[PAWN_nameDef] wears a [AdjectiveAngsty] expression.",
    "defender_circumstance->shouting triumphantly",
    "defender_circumstance->glowing [Color]",
    "defender_circumstance->raising a fist in defiance",
    "defender_circumstance->flexing [PAWN_possessive] muscles",
    "tale_noun->[PAWN_nameDef]'s [Community] being infested by giant insects",
    "image->a swarm of beetles [circumstance_phrase]",
    "image->[Quantity_adjphrase] megaspiders [circumstance_phrase]",
    "image->an overwhelming tide of [Color] insects [circumstance_phrase]",
    "image->a dense fog of black specks [circumstance_phrase]",
    "circumstance_phrase->bursting out of the ground",
    "circumstance_phrase->slaughtering [Quantity_adjphrase] [Animal]s",
    "desc_sentence->[PAWN_nameDef] organizes a resistance.",
    "desc_sentence->[PAWN_nameDef] wields a [Weapon] defensively.",
    "desc_sentence->[PAWN_nameDef] retaliates with [PAWN_possessive] [Weapon].",
    "tale_noun->manhunting beasts menacing [PAWN_nameDef]'s [Community]",
    "tale_noun->[PAWN_nameDef]'s [Community] being attacked by mad animals",
    "image->a herd of [Animal]s [circumstance_phrase]",
    "image->[Quantity_adjphrase] [Animal]s [circumstance_phrase]",
    "image->a [AdjectiveLarge] [Animal] [circumstance_phrase]",
    "image->[Quantity_adjphrase] shadowy figures [circumstance_phrase]",
    "image->[Quantity_adjphrase] shadowy quadrupeds [circumstance_phrase]",
    "circumstance_phrase->possessed by [hate_emotion]",
    "hate_emotion->hatred",
    "hate_emotion->anger",
    "hate_emotion->fury",
    "tale_noun->an ancient ship part crashing near [PAWN_nameDef]'s [Community]",
    "tale_noun->an ancient ship part landing near [PAWN_nameDef]'s [Community]",
    "tale_noun->a damaged ship part landing near [PAWN_nameDef]'s [Community]",
    "image->a swarm of [Mechanoid]s [circumstance_phrase]",
    "image->an army of [Mechanoid]s [circumstance_phrase]",
    "image->[Quantity_adjphrase] [Mechanoid]s [circumstance_phrase]",
    "image->a [AdjectiveLarge] [Mechanoid] [circumstance_phrase]",
    "image->[Quantity_adjphrase] [Mechanoid] silhouettes [circumstance_phrase]",
    "image->[Quantity_adjphrase] [Mechanoid]s with glowing [Color] sensors [circumstance_phrase]",
    "circumstance_phrase->dented and sparking",
    "desc_sentence->The ground is coated in scrap metal.",
    "tale_noun->an eclipse over [PAWN_nameDef]'s [Community]",
    "image->an unnaturally dark sky, [circumstance_phrase]",
    "image->a crepuscular sky, [circumstance_phrase]",
    "image->a moon, ringed by a faint circle of sunlight, [circumstance_phrase]",
    "image->[Quantity_adjphrase] [Animal]s milling around uncertainly in darkness, [circumstance_phrase]",
    "circumstance_phrase->the air still and quiet",
    "circumstance_phrase->twilight blanketing a nearby [TerrainFeature]",
    "circumstance_phrase->twilight blanketing [Quantity_adjphrase] nearby [TerrainFeature]s",
    "circumstance_phrase->with stars visible",
    "desc_sentence->A [Community] of spectators watches the sky peacefully.",
    "tale_noun->[PAWN_nameDef] receiving a message from an old friend",
    "tale_noun->an opportunity arriving for [PAWN_nameDef]'s [Community]",
    "image->[PAWN_nameDef] opening a letter delivered by [delivery_method] while [circumstance_group]",
    "image->[PAWN_nameDef] using a datacrystal delivered by [delivery_method] while [circumstance_group]",
    "image->[PAWN_nameDef] unrolling a scroll delivered by [delivery_method] while [circumstance_group]",
    "image->[PAWN_nameDef] receiving a transmission from [transmission_source] while [circumstance_group]",
    "image->[PAWN_nameDef] receiving a message from [transmission_source] while [circumstance_group]",
    "image->[PAWN_nameDef] tuning in to a message from [transmission_source] while [circumstance_group]",
    "delivery_method->a [Animal]",
    "delivery_method->a [PersonJob]",
    "delivery_method->[Quantity_adjphrase] [Animal]s",
    "transmission_source->a rarely-used frequency",
    "transmission_source->an ancient transmitter",
    "transmission_source->a low-power signal",
    "transmission_source->a long-range signal",
    "transmission_source->a mysterious signal",
    "circumstance_phrase->standing alone near a [TerrainFeature]",
    "circumstance_phrase->exploring a [TerrainFeature]",
    "circumstance_phrase->tending crops",
    "circumstance_phrase->a [Animal] wanders past",
    "circumstance_phrase->playing [Game]",
    "desc_sentence->[Quantity_adjphrase] [Animal]s wander nearby, unaware.",
    "desc_sentence->As [PAWN_pronoun] reads, [PAWN_pronoun] starts [VerbFriendly].",
    "desc_sentence->A spectral [PersonJob] watches from the clouds.",
    "desc_sentence->[PAWN_nameDef] sits near a [TerrainFeature].",
    "desc_sentence->A [Community] is visible in the far distance.",
    "desc_sentence->A spaceship is visible in the far distance.",
    "tale_noun->a tornado that touched down near [PAWN_nameDef]'s [Community]",
    "tale_noun->[PAWN_nameDef]'s [Community] being menaced by tornado",
    "image->[behavior] cone of twisting air [circumstance_phrase]",
    "image->[behavior] tornado [circumstance_phrase]",
    "image->[behavior] hurricane [circumstance_phrase]",
    "image->[behavior] [Color] cloud formation [circumstance_phrase]",
    "behavior->a quickly-moving",
    "behavior->a swirling",
    "circumstance_phrase->carrying debris with it",
    "circumstance_phrase->passing over a [TerrainFeature]",
    "circumstance_phrase->obscuring a [TerrainFeature]",
    "circumstance_phrase->enveloping a [TerrainFeature]",
    "tale_noun->a tornado that touched down near [COLONIST_nameDef]'s [Community]",
    "tale_noun->[COLONIST_nameDef]'s [Community] menaced by a tornado",
    "desc_sentence->[COLONIST_nameDef] watches with visible fright.",
    "desc_sentence(p=0.5)->[COLONIST_nameDef] watches with awe on [COLONIST_possessive] face.",
    "desc_sentence(p=0.5)->[ATTACKER_nameDef] watches with awe on [ATTACKER_possessive] face.",
    "desc_sentence->[COLONIST_nameDef] is coordinating defensive measures.",
    "desc_sentence->[ATTACKER_nameDef] cackles with glee.",
    "tale_noun->[PAWN_nameDef] mining a rich vein of [MATERIAL_label]",
    "desc_sentence->There is a [Community] in the background.",
    "tale_noun->[PAWN_nameDef] finishing construction on a [OBJECT_label]",
    "image->[PAWN_nameFull] building a [OBJECT_label] [circumstance_group]",
    "image->[PAWN_nameFull] putting together a [OBJECT_label] [circumstance_group]",
    "image->[PAWN_nameFull] polishing the surface of a [OBJECT_label] [circumstance_group]",
    "image->[PAWN_nameFull] inscribing [PAWN_possessive] name on a [OBJECT_label] [circumstance_group]",
    "circumstance_phrase->with a gleam in [PAWN_possessive] eye",
    "circumstance_phrase->while wiping the sweat from [PAWN_possessive] forehead",
    "circumstance_phrase->while covered in grime",
    "circumstance_phrase->while smiling proudly",
    "circumstance_phrase->with a satisfied expression on [PAWN_possessive] face",
    "desc_sentence->The [OBJECT_label] appears to tower above [PAWN_nameDef].",
    "desc_sentence->The [OBJECT_label] glows a soft [Color].",
    "desc_sentence->The [OBJECT_label] is intricately detailed.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s marvel at the [OBJECT_label].",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s gaze in awe.",
    "tale_noun->[PAWN_nameDef] completing work on a [OBJECT_label]",
    "image->[PAWN_nameFull] working on a [OBJECT_label] [circumstance_group]",
    "image->[PAWN_nameFull] adding surface detail to a [OBJECT_label] [circumstance_group]",
    "desc_sentence->[PAWN_nameDef] lifts the [OBJECT_label] seemingly without effort.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s marvel at the device.",
    "tale_noun->[ATTENDER_nameDef] attending [ORGANIZER_nameDef]'s party",
    "tale_noun->[ATTENDER_nameDef] relaxing with [ORGANIZER_nameDef] at a party",
    "image->[ATTENDER_nameFull] having a conversation with [ORGANIZER_nameFull] [circumstance_group]",
    "image->[ATTENDER_nameFull] getting a drink from [ORGANIZER_nameFull] [circumstance_group]",
    "image->[ATTENDER_nameFull] chatting with [ORGANIZER_nameFull] [circumstance_group]",
    "image->[ORGANIZER_nameFull] welcoming [ATTENDER_nameFull] [circumstance_group]",
    "image->[ORGANIZER_nameFull] introducing [ATTENDER_nameFull] to a friend [circumstance_group]",
    "circumstance_phrase->with a broad grin",
    "circumstance_phrase->with a laugh",
    "circumstance_phrase->with a [AdjectiveFriendly] smile",
    "circumstance_phrase->while laughing uproariously",
    "circumstance_phrase->while [AdjectiveFriendly]",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s are involved in the conversation.",
    "desc_sentence->The area is decorated with [Color] and [Color].",
    "desc_sentence->[Quantity_adjphrase] [Animal]s play nearby.",
    "tale_noun->[PAWN_nameDef] meditating",
    "image->[PAWN_nameFull] sitting under a [TreeType] tree, [circumstance_group]",
    "image->[PAWN_nameFull] sitting quietly, [circumstance_group]",
    "image->[PAWN_nameFull] gazing into the distance and [circumstance_group]",
    "image->[PAWN_nameFull] closing [PAWN_possessive] eyes and [circumstance_group]",
    "circumstance_phrase->radiating serenity",
    "circumstance_phrase->with a tranquil smile",
    "circumstance_phrase->with a [VerbFriendly] smile",
    "circumstance_phrase->glowing softly",
    "circumstance_phrase->surrounded by a [Color] aura",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s gaze upon [PAWN_objective].",
    "desc_sentence->[PAWN_pronoun] is surrounded by [Quantity_adjphrase] [Animal]s.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s rest peacefully.",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s are awestruck by the scene.",
    "tale_noun->[PAWN_nameDef] praying",
    "tale_noun->[PAWN_nameDef] praying to a higher power",
    "image->[PAWN_nameFull] clasping [PAWN_possessive] hands and [circumstance_group]",
    "image->[PAWN_nameFull] looking into the sky and [circumstance_group]",
    "circumstance_phrase->whispering softly",
    "circumstance_phrase->wearing a hopeful expression",
    "tale_noun->[PAWN_nameDef] building a snowman",
    "tale_noun->[PAWN_nameDef] playing in the snow",
    "image->[PAWN_nameFull] forming a snowball [circumstance_group]",
    "image->[PAWN_nameFull] rolling a giant ball of snow on the ground [circumstance_group]",
    "image->[PAWN_nameFull] arranging [Vegetable]s into a rough human face [circumstance_group]",
    "image->[PAWN_nameFull] lying down in the snow [circumstance_group]",
    "circumstance_phrase->while enveloped in [Quantity_adjphrase] parkas",
    "circumstance_phrase->while obscured in a light snowstorm",
    "circumstance_phrase->while [PAWN_possessive] friends build a fort",
    "circumstance_phrase->while [PAWN_possessive] friends build a snowman family",
    "desc_sentence->A [Color] aurora shines in the background.",
    "desc_sentence->In the distance, a [Community] is covered with snow.",
    "desc_sentence->A field of [Vegetable]s is barely visible through the snow.",
    "desc_sentence->A snow-covered [TerrainFeature] can be seen far away.",
    "tale_noun->[VISITOR_nameDef] visiting the grave of [CORPSE_nameDef]",
    "tale_noun->[VISITOR_nameDef] visiting [CORPSE_nameDef]'s grave",
    "image->[VISITOR_nameFull] standing next to [CORPSE_nameFull]'s grave [circumstance_group]",
    "image->[VISITOR_nameFull] sitting next to [CORPSE_nameFull]'s grave [circumstance_group]",
    "image->[VISITOR_nameFull] leaning against [CORPSE_nameFull]'s grave [circumstance_group]",
    "image->[VISITOR_nameFull] reading the text on [CORPSE_nameFull]'s grave [circumstance_group]",
    "image->[VISITOR_nameFull] looking at the art on [CORPSE_nameFull]'s grave [circumstance_group]",
    "circumstance_phrase->and consumed in thought",
    "circumstance_phrase->while gazing at a faraway [TerrainFeature]",
    "circumstance_phrase->and talking quietly to the memorial",
    "desc_sentence->A spectral image of [CORPSE_nameDef] looks over the scene with a [AdjectiveFriendly] expression.",
    "desc_sentence->A spectral image of [CORPSE_nameDef] stands next to [VISITOR_nameDef], wearing a [AdjectiveFriendly] expression.",
    "desc_sentence->A spectral image of [CORPSE_nameDef] looks over the scene with a [AdjectiveAngsty] expression.",
    "desc_sentence->A spectral image of [CORPSE_nameDef] stands next to [VISITOR_nameDef], wearing a [AdjectiveAngsty] expression.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s rest near the scene.",
    "tale_noun->[PAWN_nameDef] relaxing at a [OBJECT_label]",
    "tale_noun->[PAWN_nameDef] playing games at a [OBJECT_label]",
    "tale_noun->[PAWN_nameDef] enjoying [PAWN_objective]self at a [OBJECT_label]",
    "image->[PAWN_nameFull] waiting in a chair, [circumstance_group]",
    "image->[PAWN_nameFull] poised over the [OBJECT_label], [circumstance_group]",
    "image->[PAWN_nameFull] sitting next to the [OBJECT_label], [circumstance_group]",
    "image->[PAWN_nameFull] winning at a [OBJECT_label], [circumstance_group]",
    "image->[PAWN_nameFull] losing at a [OBJECT_label], [circumstance_group]",
    "circumstance_phrase->tense with energy",
    "circumstance_phrase->[PAWN_possessive] body loose and relaxed",
    "circumstance_phrase->planning [PAWN_possessive] next action",
    "circumstance_phrase->gently massaging [PAWN_possessive] wrists",
    "circumstance_phrase->[angstyverb] with a [AdjectiveAngsty] expression",
    "circumstance_phrase->wearing a [AdjectiveAngsty] look",
    "circumstance_phrase->[angstyverb]",
    "desc_sentence->In the distance, a [Community] is visible.",
    "desc_sentence->In the distance, a [TerrainFeature] is visible.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s are playing as well.",
    "desc_sentence->[PAWN_nameDef] is glowing with a [Color] aura.",
    "desc_sentence->[PAWN_nameDef]'s features are exaggerated.",
    "desc_sentence->[PAWN_nameDef] towers above the scene.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s are slumped in defeat.",
    "tale_noun->[DIGGER_nameDef] burying [CORPSE_nameDef]",
    "tale_noun->[DIGGER_nameDef] laying [CORPSE_nameDef] to rest",
    "image->[DIGGER_nameFull] standing next to [CORPSE_nameFull]'s grave [circumstance_group]",
    "image->[DIGGER_nameFull] sitting next to [CORPSE_nameFull]'s grave [circumstance_group]",
    "image->[DIGGER_nameFull] leaning against [CORPSE_nameFull]'s grave [circumstance_group]",
    "image->[DIGGER_nameFull] scribing text on [CORPSE_nameFull]'s grave [circumstance_group]",
    "image->[DIGGER_nameFull] drawing art on [CORPSE_nameFull]'s grave [circumstance_group]",
    "image->[DIGGER_nameFull] placing [CORPSE_nameFull]'s body within a grave [circumstance_group]",
    "desc_sentence->A spectral image of [CORPSE_nameDef] stands next to [DIGGER_nameDef], wearing a [AdjectiveFriendly] expression.",
    "desc_sentence->A spectral image of [CORPSE_nameDef] stands next to [DIGGER_nameDef], wearing a [AdjectiveAngsty] expression.",
    "tale_noun->[PAWN_nameDef] entering cryptosleep",
    "image->[PAWN_nameFull] lying down inside a cryptosleep casket [circumstance_group]",
    "image->[PAWN_nameFull] opening an empty cryptosleep casket [circumstance_group]",
    "image->[PAWN_nameFull] sealing themselves inside a cryptosleep casket [circumstance_group]",
    "image->[PAWN_nameFull] looking through the wall of a cryptosleep casket at a world they're about to leave [circumstance_group]",
    "circumstance_phrase->while consumed in thought",
    "circumstance_phrase->and talking quietly to themselves",
    "desc_sentence->[Quantity_adjphrase] [Enemy]s approach the area.",
    "desc_sentence->[PAWN_nameDef] radiates determination.",
    "desc_sentence->[PAWN_nameDef] is visibly wounded.",
    "desc_sentence->[Quantity_adjphrase] filled cryptosleep caskets surround the scene.",
    "tale_noun->[CARRIER_nameDef] putting [SLEEPER_nameDef] into cryptosleep",
    "image->[CARRIER_nameFull] placing [SLEEPER_nameDef] inside a cryptosleep casket [circumstance_group]",
    "image->[CARRIER_nameFull] opening an empty cryptosleep casket while supporting [SLEEPER_nameDef] [circumstance_group]",
    "image->[CARRIER_nameFull] sealing [SLEEPER_nameDef] inside a cryptosleep casket [circumstance_group]",
    "image->[CARRIER_nameFull] walking away as [SLEEPER_nameDef] looks through the wall of a cryptosleep casket [circumstance_group]",
    "circumstance_phrase(p=3)->with a [AdjectiveAny] expression",
    "circumstance_phrase->with visible tension between the two",
    "desc_sentence->[CARRIER_nameDef] radiates determination.",
    "desc_sentence->[SLEEPER_nameDef] is visibly wounded.",
    "desc_sentence->[SLEEPER_nameDef] looks exhausted.",
    "tale_noun->[TAKER_nameDef] stripping [STRIPPED_nameDef]",
    "image->[TAKER_nameFull] disrobing [STRIPPED_nameFull] in public [circumstance_group]",
    "image->[TAKER_nameFull] removing the clothes of [STRIPPED_nameFull] [circumstance_group]",
    "image->[TAKER_nameFull] holding an armful of [Apparel]s while standing next to [STRIPPED_nameFull], who is completely naked [circumstance_group]",
    "image->[TAKER_nameFull] waiting patiently as [STRIPPED_nameFull] removes [STRIPPED_possessive] clothes [circumstance_group]",
    "circumstance_phrase->with a sense of purpose",
    "circumstance_phrase->with no hint of shame",
    "circumstance_phrase->while others look on",
    "circumstance_phrase->for no apparent reason",
    "circumstance_phrase->while confused animals look on",
    "desc_sentence->[STRIPPED_nameDef] is visibly aroused.",
    "desc_sentence->[STRIPPED_nameDef] is covered in unexplained moisture.",
    "desc_sentence->[STRIPPED_nameDef] is breathing heavily for no obvious reason.",
    "desc_sentence->[STRIPPED_nameDef] is fondling a shrub.",
    "desc_sentence->[STRIPPED_nameDef] wears only a [AdjectiveAngsty] expression.",
    "tale_noun->[PAWN_nameDef] becoming a master at [SKILL_label] tasks",
    "image->[PAWN_nameFull] practicing [SKILL_label] skills [circumstance_group]",
    "image->[PAWN_nameFull] reading a tome on [SKILL_label] methods [circumstance_group]",
    "image->[PAWN_nameFull] receiving training for [SKILL_label] skills [circumstance_group]",
    "image->[PAWN_nameFull] working feverishly [circumstance_group]",
    "image->[PAWN_nameFull] finishing a project [circumstance_group]",
    "circumstance_phrase->with a joyous expression",
    "circumstance_phrase->with an exuberant shout",
    "circumstance_phrase->with visible exhaustion",
    "desc_sentence->The subject is surrounded by the results of [Quantity_adjphrase] failed experiments.",
    "desc_sentence->The subject is surrounded by [Quantity_adjphrase] books.",
    "desc_sentence->[PAWN_possessive] skill is visible in the work.",
    "desc_sentence->[Quantity_adjphrase] [PersonJob]s watch with amazement.",
    "desc_sentence->[Quantity_adjphrase] [Animal]s watch with amazement.",
    "desc_sentence->[Quantity_adjphrase] ethereal spirits of ancient masters watch from above.",
    "image->[PAWN_nameFull] receiving training in [SKILL_label] skills [circumstance_group]",
    "circumstance_phrase->with a bored expression",
    "desc_sentence->The scene is surrounded by [Quantity_adjphrase] failed experiments.",
    "desc_sentence->The scene is surrounded by [Quantity_adjphrase] books.",
    "tale_noun(p=3)->[HUMAN_nameDef] recruiting yet another animal to [HUMAN_possessive] growing [AnimalGroup]",
    "tale_noun->[HUMAN_nameDef] being followed around by a [AnimalGroup]",
    "tale_noun->[HUMAN_nameDef]'s taming of [ANIMAL_nameDef]",
    "image->[HUMAN_nameFull] taming [ANIMAL_nameFull] [circumstance_group]",
    "image->[HUMAN_nameFull] offering a morsel of food to [ANIMAL_nameFull] [circumstance_group]",
    "image->[HUMAN_nameFull] whispering to a skittish [ANIMAL_label] [circumstance_group]",
    "image->[HUMAN_nameFull] calming a wild [ANIMAL_label] [circumstance_group]",
    "circumstance_phrase->with a [AnimalGroup] in the background",
    "desc_sentence->[HUMAN_nameDef] is surrounded by uncountable [Animal]s.",
    "desc_sentence->[ANIMAL_nameDef] is moving to join a [AnimalGroup] of its kin.",
    "desc_sentence->The scene is packed with [Animal]s and [Animal]s.",
    "desc_sentence->A line of uncountable [Animal]s waits to be tamed by [HUMAN_nameDef].",
    "tale_noun->[PAWN_nameDef]'s landing in a drop pod",
    "image->[PAWN_nameFull] landing in a drop pod [circumstance_group]",
    "image->[PAWN_nameFull] touching down in a drop pod [circumstance_group]",
    "image->[PAWN_nameFull] striking earth in a drop pod [circumstance_group]",
    "image->[PAWN_nameFull] riding in a drop pod [circumstance_group]",
    "circumstance_phrase->with retro-rockets firing dramatically",
    "circumstance_phrase->in a precision landing",
    "desc_sentence->[PAWN_pronoun] has [PAWN_possessive] eyes closed and looks afraid.",
    "desc_sentence->[PAWN_pronoun] is unconscious, [PAWN_possessive] tongue lolling out, drool dripping.",
    "desc_sentence->[PAWN_pronoun] seems to have no idea what [PAWN_pronoun] is doing.",
    "desc_sentence->[PAWN_pronoun] is strapped in with [PAWN_possessive] eyes closed, totally helpless.",
    "desc_sentence->There is a flame trail licking off the back of the pod.",
    "desc_sentence->A [Animal] is fleeing the impact in fear.",
    "tale_noun->[PAWN_nameDef]'s vomiting",
    "image->[PAWN_nameFull] spewing vomit onto the ground [circumstance_group]",
    "image->[PAWN_nameFull] looking disgusted while covered with dried vomit [circumstance_group]",
    "image->[PAWN_nameFull] doubled over and retching onto the floor [circumstance_group]",
    "image->[PAWN_nameFull] on [PAWN_possessive] knees, vomiting on the floor [circumstance_group]",
    "circumstance_phrase->while looking pained",
    "circumstance_phrase->with great shame",
    "desc_sentence->[PAWN_pronoun] seems totally unaware of what is around [PAWN_objective].",
    "desc_sentence->[PAWN_possessive] face itself seems to be swelling.",
    "desc_sentence->[PAWN_pronoun] is nearly unconscious, [PAWN_possessive] tongue lolling out, drool dripping.",
    "desc_sentence->[PAWN_pronoun] is convulsing violently.",
    "desc_sentence->[PAWN_pronoun] looks ashamed.",
    "desc_sentence->[PAWN_pronoun] seems to be trying to laugh, despite the circumstances.",
    "desc_sentence->[PAWN_pronoun] looks almost deflated, as though totally emptied by the intense vomiting.",
    "desc_sentence->[PAWN_pronoun] is surrounded by an artistically rendered halo of filth.",
    "desc_sentence->A [Animal] is eating from the trail of vomit in the background.",
    "tale_noun->[PAWN_nameDef]'s extreme drunkenness",
    "tale_noun->[PAWN_nameDef] getting extremely drunk",
    "image->[PAWN_nameFull] staggering around drunk [circumstance_group]",
    "image->[PAWN_nameFull] tilting [PAWN_possessive] head back and guzzling liquor [circumstance_group]",
    "image->[PAWN_nameFull] greedily collecting bottles of liquor [circumstance_group]",
    "image->[PAWN_nameFull] drinking heavily [circumstance_group]",
    "circumstance_phrase->oblivious to [PAWN_possessive] surroundings",
    "circumstance_phrase->in a brooding stupor",
    "circumstance_phrase->while questioning [PAWN_possessive] own existence",
    "circumstance_phrase->with tears in [PAWN_possessive] eyes",
    "circumstance_phrase->while chuckling madly",
    "circumstance_phrase->while sobbing",
    "circumstance_phrase->while looking pathetic",
    "circumstance_phrase->while glaring angrily at people around [PAWN_objective]",
    "circumstance_phrase->while leering at someone nearby",
    "circumstance_phrase->while attempting to disrobe",
    "circumstance_phrase->with a finger in [PAWN_possessive] mouth",
    "circumstance_phrase->while holding back vomit",
    "circumstance_phrase->without a care in the world",
    "circumstance_phrase->with a lustful glint in [PAWN_possessive] eye",
    "circumstance_phrase->while reviewing the ghosts of [PAWN_possessive] past",
    "desc_sentence->[PAWN_pronoun] looks happy and sad at the same time.",
    "desc_sentence->[PAWN_pronoun] has stains down [PAWN_possessive] front.",
    "desc_sentence->There is a trail of discarded beverage containers behind [PAWN_objective].",
    "desc_sentence->There is a white substance on [PAWN_possessive] pants.",
    "desc_sentence->[PAWN_pronoun] seems to have lost a shoe.",
    "desc_sentence->[PAWN_possessive] hair is totally mussed up.",
    "tale_noun->[PAWN_nameDef] catching fire",
    "image->[PAWN_nameFull] frantically beating out a fire attached to [PAWN_possessive] body [circumstance_group]",
    "image->[PAWN_nameFull] enveloped by flame [circumstance_group]",
    "image->[PAWN_nameFull] kneeling, hands over head, trying to extinguish flames on [PAWN_possessive] body [circumstance_group]",
    "image->[PAWN_nameFull] rolling on the floor while burning [circumstance_group]",
    "circumstance_phrase->while nearly naked",
    "circumstance_phrase->with focused intent",
    "desc_sentence->[PAWN_possessive] flesh is visibly charring.",
    "desc_sentence->[PAWN_possessive] eyes are wide with panic.",
    "desc_sentence->[PAWN_pronoun] seems to be barely conscious; [PAWN_possessive] eyes are lifeless.",
    "desc_sentence->[PAWN_possessive] mouth is open as [PAWN_pronoun] screams for help.",
    "desc_sentence->The flames are about to envelope [PAWN_possessive] head.",
    "desc_sentence->A symbolic halo of fire surrounds [PAWN_possessive] face.",
    "desc_sentence->[PAWN_pronoun] is laughing maniacally.",
    "desc_sentence->[PAWN_pronoun] seems to be losing [PAWN_objective]self.",
    "desc_sentence->A plume of smoke is rising off [PAWN_objective].",
    "desc_sentence->[PAWN_pronoun] is rendered artistically in a corpse-like way.",
    "tale_noun->[PAWN_nameDef] going berserk",
    "image->[PAWN_nameFull] flying into a berserk rage [circumstance_group]",
    "image->[PAWN_nameFull] becoming madly, violently insane [circumstance_group]",
    "image->[PAWN_nameFull] stumbling forward with a psychotic look on [PAWN_possessive] face [circumstance_group]",
    "circumstance_phrase->seemingly without reason",
    "circumstance_phrase->as others cower in fear",
    "circumstance_phrase->as a friend flees",
    "circumstance_phrase->because of the stress",
    "circumstance_phrase->as a last step",
    "desc_sentence->[PAWN_pronoun] is shaking with ungovernable rage.",
    "desc_sentence->[PAWN_possessive] teeth are bared in a deadly snarl.",
    "desc_sentence->[PAWN_possessive] eyes are dead pools of madness.",
    "desc_sentence->Spittle is flying from [PAWN_possessive] mouth as [PAWN_possessive] screams with insane rage.",
    "desc_sentence->[PAWN_pronoun] has lost part of [PAWN_possessive] clothing.",
    "desc_sentence->[PAWN_pronoun] is grimacing in misery.",
    "desc_sentence->[PAWN_pronoun] seems smiling maniacally.",
    "desc_sentence->[PAWN_pronoun] is depicted with the snarling face of a [Animal].",
    "desc_sentence->[Animal]s symbolically surround [PAWN_possessive] head.",
    "desc_sentence->[PAWN_pronoun] has a murderous glint in [PAWN_possessive] eye.",
    "desc_sentence->[PAWN_possessive] entire body seems to be trembling with hatred.",
    "desc_sentence->[PAWN_possessive] face is set in a look of twisted serenity.",
    "desc_sentence->A single tear rolls down [PAWN_possessive] face.",
    "tale_noun->[PAWN_nameDef] giving up in despair",
    "image->[PAWN_nameFull] finally giving up under stress [circumstance_group]",
    "image->[PAWN_nameFull] sobbing uncontrollably [circumstance_group]",
    "image->[PAWN_nameFull] stumbling around with a completely broken expression on [PAWN_possessive] face [circumstance_group]",
    "circumstance_phrase->as others offer sympathy",
    "circumstance_phrase->as a friend cries",
    "desc_sentence->[PAWN_pronoun] has tears streaming down [PAWN_possessive] face.",
    "desc_sentence->[PAWN_pronoun] is laughing in the depths of [PAWN_possessive] depression.",
    "desc_sentence->[PAWN_nameDef] is looking upward, as if to ask for help from above.",
    "desc_sentence->[PAWN_pronoun] is tearing at [PAWN_possessive] own clothes.",
    "tale_noun->[PAWN_nameDef] walking around naked",
    "image->[PAWN_nameFull] [nude_action] while in a state of nature [circumstance_group]",
    "image->[PAWN_nameFull] [nude_action] in the nude [circumstance_group]",
    "image->[PAWN_nameFull] [nude_action], naked, [circumstance_group]",
    "image->[PAWN_nameFull] [nude_action] without any clothes on [circumstance_group]",
    "nude_action->prancing",
    "nude_action->frolicking",
    "nude_action->gambolling",
    "nude_action->walking",
    "nude_action->strutting [PAWN_possessive] stuff",
    "nude_action->sashaying",
    "nude_action->tiptoeing",
    "nude_action->promenading",
    "nude_action->surveying the area",
    "desc_sentence->[PAWN_nameDef] is visibly aroused.",
    "desc_sentence->[PAWN_nameDef] is covered in unexplained moisture.",
    "desc_sentence->[PAWN_nameDef] is breathing heavily for no obvious reason.",
    "desc_sentence->[PAWN_nameDef] is fondling a shrub.",
    "tale_noun->[PAWN_nameDef]'s eating of human meat",
    "image->[PAWN_nameFull] [eat_gerund] the meat of a fellow humanoid [circumstance_group]",
    "image->[PAWN_nameFull] [eat_gerund] meat from a humanlike arm [circumstance_group]",
    "image->[PAWN_nameFull] [eat_gerund] flesh of a humanoid [circumstance_group]",
    "eat_gerund->eating",
    "eat_gerund->ingesting",
    "eat_gerund->chewing",
    "eat_gerund->chowing down on",
    "eat_gerund->consuming",
    "eat_gerund->swallowing",
    "eat_gerund->cannibalizing",
    "circumstance_phrase->with a look of shame",
    "circumstance_phrase->with gusto",
    "circumstance_phrase->frantically, like [PAWN_possessive] life depended on it",
    "desc_sentence->[PAWN_nameDef]'s face is covered with blood and fluid.",
    "desc_sentence->[PAWN_nameDef] is licking [PAWN_possessive] fingers.",
    "desc_sentence->[PAWN_nameDef] has blood and gore bits all down [PAWN_possessive] front.",
    "desc_sentence->[PAWN_nameDef] is in the middle of a large pool of blood.",
    "desc_sentence->[PAWN_nameDef] is eyeing someone else nearby with dark interest.",
    "desc_sentence->The meat is glistening and appears very succulent.",
    "desc_sentence->The meat is spilling all over [PAWN_nameDef]'s body.",
    "tale_noun->the time [PAWN_nameDef] crafted [THING_indefinite]",
    "image->[PAWN_nameFull] crafting [THING_indefinite] [circumstance_group]. [quality_sentence]. [title_sentence]",
    "image->[PAWN_nameFull] completing [PAWN_possessive] work on [THING_indefinite] [circumstance_group]. [quality_sentence]. [title_sentence]",
    "image->[PAWN_nameFull] working on [THING_indefinite] [circumstance_group]. [quality_sentence]. [title_sentence]",
    "image->[PAWN_nameFull] making [THING_indefinite] [circumstance_group]. [quality_sentence]. [title_sentence]",
    "circumstance_phrase->with total concentration",
    "circumstance_phrase->with a look of satisfaction on [PAWN_possessive] face",
    "circumstance_phrase->at [PAWN_possessive] work bench",
    "circumstance_phrase->with great intensity",
    "desc_sentence->There are tools scattered all around.",
    "desc_sentence->[PAWN_pronoun] is scratched and scarred from work injuries.",
    "desc_sentence->[PAWN_pronoun] is covered in sweat.",
    "desc_sentence->The work area is highly organized, with every tool in its proper place.",
    "desc_sentence->[PAWN_pronoun] is rendered in an exaggerated way to appear more powerful.",
    "desc_sentence->The size of [THING_definite] is exaggerated to emphasize its importance.",
    "desc_sentence->[THING_definite] has an artistic glow added to it. It seems almost angelic.",
    "desc_sentence->[PAWN_nameDef] is faded into the background to emphasize [PAWN_possessive] new creation.",
    "desc_sentence->[Quantity_adjphrase] onlookers surround [PAWN_objective].",
    "desc_sentence->A crowd cheers from the background.",
    "quality_sentence->[THING_definite] looks to be of [THING_quality] quality",
    "quality_sentence->[THING_definite] is of [THING_quality] quality",
    "quality_sentence->[PAWN_nameDef]'s work is of [THING_quality] quality",
    "title_sentence->[PAWN_nameDef]'s title for [THING_definite] is written underneath: [THING_title]",
    "title_sentence->[THING_definite] is emblazoned with its title: [THING_title]",
    "title_sentence->The title of [THING_definite], [THING_title], hangs in the background",
    "tale_noun->[PAWN_nameDef] striking [THING_label]",
    "image->[PAWN_nameFull] striking [THING_label] [circumstance_group]",
    "circumstance_phrase->while mining",
    "circumstance_phrase->while digging",
    "circumstance_phrase->while tunnelling",
    "circumstance_phrase->with a look of surprise",
    "circumstance_phrase->with a satisfied expression",
    "desc_sentence->[PAWN_nameDef] is wiping [PAWN_possessive] brow.",
    "desc_sentence->[PAWN_nameDef] is jumping for joy.",
    "desc_sentence->[PAWN_nameDef] is high-fiving a friend.",
    "desc_sentence->[PAWN_nameDef] is screaming with happiness.",
    "desc_sentence->[PAWN_nameDef] is laughing uncontrollably.",
    "tale_noun->[PAWN_nameDef] finishing research on [PROJECT_label]",
    "image->[PAWN_nameFull] working on the [PROJECT_label] research project [circumstance_group]",
    "image->[PAWN_nameFull] studying the secrets of [PROJECT_label] [circumstance_group]",
    "image->[PAWN_nameFull] researching [PROJECT_label] [circumstance_group]",
    "circumstance_phrase->alone at [PAWN_possessive] bench",
    "circumstance_phrase->while holding papers in [PAWN_possessive] hand",
    "circumstance_phrase->with a look of gleeful fascination",
    "desc_sentence->The work appears to be exceptionally complex.",
    "desc_sentence->[PAWN_nameDef] is completely surrounded by an array of tools and apparatuses.",
    "desc_sentence->[PAWN_nameDef] is staring at [PAWN_possessive] discovery with a sense of wonder.",
    "NoTattoo",
    "Light",
    "Medium",
    "Heavy",
    "Floor",
    "Stonecutting",
    "FineFloor",
    "CarpetMaking",
    "Unnatural",
    "GrowSoil",
    "Diggable",
    "KickMaterialInEyes",
    "Soil",
    "Bridgeable",
    "None",
    "Water",
    "MovingFluid",
    "River",
    "ShallowWater",
    "BuildingsFurniture",
    "Metallic",
    "Stony",
    "BuildingsArt",
    "(0,0.12)",
    "(1,0.16)",
    "(2,0.20)",
    "(3,0.22)",
    "(4,0.24)",
    "(5,0.26)",
    "(6,0.28)",
    "SculptureSmall",
    "SculptureLarge",
    "SculptureGrand",
    "(0,0.0)",
    "(1,0.0)",
    "(2,0.01)",
    "(3,0.01)",
    "(4,0.01)",
    "(5,0.02)",
    "(6,0.02)",
    "PlaceWorker_MeditationOffsetBuildingsNear",
    "ITab_Art",
    "TableSculpting",
    "Root",
    "Uranium",
    "Woody",
    "PlaceWorker_ShowPlantHarmRadius",
    "0  , 5",
    "1.5, 18",
    "6  , 40",
    "20 , 100",
    "ITab_ContentsTransporter",
    "Bed",
    "PlaceWorker_ShowFacilitiesConnections",
    "EndTable",
    "Dresser",
    "RewardStandardQualitySuper",
    "VitalsMonitor",
    "Fabric",
    "Leathery",
    "RitualFocus",
    "PlaceWorker_RitualFocus",
    "PlaceWorker_Heater",
    "Flame",
    "TorchLamp",
    "Chunks",
    "Buildings",
    "AllowLargeCorpses",
    "ResourcesRaw",
    "Items",
    "BodyParts",
    "ITab_Storage",
    "ShelfSmall",
    "Shelf",
    "BuildingsJoy",
    "PlaceWorker_WatchArea",
    "PlaceWorker_NeverAdjacentUnstandable",
    "Television",
    "PlaceWorker_NotUnderRoof",
    "PlaceWorker_PreventInteractionSpotOverlap",
    "MechClusterMember",
    "PlaceWorker_ShowExplosionRadius",
    "Deterioration",
    "BuildingsMisc",
    "PlaceWorker_ShowTradeBeaconRadius",
    "MoisturePump",
    "GroundPenetratingScanner",
    "Chemfuel",
    "PlaceWorker_FuelingPort",
    "TransportPod",
    "PlaceWorker_NeedsFuelingPort",
    "CorpsesHumanlike",
    "Morbid",
    "Grave",
    "Sarcophagus",
    "ITab_ContentsCasket",
    "PlaceWorker_SpectatorPreview",
    "Fence",
    "FenceGate",
    "ITab_PenAutoCut",
    "ITab_PenFood",
    "ITab_PenAnimals",
    "PlaceWorker_AnimalPenMarker",
    "MusicalInstrument",
    "PlaceWorker_ShowInstrumentAoE",
    "Rock",
    "MapEdge",
    "GeothermalGenerator",
    "Megascarab",
    "Spelopede",
    "Megaspider",
    "BuildingsSpecial",
    "PowerConduit",
    "PlaceWorker_Conduit",
    "PlaceWorker_WindTurbine",
    "ITab_WindTurbineAutoCut",
    "BuildingsPower",
    "Batteries",
    "SolarPanels",
    "PlaceWorker_OnSteamGeyser",
    "GeothermalPower",
    "PlaceWorker_WatermillGenerator",
    "WatermillGenerator",
    "SmashCorpseMechanoid",
    "ITab_Bills",
    "Production",
    "ToolCabinet",
    "PlaceWorker_ReportWorkSpeedPenalties",
    "ButcherCorpseFlesh",
    "Make_Kibble",
    "BuildingsProduction",
    "ButcherCorpseMechanoid",
    "CookMealSimple",
    "CookMealFine",
    "CookMealFine_Veg",
    "CookMealFine_Meat",
    "CookMealLavish",
    "CookMealLavish_Veg",
    "CookMealLavish_Meat",
    "CookMealSurvival",
    "CookMealSimpleBulk",
    "CookMealFineBulk",
    "CookMealFineBulk_Veg",
    "CookMealFineBulk_Meat",
    "CookMealLavishBulk",
    "CookMealLavishBulk_Veg",
    "CookMealLavishBulk_Meat",
    "CookMealSurvivalBulk",
    "Make_Pemmican",
    "Make_PemmicanBulk",
    "Make_Wort",
    "Brewing",
    "ExtractMetalFromSlag",
    "SmeltWeapon",
    "SmeltApparel",
    "DestroyWeapon",
    "DestroyApparel",
    "Make_ChemfuelFromWood",
    "Make_ChemfuelFromOrganics",
    "Make_ComponentIndustrial",
    "Make_ComponentSpacer",
    "CremateCorpse",
    "BurnApparel",
    "BurnWeapon",
    "BurnDrugs",
    "Hydroponics",
    "PlaceWorker_DeepDrill",
    "PlaceWorker_NextToHopperAccepter",
    "Sandbags",
    "Barricades",
    "BuildingsSecurity",
    "PlaceWorker_NeverAdjacentTrap",
    "IEDs",
    "Bullet",
    "Arrow",
    "ArrowHighVelocity",
    "TurretGun",
    "Ranged",
    "Artillery",
    "ITab_Shells",
    "PlaceWorker_TurretTop",
    "Mortars",
    "PlaceWorker_ShowTurretRadius",
    "SniperTurret",
    "ReinforcedBarrel",
    "Artillery_BaseDestroyer",
    "Artillery_MannedMortar",
    "MortarShells",
    "Shell_Firefoam",
    "Shell_AntigrainWarhead",
    "FoamTurret",
    "RocketswarmLauncher",
    "ShipCryptosleep",
    "PlaceWorker_HeadOnShipBeam",
    "ShipComputerCore",
    "ShipReactor",
    "ShipEngine",
    "ShipSensorCluster",
    "ExoticBuilding",
    "PlaceWorker_DoorLearnOpeningSpeed",
    "Autodoors",
    "Wall",
    "Door",
    "Autodoor",
    "Minimal",
    "Fences",
    "PenMarker",
    "PlaceWorker_CoolerSimple",
    "BuildingsTemperature",
    "PlaceWorker_Cooler",
    "AirConditioning",
    "PlaceWorker_Vent",
    "Artifacts",
    "Artifact",
    "RewardStandardHighFreq",
    "ItemsMisc",
    "MeleePiercer",
    "Stab",
    "AnimalPart",
    "MechSerumHealer",
    "EggsUnfertilized",
    "MortarShell",
    "Textiles",
    "Wools",
    "Unfinished",
    "ApparelUtility",
    "Belt",
    "BeltDefense",
    "Armor",
    "Headgear",
    "ArmorHeadgear",
    "HeadgearNoble",
    "Overhead",
    "Western",
    "Worker",
    "BasicClothing",
    "2",
    "3",
    "Clothing",
    "ElectricSmithy",
    "FueledSmithy",
    "HiTechArmor",
    "BestowerHood",
    "ApparelMisc",
    "OnSkin",
    "Shell",
    "ApparelArmor",
    "Middle",
    "MedievalMilitary",
    "ApparelNoble",
    "Cape",
    "Royal",
    "RoyalTier2",
    "RoyalTier5",
    "(0,-60)",
    "(1,-90)",
    "(0,20)",
    "(0.49,5)",
    "(0.6,5)",
    "(0.7,3)",
    "(0.8,3)",
    "(0.83,-4)",
    "(0.9,3)",
    "(0.95,-2)",
    "(0.98,1)",
    "(0.99,0)",
    "StoneBlocks",
    "ChunkSandstone",
    "ChunkGranite",
    "ChunkLimestone",
    "ChunkSlate",
    "ChunkMarble",
    "WeaponsRanged",
    "WeaponRanged",
    "WeaponsMelee",
    "WeaponMelee",
    "Demolish",
    "Cut",
    "LongSword",
    "Spear",
    "SimpleGun",
    "RangedLight",
    "Autopistol",
    "ShortShots",
    "RangedHeavy",
    "LongShots",
    "AssaultRifle",
    "Minigun",
    "SingleUseWeapon",
    "EmpireGrenadeDestructive",
    "Grenades",
    "GrenadeFlame",
    "MechanoidGunHeavy",
    "ChargeBlasterHeavyGun",
    "InfernoCannonGun",
    "MechanoidGunLongRange",
    "NoRelic",
    "SpacerGun",
    "MechanoidGunMedium",
    "Ground",
    "Decorative",
    "Hydroponic",
    "Devilstrand",
    "Cocoa",
    "Stumps",
    "ITab_Pawn_Health",
    "ITab_Pawn_Needs",
    "ITab_Pawn_Character",
    "ITab_Pawn_Training",
    "ITab_Pawn_Social",
    "ITab_Pawn_Guest",
    "ITab_Pawn_Prisoner",
    "ITab_Pawn_FormingCaravan",
    "ITab_Pawn_Gear",
    "ITab_Pawn_Log",
    "OrganicStandard",
    "ExciseCarcinoma",
    "AdministerMechSerumHealer",
    "RemoveBodyPart",
    "Euthanize",
    "Anesthetize",
    "CureScaria",
    "Sterilize",
    "Bite",
    "(0.0, 0, 0.2)",
    "(0.3, 0, 0.1)",
    "(0.0, 0, -0.06)",
    "(-0.3, 0, 0.1)",
    "AnimalUncommon",
    "AnimalFighter",
    "(0.0, 0, 0.37)",
    "(0.23, 0, 0.27)",
    "(0.0, 0, 0.27)",
    "(-0.23, 0, 0.27)",
    "(0.0, 0, 0.385)",
    "(0.29, 0, 0.31)",
    "(-0.29, 0, 0.31)",
    "(0.25, 0, 0.18)",
    "(0.0, 0, 0.08)",
    "(-0.25, 0, 0.18)",
    "(0.36, 0, 0.1)",
    "(0.0, 0, 0.03)",
    "(-0.36, 0, 0.1)",
    "(0.03, 0, 0.17)",
    "(0.32, 0, 0)",
    "(0.03, 0, -0.13)",
    "(-0.32, 0, 0)",
    "(2, 1.7)",
    "(3, 0.7)",
    "(3.5, 0)",
    "(0.02, 0, 0.23)",
    "(0.35, 0, 0.05)",
    "(0.0, 0, -0.185)",
    "(-0.35, 0, 0.05)",
    "AnimalCommon",
    "AnimalPet",
    "(0, 0, 0.1)",
    "(0.21, 0, 0.08)",
    "(0.0, 0, -0.09)",
    "(-0.21, 0, 0.08)",
    "(2.5, 1)",
    "(3, 0)",
    "(0.0, 0, 0.3)",
    "(0.21, 0, 0.02)",
    "(0.0, 0, -0.2)",
    "(-0.21, 0, 0.02)",
    "(0.0, 0, 0.24)",
    "(0.28, 0, 0.14)",
    "(0.0, 0, -0.03)",
    "(-0.28, 0, 0.14)",
    "(2.5, 0.7)",
    "(0.02, 0, 0.25)",
    "(0.24, 0, 0.11)",
    "(0.02, 0, -0.16)",
    "(-0.24, 0, 0.11)",
    "(0.0, 0, 0.09)",
    "(0.21, 0, -0.04)",
    "(0.0, 0, -0.18)",
    "(-0.21, 0, -0.04)",
    "(0.0, 0, 0.07)",
    "AnimalFarm",
    "(0.19, 0, 0.24)",
    "(0.0, 0, 0.16)",
    "(-0.19, 0, 0.24)",
    "(0.0, 0, 0.22)",
    "(0.3, 0, 0.21)",
    "(-0.3, 0, 0.21)",
    "(0.0, 0, 0.32)",
    "(0.25, 0, 0.3)",
    "(0.0, 0, 0.26)",
    "(-0.25, 0, 0.3)",
    "(0.28, 0, 0)",
    "(0.0, 0, -0.04)",
    "(-0.28, 0, 0)",
    "(0.38, 0, 0.01)",
    "(0.0, 0, -0.165)",
    "(-0.38, 0, 0.01)",
    "(0.0, 0, 0.05)",
    "(0.285, 0, 0.02)",
    "(0.0, 0, -0.12)",
    "(-0.285, 0, 0.02)",
    "(0.02, 0, 0.22)",
    "(0.2, 0, 0.13)",
    "(0.01, 0, -0.045)",
    "(-0.2, 0, 0.13)",
    "(0.0, 0, 0.25)",
    "(0.26, 0, 0.04)",
    "(0, 0, 0)",
    "(-0.26, 0, 0.04)",
    "(-0.02, 0, 0.2)",
    "(0.26, 0, 0.05)",
    "(-0.02, 0, 0.02)",
    "(-0.26, 0, 0.05)",
    "(0.3, 0, 0.015)",
    "(0.0, 0, -0.19)",
    "(-0.3, 0, 0.015)",
    "(0.0, 0, 0.1)",
    "(0.16, 0, 0.03)",
    "(0.0, 0, -0.02)",
    "(-0.16, 0, 0.03)",
    "(0.0, 0, 0.33)",
    "(0.31, 0, 0.21)",
    "(-0.31, 0, 0.21)",
    "(0.27, 0, 0.16)",
    "(0.0, 0, 0.12)",
    "(-0.27, 0, 0.16)",
    "(0.23, 0, 0.11)",
    "(-0.23, 0, 0.11)",
    "(-0.02, 0, 0.1)",
    "(0.28, 0, 0.02)",
    "(0.0, 0, 0.02)",
    "(-0.28, 0, 0.02)",
    "(1.0, 0)",
    "(1.5, 1)",
    "(2.0, 1)",
    "(0.19, 0, 0)",
    "(0.0, 0, -0.07)",
    "(-0.19, 0, 0)",
    "(0.07, 0, -0.05)",
    "(0.0, 0, -0.08)",
    "(-0.07, 0, -0.05)",
    "AnimalInsect",
    "(0.0, 0, 0.14)",
    "(0.07, 0, 0.08)",
    "(-0.07, 0, 0.08)",
    "(0.0, 0, 0.36)",
    "(0.11, 0, 0.29)",
    "(0, 0, 0.25)",
    "(-0.11, 0, 0.29)",
    "AnimalExotic",
    "ToxicBite",
    "(-0.03, 0, 0.35)",
    "(0.03, 0, 0.36)",
    "(-0.05, 0, 0.28)",
    "(-0.03, 0, 0.36)",
    "(0.0, 0, 0.11)",
    "(0.25, 0, 0.02)",
    "(0.01, 0, -0.02)",
    "(-0.52, 0, 0.02)",
    "(3, 1)",
    "(0.0, 0, 0.04)",
    "(1.7, 1)",
    "(0.11, 0, -0.01)",
    "(0.0, 0, -0.05)",
    "(-0.11, 0, -0.01)",
    "(0.0, 0, 0.4)",
    "(0.27, 0, 0.18)",
    "(-0.27, 0, 0.18)",
    "(0.32, 0, 0.06)",
    "(-0.32, 0, 0.06)",
    "(0.25, 0, 0.12)",
    "(-0.25, 0, 0.12)",
    "(0.0, 0, 0.17)",
    "(0.29, 0, 0.09)",
    "(0.0, 0, 0.23)",
    "(-0.29, 0, 0.09)",
    "(0.0, 0, 0.18)",
    "(0.27, 0, 0.11)",
    "(-0.27, 0, 0.11)",
    "(0.22, 0, 0.34)",
    "(-0.22, 0, 0.34)",
    "(0.31, 0, -0.03)",
    "(-0.31, 0, -0.03)",
    "(0.26, 0, 0.1)",
    "(-0.26, 0, 0.1)",
    "(2.4, 0)",
    "(0.2, 0, 0)",
    "(0.0, 0, -0.15)",
    "(-0.2, 0, 0)",
    "(2.2, 1)",
    "(2.8, 0)",
    "(0.33, 0, 0.03)",
    "(0.0, 0, -0.28)",
    "(-0.33, 0, 0.03)",
    "(0.003, 0, 0.23)",
    "(0.3, 0, 0.01)",
    "(0.02, 0, -0.23)",
    "(-0.3, 0, 0.01)",
    "(2, 1)",
    "(0.02, 0, 0.2)",
    "(0.01, 0, -0.21)",
    "(-0.01, 0, 0.3)",
    "(0.0, 0, -0.24)",
    "(0.3, 0, 0.03)",
    "(0.0, 0, -0.16)",
    "(-0.3, 0, 0.03)",
    "(0.32, 0, 0.08)",
    "(0.0, 0, -0.21)",
    "(-0.32, 0, 0.08)",
    "(0.01, 0, 0.26)",
    "(0.32, 0, 0.1)",
    "(0.01, 0, -0.25)",
    "(-0.32, 0, 0.1)",
    "(1.01, 0.02)",
    "(14,0)",
    "(16,100)",
    "(50,100)",
    "(60,30)",
    "(70,18)",
    "(80,10)",
    "(90,3)",
    "(100,0)",
    "HumanMeat",
    "ElephantTusk",
    "ImplantEmpireRoyal",
    "WeaponBladelink",
    "RewardNonEmpireFactionsOnly",
    "PsychicWeapon",
    "PsychicApparel",
    "Apparel_PowerArmor",
    "Apparel_PowerArmorHelmet",
    "Gun_ChargeRifle",
    "Gun_ChargeLance",
    "Gun_AssaultRifle",
    "TechprofSubpersonaCore",
    "MechSerumResurrector",
    "SkillNeurotrainer",
    "Techprint",
    "ComponentSpacer",
    "AIPersonaCore",
    "Binging_DrugMajor",
    "Binging_DrugExtreme",
    "Psychopath",
    "Bloodlust",
    "Cannibal",
    "AteFineMeal",
    "AteLavishMeal",
    "ButcheredHumanlikeCorpse",
    "AteRawHumanlikeMeat",
    "NightOwl",
    "Undergrounder",
    "DrugDesire",
    "Kind",
    "Masochist",
    "Wimp",
    "Transhumanist",
    "BodyPurist",
    "Pyromaniac",
    "Greedy",
    "Jealous",
    "NaturalMood",
    "TorturedArtist",
    "Kibble",
    "(0.2, 0)",
    "(1,   1)",
    "(2,   3)",
    "Tameness",
    "Basic",
    "Obedience",
    "Combat",
    "Help",
    "Work",
    "Abrasive",
    "AteRawFood",
    "AteHumanlikeMeatDirect",
    "AteHumanlikeMeatAsIngredient",
    "AteHumanlikeMeatDirectCannibal",
    "AteHumanlikeMeatAsIngredientCannibal",
    "Nerves",
    "SlowLearner",
    "Frenzy_Shoot",
    "ShootingAccuracy",
    "Gourmand",
    "SexualOrientation",
    "FireStartingSpree",
    "(0, 50)",
    "SlowFastLearner",
    "TooSmart",
    "Toughness",
    "Inspired_Creativity",
    "Binging_Food",
    "Frenzy_Go",
    "MainTab-World-Closed",
    "ReformCaravan",
    "Draft",
    "MainTab-Architect-Closed",
    "DesignationCategoryButton-Misc-Closed",
    "Designator-Build-OrbitalTradeBeacon",
    "ITab-Bills-Closed",
    "ITab-Needs-Closed",
    "MainTab-Assign-Closed",
    "ManageDrugPolicies",
    "ITab-Prisoner-Closed",
    "GrowingZoneSetPlant",
    "DesignationCategoryButton-Temperature-Closed",
    "Designator-Build-Campfire",
    "Designator-Build-Shelf",
    "TimeControls",
    "DesignationCategoryButton-Zone-Closed",
    "Designator-ZoneAddStockpile_Resources",
    "ToggleForbidden",
    "Designator-ZoneAdd_Growing",
    "Alerts",
    "DesignationCategoryButton-Orders-Closed",
    "Designator-Mine",
    "MainTab-Work-Closed",
    "ToggleForbidden-Door",
    "FormCaravan",
    "Designator-Tame",
    "ITab-Training-Closed",
    "InfoCard",
    "ITab-Storage-Closed",
    "Designator-AreaHomeExpand",
    "MainTab-Restrict-Closed",
    "Designator-AreaAllowedExpand",
    "Designator-AreaAllowedClear",
    "ManualPriorities-Off",
    "ManageOutfits",
    "MainTab-History-Closed",
    "Messages",
    "GotoPrevPage",
    "GotoNextPage",
    "PageClosed",
    "NextPage",
    "ChooseBiome-TemperateForest-Flat",
    "ITab-Planet-Open",
    "ITab-Terrain-Open",
    "ReorderPawn",
    "ReorderPawnOptionalToStarting",
    "RandomizePawn",
    "MainTab-Architect-Open",
    "SelectDesignator-ZoneAddStockpile_Resources",
    "Designate-ZoneAddStockpile_Resources",
    "ClearDesignatorSelection",
    "SelectDesignator-Unforbid",
    "Designate-Unforbid",
    "Designator-Unforbid",
    "SelectDesignator-Wall",
    "SelectStuff-Wall-WoodLog",
    "Designate-Wall",
    "DesignationCategoryButton-Structure-Closed",
    "Designator-Build-Wall",
    "SelectDesignator-Door",
    "SelectStuff-Door-WoodLog",
    "Designate-Door",
    "Designator-Build-Door",
    "SelectDesignator-Bed",
    "SelectStuff-Bed-WoodLog",
    "Designate-Bed",
    "DesignationCategoryButton-Furniture-Closed",
    "Designator-Build-Bed",
    "SelectDesignator-TorchLamp",
    "Designate-TorchLamp",
    "Designator-Build-TorchLamp",
    "SelectDesignator-AnimalSleepingSpot",
    "Designate-AnimalSleepingSpot",
    "Designator-Build-AnimalSleepingSpot",
    "SelectDesignator-HorseshoesPin",
    "SelectStuff-HorseshoesPin-WoodLog",
    "SelectStuff-HorseshoesPin-Steel",
    "Designate-HorseshoesPin",
    "DesignationCategoryButton-Joy-Closed",
    "Designator-Build-HorseshoesPin",
    "SelectDesignator-ZoneAdd_Growing",
    "Designate-ZoneAdd_Growing",
    "GrowingZoneSetPlant-Plant_Rice",
    "SelectDesignator-FueledStove",
    "Designate-FueledStove",
    "DesignationCategoryButton-Production-Closed",
    "Designator-Build-FueledStove",
    "ITab-Bills-Open",
    "MainTab-Work-Open",
    "SelectDesignator-Mine",
    "Designate-Mine",
    "SelectDesignator-PlantsHarvestWood",
    "Designate-PlantsHarvestWood",
    "Designator-PlantsHarvestWood",
    "Open-MainTab-Work",
    "SelectDesignator-SimpleResearchBench",
    "SelectStuff-SimpleResearchBench-WoodLog",
    "Designate-SimpleResearchBench",
    "Designator-Build-SimpleResearchBench",
    "MainTab-Research-Open",
    "MainTab-Research-Closed",
    "Open-MainTab-Research",
    "StartResearchProject",
    "SelectDesignator-AreaHomeExpand",
    "Designate-AreaHomeExpand",
    "SelectDesignator-AreaBuildRoofExpand",
    "Designate-AreaBuildRoofExpand",
    "Designator-AreaBuildRoofExpand",
    "SelectDesignator-Sandbags",
    "Designate-Sandbags",
    "DesignationCategoryButton-Security-Closed",
    "Designator-Build-Sandbags",
    "ITab-Health-Open",
    "ITab-Gear-Open",
    "ITab-Needs-Open",
    "ITab-Social-Open",
    "ITab-Character-Open",
    "Undraft",
    "FireAtWillToggle",
    "VerbTarget",
    "MainTab-Menu-Open",
    "ChooseStoryteller",
    "MainTab-Menu-Closed",
    "MenuButton-Options",
    "OptionsButton-ChooseStoryteller",
    "Ambient_Wind_Clear",
    "Ambient_Wind_Fog",
    "WeatherOverlay_Fog",
    "(1300, 1)",
    "Ambient_Rain",
    "WeatherOverlay_Rain",
    "(4000, 3.0)",
    "Ambient_Wind_Storm",
    "(4000, 2.0)",
    "(300,0.5)",
    "WeatherOverlay_SnowHard",
    "WeatherOverlay_SnowGentle",
    "TableButcher",
    "ButcherSpot",
    "Brewery",
    "BiofuelRefinery",
    "ElectricSmelter",
    "ElectricCrematorium",
    "Commoner",
    "AllWork",
    "Hunting",
    "WITab_Caravan_Health",
    "WITab_Caravan_Needs",
    "WITab_Caravan_Gear",
    "WITab_Caravan_Social",
    "WITab_Caravan_Items",
    "WITab_Caravan_Feeding",
  ],
  Name: [
    "PsycastBase",
    "SpeechBase",
    "Solid",
    "MechanicalTermiteRingBase",
    "ClawBase",
    "MechanicalThorax",
    "MechanicalCentipedeRingBase",
    "StructureColorBase",
    "DelayedThreat",
    "SleepingThreat",
    "SleepingMechanoids",
    "Flame",
    "CutBase",
    "BluntBase",
    "Scratch",
    "Bite",
    "Bomb",
    "Bullet",
    "Arrow",
    "StunBase",
    "DrugBase",
    "MakeableDrugBase",
    "MakeableDrugPillBase",
    "DrugPillBase",
    "AddictionBase",
    "DrugToleranceBase",
    "DrugAddictionNeedBase",
    "Deflect_Metal",
    "Deflect_General",
    "Power_Cell_Burning_Base",
    "FleckFeedbackBase",
    "FleckBase",
    "FleckBase_RandomGraphic",
    "FleckBase_Thrown",
    "FleckBase_RandomGraphic_Thrown",
    "MicroSparks",
    "FleckGlowDistortBackground",
    "FleckPsycastAreaEffect",
    "FleckBase_Water",
    "InteractionMoteBase",
    "MoodMoteBase",
    "Mote_ProgressBar",
    "MoteBase",
    "MoteGlowDistorted",
    "FoodBitBase",
    "Mote_PsychicConditionCauserEffect",
    "ForceJob",
    "FactionBase",
    "AncientsBase",
    "OutlanderFactionBase",
    "OutlanderRoughBase",
    "TribeBase",
    "TribeRoughBase",
    "TribeSavageBase",
    "PirateBandBase",
    "PlayerFactionBase",
    "GeneHairColorBase",
    "GeneSkinColorMelanin",
    "AverageBase",
    "NarrowBase",
    "BodyPartArchotechBase",
    "BodyPartBase",
    "ImplantHediffBase",
    "AddedBodyPartBase",
    "SurgeryInstallImplantBase",
    "SurgeryInstallBodyPartArtificialBase",
    "SurgeryInstallBodyPartNaturalBase",
    "SurgeryRemoveImplantBase",
    "BodyPartBionicBase",
    "SurgeryInstallWoodenPartBase",
    "BodyPartNaturalBase",
    "BodyPartProstheticBase",
    "BodyPartProstheticMakeableBase",
    "SurgeryInstallBodyPartProstheticBase",
    "DiseaseBase",
    "ChronicDiseaseBase",
    "InfectionBase",
    "MechanitesBase",
    "InjuryBase",
    "BurnBase",
    "Sterilized",
    "CastAbilityOnThing",
    "Demolish",
    "Base_Player",
    "MapCommonBase",
    "BaseMentalState",
    "Binging_DrugExtremeState",
    "WanderPsychotic",
    "Tantrum",
    "InsultingSpree",
    "Binging_DrugExtremeBreak",
    "Manhunter",
    "GameMapKeyBinding",
    "GameKeyBinding",
    "MiscKeyBinding",
    "SelectionSpecialKeyBinding",
    "ArchitectBase",
    "ModifierKeyBinding",
    "DevelopmentKeyBinding",
    "CustomChoiceLetterBase",
    "ThreatBig",
    "NegativeEvent",
    "PositiveEvent",
    "HumanlikeAdolescent",
    "LifeStageHumanlikeChild",
    "AnimalBaby",
    "Label",
    "LabelWithIcon",
    "AllowedArea",
    "StoneRoot",
    "SmearRoot",
    "MercenaryBase",
    "GrenadierBase",
    "MercenaryMidTierBase",
    "MercenaryGunnerBase",
    "MercenarySniperBase",
    "MercenarySlasherBase",
    "MercenaryHeavyBase",
    "MercenaryEliteTierBase",
    "MercenaryEliteBase",
    "OutlanderBase",
    "VillagerBase",
    "GuardBase",
    "TraderBase",
    "CouncilmanBase",
    "PirateBase",
    "DrifterBase",
    "PirateScavTierBase",
    "ScavengerBase",
    "ThrasherBase",
    "PirateKindBase",
    "BasePlayerPawnKind",
    "SpaceRefugeeBase",
    "SlaveBase",
    "TribalBase",
    "TribalPenitentBase",
    "TribalArcherBase",
    "TribalWarriorBase",
    "Tribal_Hunter",
    "TribalChiefBase",
    "SpeechPreceptBase",
    "SpeechPatternBase",
    "ButcherCorpseMechanoidBase",
    "CookMealBase",
    "CookMealFineBase",
    "CookMealFineBulkBase",
    "CookMealLavishBase",
    "CookMealLavishBulkBase",
    "MakeStoneBlocksBase",
    "SurgeryFlesh",
    "SurgeryOutcomeBase",
    "ShipResearchProjectBase",
    "Crashlanded",
    "DisallowDesignatorBase",
    "Outpost",
    "Designate_DragStandard_Changed",
    "DropPodImpact",
    "DropPodOpen",
    "DropPodFall",
    "ArmorRatingBase",
    "InsulationBase",
    "MarketValueBase",
    "Beauty",
    "MeditationFocusBase",
    "ShootingAccuracyFactorBase",
    "ButcherySpeedBase",
    "ButcheryEfficiencyBase",
    "AccuracyBase",
    "DiseaseIncident",
    "DiseaseAnimalIncident",
    "GiveQuestBase",
    "ImmediateAttack",
    "BreachingBase",
    "BaseStoryteller",
    "FloorBase",
    "TileMetalBase",
    "BurnedFloorBase",
    "TileStoneBase",
    "FlagstoneBase",
    "NaturalTerrainBase",
    "TerrainRoadBase",
    "WaterBase",
    "WaterDeepBase",
    "WaterChestDeepBase",
    "WaterShallowBase",
    "NonDeconstructibleAncientBuildingBase",
    "SculptureBase",
    "BuildingBase",
    "CrashedShipPartBase",
    "ShuttleBase",
    "ShuttleCrashedBase",
    "FurnitureBase",
    "FurnitureWithQualityBase",
    "ArtableFurnitureBase",
    "ArtableFurnitureRegardlessOfQualityBase",
    "SleepingSpotBase",
    "BedBase",
    "BedWithQualityBase",
    "ArtableBedBase",
    "SansComfortBedBase",
    "BasicBedBase",
    "Bed",
    "DoubleBed",
    "AnimalBedFurnitureBase",
    "TableBase",
    "TableGatherSpotBase",
    "TorchLamp",
    "LampBase",
    "StandingLampBase",
    "ShelfBase",
    "MechBuildingBase",
    "AncientCryptosleepCasket",
    "SteleBase",
    "MusicalInstrumentBase",
    "BuildingNaturalBase",
    "RockBase",
    "RaisedRocks",
    "PowerConduit",
    "BenchBase",
    "TrapIEDBase",
    "BaseWeaponTurret",
    "BaseArtilleryWeapon",
    "BaseArtilleryBuilding",
    "AutocannonTurret",
    "ProjectileFoamBase",
    "DoorBase",
    "Wall",
    "ArtifactBase",
    "ResourceVerbBase",
    "MechSerumBase",
    "MealBaseIngredientless",
    "MealBase",
    "MealCookedIngredientless",
    "MealCooked",
    "MealFineBase",
    "MealLavishBase",
    "EggBase",
    "EggUnfertBase",
    "EggFertBase",
    "ResourceBase",
    "MedicineBase",
    "OrganicProductBase",
    "PlantFoodRawBase",
    "RoughPlantBase",
    "ShellBase",
    "MakeableShellBase",
    "WoolBase",
    "LeatherBase",
    "UnfinishedBase",
    "UnfinishedTechArmor",
    "MinifiedThing",
    "HatBase",
    "HatMakeableBase",
    "ArmorHelmetMakeableBase",
    "NobleHatMakeableBase",
    "CowboyHat",
    "ApparelArmorHelmetPowerBase",
    "ApparelArmorHelmetReconBase",
    "ApparelNoQualityBase",
    "ApparelBase",
    "ApparelMakeableBase",
    "ArmorSmithableBase",
    "ArmorMachineableBase",
    "ApparelArmorPowerBase",
    "ApparelArmorReconBase",
    "OrbitalStrikeBase",
    "SignalActionBase",
    "SignalActionDelay",
    "SkyfallerBase",
    "DropPodIncoming",
    "ShuttleSkyfallerBase",
    "ShuttleCrashingSkyfallerBase",
    "EtherealThingBase",
    "PawnFlyerBase",
    "BaseFilth",
    "ActiveDropPod",
    "ChunkBase",
    "ChunkRockBase",
    "StoneBlocksBase",
    "UglyRockBase",
    "SandstoneBase",
    "GraniteBase",
    "LimestoneBase",
    "SlateBase",
    "MarbleBase",
    "BaseWeapon",
    "BaseGun",
    "BaseGunWithQuality",
    "BaseMakeableGun",
    "BaseHumanMakeableGun",
    "BaseBullet",
    "BaseMeleeWeapon",
    "BaseMeleeWeapon_Sharp",
    "BaseMeleeWeapon_Blunt",
    "BaseMeleeWeapon_Sharp_Quality",
    "BaseMeleeWeapon_Blunt_Quality",
    "BaseGrenadeProjectile",
    "BaseMakeableGrenade",
    "BaseFragGrenadeProjectile",
    "BaseIncendiaryProjectile",
    "Gun_ChargeBlasterHeavyBase",
    "Gun_InfernoCannonBase",
    "NeedleGunBase",
    "BaseWeaponNeolithic",
    "BaseProjectileNeolithic",
    "OrbitalWeaponBase",
    "OrbitalUtilityBase",
    "PlantBaseNonEdible",
    "PlantBase",
    "BushBase",
    "TreeBase",
    "DeciduousTreeBase",
    "CavePlantBase",
    "PotatoPlant",
    "HealrootBase",
    "StumpBase",
    "StumpChoppedBase",
    "StumpSmashedBase",
    "BasePawn",
    "AnimalThingBase",
    "AnimalKindBase",
    "BaseBear",
    "BearBase",
    "BigBirdThingBase",
    "BigBirdKindBase",
    "BigCatThingBase",
    "BigCatKindBase",
    "BoomalopeThingBase",
    "BoomalopeKindBase",
    "Muffalo",
    "Bison",
    "Dromedary",
    "Horse",
    "Donkey",
    "BaseHare",
    "HareBase",
    "BaseInsect",
    "Sheep",
    "RatThingBase",
    "RatKindBase",
    "ThingBaseWolf",
    "ThingBaseFox",
    "AnimalKindBaseWolf",
    "AnimalKindBaseFox",
    "BaseMechanoid",
    "MechCentipede",
    "BaseMechanoidWalker",
    "LancerMechanoidWalker",
    "BaseMechanoidKind",
    "MechCentipedeBase",
    "DeathMemory",
    "DeathMemoryFamily",
    "LostMemory",
    "LostMemoryFamily",
    "NotedOpportunisticBase",
    "DoctorTendToSelf",
    "FeedAnimals",
    "ReleasePrisoner",
    "TakeToPen",
    "Settlement",
  ],
  Abstract: ["True", "true"],
  abilityClass: ["Psycast"],
  category: [
    "Psychic",
    "Minimal",
    "Punk",
    "Tribal",
    "Urban",
    "Rural",
    "Moustache",
    "Totemic",
    "Rustic",
    "Spikecore",
    "Item",
    "Mote",
    "Aggro",
    "Malicious",
    "Misc",
    "Soldier",
    "GameMapCamera",
    "Game",
    "SelectionSpecial",
    "SelectionMisc",
    "Architect",
    "Modifiers",
    "Development",
    "DebugMenu",
    "Fixed",
    "PlayerPawnFilter",
    "PlayerPawnModifier",
    "StartingImportant",
    "GameCondition",
    "Rule",
    "StartingItem",
    "WorldThing",
    "Ability",
    "Apparel",
    "BasicsNonPawnImportant",
    "Basics",
    "BasicsImportant",
    "BasicsNonPawn",
    "Meditation",
    "Terrain",
    "Building",
    "PawnCombat",
    "BasicsPawn",
    "PawnSocial",
    "PawnWork",
    "StuffStatFactors",
    "Weapon_Melee",
    "Weapon_Ranged",
    "ThreatBig",
    "ThreatSmall",
    "DiseaseHuman",
    "DiseaseAnimal",
    "ShipChunkDrop",
    "OrbitalVisitor",
    "FactionArrival",
    "AllyAssistance",
    "Special",
    "DeepDrillInfestation",
    "GiveQuest",
    "Projectile",
    "Ethereal",
    "Filth",
    "Attachment",
    "Plant",
    "Pawn",
    "Slaver",
  ],
  Ability_Duration: ["0"],
  warmupSound: ["PsycastCastLoop"],
  verbClass: [
    "Verb_CastPsycast",
    "Verb_CastAbility",
    "Verb_MeleeAttackDamage",
    "Verb_MeleeApplyHediff",
    "Verb_Shoot",
    "Verb_ArcSprayProjectile",
    "Verb_Smokepop",
    "Verb_FirefoamPop",
    "Verb_CastTargetEffectLances",
    "Verb_ShootOneUse",
    "Verb_LaunchProjectile",
    "Verb_Bombardment",
    "Verb_PowerBeam",
    "Verb_Spawn",
  ],
  range: [
    "24.9",
    "-1",
    "0.2",
    "0.125",
    "0.15",
    "0",
    "0.18",
    "0.1",
    "0.075",
    "0.33",
    "0.21",
    "0.35",
    "0.22",
    "0.25",
    "0.3",
    "4~14",
    "8~16",
    "10~15",
    "4~18",
    "0.7~1.3",
    "0~0.98",
    "0~9",
    "28.9",
    "32.9",
    "45.9",
    "500",
    "19.9",
    "29.9",
    "34.9",
    "25.9",
    "23.9",
    "36.9",
    "15.9",
    "12.9",
    "22.9",
    "30.9",
    "44.9",
    "35.9",
    "26.9",
    "18.9",
  ],
  requireLineOfSight: ["True", "false"],
  warmupTime: [
    "1",
    "0",
    "4.0",
    "0.5",
    "0.3",
    "3.5",
    "1.7",
    "0.9",
    "1.2",
    "1.8",
    "1.0",
    "2.5",
    "4.5",
    "1.5",
    "1.25",
    "1.35",
    "4",
    "1.45",
    "2.0",
    "3",
  ],
  canTargetBuildings: ["False", "false"],
  canTargetAnimals: ["False", "false"],
  thingCategory: ["Item"],
  mapObjectTargetsMustBeAutoAttackable: ["False"],
  iconPath: [
    "Things/Mote/SpeechSymbols/Speech",
    "UI/Cultures/Astropolitan",
    "World/WorldObjects/Expanding/Village",
    "World/WorldObjects/Expanding/Town",
    "World/WorldObjects/Expanding/PirateOutpost",
    "UI/Icons/Genes/Gene_HairColor",
    "UI/Icons/Genes/Gene_SkinColorOverride",
    "UI/HeroArt/RimWorldLogo",
    "UI/HeroArt/ExpansionIcon_Royalty",
    "UI/HeroArt/ExpansionIcon_Ideology",
    "UI/HeroArt/ExpansionIcon_Biotech",
    "UI/Buttons/MainButtons/History",
    "UI/Buttons/MainButtons/Factions",
    "UI/Buttons/MainButtons/Menu",
    "UI/Issues/EatingNutrientPaste",
    "UI/Issues/Cannibalism",
    "UI/Issues/InsectMeat",
    "UI/Issues/PhysicalLove",
    "UI/Issues/MarriageName",
    "UI/Issues/OrganUse",
    "UI/Issues/Execution",
    "UI/Issues/SlaveTrading",
    "UI/Issues/SpouseCountMale",
    "UI/Issues/SpouseCountFemale",
    "Things/Mote/Transparent",
    "UI/Icons/ThingCategories/Foods",
    "UI/Icons/ThingCategories/FoodMeals",
    "UI/Icons/ThingCategories/FoodRaw",
    "UI/Icons/ThingCategories/MeatRaw",
    "UI/Icons/ThingCategories/PlantFoodRaw",
    "UI/Icons/ThingCategories/AnimalProductRaw",
    "UI/Icons/ThingCategories/EggsUnfertilized",
    "UI/Icons/ThingCategories/EggsFertilized",
    "UI/Icons/ThingCategories/Manufactured",
    "UI/Icons/ThingCategories/Textiles",
    "UI/Icons/ThingCategories/Leathers",
    "UI/Icons/ThingCategories/Wools",
    "UI/Icons/ThingCategories/Medicine",
    "UI/Icons/ThingCategories/Drugs",
    "UI/Icons/ThingCategories/MortarShells",
    "UI/Icons/ThingCategories/ResourcesRaw",
    "UI/Icons/ThingCategories/PlantMatter",
    "UI/Icons/ThingCategories/StoneBlocks",
    "UI/Icons/ThingCategories/StoneChunks",
    "Things/Building/Linked/WallPlanks_MenuIcon",
    "Things/Building/Linked/WallBricks_MenuIcon",
    "Things/Building/Linked/FenceMetal_MenuIcon",
  ],
  hotKey: ["Misc12", "Misc4"],
  gizmoClass: ["Command_AbilitySpeech"],
  displayGizmoWhileUndrafted: ["True", "false", "true"],
  disableGizmoWhileUndrafted: ["False"],
  targetRequired: ["False"],
  hostile: ["false"],
  Class: [
    "CompProperties_AbilityRequiresCapacity",
    "IngestionOutcomeDoer_GiveHediff",
    "CompProperties_Drug",
    "CompProperties_Rottable",
    "HediffCompProperties_Effecter",
    "HediffCompProperties_SeverityPerDay",
    "HediffGiver_Random",
    "HediffCompProperties_DrugEffectFactor",
    "HediffGiver_RandomDrugEffect",
    "CompProperties_Forbiddable",
    "IngestionOutcomeDoer_OffsetNeed",
    "IngestionOutcomeDoer_OffsetPsyfocus",
    "HediffCompProperties_HealPermanentWounds",
    "ThinkNode_Priority",
    "ThinkNode_PrioritySorter",
    "JobGiver_GetFood",
    "JobGiver_GetRest",
    "JobGiver_SatisfyChemicalNeed",
    "JobGiver_SatifyChemicalDependency",
    "JobGiver_UnloadYourInventory",
    "JobGiver_UnloadMyLordCarriers",
    "JobGiver_PrepareCaravan_GatherItems",
    "ThinkNode_Tagger",
    "JobGiver_WanderAnywhere",
    "ThinkNode_Subtree",
    "ThinkNode_ConditionalPackAnimalHasColonistToFollowWhilePacking",
    "JobGiver_PackAnimalFollowColonists",
    "ThinkNode_ConditionalHasDutyTarget",
    "JobGiver_WanderNearDutyLocation",
    "ThinkNode_ConditionalColonist",
    "JobGiver_PrepareCaravan_GatherPawns",
    "JobGiver_GotoTravelDestination",
    "JobGiver_PrepareCaravan_CollectPawns",
    "JobGiver_PrepareCaravan_GatherDownedPawns",
    "ThinkNode_ConditionalPrisonerInPrisonCell",
    "JobGiver_WanderCurrentRoom",
    "JobGiver_ReturnedCaravan_PenAnimals",
    "ThinkNode_ConditionalAtDutyLocation",
    "JobGiver_MarryAdjacentPawn",
    "JobGiver_Idle",
    "JobGiver_SpectateDutySpectateRect",
    "JobGiver_SpectateInCircleDuty",
    "ThinkNode_ConditionalInGatheringArea",
    "ThinkNode_ConditionalRandom",
    "JobGiver_EatInGatheringArea",
    "JobGiver_StandAndBeSociallyActive",
    "JobGiver_GetJoyInGatheringArea",
    "JobGiver_WanderInGatheringArea",
    "JobGiver_GiveSpeech",
    "JobGiver_ExitMapRandom",
    "JobGiver_TakeCombatEnhancingDrug",
    "JobGiver_AIDefendPoint",
    "ThinkNode_ForbidOutsideFlagRadius",
    "JobGiver_AIFollowEscortee",
    "JobGiver_FightFiresNearPoint",
    "JobGiver_Work",
    "JobGiver_ManTurretsNearPoint",
    "JobGiver_AIFightEnemies",
    "JobGiver_AITrashColonyClose",
    "JobGiver_AITrashBuildingsDistant",
    "JobGiver_AIGotoNearestHostile",
    "JobGiver_AISapper",
    "ThinkNode_ConditionalCanPickupOpportunisticWeapon",
    "JobGiver_PickUpOpportunisticWeapon",
    "JobGiver_AIDefendEscortee",
    "JobGiver_Kidnap",
    "JobGiver_ExitMapBest",
    "JobGiver_TakeWoundedGuest",
    "JobGiver_Steal",
    "ThinkNode_ConditionalHasDutyPawnTarget",
    "ThinkNode_ConditionalCapableOfWorkTag",
    "JobGiver_HiveDefense",
    "ThinkNode_ChancePerHour_Constant",
    "JobGiver_MaintainHives",
    "ThinkNode_ConditionalBodySize",
    "ThinkNode_ConditionalHiveCanReproduce",
    "ThinkNode_ChancePerHour_InsectDigChance",
    "JobGiver_MineRandom",
    "JobGiver_WanderHive",
    "JobGiver_AIDefendSelf",
    "JobGiver_ExitMapNearDutyTarget",
    "JobGiver_LoadTransporters",
    "JobGiver_EnterTransporter",
    "JobGiver_ManTurretsNearSelf",
    "JobGiver_ForceSleepNow",
    "ThinkNode_HarmedRecently",
    "JobGiver_AIBreaching",
    "JobGiver_WanderNearBreacher",
    "JobGiver_AITrashDutyFocus",
    "JobGiver_LayDownAwake",
    "JobGiver_SeekSafeTemperature",
    "ThinkNode_ConditionalCloseToDutyTarget",
    "ThinkNode_ConditionalInBed",
    "JobGiver_KeepLyingDown",
    "ThinkNode_ConditionalDowned",
    "AudioGrain_Clip",
    "AudioGrain_Folder",
    "ThingSetMaker_MarketValue",
    "HediffCompProperties_VerbGiver",
    "HediffCompProperties_DissolveGearOnDeath",
    "HediffCompProperties_Disappears",
    "HediffCompProperties_RecoveryThought",
    "HediffCompProperties_Immunizable",
    "HediffCompProperties_MessageAfterTicks",
    "HediffCompProperties_Discoverable",
    "HediffCompProperties_SkillDecay",
    "HediffCompProperties_TendDuration",
    "HediffCompProperties_GrowthMode",
    "HediffCompProperties_SeverityFromGas",
    "HediffCompProperties_GiveHediffLungRot",
    "HediffCompProperties_GetsPermanent",
    "HediffCompProperties_Infecter",
    "HediffCompProperties_KillAfterDays",
    "HediffCompProperties_CauseMentalState",
    "HediffCompProperties_SelfHeal",
    "CompProperties_Usable",
    "CompProperties_UseEffectInstallImplant",
    "CompProperties_UseEffectPlaySound",
    "CompProperties_UseEffectDestroySelf",
    "HediffGiver_Bleeding",
    "HediffGiver_Hypothermia",
    "HediffGiver_Heat",
    "HediffGiver_RandomAgeCurved",
    "HediffGiver_Birthday",
    "HediffGiver_BrainInjury",
    "GenStep_Settlement",
    "GenStep_Power",
    "GenStep_ScatterShrines",
    "GenStep_CaveHives",
    "GenStep_ElevationFertility",
    "GenStep_Caves",
    "GenStep_RocksFromGrid",
    "GenStep_Terrain",
    "GenStep_CavesTerrain",
    "GenStep_Roads",
    "GenStep_RockChunks",
    "GenStep_ScatterRuinsSimple",
    "GenStep_ScatterThings",
    "ScattererValidator_Buildable",
    "ScattererValidator_NoNonNaturalEdifices",
    "GenStep_FindPlayerStartSpot",
    "GenStep_ScenParts",
    "GenStep_Plants",
    "GenStep_Snow",
    "GenStep_Animals",
    "GenStep_Fog",
    "GenStep_EscapeShip",
    "PreceptComp_SelfTookMemoryThought",
    "PreceptComp_KnowsMemoryThought",
    "PreceptComp_SituationalThought",
    "PreceptComp_UnwillingToDo_Chance",
    "PreceptComp_UnwillingToDo_Gendered",
    "QuestNode_Sequence",
    "QuestNode_Delay",
    "QuestNode_SubScript",
    "QuestNode_SendSignals",
    "QuestNode_GetMap",
    "QuestNode_GetWalkInSpot",
    "QuestNode_GetFaction",
    "QuestNode_RecordHistoryEvent",
    "QuestNode_Set",
    "QuestNode_End",
    "QuestNode_EvaluateSimpleCurve",
    "QuestNode_GeneratePawnRandDevelopmentStage",
    "QuestNode_SetChildCount",
    "QuestNode_PawnsArrive",
    "QuestNode_GeneratePawn",
    "QuestNode_MultiplyRange",
    "QuestNode_GenerateThingSet",
    "QuestNode_GetMarketValue",
    "QuestNode_DropPods",
    "QuestNode_IsSet",
    "QuestNode_Less",
    "QuestNode_RandomNode",
    "QuestNode_ViolentQuestsAllowed",
    "QuestNode_Multiply",
    "QuestNode_SetChallengeRating",
    "QuestNode_Raid",
    "QuestNode_SpawnMechCluster",
    "QuestNode_Subtract",
    "QuestNode_LoopCount",
    "QuestNode_IsNull",
    "QuestNode_Equal",
    "QuestNode_Add",
    "QuestNode_GenerateSite",
    "QuestNode_GetPawn",
    "QuestNode_GetSiteTile",
    "QuestNode_GetSitePartDefsByTagsAndFaction",
    "QuestNode_GetDefaultSitePartsParams",
    "QuestNode_GetSiteThreatPoints",
    "QuestNode_SpawnWorldObjects",
    "QuestNode_WorldObjectTimeout",
    "QuestNode_Letter",
    "QuestNode_Signal",
    "QuestNode_Notify_PlayerRaidedSomeone",
    "QuestNode_GiveRewards",
    "QuestNode_Root_DelayedRewardDropPods",
    "QuestNode_AddPawnReward",
    "QuestNode_NoWorldObject",
    "QuestNode_QuestUnique",
    "QuestNode_AddPassageOffworldReward",
    "QuestNode_EndGame_ShipEscape_FindShipTile",
    "QuestNode_GenerateWorldObject",
    "QuestNode_AddItemsReward",
    "QuestNode_GetPlayerFaction",
    "QuestNode_DestroyWorldObject",
    "QuestNode_GetNearbySettlement",
    "QuestNode_GetFactionOf",
    "QuestNode_TradeRequest_RandomOfferDuration",
    "QuestNode_TradeRequest_GetRequestedThing",
    "QuestNode_TradeRequest_Initiate",
    "QuestNode_GetMapWealth",
    "QuestNode_Root_RefugeePodCrash",
    "QuestNode_Root_WandererJoin_WalkIn",
    "SurgeryOutcomeSuccess",
    "SurgeryOutcome_Death",
    "SurgeryOutcome_Failure",
    "SurgeryOutcome_FailureWithHediff",
    "SurgeryOutcomeComp_SurgeonSuccessChance",
    "SurgeryOutcomeComp_BedAndRoomQuality",
    "SurgeryOutcomeComp_MedicineQuality",
    "SurgeryOutcomeComp_RecipeSuccessChance",
    "SurgeryOutcomeComp_Inspired",
    "SurgeryOutcomeComp_ClampToRange",
    "CompProperties_RitualEffectSpawnOnPawn",
    "RitualOutcomeComp_PawnStatScaled",
    "RitualOutcomeComp_ParticipantCount",
    "RitualOutcomeComp_RoomStat",
    "RoadDefGenStep_Place",
    "RoadDefGenStep_Bulldoze",
    "SymbolResolver_OutdoorsPath",
    "SymbolResolver_AncientComplex_Sketch",
    "SymbolResolver_BasePart_Indoors",
    "SymbolResolver_BasePart_Indoors_Division_Split",
    "SymbolResolver_BasePart_Indoors_Leaf_Barracks",
    "SymbolResolver_BasePart_Indoors_Leaf_WorshippedTerminal",
    "SymbolResolver_BasePart_Indoors_Leaf_Brewery",
    "SymbolResolver_BasePart_Indoors_Leaf_DiningRoom",
    "SymbolResolver_BasePart_Indoors_Leaf_BatteryRoom",
    "SymbolResolver_BasePart_Indoors_Leaf_ThroneRoom",
    "SymbolResolver_BasePart_Outdoors",
    "SymbolResolver_BasePart_Outdoors_Division_Grid",
    "SymbolResolver_BasePart_Outdoors_Division_Split",
    "SymbolResolver_BasePart_Outdoors_LeafPossiblyDecorated",
    "SymbolResolver_BasePart_Outdoors_LeafDecorated_EdgeStreet",
    "SymbolResolver_BasePart_Outdoors_LeafDecorated_RandomInnerRect",
    "SymbolResolver_BasePart_Outdoors_Leaf_Empty",
    "SymbolResolver_BasePart_Outdoors_Leaf_Farm",
    "SymbolResolver_BasePart_Outdoors_Leaf_PowerPlant",
    "SymbolResolver_BasePart_Outdoors_Leaf_Building",
    "SymbolResolver_BasePart_Outdoors_Leaf_LandingPad",
    "SymbolResolver_Clear",
    "SymbolResolver_SingleThing",
    "SymbolResolver_SinglePawn",
    "SymbolResolver_Filth",
    "SymbolResolver_FloorFill",
    "SymbolResolver_Roof",
    "SymbolResolver_EnsureCanReachMapEdge",
    "SymbolResolver_EnsureCanHoldRoof",
    "SymbolResolver_OutdoorsCampfire",
    "SymbolResolver_FirefoamPopper",
    "SymbolResolver_PawnGroup",
    "SymbolResolver_ThingSet",
    "SymbolResolver_LootScatter",
    "SymbolResolver_EmptyRoom",
    "SymbolResolver_Doors",
    "SymbolResolver_ExtraDoor",
    "SymbolResolver_EdgeSandbags",
    "SymbolResolver_EdgeWalls",
    "SymbolResolver_EdgeFloor",
    "SymbolResolver_AncientCryptosleepCasket",
    "SymbolResolver_EdgeThing",
    "SymbolResolver_CultivatedPlants",
    "SymbolResolver_Bed",
    "SymbolResolver_PrisonerBed",
    "SymbolResolver_TriggerRect",
    "SymbolResolver_EmptyRoomRounded",
    "SymbolResolver_SoundOneShotAction",
    "SymbolResolver_TriggerUnfogged",
    "SymbolResolver_TriggerContainerEmptied",
    "SymbolResolver_OpenDoorAction",
    "SymbolResolver_Settlement",
    "SymbolResolver_EdgeDefense",
    "SymbolResolver_AncientShrinesGroup",
    "SymbolResolver_AncientShrine",
    "SymbolResolver_AncientRuins",
    "SymbolResolver_RandomMechanoidGroup",
    "SymbolResolver_Hives",
    "SymbolResolver_FillWithBeds",
    "SymbolResolver_Stockpile",
    "SymbolResolver_MannedMortar",
    "SymbolResolver_EdgeMannedMortar",
    "SymbolResolver_Farm",
    "SymbolResolver_FillWithThings",
    "SymbolResolver_Refuel",
    "SymbolResolver_ChargeBatteries",
    "SymbolResolver_PlaceChairsNearTables",
    "SymbolResolver_RandomlyPlaceMealsOnTables",
    "SymbolResolver_AddWortToFermentingBarrels",
    "SymbolResolver_Street",
    "SymbolResolver_EdgeStreet",
    "SymbolResolver_IndoorLighting",
    "SymbolResolver_OutdoorLighting",
    "SymbolResolver_InnerStockpile",
    "SymbolResolver_GenericRoom",
    "SymbolResolver_AncientTemple",
    "SymbolResolver_TerrorBuildings",
    "SymbolResolver_Message",
    "SymbolResolver_SleepingMechanoids",
    "SymbolResolver_Interior_Storage",
    "SymbolResolver_Interior_Barracks",
    "SymbolResolver_Interior_AncientTemple",
    "SymbolResolver_Interior_Brewery",
    "SymbolResolver_Interior_WorshippedTerminal",
    "SymbolResolver_Interior_BatteryRoom",
    "SymbolResolver_Interior_DiningRoom",
    "SymbolResolver_Interior_PrisonCell",
    "SymbolResolver_Ship_Core",
    "SymbolResolver_Ship_Pregen",
    "SymbolResolver_Ship_Spine",
    "SymbolResolver_Ship_Populate",
    "Rule_NamePerson",
    "Rule_Number",
    "ScenPart_ConfigPage_ConfigureStartingPawns",
    "ScenPart_PlayerPawnsArriveMethod",
    "ScenPart_ForcedHediff",
    "ScenPart_StartingThing_Defined",
    "ScenPart_StartingAnimal",
    "ScenPart_ScatterThingsNearPlayerStart",
    "ScenPart_ScatterThingsAnywhere",
    "ScenPart_GameStartDialog",
    "ScenPart_SetNeedLevel",
    "ScenPart_StartingResearch",
    "ScenPart_Naked",
    "ScenPart_NoPossessions",
    "GenStep_Ambush_Edge",
    "GenStep_Ambush_Hidden",
    "GenStep_Outpost",
    "GenStep_DownedRefugee",
    "GenStep_ItemStash",
    "GenStep_ManhunterPack",
    "GenStep_PreciousLump",
    "GenStep_PrisonerWillingToJoin",
    "GenStep_SleepingMechanoids",
    "GenStep_Turrets",
    "SketchResolver_Monument",
    "SketchResolver_Symmetry",
    "SketchResolver_AssignRandomStuff",
    "SketchResolver_FloorFill",
    "SketchResolver_AddColumns",
    "SketchResolver_AddCornerThings",
    "SketchResolver_AddThingsCentral",
    "SketchResolver_AddWallEdgeThings",
    "SketchResolver_AddInnerMonuments",
    "SketchResolver_DamageBuildings",
    "SketchResolver_MonumentRuin",
    "SoundFilterLowPass",
    "SoundParamSource_External",
    "SoundParamTarget_PropertyLowPass",
    "SoundParamTarget_Pitch",
    "SoundFilterEcho",
    "SoundParamTarget_Volume",
    "SoundParamSource_CameraAltitude",
    "SoundParamTarget_PropertyReverb",
    "SoundFilterReverb",
    "SoundParamSource_MusicPlayingFadeOut",
    "SoundParamSource_TimeOfDay",
    "SoundParamSource_OutdoorTemperature",
    "SoundParamSource_AmbientVolume",
    "SoundParamSource_AggregateSize",
    "SoundParamTarget_PropertyHighPass",
    "SoundFilterHighPass",
    "SoundParamSource_SourceAge",
    "StatPart_Quality",
    "StatPart_Stuff",
    "StatPart_BodySize",
    "StatPart_NaturalNotMissingBodyPartsCoverage",
    "StatPart_GearAndInventoryMass",
    "StatPart_UnfinishedThingIngredientsMass",
    "StatPart_AddedBodyPartsMass",
    "StatPart_WornByCorpse",
    "StatPart_IsCorpseFresh",
    "StatPart_WeaponTraitsMarketValueOffset",
    "StatPart_Biocoded",
    "StatPart_ReloadMarketValue",
    "StatPart_Genes",
    "StatPart_Health",
    "StatPart_Age",
    "StatPart_EnvironmentalEffects",
    "StatPart_Pollution",
    "StatPart_NoxiousHaze",
    "StatPart_ToxicFallout",
    "StatPart_PlantGrowthNutritionFactor",
    "StatPart_IsFlesh",
    "StatPart_MaxChanceIfRotting",
    "StatPart_Outdoors",
    "StatPart_WorkTableTemperature",
    "StatPart_RoomStat",
    "StatPart_WorkTableUnpowered",
    "StatPart_WorkTableOutdoors",
    "StatPart_Glow",
    "SkillNeed_BaseBonus",
    "StatPart_ApparelStatOffset",
    "StatPart_SightPsychicSensitivityOffset",
    "StatPart_BlindPsychicSensitivityOffset",
    "StatPart_Food",
    "StatPart_Rest",
    "StatPart_BedStat",
    "StatPart_Resting",
    "StatPart_Deathresting",
    "StatPart_NotCarefullySlaughtered",
    "StatPart_Difficulty_ButcherYield",
    "StatPart_Malnutrition",
    "StatPart_WildManOffset",
    "StatPart_LifeStageMaxFood",
    "StatPart_Pain",
    "StatPart_PlayerFactionLeader",
    "StatPart_Slave",
    "StatPart_OverseerStatOffset",
    "SkillNeed_Direct",
    "WorldObjectCompProperties_FormCaravan",
    "WorldObjectCompProperties_TimedDetectionRaids",
    "StorytellerCompProperties_SingleOnceFixed",
    "StorytellerCompProperties_RefiringUniqueQuest",
    "StorytellerCompProperties_DeepDrillInfestation",
    "StorytellerCompProperties_WorkSite",
    "StorytellerCompProperties_FactionInteraction",
    "StorytellerCompProperties_OnOffCycle",
    "StorytellerCompProperties_RandomEpicQuest",
    "StorytellerCompProperties_MechanitorComplexQuest",
    "StorytellerCompProperties_DissolutionTriggered",
    "StorytellerCompProperties_NoxiousHaze",
    "StorytellerCompProperties_ClassicIntro",
    "StorytellerCompProperties_ThreatsGenerator",
    "StorytellerCompProperties_CategoryMTB",
    "StorytellerCompProperties_ShipChunkDrop",
    "StorytellerCompProperties_Disease",
    "StorytellerCompProperties_CategoryIndividualMTBByBiome",
    "StorytellerCompProperties_RandomQuest",
    "StorytellerCompProperties_Triggered",
    "StorytellerCompProperties_RandomMain",
    "CompProperties_Glower",
    "CompProperties_Art",
    "CompProperties_MeditationFocus",
    "FocusStrengthOffset_Quality",
    "FocusStrengthOffset_BuildingDefsWithQuality",
    "CompProperties_Styleable",
    "CompProperties_WakeUpDormant",
    "CompProperties_CausesGameCondition_PsychicEmanation",
    "CompProperties_AnimalInsanityPulser",
    "CompProperties_PlantHarmRadius",
    "CompProperties_PolluteOverTime",
    "CompProperties_Shuttle",
    "CompProperties_Transporter",
    "CompProperties_AssignableToPawn",
    "CompProperties_AffectedByFacilities",
    "CompProperties_Facility",
    "CompProperties_Refuelable",
    "CompProperties_HeatPusher",
    "CompProperties_FireOverlay",
    "FocusStrengthOffset_Lit",
    "FocusStrengthOffset_BuildingDefsLit",
    "CompProperties_Flickable",
    "CompProperties_Power",
    "CompProperties_Schedule",
    "CompProperties_Explosive",
    "CompProperties_DamageOnInterval",
    "CompProperties_ThingContainer",
    "CompProperties_Breakdownable",
    "CompProperties_Useable_CallBossgroup",
    "CompProperties_UseEffect",
    "CompProperties_ProximityFuse",
    "CompProperties_TerrainPumpDry",
    "CompProperties_ScannerMineralsDeep",
    "CompProperties_LongRangeMineralScanner",
    "CompProperties_Launchable",
    "FocusStrengthOffset_GraveFull",
    "FocusStrengthOffset_GraveCorpseRelationship",
    "FocusStrengthOffset_NearbyGraves",
    "CompProperties_EmptyStateGraphic",
    "CompProperties_HitchingSpot",
    "CompProperties_AnimalPenMarker",
    "CompProperties_ThrownFleckEmitter",
    "CompProperties_CanBeDormant",
    "CompProperties_SpawnerPawn",
    "CompProperties_SelfhealHitpoints",
    "CompProperties_SpawnerHives",
    "CompProperties_Spawner",
    "CompProperties_SpawnerFilth",
    "CompProperties_Maintainable",
    "CompProperties_Lifespan",
    "CompProperties_Battery",
    "CompProperties_TemperatureRuinable",
    "CompProperties_DeepDrill",
    "CompProperties_CreatesInfestations",
    "CompProperties_Mannable",
    "CompProperties_ChangeableProjectile",
    "CompProperties_Activable",
    "CompProperties_ShipPart",
    "CompProperties_Hibernatable",
    "CompProperties_MoteEmitter",
    "CompProperties_TempControl",
    "CompProperties_Targetable",
    "CompProperties_TargetEffect_GoodwillImpact",
    "CompProperties_UseEffectArtifact",
    "CompProperties_TargetEffectResurrect",
    "CompProperties_FoodPoisonable",
    "CompProperties_Ingredients",
    "CompProperties_Hatcher",
    "ColorGenerator_Options",
    "CompProperties_Shield",
    "CompProperties_Biocodable",
    "ColorGenerator_StandardApparel",
    "CompProperties_Reloadable",
    "CompProperties_AIUSablePack",
    "CompProperties_TargetEffect_BrainDamageChance",
    "CompProperties_TargetEffect_FleckOnTarget",
    "CompProperties_TargetEffect_FleckConnecting",
    "CompProperties_OrbitalBeam",
    "CompProperties_CameraShaker",
    "CompProperties_AffectsSky",
    "CompProperties_WindSource",
    "CompProperties_EggLayer",
    "CompProperties_Milkable",
    "CompProperties_Shearable",
    "CompProperties_OverseerSubject",
    "CompProperties_MechRepairable",
    "ThingSetMaker_Sum",
    "ThingSetMaker_RandomOption",
    "ThingSetMaker_RandomGeneralGoods",
    "ThingSetMaker_Conditional_MakingFaction",
    "ThingSetMaker_Count",
    "ThingSetMaker_StackCount",
    "ThingSetMaker_MapGen_AncientPodContents",
    "ThingSetMaker_Nutrition",
    "ThingSetMaker_RefugeePod",
    "ThingSetMaker_TraderStock",
    "ThingSetMaker_ResourcePod",
    "ThingSetMaker_Meteorite",
    "ThingSetMaker_Techprints",
    "ThingSetMaker_Conditional_MinMaxTotalMarketValue",
    "ThingSetMaker_Conditional_ResearchFinished",
    "ThinkNode_ConditionalMustKeepLyingDown",
    "ThinkNode_QueuedJob",
    "JobGiver_ReactToCloseMeleeThreat",
    "ThinkNode_ConditionalHasFaction",
    "ThinkNode_ConditionalStarving",
    "ThinkNode_ConditionalExitTimedOut",
    "ThinkNode_ConditionalForcedGoto",
    "JobGiver_ForcedGoto",
    "ThinkNode_SubtreesByTag",
    "JobGiver_LayEgg",
    "ThinkNode_ConditionalOfPlayerFaction",
    "ThinkNode_ConditionalTrainableCompleted",
    "ThinkNode_ConditionalShouldFollowMaster",
    "JobGiver_AIDefendMaster",
    "JobGiver_AIFollowMaster",
    "JobGiver_WanderNearMaster",
    "JobGiver_RescueNearby",
    "JobGiver_PatientGoToBed",
    "JobGiver_SeekAllowedArea",
    "JobGiver_EatRandom",
    "ThinkNode_ChancePerHour_Mate",
    "JobGiver_Mate",
    "ThinkNode_ChancePerHour_Nuzzle",
    "JobGiver_Nuzzle",
    "ThinkNode_ChancePerDay_Roam",
    "JobGiver_StartRoaming",
    "ThinkNode_ConditionalRequireCapacities",
    "JobGiver_Haul",
    "ThinkNode_ConditionalAnyEnemyInHostileMap",
    "ThinkNode_ConditionalRoamer",
    "JobGiver_WanderInRoofedCellsInPen",
    "JobGiver_WanderInPen",
    "JobGiver_WanderColony",
    "ThinkNode_ConditionalNonPlayerNonHostileFaction",
    "ThinkNode_ConditionalHerdAnimal",
    "JobGiver_WanderHerd",
    "JobGiver_IdleError",
    "ThinkNode_ConditionalCanDoConstantThinkTreeJobNow",
    "JobGiver_AnimalFlee",
    "ThinkNode_ConditionalCanDoLordJobNow",
    "ThinkNode_ConditionalLyingDown",
    "ThinkNode_ChancePerHour_Lovin",
    "JobGiver_DoLovin",
    "ThinkNode_Priority_GetJoy",
    "JobGiver_GetJoyInBed",
    "JobGiver_MeditateInBed",
    "JobGiver_MoveToStandable",
    "JobGiver_Orders",
    "ThinkNode_ConditionalNPCCanSelfTendNow",
    "JobGiver_SelfTend",
    "ThinkNode_JoinVoluntarilyJoinableLord",
    "ThinkNode_ConditionalPrisoner",
    "ThinkNode_ConditionalInNonPlayerHomeMap",
    "JobGiver_PrisonerWaitInsteadOfEscaping",
    "JobGiver_PrisonerEscape",
    "ThinkNode_ConditionalReleased",
    "JobGiver_PrisonerGetDressed",
    "JobGiver_Autofeed",
    "JobGiver_GetHemogen",
    "JobGiver_GetDeathrest",
    "JobGiver_GetJoy",
    "JobGiver_Meditate",
    "ThinkNode_ConditionalAnyUndownedColonistSpawnedNearby",
    "JobGiver_BringBabyToSafety",
    "JobGiver_DropUnusedInventory",
    "JobGiver_PickupDroppedWeapon",
    "JobGiver_OptimizeApparel",
    "ThinkNode_ConditionalWantsLookChange",
    "JobGiver_UseStylingStationAutomatic",
    "JobGiver_DyeHair",
    "JobGiver_TakeForInventoryStock",
    "ThinkNode_ConditionalNeedPercentageAbove",
    "JobGiver_PackFood",
    "ThinkNode_TraitBehaviors",
    "ThinkNode_ConditionalPawnKind",
    "JobGiver_IdleJoy",
    "ThinkNode_ConditionalGuest",
    "ThinkNode_ConditionalNonPlayerNonHostileFactionOrFactionless",
    "JobGiver_FleePotentialExplosion",
    "JobGiver_ConfigurableHostilityResponse",
    "ThinkNode_ConditionalLowEnergy",
    "JobGiver_SelfShutdown",
    "ThinkNode_ConditionalMentalState",
    "JobGiver_Berserk",
    "ThinkNode_ConditionalPlayerControlledMech",
    "ThinkNode_ConditionalNotFormingCaravan",
    "ThinkNode_ConditionalRecharging",
    "JobGiver_GetEnergy_Charger",
    "ThinkNode_ConditionalWorkMode",
    "ThinkNode_ConditionalWorkMech",
    "JobGiver_GetEnergy_SelfShutdown",
    "JobGiver_ExitMapFollowOverseer",
    "JobGiver_AIDefendOverseer",
    "JobGiver_AIFollowOverseer",
    "JobGiver_AIWaitWithOverseer",
    "JobGiver_WanderOverseer",
    "ThinkNode_ConditionalHasLord",
    "ThinkNode_Duty",
    "ThinkNode_ConditionalHasVoluntarilyJoinableLord",
    "ThinkNode_ConditionalHasFallbackLocation",
    "JobGiver_WanderNearFallbackLocation",
    "ThinkNode_DutyConstant",
    "JobGiver_TakeDrugsForDrugPolicy",
    "JobGiver_GetAgeReversal",
    "JobGiver_MoveDrugsToInventory",
    "JobGiver_GetNeuralSupercharge",
    "ThinkNode_Priority_Learn",
    "JobGiver_Learn",
    "JobGiver_Reload",
    "ThinkNode_ConditionalWildManNeedsToReachOutside",
    "JobGiver_ReachOutside",
    "JobGiver_DropRandomGearOrApparel",
    "JobGiver_IdleForever",
    "ThinkNode_ConditionalBurning",
    "ThinkNode_ConditionalIntelligence",
    "JobGiver_JumpInWater",
    "JobGiver_ExtinguishSelf",
    "JobGiver_RunRandom",
    "ThinkNode_ConditionalCannotReachMapEdge",
    "JobGiver_SocialFighting",
    "JobGiver_WanderOwnRoom",
    "ThinkNode_ConditionalMentalStates",
    "ThinkNode_ConditionalExhausted",
    "JobGiver_BingeDrug",
    "JobGiver_BingeFood",
    "ThinkNode_ConditionalMentalStateClass",
    "JobGiver_Manhunter",
    "JobGiver_ExitMapPanic",
    "JobGiver_FleeFire",
    "ThinkNode_ConditionalRoped",
    "JobGiver_FollowRoper",
    "JobGiver_WanderRoped",
    "JobGiver_WanderNearRoamingExit",
    "JobGiver_FireStartingSpree",
    "JobGiver_InsultingSpree",
    "JobGiver_Tantrum",
    "JobGiver_HaulCorpseToPublicPlace",
    "JobGiver_InducePrisonerToEscape",
    "JobGiver_SlaughterRandomAnimal",
    "JobGiver_MurderousRage",
    "JobGiver_InduceSlaveToRebel",
    "ThinkNode_ConditionalAnimalWrongSeason",
    "ThinkNode_ConditionalDangerousTemperature",
    "ThinkNode_ConditionalOutdoorTemperature",
    "ThinkNode_ConditionalCanReachMapEdge",
    "ThinkNode_ConditionalPlayerControlledColonist",
    "ThinkNode_ConditionalOfPlayerFactionOrPlayerGuestOrPlayerPrisoner",
    "ThinkNode_ConditionalAnyAutoJoinableCaravan",
    "ThinkNode_ConditionalAnyColonistTryingToExitMap",
    "JobGiver_WanderMapEdge",
    "ThinkNode_ConditionalSpawned",
    "ThinkNode_ConditionalSpawnedOrAnyParentSpawned",
    "JobGiver_Carried",
    "JobGiver_IdleWhileDespawned",
    "StockGenerator_SingleDef",
    "StockGenerator_Category",
    "StockGenerator_MultiDef",
    "StockGenerator_Techprints",
    "StockGenerator_MarketValue",
    "StockGenerator_Tag",
    "StockGenerator_Slaves",
    "StockGenerator_Animals",
    "StockGenerator_BuyExpensiveSimple",
    "StockGenerator_BuyTradeTag",
    "StockGenerator_ReinforcedBarrels",
    "WorldGenStep_Terrain",
    "WorldGenStep_Components",
    "WorldGenStep_Lakes",
    "WorldGenStep_Rivers",
    "WorldGenStep_AncientSites",
    "WorldGenStep_AncientRoads",
    "WorldGenStep_Factions",
    "WorldGenStep_Roads",
    "WorldGenStep_Features",
    "WorldObjectCompProperties_Abandon",
    "WorldObjectCompProperties_TradeRequest",
    "WorldObjectCompProperties_EnterCooldown",
    "WorldObjectCompProperties_EscapeShip",
    "WorldObjectCompProperties_Timeout",
    "WorldObjectCompProperties_DefeatAllEnemiesQuest",
    "WorldObjectCompProperties_ItemStashContents",
    "WorldObjectCompProperties_DownedRefugee",
    "WorldObjectCompProperties_PrisonerWillingToJoin",
    "WorldObjectCompProperties_TimedMakeFactionHostile",
    "WorldObjectCompProperties_DebugArena",
  ],
  capacity: [
    "Talking",
    "Manipulation",
    "Consciousness",
    "Moving",
    "Sight",
    "BloodPumping",
    "BloodFiltration",
    "Metabolism",
    "Breathing",
    "Eating",
    "Hearing",
  ],
  defName: [
    "SewerKid57",
    "NavyScientist52",
    "GlitterworldEmpath26",
    "GlitterworldSurgeon15",
    "Novelist7",
    "CharityWorker36",
    "GlitterworldOfficer60",
    "BiosphereManager95",
    "VRDesigner87",
    "Architect28",
    "Sculptor63",
    "MedievalFarmOaf58",
    "MedievalLord57",
    "MedievalMinstrel95",
    "Taster16",
    "Blacksmith72",
    "MessageCarrier77",
    "MedievalDoctor40",
    "Herbalist54",
    "MedievalSailor97",
    "MedievalSlave49",
    "MedievalLordling19",
    "ConventChild16",
    "Policeman45",
    "Chef52",
    "Housemate8",
    "Inventor6",
    "Teacher20",
    "CivilServant2",
    "Bartender62",
    "ConceptualArtist39",
    "Evangelist39",
    "AsceticPriest84",
    "EscapedConvict90",
    "Nurse61",
    "HouseServant63",
    "Bodyguard58",
    "Mathematician6",
    "Paramedic45",
    "Gardener99",
    "Torturer37",
    "Defector78",
    "ConstructionEngineer32",
    "Rancher43",
    "LowWageWorker7",
    "Model99",
    "Geologist66",
    "Jailbird40",
    "Actor72",
    "Veterinarian99",
    "ExplosivesExpert26",
    "Counselor26",
    "Recruiter14",
    "Drifter67",
    "MachineCollector55",
    "ConArtist80",
    "CaveExplorer45",
    "QuarryWorker29",
    "ContractMiner86",
    "Logger95",
    "Ranger96",
    "Forester96",
    "FurnitureBuilder83",
    "Hunter89",
    "Slaughterer58",
    "AnimalFarmer21",
    "CropFarmer17",
    "CorporateManager76",
    "LivestockFarmer8",
    "VatgrownSoldier8",
    "SicklyChild55",
    "FrightenedChild43",
    "ComaChild93",
    "Pyromaniac18",
    "Mute34",
    "WarRefugee51",
    "MusicalKid86",
    "ChildStar74",
    "ChildSpy47",
    "ShopKid36",
    "OrganFarm67",
    "MedicalAssistant12",
    "CultChild3",
    "StoryWriter67",
    "FactoryWorker58",
    "PsychiatricPatient94",
    "HumanComputer83",
    "Sheriff52",
    "UrbworldEntrepreneur14",
    "JoywireArtist8",
    "MafiaBoss17",
    "UrbworldDrone32",
    "UrbworldRebel56",
    "CaveworldIlluminator95",
    "ColonySettler53",
    "DeepSpaceMiner3",
    "StarshipJanitor33",
    "Castaway57",
    "Taxonomist0",
    "SpaceTactician28",
    "IndustrialOrphan13",
    "UrbworldUrchin61",
    "TestSubject15",
    "WreckageExplorer93",
    "ApocalypseSurvivor23",
    "CaveworldTender26",
    "CaveworldTunneler48",
    "Scout44",
    "ShelterChild50",
    "Hermit82",
    "SpacePirate55",
    "PitBrawler76",
    "IllegalShipwright76",
    "Gigolo30",
    "SpaceMarine16",
    "Assassin20",
    "Newborn79",
    "Child27",
    "ChildTribal",
    "ColonyChild59",
    "TribeChild19",
    "VatgrownChild11",
    "Colonist97",
    "TribeMember57",
    "Hunter74",
    "Logger16",
    "Gatherer70",
    "Digger66",
    "Weaver63",
    "Framer37",
    "StewKeeper95",
    "Tamer79",
    "Carver1",
    "Healer46",
    "HearthTender66",
    "Warrior94",
    "Archer25",
    "Brave88",
    "Scout59",
    "VengefulHunter32",
    "MuffaloShaman95",
    "LoreKeeper51",
    "Loner61",
    "Banished68",
    "Malingerer28",
    "Excavator55",
    "Digger31",
    "CaveBuilder81",
    "TreehouseBuilder86",
    "PlankCutter72",
    "Herder33",
    "Butcher40",
    "TribeChild40",
    "AbandonedChild23",
    "ReclusiveChild81",
    "Herder19",
    "Scavenger22",
    "CaveChild30",
    "SoleSurvivor21",
    "VengefulChild43",
    "FireKeeper44",
    "Hideaway7",
    "CrashBaby32",
    "BuddingArtist44",
    "Bully70",
    "Bookworm19",
    "MadScientist22",
    "CivilEngineer2",
    "ArmyCook0",
    "UrbworldPolitican92",
    "GraphicDesigner33",
    "SpaceTechnician29",
    "DoomsdayPariah18",
    "CombatEngineer30",
    "MilitaryEngineer45",
    "ColiseumFighter22",
    "FighterController67",
    "FerventResearcher72",
    "VengefulExplorer54",
    "BanishedSoldier85",
    "StalwartFarmer21",
    "SpaceResearcher25",
    "GeneticScientist66",
    "Reporter71",
    "PopIdol59",
    "UnstableButcher31",
    "Archaeologist85",
    "PirateKing69",
    "MilitaryInventor35",
    "EngineeredPilot75",
    "BanditLeader74",
    "Gigolo68",
    "ColonialGovernor78",
    "MercenaryChef44",
    "CargoPilot58",
    "SpaceHumanitarian9",
    "ExecutiveOfficer5",
    "RugbyPlayer71",
    "StateEngineer60",
    "CombatNegotiator31",
    "SpaceStationCook63",
    "SpaceHunter79",
    "PoliticalAssassin46",
    "AIResearcher94",
    "ArmyScientist35",
    "FelineScientist76",
    "SpaceMarine51",
    "Mercenary55",
    "Microbiologist12",
    "AceFighterPilot54",
    "Brigand68",
    "Assassin7",
    "BusinessGangster58",
    "ParamilitaryAgent11",
    "Storyteller63",
    "InformationBroker77",
    "VersatileWorker13",
    "TestSubject90",
    "AerospaceEngineer44",
    "HiredMuscle5",
    "AlcoholicTrucker93",
    "IntelligenceAgent10",
    "WarChief97",
    "InvoluntaryHermit38",
    "MedicalScientist16",
    "VoidRaider74",
    "MidworldSailor91",
    "CoreworldJeweler19",
    "MedievalKnight26",
    "StarKnight5",
    "TestSubject39",
    "GeneticEngineer89",
    "NinjaAssassin31",
    "LazyProgrammer3",
    "MindwipedAssassin50",
    "TestSubject92",
    "SpaceshipSalesman34",
    "AIProgrammer22",
    "WhiteHatHacker82",
    "VinhoKing98",
    "SlaveChemist84",
    "RocketEngineer53",
    "SpaceMarine19",
    "CombatEngineer4",
    "PlanetaryDiplomat7",
    "Guardian55",
    "RenegadeEngineer43",
    "Osteologist74",
    "Gnomebiologist96",
    "CriminalKingpin36",
    "UrbworldSexSlave25",
    "UrbworldSergeant50",
    "SystemLord77",
    "HunterOfTheKing53",
    "Castaway81",
    "EnergyResearcher89",
    "BountyHunter93",
    "Missionary99",
    "MercenaryPilot63",
    "LoneTraveler95",
    "Undertaker93",
    "Mercenary4",
    "HiredAssassin37",
    "SpaceshipChef41",
    "DreadedDude58",
    "Engineer40",
    "Minister88",
    "Pirate56",
    "BountyHunter17",
    "Spiceminer81",
    "CrimeLord10",
    "MarbleDoctor99",
    "MobHenchman53",
    "MechWarVeteran77",
    "PoisonGardener29",
    "ArtificerRampant95",
    "SystemsEngineer1",
    "NeuroScientist19",
    "PirateCaptain69",
    "HedgeFundManager54",
    "ComputerEngineer10",
    "ExpertHandyman8",
    "MedicSoldier54",
    "ExiledResearcher44",
    "Villain89",
    "SpaceNavyDoctor72",
    "GovernmentAgent61",
    "SelflessHunter61",
    "AcolyteOfStars6",
    "SpaceRaider71",
    "Spy58",
    "WanderingHealer52",
    "CosmeticReject64",
    "RaiderKing38",
    "FrontierMarshal27",
    "ReligiousHierarch16",
    "AnarchistRebel77",
    "CriminalSurgeon99",
    "SanitationCaptain29",
    "OverwatchSniper42",
    "Sightseer70",
    "GameTester77",
    "WanderingCrafter42",
    "MutinousCaptain52",
    "IntimateAssassin35",
    "CorpResearcher93",
    "SoleSurvivor85",
    "AWOLSoldier49",
    "Explorer49",
    "StarshipDoctor37",
    "BountyHunter41",
    "FallenOfficial12",
    "OrbitalReservist22",
    "ShamanOfShadows47",
    "StationSecurity38",
    "SpaceTrafficker68",
    "PopIdolPirate39",
    "Roboticist1",
    "Chemist78",
    "StalwartFarmer90",
    "UrbworldPimp93",
    "ParticlePhysicist44",
    "DefenseLawyer71",
    "Ranger6",
    "ClanChief14",
    "FactionLeader74",
    "ProstheticSurgeon0",
    "CorpResearcher71",
    "SpaceMarine9",
    "TechnologyDoctor35",
    "PirateTrooper73",
    "CombatMedic82",
    "HiredGun70",
    "StilettoAssassin34",
    "Hunter73",
    "BattlefieldTech52",
    "MasterTrader65",
    "ExoticChef96",
    "MadScientist2",
    "Warrior73",
    "SpaceExplorer53",
    "Smuggler23",
    "DestroyerGeneral26",
    "SerialMurderer47",
    "MadScientist31",
    "SoftwareDeveloper84",
    "HumanTrafficker35",
    "MentalPatient69",
    "SpaceMarine94",
    "EnvoyOfTheStars19",
    "Blacksmith7",
    "CloneFarmer58",
    "GangBoss49",
    "LostMarine81",
    "Healer35",
    "ToasterRepairman22",
    "ArchotechSpy75",
    "BehaviourResearch74",
    "PoliticalActivist20",
    "Flaneur30",
    "ChiefEngineer62",
    "ReptileResearcher37",
    "BlacksmithShooter21",
    "AddictionCounsel60",
    "BloodgameSurvivor6",
    "VoidspaceRaider94",
    "Vagabond73",
    "MachineFixer31",
    "SpaceMerchant97",
    "BeastSlayer67",
    "DrugLieutenant98",
    "UrbworldEnforcer11",
    "ToolMechanic77",
    "CraftShaper37",
    "MercenaryLeader28",
    "SpecialForces13",
    "DromedaryKnight37",
    "BattleMechanic27",
    "DischargedSoldier53",
    "Chemist73",
    "SuperSoldier95",
    "CorporateBuilder58",
    "MechanicsEngineer64",
    "PlagueDoctor31",
    "NetworkEngineer34",
    "ImperialGeneral27",
    "Caravaneer53",
    "MilitaryGunsmith27",
    "Aromatherapist80",
    "RebelFighter39",
    "Roboticist41",
    "PrivateDetective66",
    "SpaceBartender0",
    "CosmeticSurgeon36",
    "UprightDiplomat49",
    "VideoProducer83",
    "BushSniper94",
    "PirateSympathizer24",
    "UnethicalDoctor29",
    "ShockTrooper15",
    "CombatMedtech59",
    "WildlifeRanger99",
    "TreasureHunter82",
    "StarfighterPilot79",
    "GangSoldier39",
    "SpaceMarine5",
    "Adventurer19",
    "BloodyWanderer28",
    "PirateDoctor0",
    "BloodyDentist9",
    "MasterChef48",
    "Mercenary20",
    "ExplorerWriter10",
    "MilitiaSoldier79",
    "WarshipCaptain67",
    "ForestProwler15",
    "RunawayDancer35",
    "ProstituteIdol28",
    "SicklyLawyer49",
    "Tinkerer86",
    "RocketPioneer19",
    "TheaterTechnician80",
    "ArmySergeant16",
    "StellarPirate10",
    "LostSoldier13",
    "LanguageAnalyst27",
    "PrisonerOfWar2",
    "MadAccountant61",
    "Politician57",
    "Philosopher97",
    "AdventurousWeirdo55",
    "CasketBuilder52",
    "MilitaryOfficer17",
    "FearfulChef49",
    "MuffaloResearcher67",
    "ArtifactHunter48",
    "Herpetologist3",
    "Fugitive4",
    "GunDealer14",
    "ColonyEngineer7",
    "DeepSpaceSurveyor1",
    "CostumeCrafter41",
    "Gunfighter51",
    "RenownedProfessor51",
    "NavyTechOfficer0",
    "KingOfPirates25",
    "SpaceNavyTech37",
    "Defector95",
    "SpaceMarineMedic10",
    "Technician9",
    "MercenaryLord13",
    "ShadowMarine63",
    "Warlordess56",
    "ComputerEngineer36",
    "CommonerLord45",
    "TournamentFighter28",
    "HypnocultLeader61",
    "ArtStudent79",
    "VengefulNomad67",
    "ModDesigner85",
    "MercenaryCaptain98",
    "Restorer70",
    "RimworldExile32",
    "Streamer52",
    "CivilServant25",
    "TravelingBard93",
    "GameDeveloper95",
    "FallenProdigy40",
    "FarmKid60",
    "FarmerBoy88",
    "UrbworldCriminal6",
    "OptimisticChild30",
    "UrbworldHooligan12",
    "IndworldUrchin73",
    "ChildScientist30",
    "MechanoidNerd10",
    "ColiseumCleaner54",
    "OfficerCadet25",
    "ReclusiveProdigy96",
    "WarRefugee96",
    "WorkCampSlave37",
    "DisciplinedFarmer28",
    "VoyagerChild94",
    "VatgrownMedic53",
    "CoreDilettante33",
    "AspiringPopIdol28",
    "FarmBoy64",
    "LogicalChild2",
    "StationWhelp94",
    "ConstructionGrunt84",
    "StudentEngineer34",
    "StreetKid19",
    "PizzaLover94",
    "FrontierMarshal54",
    "MercenaryRecruit36",
    "AbandonedChild30",
    "TradersChild62",
    "CorpStudent95",
    "VRAddict29",
    "Nerd92",
    "RebelSlave14",
    "MedievalPlower14",
    "SonOfAHuntress75",
    "StudentSocialite89",
    "AwkwardNerd48",
    "MidworldGeek18",
    "CatHerder4",
    "Scavenger62",
    "VatgrownAssassin20",
    "UrbworldChild56",
    "StarforceCadet79",
    "Stableboy49",
    "ArtfulDodger78",
    "Pickpocket82",
    "DisasterSurvivor65",
    "HistoryStudent12",
    "NobleWard61",
    "FeralChild96",
    "SpoiledChild33",
    "AmateurEngineer3",
    "StreetUrchin45",
    "WildChild5",
    "HackerProdigy84",
    "MadScientist47",
    "YouthDelinquent30",
    "HillbillyProdigy60",
    "UrbworldUrchin90",
    "MidworldSketcher71",
    "CoreworldStudent50",
    "MedievalSquire5",
    "StarSquire9",
    "DrugMule80",
    "ArtisanFarmer23",
    "Pampered87",
    "MilitaryChild82",
    "GangMember83",
    "TestSubject82",
    "FireScarredChild1",
    "TechEnthusiast28",
    "DiplomatsChild97",
    "Winerunner8",
    "StreetChild4",
    "SlaveFarmer99",
    "MedievalSlave50",
    "FoundryApprentice76",
    "PrivilegedProdigy70",
    "PrivilegedChild86",
    "ChildProdigy76",
    "BoneCollector14",
    "GNomeSculptor34",
    "CircusPerformer37",
    "VatgrownSlavegirl8",
    "GunKid30",
    "FeudalLordling56",
    "FeudalFarmBoy0",
    "SpaceFanboy22",
    "GlitterworldNerd20",
    "WarChild24",
    "UpperUrbworlder12",
    "IdealisticCadet64",
    "ChildOfGlass61",
    "AmateurBotanist79",
    "ChildSlave58",
    "AdventuringChild30",
    "VideoGamer55",
    "DreadedBaby56",
    "Tinkerer79",
    "DisplacedNoble67",
    "ChessMaster67",
    "Orphan15",
    "Straggler71",
    "BrutalThief59",
    "BoySoldier14",
    "ApocalypseChild23",
    "OrphanOfWar60",
    "ImperialStudent49",
    "PowerMadScholar30",
    "TechHead8",
    "Orphan25",
    "Abductee43",
    "BlackjackPlayer76",
    "AcademyStudent58",
    "AspiringEngineer58",
    "MedicalStudent96",
    "HighBaroness37",
    "WorldSlider42",
    "MedicalStudent38",
    "AspergersRebel13",
    "ShootingComa59",
    "PsychologyStudent15",
    "SpaceSmuggler6",
    "Abductee7",
    "BlessedChild46",
    "GlitterworldKid85",
    "FeralChild85",
    "Scout6",
    "TraineeAlchemist64",
    "MilitaryCadet16",
    "Pickpocket61",
    "SpaceCadet77",
    "Naturalist14",
    "Drudge9",
    "BunkerKid41",
    "ChildOfDrifters18",
    "TribalThunderer45",
    "Gymnast48",
    "CorpBredStudent54",
    "Colonist22",
    "MilitaryTrainee20",
    "Bookworm3",
    "ColonyKid47",
    "CaravanChild53",
    "ReEducatedYouth23",
    "FarmMechanic1",
    "AccursedChild88",
    "AmateurAstronomer77",
    "FarmHand2",
    "EnergeticPopIdol61",
    "IcePlanetChild95",
    "Scrounger25",
    "ToxicChild96",
    "BoyScout42",
    "ScienceProdigy65",
    "SpeederRacer71",
    "MercenaryRecruit18",
    "MarineCadet73",
    "YoungPsychologist58",
    "Tinkerer11",
    "LabGrownChild22",
    "Orphan11",
    "TechScholar75",
    "PitGladiator19",
    "FactoryDrone58",
    "RichBoy9",
    "Athlete47",
    "SoleSurvivor63",
    "MechanoidHacker93",
    "ProjectSubject99",
    "HexCellArtist91",
    "PlagueProdigy12",
    "PoorKid18",
    "Dreamer79",
    "UrbworldUrchin6",
    "MilitaryRecruit49",
    "StreetUrchin53",
    "KidScientist53",
    "HelpDeskWorker31",
    "MedievalThief74",
    "TraumatizedYouth87",
    "YouthSoldier99",
    "GalacticPage37",
    "ApprenticeSmith37",
    "CloneFarmed21",
    "GangMember16",
    "MilitantChild49",
    "Killer41",
    "ProfessionalGamer76",
    "DataDecoder39",
    "WolfPackMember26",
    "RebelStudent14",
    "Cadet96",
    "ShipTechnician0",
    "FarmersDaughter81",
    "BlacksmithsSon73",
    "JoywireAddict76",
    "ChildKnave69",
    "WastelandWanderer81",
    "SocialPariah3",
    "PyroAssistant82",
    "StreetUrchin74",
    "RitualChild20",
    "BrothelGofer84",
    "LaborCampOrphan91",
    "GameFanatic86",
    "ClassClown96",
    "CrimeBossChild39",
    "SentimentalChild55",
    "DustyFarmHand75",
    "HackerKid98",
    "VideoGamer16",
    "Student65",
    "SuperSoldier99",
    "HeadjackAddict4",
    "UrbworldArmyBrat84",
    "PlagueChild44",
    "TechnicalKid1",
    "YoungMaster23",
    "CaravanTraveler6",
    "MidworldLoner80",
    "JungleKid35",
    "FarmersSon20",
    "WealthyStudent59",
    "StreetPeddler66",
    "BodyguardTrainee54",
    "SpoiledChild80",
    "Philosopher82",
    "CaveChild17",
    "RangerChild57",
    "GlitterworldRoyal24",
    "PlagueSurvivor39",
    "OffworldRecruit91",
    "ProdigalStudent67",
    "AnimalCaretaker20",
    "AdventurousYouth70",
    "PilotFan16",
    "MedicalHelper27",
    "CountryChild95",
    "RebelWriter82",
    "ExiledPrince58",
    "NewAgeDuelist27",
    "SpoiledBrat59",
    "CowFarmer39",
    "DiscardedYouth93",
    "DisasterSurvivor29",
    "RebelChild8",
    "MidworldCadet83",
    "ForestChild83",
    "VatgrownScientist91",
    "MusicIdol50",
    "SicklyLiar3",
    "IceworldSurvivor75",
    "TragicLoner87",
    "SchoolyardOutcast11",
    "AntisocialChild83",
    "YoungPirate71",
    "SoldierExperiment50",
    "DedicatedStudent12",
    "Infantry99",
    "AngryStudent88",
    "TransferStudent10",
    "DesertRat47",
    "ArtisticWeirdo56",
    "ApprenticeOracle83",
    "JunkyardMechanic51",
    "Empath47",
    "AnimalLabTech39",
    "ShipChild46",
    "PetKeeper7",
    "ChildResearcher32",
    "VidtubeStar98",
    "CorporateSlave22",
    "AspiringPhysicist47",
    "QuietNerd97",
    "SpacerOrphan77",
    "SmallTownKid41",
    "SteamworldTinker38",
    "AbandonedOrphan61",
    "SpaceNerd97",
    "ChildSpy84",
    "TurtleHerder41",
    "ComputerGeek62",
    "Freethinker38",
    "NavyPathfinder53",
    "HunterScavenger64",
    "Computer80",
    "CommonerHeir5",
    "RebelliousStudent74",
    "SpaceyachtPilot89",
    "ShunnedGirl30",
    "MedievalNomad12",
    "ArtSlave57",
    "OrphanedAcrobat84",
    "CuriousChild33",
    "StewardsAssisant28",
    "MonkeyChild67",
    "OldMoneyHeir46",
    "MusicalKid14",
    "Punk30",
    "TynanCustomChildhood",
    "TynanCustomAdulthood",
    "NoBeard",
    "Anchor",
    "Bushy",
    "Norse",
    "Boxed",
    "Circle",
    "BeardCurly",
    "Curtain",
    "BushyStyled",
    "Ducktail",
    "StacheAndChops",
    "Fork",
    "French",
    "Full",
    "Goatee",
    "Classy",
    "Braided",
    "Lincoln",
    "LongDutch",
    "Machete",
    "Moustache",
    "MuttonChops",
    "TriBraid",
    "OldDutch",
    "Seer",
    "SideWhiskers",
    "SoulPatch",
    "Stubble",
    "Urist",
    "VanDyke",
    "Wizard",
    "BorealForest",
    "Tundra",
    "ColdBog",
    "IceSheet",
    "SeaIce",
    "TemperateForest",
    "TemperateSwamp",
    "TropicalRainforest",
    "TropicalSwamp",
    "AridShrubland",
    "Desert",
    "ExtremeDesert",
    "Ocean",
    "Lake",
    "Bird",
    "BeetleLike",
    "BeetleLikeWithClaw",
    "QuadrupedAnimalWithPaws",
    "QuadrupedAnimalWithPawsAndTail",
    "QuadrupedAnimalWithHooves",
    "QuadrupedAnimalWithHoovesAndHump",
    "QuadrupedAnimalWithHoovesAndTusks",
    "QuadrupedAnimalWithHoovesTusksAndTrunk",
    "QuadrupedAnimalWithHoovesAndHorn",
    "QuadrupedAnimalWithClawsTailAndJowl",
    "TurtleLike",
    "Monkey",
    "Snake",
    "Human",
    "MechanicalCentipede",
    "Lancer",
    "Pikeman",
    "Scyther",
    "MechanicalTermite",
    "MechanicalTermiteBodyFirstRing",
    "MechanicalTermiteBodySecondRing",
    "MechanicalTermiteBodyThirdRing",
    "Torso",
    "UpperHead",
    "FullHead",
    "Eyes",
    "Teeth",
    "Mouth",
    "Neck",
    "Arms",
    "Shoulders",
    "Hands",
    "LeftHand",
    "RightHand",
    "MiddleFingers",
    "Waist",
    "Legs",
    "Feet",
    "FrontLeftPaw",
    "FrontRightPaw",
    "HeadAttackTool",
    "FrontLeftLeg",
    "FrontRightLeg",
    "FrontLeftClaws",
    "FrontRightClaws",
    "LeftBlade",
    "RightBlade",
    "TuskAttackTool",
    "HornAttackTool",
    "HeadClaw",
    "TurtleBeakAttackTool",
    "Beak",
    "Body",
    "InsectHead",
    "SnakeBody",
    "SnakeHead",
    "SnakeMouth",
    "InsectHeart",
    "InsectNostril",
    "InsectMouth",
    "AnimalJaw",
    "Jowl",
    "Tail",
    "Antenna",
    "Pronotum",
    "Shell",
    "Elytra",
    "Tusk",
    "Trunk",
    "Horn",
    "Hump",
    "TurtleShell",
    "Plastron",
    "TurtleBeak",
    "InsectLeg",
    "Paw",
    "Hoof",
    "FrontClaw",
    "RearClaw",
    "Head",
    "Skull",
    "Brain",
    "Eye",
    "Ear",
    "Nose",
    "Jaw",
    "Ribcage",
    "Spine",
    "Leg",
    "Foot",
    "Tongue",
    "Shoulder",
    "Arm",
    "Hand",
    "Finger",
    "Toe",
    "Clavicle",
    "Sternum",
    "Humerus",
    "Radius",
    "Pelvis",
    "Femur",
    "Tibia",
    "MechanicalNeck",
    "MechanicalHead",
    "ArtificialBrain",
    "Reactor",
    "FluidReprocessor",
    "SightSensor",
    "HearingSensor",
    "SmellSensor",
    "MechanicalShoulder",
    "MechanicalArm",
    "MechanicalHand",
    "MechanicalFinger",
    "MechanicalLeg",
    "MechanicalFoot",
    "MechanicalThorax",
    "MechanicalThoraxCanManipulate",
    "Blade",
    "MechanicalCentipedeBodyFirstRing",
    "MechanicalCentipedeBodySecondRing",
    "MechanicalCentipedeBodyThirdRing",
    "MechanicalCentipedeBodyFourthRing",
    "MechanicalCentipedeBodyFifthRing",
    "MechanicalCentipedeBodySixthRing",
    "Heart",
    "Lung",
    "Kidney",
    "Liver",
    "Stomach",
    "Structure_Red",
    "Structure_RedSubtle",
    "Structure_Auburn",
    "Structure_Scarlet",
    "Structure_Burgundy",
    "Structure_Plum",
    "Structure_DarkMauve",
    "Structure_Magenta",
    "Structure_MagentaSubtle",
    "Structure_Purple",
    "Structure_PurpleSubtle",
    "Structure_PurpleMuted",
    "Structure_PurpleDeep",
    "Structure_Grape",
    "Structure_Indigo",
    "Structure_IndigoLight",
    "Structure_Blue",
    "Structure_BlueSubtle",
    "Structure_BlueIce",
    "Structure_Marine",
    "Structure_BlueSky",
    "Structure_Dusk",
    "Structure_Moss",
    "Structure_MossBright",
    "Structure_Teal",
    "Structure_Green",
    "Structure_Sage",
    "Structure_GreenFaded",
    "Structure_GreenForest",
    "Structure_GreenPine",
    "Structure_GreenSwamp",
    "Structure_GreenMuddy",
    "Structure_GreenMarsh",
    "Structure_Viridian",
    "Structure_ViridianSubtle",
    "Structure_Olive",
    "Structure_OliveDark",
    "Structure_Mustard",
    "Structure_LimePale",
    "Structure_BrownFaded",
    "Structure_BrownSubtle",
    "Structure_BrownLight",
    "Structure_BrownDark",
    "Structure_BrownDirt",
    "Structure_UmberBurnt",
    "Structure_BrownWood",
    "Structure_Orange",
    "Structure_RedPastel",
    "Structure_Pink",
    "Structure_BluePastel",
    "Structure_GreenPastel",
    "Structure_YellowPastel",
    "Structure_OrangePastel",
    "Structure_White",
    "Structure_Cream",
    "Structure_GrayLight",
    "Structure_Limestone",
    "Structure_Marble",
    "Structure_Sandstone",
    "Structure_Granite",
    "Structure_GreyDark",
    "Structure_Slate",
    "Structure_Black",
    "SleepingMechanoids",
    "MechDrop",
    "Astropolitan",
    "Corunan",
    "Rustican",
    "Kriminul",
    "Flame",
    "Burn",
    "Frostbite",
    "TornadoScratch",
    "SurgicalCut",
    "ExecutionCut",
    "Cut",
    "Crush",
    "Blunt",
    "Poke",
    "Demolish",
    "Stab",
    "Scratch",
    "ScratchToxic",
    "Bite",
    "ToxicBite",
    "Deterioration",
    "Mining",
    "Rotting",
    "Extinguish",
    "Bomb",
    "BombSuper",
    "Smoke",
    "Thump",
    "RangedStab",
    "Bullet",
    "Arrow",
    "ArrowHighVelocity",
    "Stun",
    "EMP",
    "Actions",
    "Settings",
    "Output",
    "SocialDrugs",
    "NoDrugs",
    "Unrestricted",
    "OneDrinkPerDay",
    "Beer",
    "Wort",
    "Make_Wort",
    "AlcoholHigh",
    "Hangover",
    "AlcoholTolerance",
    "AlcoholAddiction",
    "Inebriated",
    "Hungover",
    "AlcoholWithdrawal",
    "Alcohol",
    "Chemical_Alcohol",
    "Ambrosia",
    "AmbrosiaHigh",
    "AmbrosiaTolerance",
    "AmbrosiaAddiction",
    "AmbrosiaWithdrawal",
    "Chemical_Ambrosia",
    "GoJuice",
    "GoJuiceHigh",
    "GoJuiceAddiction",
    "GoJuiceTolerance",
    "GoJuiceWithdrawal",
    "Chemical_GoJuice",
    "Luciferium",
    "LuciferiumHigh",
    "LuciferiumAddiction",
    "Chemical_Luciferium",
    "Penoxycyline",
    "PenoxycylineHigh",
    "Flake",
    "FlakeHigh",
    "PsychiteTea",
    "PsychiteTeaHigh",
    "Yayo",
    "YayoHigh",
    "PsychiteTolerance",
    "PsychiteAddiction",
    "PsychiteWithdrawal",
    "Psychite",
    "Chemical_Psychite",
    "SmokeleafJoint",
    "SmokeleafHigh",
    "SmokeleafTolerance",
    "SmokeleafAddiction",
    "SmokeleafWithdrawal",
    "Smokeleaf",
    "Chemical_Smokeleaf",
    "WakeUp",
    "WakeUpHigh",
    "WakeUpAddiction",
    "WakeUpTolerance",
    "Chemical_WakeUp",
    "WakeUpWithdrawal",
    "PrepareCaravan_GatherItems",
    "PrepareCaravan_Wait",
    "PrepareCaravan_GatherAnimals",
    "PrepareCaravan_CollectAnimals",
    "PrepareCaravan_GatherDownedPawns",
    "PrepareCaravan_Pause",
    "ReturnedCaravan_PenAnimals",
    "MarryPawn",
    "BestowingCeremony_MoveInPlace",
    "Spectate",
    "SpectateCircle",
    "SpectateSocial",
    "Party",
    "GiveSpeech",
    "TravelOrLeave",
    "TravelOrWait",
    "Idle",
    "IdleNoInteraction",
    "Defend",
    "Follow",
    "Build",
    "AssaultColony",
    "Sapper",
    "Escort",
    "HuntEnemiesIndividual",
    "Kidnap",
    "TakeWoundedGuest",
    "Steal",
    "PrisonerEscape",
    "PrisonerEscapeSapper",
    "PrisonerAssaultColony",
    "DefendAndExpandHive",
    "DefendHiveAggressively",
    "ExitMapRandom",
    "ExitMapBest",
    "ExitMapBestAndDefendSelf",
    "ExitMapNearDutyTarget",
    "LoadAndEnterTransporters",
    "EnterTransporter",
    "EnterTransporterAndDefendSelf",
    "ManClosestTurret",
    "SleepForever",
    "Breaching",
    "AssaultThing",
    "WanderClose",
    "LayDownAwake",
    "DefendBase",
    "ArriveToCell",
    "GoToBed",
    "ConstructMetal",
    "ConstructWood",
    "ConstructDirt",
    "RoofWork",
    "Mote_SparkThrown",
    "Deflect_Metal",
    "Deflect_Metal_Bullet",
    "Deflect_General",
    "Deflect_General_Bullet",
    "Damage_HitFlesh",
    "Damage_HitInsect",
    "Damage_HitMechanoid",
    "DamageDiminished_Metal",
    "DamageDiminished_General",
    "Bridge_Collapse",
    "Bridge_CollapseWater",
    "Interceptor_BlockedProjectile",
    "Impact_Toxic",
    "Mote_SparkThrownFast",
    "Mote_SparkThrownFastBlue",
    "Mote_LongSparkThrown",
    "Mote_Splash",
    "Mote_ToxicDamage",
    "EatVegetarian",
    "EatMeat",
    "Smoke_Joint",
    "Smoke_Flake",
    "Mote_SmokeJoint",
    "Mote_SmokeFlake",
    "Vomit",
    "ExtinguisherExplosion",
    "ExtinguisherPuffSmall",
    "PlayPoker",
    "GiantExplosion",
    "DisabledByEMP",
    "WatchingTelevision",
    "RaisedRock_Collapse",
    "BulletShieldGenerator_Reactivate",
    "AcidSpray_Directional",
    "FoamSpray_Directional",
    "Vaporize_Heatwave",
    "Shield_Break",
    "Power_Cell_Burning",
    "Power_Cell_Sparks",
    "Mote_ExtinguisherPuff",
    "Drunk",
    "Berserk",
    "ButcherFlesh",
    "ButcherMechanoid",
    "Surgery",
    "CutStone",
    "Tailor",
    "Smith",
    "Sculpt",
    "MakeWoodPlanks_Hand",
    "MakeWoodPlanks_Electric",
    "Smelt",
    "Cook",
    "Cremate",
    "BurnDrug",
    "ProgressBar",
    "ProgressBarAlwaysVisible",
    "Research",
    "Repair",
    "Mine",
    "Drill",
    "Harvest_Plant",
    "Harvest_Tree",
    "Sow",
    "Harvest_MetaOnly",
    "Clean",
    "Paint",
    "ClearSnow",
    "BuryPawn",
    "Interact_Drill",
    "Interact_Paint",
    "Interact_RemovePaint",
    "FeedbackGoto",
    "FeedbackShoot",
    "FeedbackMelee",
    "FeedbackEquip",
    "FeedbackExtinguish",
    "Meditating",
    "HealingCross",
    "SleepZ",
    "SleepZ_Small",
    "SleepZ_Tiny",
    "IncapIcon",
    "Footprint",
    "Horseshoe",
    "Stone",
    "SpeechLines",
    "ExplosionFlash",
    "AirPuff",
    "DustPuff",
    "DustPuffThick",
    "MetaPuff",
    "TornadoDustPuff",
    "SmokeGrowing",
    "DustSlow",
    "FireGlow",
    "MicroSparks",
    "MicroSparksFast",
    "HeatGlow",
    "HeatGlow_Intense",
    "LightningGlow",
    "ShotFlash",
    "SparkFlash",
    "YellowSparkFlash",
    "BloodSplash",
    "BloodSplashLong",
    "BodyImpact",
    "GrowingFlash",
    "GrowingFlashSmall",
    "PlainFlash",
    "ActivatorCountdownFlash",
    "PsycastAreaEffect",
    "PsycastPsychicLine",
    "PsycastPsychicEffect",
    "ShotHit_Dirt",
    "SandInEyes",
    "WoodBit",
    "Music",
    "HarvestWood",
    "DirtBits",
    "SnowBits",
    "ResearchPage",
    "BlastDry",
    "BlastEMP",
    "LineEMP",
    "BlastFlame",
    "ElectricalSpark",
    "BlastExtinguisher",
    "AcidSpray",
    "FoamSpray",
    "FlashRed",
    "JumpWarmupSmoke",
    "JumpSmoke",
    "Fleck_HeatDiffusion",
    "Fleck_HeatWaveDistortion",
    "Fleck_RadialSparks",
    "Fleck_VaporizeGlow",
    "Fleck_VaporizeRays_A",
    "Fleck_VaporizeRays_B",
    "Fleck_VaporizeCenterFlash",
    "FlashPowerCell",
    "FlashPowerCellIntense",
    "WaterSplash",
    "Mote_Clean",
    "Mote_Paint",
    "Mote_Sow",
    "Mote_Harvest",
    "Mote_ClearSnow",
    "Mote_Cards",
    "Mote_Stun",
    "Mote_ColonistFleeing",
    "Mote_ColonistAttacking",
    "Mote_DrunkBubble",
    "Mote_BerserkBit",
    "Mote_Speech",
    "Mote_Thought",
    "Mote_ThoughtGood",
    "Mote_ThoughtBad",
    "Mote_Text",
    "Mote_ProgressBar",
    "Mote_ProgressBarAlwaysVisible",
    "Mote_TempRoof",
    "Mote_Danger",
    "Mote_ActivatorCountdownGlow",
    "Mote_ActivatorProximityGlow",
    "Mote_Leaf",
    "Mote_FoodBitVegetarian",
    "Mote_FoodBitMeat",
    "Mote_StoneBit",
    "Mote_CookBit",
    "Mote_VomitBit",
    "Mote_Bombardment",
    "Mote_PowerBeam",
    "Mote_GiantExplosion",
    "Mote_GiantExplosionInner",
    "Mote_PsychicConditionCauserEffect",
    "Mote_PsychicEmanatorEffect",
    "Mote_ForceJob",
    "Mote_ForceJobMaintained",
    "FlashShieldBreak",
    "CracksShieldBreak",
    "Mote_SparkThrownFastBright",
    "Mote_ResurrectAbility",
    "Mote_ResurrectFlash",
    "Mote_PowerCellBurning",
    "Ancients",
    "AncientsHostile",
    "Mechanoid",
    "Insect",
    "MechanoidRaidLootMaker",
    "OutlanderCivil",
    "OutlanderRough",
    "TribeCivil",
    "TribeRough",
    "TribeSavage",
    "Pirate",
    "OutlanderRaidLootMaker",
    "TribeRaidLootMaker",
    "PirateRaidLootMaker",
    "PlayerColony",
    "PlayerTribe",
    "SolarFlare",
    "Eclipse",
    "PsychicDrone",
    "PsychicSoothe",
    "ToxicFallout",
    "VolcanicWinter",
    "HeatWave",
    "ColdSnap",
    "Flashstorm",
    "ClimateCycle",
    "Planetkiller",
    "Aurora",
    "MarriageCeremony",
    "Cosmetic",
    "Cosmetic_Skin",
    "Cosmetic_Hair",
    "Miscellaneous",
    "Hair_SnowWhite",
    "Hair_InkBlack",
    "Hair_Gray",
    "Hair_DarkBlack",
    "Hair_MidBlack",
    "Hair_DarkReddish",
    "Hair_DarkSaturatedReddish",
    "Hair_DarkBrown",
    "Hair_ReddishBrown",
    "Hair_SandyBlonde",
    "Hair_Blonde",
    "Hair_Pink",
    "Hair_LightPurple",
    "Hair_LightBlue",
    "Hair_LightTeal",
    "Hair_LightGreen",
    "Hair_LightOrange",
    "Hair_BrightRed",
    "Skin_Melanin1",
    "Skin_Melanin2",
    "Skin_Melanin3",
    "Skin_Melanin4",
    "Skin_Melanin5",
    "Skin_Melanin6",
    "Skin_Melanin7",
    "Skin_Melanin8",
    "Skin_Melanin9",
    "GaveGift",
    "Traded",
    "RequestedTrader",
    "RequestedMilitaryAid",
    "PeaceTalksDisaster",
    "PeaceTalksBackfire",
    "PeaceTalksSuccess",
    "PeaceTalksTriumph",
    "AttackedBuilding",
    "ShuttleDestroyed",
    "LaborersMissedShuttle",
    "UsedHarmfulAbility",
    "UsedForbiddenThing",
    "ReachNaturalGoodwill",
    "RitualDone",
    "DebugGoodwill",
    "UsedHarmfulItem",
    "AttackedMember",
    "MemberCrushed",
    "MemberNeutrallyDied",
    "MemberCaptured",
    "MemberKilled",
    "MemberSold",
    "MemberExitedMapHealthy",
    "PerformedHarmfulSurgery",
    "MemberStripped",
    "InnocentPrisonerDied",
    "GuiltyPrisonerDied",
    "PrisonerDied",
    "QuestGoodwillReward",
    "QuestPawnLost",
    "QuestPawnArrested",
    "ShuttleCommanderMissedShuttle",
    "ShuttleGuardsMissedShuttle",
    "MonumentConstructionExpired",
    "MonumentConstructionMapRemoved",
    "FailedToKeepLodgersHappy",
    "QuestPrisonerRecruited",
    "QuestPrisonerEnslaved",
    "MemberMissedShuttle",
    "MonumentDestroyed",
    "AcceptedDeserter",
    "SettlementProximity",
    "DestroyedEnemyBase",
    "AttackedSettlement",
    "AttackedCaravan",
    "PermanentEnemy",
    "NaturalEnemy",
    "AttackingSettlement",
    "XenogermAbsorbed",
    "Stump",
    "Male_AverageNormal",
    "Male_AveragePointy",
    "Male_AverageWide",
    "Male_NarrowNormal",
    "Male_NarrowPointy",
    "Male_NarrowWide",
    "Female_AverageNormal",
    "Female_AveragePointy",
    "Female_AverageWide",
    "Female_NarrowNormal",
    "Female_NarrowPointy",
    "Female_NarrowWide",
    "ArchotechEye",
    "ArchotechArm",
    "ArchotechLeg",
    "InstallArchotechEye",
    "InstallArchotechArm",
    "InstallArchotechLeg",
    "BionicEye",
    "BionicArm",
    "BionicLeg",
    "BionicSpine",
    "BionicHeart",
    "BionicStomach",
    "DeathAcidifier",
    "BionicEar",
    "BionicTongue",
    "InstallBionicEye",
    "InstallBionicArm",
    "InstallBionicLeg",
    "InstallBionicSpine",
    "InstallBionicHeart",
    "InstallBionicStomach",
    "InstallDeathAcidifier",
    "InstallBionicEar",
    "InstallBionicTongue",
    "AcidCloud",
    "InstallPegLeg",
    "InstallWoodenHand",
    "InstallWoodenFoot",
    "InstallDenture",
    "PegLeg",
    "WoodenHand",
    "WoodenFoot",
    "Denture",
    "InstallNaturalHeart",
    "InstallNaturalLung",
    "InstallNaturalKidney",
    "InstallNaturalLiver",
    "SimpleProstheticLeg",
    "SimpleProstheticArm",
    "SimpleProstheticHeart",
    "CochlearImplant",
    "PowerClaw",
    "Joywire",
    "Painstopper",
    "InstallSimpleProstheticLeg",
    "InstallSimpleProstheticArm",
    "InstallSimpleProstheticHeart",
    "InstallCochlearImplant",
    "InstallPowerClaw",
    "InstallJoywire",
    "InstallPainstopper",
    "RemovePainstopper",
    "DEV_Unburnable",
    "BloodLoss",
    "Anesthetic",
    "CatatonicBreakdown",
    "PsychicShock",
    "PsychicComa",
    "PsychicHangover",
    "BrainShock",
    "CryptosleepSickness",
    "FoodPoisoning",
    "ToxicBuildup",
    "Pregnant",
    "HeartAttack",
    "DrugOverdose",
    "ResurrectionSickness",
    "CoveredInFirefoam",
    "Malnutrition",
    "Heatstroke",
    "Hypothermia",
    "HypothermicSlowdown",
    "BadBack",
    "Frail",
    "Cataract",
    "Blindness",
    "HearingLoss",
    "Dementia",
    "Alzheimers",
    "Asthma",
    "HeartArteryBlockage",
    "Carcinoma",
    "ExciseCarcinoma",
    "GutWorms",
    "MuscleParasites",
    "FibrousMechanites",
    "SensoryMechanites",
    "WoundInfection",
    "Flu",
    "Animal_Flu",
    "Plague",
    "Animal_Plague",
    "Malaria",
    "SleepingSickness",
    "LungRotExposure",
    "LungRot",
    "MissingBodyPart",
    "Misc",
    "ChemicalBurn",
    "Crack",
    "Gunshot",
    "Shredded",
    "Bruise",
    "TraumaSavant",
    "ChemicalDamageModerate",
    "ChemicalDamageSevere",
    "Cirrhosis",
    "ResurrectionPsychosis",
    "Scaria",
    "Sterilized",
    "CureScaria",
    "Sterilize",
    "DirtInEyes",
    "MudInEyes",
    "GravelInEyes",
    "WaterInEyes",
    "PsychicAmplifier",
    "PsyAmpInstalled",
    "OrganicStandard",
    "BuildSpecificDef",
    "CutTree",
    "MinifiedTreeDied",
    "Mined",
    "DestroyedMineable",
    "SowedPlant",
    "SowedHumanFoodPlant",
    "InstalledProsthetic",
    "Researching",
    "AteHumanMeat",
    "IngestedDrug",
    "IngestedRecreationalDrug",
    "IngestedHardDrug",
    "AdministeredDrug",
    "AdministeredRecreationalDrug",
    "AdministeredHardDrug",
    "CharityRefused_ThreatReward_Joiner",
    "Frenzy_Work",
    "Frenzy_Go",
    "Frenzy_Shoot",
    "Inspired_Trade",
    "Inspired_Recruitment",
    "Inspired_Taming",
    "Inspired_Surgery",
    "Inspired_Creativity",
    "AnimalChat",
    "TameAttempt",
    "TrainAttempt",
    "Nuzzle",
    "ReleaseToWild",
    "BuildRapport",
    "RecruitAttempt",
    "SparkJailbreak",
    "Sentence_RecruitAttemptAccepted",
    "Sentence_RecruitAttemptRejected",
    "RomanceAttempt",
    "MarriageProposal",
    "Breakup",
    "Sentence_RomanceAttemptAccepted",
    "Sentence_RomanceAttemptRejected",
    "Sentence_MarriageProposalAccepted",
    "Sentence_MarriageProposalRejected",
    "Sentence_MarriageProposalRejectedBrokeUp",
    "Chitchat",
    "DeepTalk",
    "Slight",
    "Insult",
    "KindWords",
    "Sentence_SocialFightStarted",
    "Mate",
    "LayEgg",
    "PredatorHunt",
    "Maintain",
    "MarryAdjacentPawn",
    "SpectateCeremony",
    "StandAndBeSociallyActive",
    "Skygaze",
    "Meditate",
    "Pray",
    "GoForWalk",
    "BuildSnowman",
    "VisitGrave",
    "ViewArt",
    "SocialRelax",
    "VisitSickPawn",
    "Play_Horseshoes",
    "Play_Hoopstone",
    "Play_GameOfUr",
    "Play_Chess",
    "Play_Billiards",
    "Play_Poker",
    "WatchTelevision",
    "UseTelescope",
    "Play_MusicalInstrument",
    "IdleWhileDespawned",
    "Goto",
    "PickupToHold",
    "FollowClose",
    "FollowRoper",
    "GotoSafeTemperature",
    "GotoWander",
    "Wait",
    "Wait_MaintainPosture",
    "Wait_Asleep",
    "Wait_Downed",
    "Wait_SafeTemperature",
    "Wait_Wander",
    "Wait_Combat",
    "AttackStatic",
    "AttackMelee",
    "SocialFight",
    "UseVerbOnThing",
    "UseVerbOnThingStatic",
    "CastJump",
    "CastAbilityOnThing",
    "CastAbilityTouch",
    "CastAbilityOnThingUninterruptible",
    "CastAbilityOnThingMelee",
    "CastAbilityOnWorldTile",
    "Equip",
    "TakeInventory",
    "GiveToPackAnimal",
    "Wear",
    "RemoveApparel",
    "DropEquipment",
    "Strip",
    "Open",
    "RearmTurret",
    "RearmTurretAtomic",
    "Refuel",
    "RefuelAtomic",
    "Reload",
    "FillFermentingBarrel",
    "TakeBeerOutOfFermentingBarrel",
    "ApplyTechprint",
    "UnloadInventory",
    "UnloadYourInventory",
    "HaulToTransporter",
    "ManTurret",
    "EnterCryptosleepCasket",
    "UseNeurotrainer",
    "UseArtifact",
    "UseItem",
    "Flick",
    "TradeWithPawn",
    "Flee",
    "FleeAndCower",
    "Resurrect",
    "HaulCorpseToPublicPlace",
    "InducePrisonerToEscape",
    "OfferHelp",
    "EmptyThingContainer",
    "ActivateThing",
    "DeliverToCell",
    "DeliverToBed",
    "TakeCountToInventory",
    "TakeFromOtherInventory",
    "Carried",
    "Ignite",
    "BeatFire",
    "ExtinguishSelf",
    "Ingest",
    "LayDown",
    "LayDownResting",
    "Lovin",
    "GotoMindControlled",
    "TriggerObject",
    "HaulToCell",
    "HaulToContainer",
    "CarryDownedPawnToExit",
    "Rescue",
    "CarryToCryptosleepCasket",
    "Capture",
    "Arrest",
    "ReleasePrisoner",
    "EscortPrisonerToBed",
    "TakeWoundedPrisonerToBed",
    "TakeToBedToOperate",
    "TakeDownedPawnToBedDrafted",
    "CarryDownedPawnDrafted",
    "CarryToCryptosleepCasketDrafted",
    "CarryToPrisonerBedDrafted",
    "Slaughter",
    "Milk",
    "Shear",
    "Tame",
    "Train",
    "RopeToPen",
    "RopeRoamerToUnenclosedPen",
    "RopeRoamerToHitchingPost",
    "Unrope",
    "ReleaseAnimalToWild",
    "PlaceNoCostFrame",
    "Replant",
    "FinishFrame",
    "Deconstruct",
    "Uninstall",
    "ExtractTree",
    "FixBrokenDownBuilding",
    "BuildRoof",
    "RemoveRoof",
    "PaintBuilding",
    "PaintFloor",
    "RemovePaintBuilding",
    "RemovePaintFloor",
    "FeedPatient",
    "TendPatient",
    "DeliverFood",
    "DoBill",
    "OperateDeepDrill",
    "OperateScanner",
    "Hunt",
    "UseCommsConsole",
    "SmoothFloor",
    "RemoveFloor",
    "SmoothWall",
    "Harvest",
    "HarvestDesignated",
    "CutPlant",
    "CutPlantDesignated",
    "PrisonerAttemptRecruit",
    "PrisonerExecution",
    "GuiltyColonistExecution",
    "StudyBuilding",
    "PlantSeed",
    "TakeDrug",
    "EatChocolate",
    "Meditative",
    "Social",
    "Gaming_Dexterity",
    "Gaming_Cerebral",
    "Television",
    "Telescope",
    "HighCulture",
    "Chemical",
    "Gluttonous",
    "Slash",
    "Smash",
    "KickMaterialInEyes",
    "Base_Faction",
    "Settlement",
    "SettlementPower",
    "Base_Player",
    "ScatterShrines",
    "CaveHives",
    "ElevationFertility",
    "Caves",
    "RocksFromGrid",
    "RocksFromGrid_NoMinerals",
    "Terrain",
    "CavesTerrain",
    "Roads",
    "RockChunks",
    "ScatterRuinsSimple",
    "SteamGeysers",
    "FindPlayerStartSpot",
    "ScenParts",
    "Plants",
    "Snow",
    "Animals",
    "Fog",
    "Encounter",
    "EscapeShip",
    "Dignified",
    "Natural",
    "Artistic",
    "Morbid",
    "Minimal",
    "FireStartingSpree",
    "Binging_DrugExtreme",
    "Jailbreaker",
    "Slaughterer",
    "MurderousRage",
    "GiveUpExit",
    "Binging_DrugMajor",
    "Wander_Psychotic",
    "Wander_Psychotic_Short",
    "Tantrum",
    "TargetedTantrum",
    "BedroomTantrum",
    "SadisticRage",
    "CorpseObsession",
    "Binging_Food",
    "Wander_Sad",
    "Wander_OwnRoom",
    "InsultingSpree",
    "TargetedInsultingSpree",
    "Catatonic",
    "RunWild",
    "WanderConfused",
    "PanicFlee",
    "Manhunter",
    "ManhunterPermanent",
    "SocialFighting",
    "Roaming",
    "BerserkMechanoid",
    "OnSkin",
    "Middle",
    "Belt",
    "Overhead",
    "EyeCover",
    "RepeatCount",
    "TargetCount",
    "Forever",
    "DropOnFloor",
    "BestStockpile",
    "SpecificStockpile",
    "BloodFiltrationSource",
    "BloodFiltrationLiver",
    "BloodFiltrationKidney",
    "BloodPumpingSource",
    "BreathingSource",
    "BreathingSourceCage",
    "BreathingPathway",
    "ConsciousnessSource",
    "EatingSource",
    "EatingPathway",
    "HearingSource",
    "MetabolismSource",
    "ManipulationLimbCore",
    "ManipulationLimbSegment",
    "ManipulationLimbDigit",
    "MovingLimbCore",
    "MovingLimbSegment",
    "MovingLimbDigit",
    "SightSource",
    "TalkingSource",
    "TalkingPathway",
    "Male",
    "Female",
    "Thin",
    "Hulk",
    "Fat",
    "Movement",
    "Harm",
    "Construction",
    "Impact",
    "Ability",
    "Sharp",
    "Heat",
    "Orders",
    "Zone",
    "Structure",
    "Production",
    "Furniture",
    "Power",
    "Security",
    "Floors",
    "Joy",
    "Ship",
    "Temperature",
    "Plan",
    "Haul",
    "HarvestPlant",
    "Study",
    "Floor_Carpet",
    "Floor_Carpet_Fine",
    "Floor_Tile",
    "Floor_Tile_Fine",
    "Floor_Tile_Metal",
    "Floor_Flagstone",
    "StandingLampColored",
    "Peaceful",
    "Easy",
    "Medium",
    "Rough",
    "Hard",
    "Extreme",
    "Custom",
    "Core",
    "Royalty",
    "Ideology",
    "Biotech",
    "ExtremelyLow",
    "VeryLow",
    "Low",
    "Moderate",
    "High",
    "SkyHigh",
    "Noble",
    "Royal",
    "Expectations",
    "Island",
    "Archipelago",
    "Peninsula",
    "Bay",
    "Sea",
    "OceanBay",
    "OuterOcean",
    "MountainRange",
    "Normal",
    "Insectoid",
    "BriefPonytail",
    "Princess",
    "Scatman",
    "Lackland",
    "Revolt",
    "Pigtails",
    "Afro",
    "Bob",
    "Burgundy",
    "Troubadour",
    "GreasySwoop",
    "Cleopatra",
    "Cute",
    "Decent",
    "FancyBun",
    "Senorita",
    "Flowy",
    "Long",
    "Mop",
    "Wavy",
    "Messy",
    "Curly",
    "Fringe",
    "Frozen",
    "Ponytails",
    "Bowlcut",
    "Bravo",
    "Recruit",
    "Rockstar",
    "Snazzy",
    "Firestarter",
    "Junkie",
    "Scrapper",
    "Randy",
    "Rookie",
    "Spikes",
    "ShaveTopBraid",
    "BraidedKnot",
    "Keeper",
    "Primal",
    "Warden",
    "Elder",
    "Locks",
    "Savage",
    "Sticky",
    "Bald",
    "Shaved",
    "Tuft",
    "ScorpionTail",
    "Topdog",
    "Mohawk",
    "Tribal",
    "Cannibal",
    "Punk",
    "Urban",
    "Rural",
    "Soldier",
    "Running",
    "Starting",
    "Hibernating",
    "Wealth",
    "Population",
    "ColonistMood",
    "Debug",
    "Wealth_Total",
    "Wealth_Items",
    "Wealth_Buildings",
    "Wealth_Pawns",
    "FreeColonists",
    "Prisoners",
    "Adaptation",
    "ThreatPoints",
    "PopAdaptation",
    "PopIntent",
    "Slice",
    "Electric",
    "Tornado",
    "Toxic",
    "Weapon",
    "Bodypart",
    "Hediff",
    "NativeVerb",
    "Special",
    "ThreatSmall",
    "ThreatBig",
    "FactionArrival",
    "OrbitalVisitor",
    "ShipChunkDrop",
    "DiseaseHuman",
    "DiseaseAnimal",
    "AllyAssistance",
    "EndGame_ShipEscape",
    "GiveQuest",
    "DeepDrillInfestation",
    "Map_PlayerHome",
    "Map_TempIncident",
    "Map_Misc",
    "Map_RaidBeacon",
    "Caravan",
    "World",
    "Medicine",
    "GameMapCamera",
    "Game",
    "SelectionMisc",
    "SelectionSpecial",
    "Architect",
    "MainTabs",
    "Modifiers",
    "Development",
    "DebugMenu",
    "MapDolly_Up",
    "MapDolly_Down",
    "MapDolly_Left",
    "MapDolly_Right",
    "MapZoom_In",
    "MapZoom_Out",
    "Accept",
    "Cancel",
    "TakeScreenshot",
    "ToggleScreenshotMode",
    "SelectNextInCell",
    "TogglePause",
    "TimeSpeed_Normal",
    "TimeSpeed_Fast",
    "TimeSpeed_Superfast",
    "TimeSpeed_Ultrafast",
    "TimeSpeed_Slower",
    "TimeSpeed_Faster",
    "PreviousColonist",
    "NextColonist",
    "ToggleRoomStatsDisplay",
    "ToggleBeautyDisplay",
    "ShowCellInspector",
    "ShowEyedropper",
    "Misc1",
    "Misc2",
    "Misc3",
    "Misc4",
    "Misc5",
    "Misc6",
    "Misc7",
    "Misc8",
    "Misc9",
    "Misc10",
    "Misc11",
    "Misc12",
    "Command_TogglePower",
    "Command_ItemForbid",
    "Command_ColonistDraft",
    "Designator_Cancel",
    "Designator_Deconstruct",
    "Designator_RotateLeft",
    "Designator_RotateRight",
    "ModifierIncrement_10x",
    "ModifierIncrement_100x",
    "QueueOrder",
    "Dev_TickOnce",
    "Dev_ToggleGodMode",
    "Dev_ToggleDebugLog",
    "Dev_ToggleDebugActionsMenu",
    "Dev_ToggleDebugLogMenu",
    "Dev_ToggleDebugInspector",
    "Dev_ToggleDebugSettingsMenu",
    "Dev_ToggleDevPalette",
    "Dev_ChangeSelectedDebugAction",
    "RansomDemand",
    "ChoosePawn",
    "AcceptVisitors",
    "AcceptJoiner",
    "BetrayVisitors",
    "Death",
    "NewQuest",
    "NewQuest_ThreatBig",
    "RitualOutcomePositive",
    "RitualOutcomeNegative",
    "BundleLetter",
    "NegativeEvent",
    "NeutralEvent",
    "PositiveEvent",
    "MechanoidFullyFormed",
    "HumanlikeBaby",
    "HumanlikeChild",
    "HumanlikeTeenager",
    "HumanlikeAdult",
    "EusocialInsectLarva",
    "EusocialInsectJuvenile",
    "EusocialInsectAdult",
    "AnimalBaby",
    "AnimalBabyTiny",
    "AnimalJuvenile",
    "AnimalAdult",
    "MeleeAttack",
    "Inspect",
    "Work",
    "Schedule",
    "Assign",
    "Wildlife",
    "Quests",
    "History",
    "Factions",
    "Menu",
    "PawnDeath",
    "NegativeHealthEvent",
    "TaskCompletion",
    "SituationResolved",
    "RejectInput",
    "CautionInput",
    "SilentInput",
    "General",
    "Graphics",
    "Audio",
    "Gameplay",
    "Interface",
    "Controls",
    "Dev",
    "Mods",
    "Drug",
    "Sterile",
    "FollowDrafted",
    "FollowFieldwork",
    "CopyPasteWorkPriorities",
    "CopyPasteTimetable",
    "Gender",
    "LifeStage",
    "Bond",
    "Info",
    "Predator",
    "MentalState",
    "Faction",
    "GapTiny",
    "GapSmall",
    "Gap",
    "GapWide",
    "RemainingSpace",
    "Label",
    "LabelWithIcon",
    "LabelShortWithIcon",
    "Age",
    "Master",
    "MedicalCare",
    "AllowedArea",
    "AllowedAreaWide",
    "HostilityResponse",
    "Outfit",
    "DrugPolicy",
    "FoodRestriction",
    "Timetable",
    "Carry",
    "ManhunterOnDamageChance",
    "ManhunterOnTameFailChance",
    "Combat",
    "Trader",
    "Settlement_RangedOnly",
    "EdgeWalkIn",
    "EdgeDrop",
    "EdgeWalkInGroups",
    "EdgeDropGroups",
    "CenterDrop",
    "RandomDrop",
    "MechClusterDrop",
    "Restrict",
    "NoInteraction",
    "AttemptRecruit",
    "ReduceResistance",
    "Release",
    "Execution",
    "Kills",
    "KillsHumanlikes",
    "KillsAnimals",
    "KillsMechanoids",
    "PawnsDowned",
    "PawnsDownedHumanlikes",
    "PawnsDownedAnimals",
    "PawnsDownedMechanoids",
    "ShotsFired",
    "Headshots",
    "DamageDealt",
    "DamageTaken",
    "TimesInMentalState",
    "TimesOnFire",
    "FiresExtinguished",
    "OperationsReceived",
    "OperationsPerformed",
    "TimesTendedTo",
    "TimesTendedOther",
    "PeopleCaptured",
    "PrisonersRecruited",
    "PrisonersChatted",
    "AnimalsTamed",
    "AnimalsSlaughtered",
    "MealsCooked",
    "ThingsConstructed",
    "ThingsInstalled",
    "ThingsRepaired",
    "ThingsCrafted",
    "ThingsHauled",
    "PlantsSown",
    "PlantsHarvested",
    "CellsMined",
    "MessesCleaned",
    "ResearchPointsResearched",
    "CorpsesBuried",
    "NutritionEaten",
    "BodiesStripped",
    "ThingsUninstalled",
    "ThingsDeconstructed",
    "ArtifactsActivated",
    "ContainersOpened",
    "SwitchesFlicked",
    "TimeAsColonistOrColonyAnimal",
    "TimeAsQuestLodger",
    "TimeAsPrisoner",
    "TimeInBed",
    "TimeInBedForMedicalReasons",
    "TimeDowned",
    "TimeGettingFood",
    "TimeGettingJoy",
    "TimeUnderRoof",
    "TimeDrafted",
    "TimeOnFire",
    "TimeInMentalState",
    "TimeHauling",
    "TimeHandlingAnimals",
    "TimeFirefighting",
    "TimeWardening",
    "TimeHunting",
    "TimeConstructing",
    "TimeTreatingAndFeeding",
    "TimeResearching",
    "TimeCleaning",
    "TimeRepairing",
    "TimeMining",
    "TimeSowingAndHarvesting",
    "ClassicStart",
    "TribalStart",
    "ShipRelated",
    "ClassicStartTechprints",
    "TribalStartTechprints",
    "Floor",
    "Ceiling",
    "Empty",
    "RoofConstructed",
    "RoofRockThin",
    "RoofRockThick",
    "DebrisStoneA",
    "DebrisStoneB",
    "DirtSmearA",
    "DirtSmearB",
    "GraySmearA",
    "GraySmearB",
    "Cutout",
    "CutoutWithOverlay",
    "CutoutFlying",
    "CutoutFlying01",
    "CutoutPlant",
    "CutoutComplex",
    "CutoutSkin",
    "CutoutSkinOverlay",
    "Transparent",
    "TransparentPostLight",
    "TransparentPlant",
    "MetaOverlay",
    "Mote",
    "MoteGlow",
    "MoteGlowDistorted",
    "MoteDistorted",
    "MoteGlowDistortBackground",
    "MoteGlowPulseLink",
    "MotePsychicConditionCauser",
    "PsyfocusMeditationPulse",
    "MoteProximityScannerRadius",
    "MoteGlowPulse",
    "MoteWater",
    "EdgeDetect",
    "MotePsychicWarmupWordOf",
    "MotePsychicWarmupNeuroquake",
    "MoteLargeDistortionWave",
    "CutoutAnimated",
    "GlowAnimated",
    "TransparentAnimated",
    "AdditiveChangeHue",
    "RitualStencil",
    "PawnSilhouetteStencil",
    "PawnSilhouetteStencilGlow",
    "PawnSilhouetteStencilColorAnimated",
    "TerrainFadeRoughSoftLight",
    "TerrainFadeRoughLinearAdd",
    "TerrainFadeRoughDifference",
    "TransparentBelowSnow",
    "MoteHeatDiffusion",
    "MoteMultiplyAddScroll",
    "MoteGlowCircularScrolling",
    "MoteMultiplyAddCircular",
    "MoteMultiplyAddCircularGrayscale",
    "MoteCircularSparks",
    "EntrySong",
    "EndCreditsSong",
    "AllowCorpsesColonist",
    "AllowCorpsesStranger",
    "AllowLargeCorpses",
    "AllowRotten",
    "AllowFresh",
    "AllowPlantFood",
    "AllowSmeltableApparel",
    "AllowNonSmeltableApparel",
    "AllowBurnableApparel",
    "AllowNonBurnableApparel",
    "AllowSmeltable",
    "AllowNonSmeltableWeapons",
    "AllowNonBurnableWeapons",
    "AllowBurnableWeapons",
    "AllowBiocodedWeapons",
    "AllowNonBiocodedWeapons",
    "AllowBiocodedApparel",
    "AllowNonBiocodedApparel",
    "AllowNonDeadmansApparel",
    "AllowDeadmansApparel",
    "AllowFemaleGender",
    "AllowMaleGender",
    "Smooth",
    "Planks",
    "Bricks",
    "Metal",
    "Metallic",
    "Woody",
    "Stony",
    "Fabric",
    "Leathery",
    "WaterDepth",
    "Light",
    "Heavy",
    "ShallowWater",
    "MovingFluid",
    "Bridgeable",
    "GrowSoil",
    "Diggable",
    "SmoothableStone",
    "Anything",
    "Sleep",
    "GameplayTips",
    "None",
    "Name",
    "MarketValue",
    "Category",
    "Quality",
    "Mass",
    "HitPointsPercentage",
    "Intermediate",
    "Advanced",
    "FeedPatientAnimals",
    "AssistInConstruction",
    "Mood",
    "Food",
    "Rest",
    "Beauty",
    "Comfort",
    "Outdoors",
    "Indoors",
    "DrugDesire",
    "RoomSize",
    "Consciousness",
    "Moving",
    "Manipulation",
    "Talking",
    "Eating",
    "Sight",
    "Hearing",
    "Breathing",
    "BloodFiltration",
    "BloodPumping",
    "Metabolism",
    "Grenadier_Destructive",
    "Grenadier_EMP",
    "Grenadier_Smoke",
    "Mercenary_Gunner",
    "Mercenary_Gunner_Acidifier",
    "Mercenary_Sniper",
    "Mercenary_Sniper_Acidifier",
    "Mercenary_Slasher",
    "Mercenary_Slasher_Acidifier",
    "Mercenary_Heavy",
    "PirateBoss",
    "Mercenary_Elite",
    "Mercenary_Elite_Acidifier",
    "Villager",
    "Town_Guard",
    "Town_Trader",
    "Town_Councilman",
    "Drifter",
    "Scavenger",
    "Thrasher",
    "Colonist",
    "Tribesperson",
    "SpaceRefugee",
    "SpaceRefugee_Clothed",
    "AncientSoldier",
    "Slave",
    "WildMan",
    "StrangerInBlack",
    "Tribal_Penitent",
    "Tribal_Archer",
    "Tribal_Warrior",
    "Tribal_Hunter",
    "Tribal_Trader",
    "Tribal_Berserker",
    "Tribal_HeavyArcher",
    "Tribal_ChiefMelee",
    "Tribal_ChiefRanged",
    "Tribal_Breacher",
    "Mech_Termite_Breach",
    "Parent",
    "Child",
    "Sibling",
    "HalfSibling",
    "Grandparent",
    "Grandchild",
    "NephewOrNiece",
    "UncleOrAunt",
    "Cousin",
    "GreatGrandparent",
    "GreatGrandchild",
    "GranduncleOrGrandaunt",
    "GrandnephewOrGrandniece",
    "CousinOnceRemoved",
    "SecondCousin",
    "Kin",
    "Spouse",
    "Fiance",
    "Lover",
    "Stepparent",
    "Stepchild",
    "ParentInLaw",
    "ChildInLaw",
    "ExSpouse",
    "ExLover",
    "Bonded",
    "AteNutrientPaste",
    "NutrientPasteEating",
    "NutrientPasteEating_Disgusting",
    "AteNutrientPasteMeal",
    "Cannibalism",
    "AteHumanMeatDirect",
    "AteHumanMeatAsIngredient",
    "ButcheredHuman",
    "Cannibalism_Classic",
    "ObservedLayingCorpse",
    "ObservedLayingRottingCorpse",
    "Corpses",
    "Corpses_Ugly",
    "InsectMeat",
    "AteInsectMeatDirect",
    "AteInsectMeatAsIngredient",
    "InsectMeatEating_Despised_Classic",
    "InitiatedLovin",
    "GotLovin",
    "GotLovin_Spouse",
    "GotLovin_NonSpouse",
    "SharedBed",
    "SharedBed_Spouse",
    "SharedBed_NonSpouse",
    "Lovin_Free",
    "MarriageName",
    "GotMarried_TookWomansName",
    "GotMarried_TookMansName",
    "GotMarried_KeptName",
    "MarriageName_UsuallyMans",
    "OrganUse",
    "HarvestedOrganFromColonist",
    "HarvestedOrganFromGuest",
    "OrganUse_Classic",
    "ExecutedPrisoner",
    "ExecutedPrisonerGuilty",
    "ExecutedPrisonerInnocent",
    "ExecutedColonist",
    "ExecutedGuest",
    "Execution_Classic",
    "Ritual",
    "SlaveTrading",
    "SoldSlave",
    "Slavery_Classic",
    "SpouseCount_Male",
    "SpouseCount_Female",
    "GotMarried_SpouseCount_OneOrFewer",
    "GotMarried_SpouseCount_Two",
    "SpouseCount_Male_MaxOne",
    "SpouseCount_Female_MaxOne",
    "Util_JoinerThreat_Joiner",
    "ThreatReward_Raid_Joiner",
    "Util_GetDefaultRewardValueFromPoints",
    "Util_JoinerWalkIn",
    "Util_JoinerDropIn",
    "Util_SendItemPods",
    "Util_RandomizePointsChallengeRating",
    "Util_AdjustPointsForDistantFight",
    "Util_Raid",
    "Util_MechCluster",
    "Util_RaidDelayRepeatable",
    "Util_GenerateSite",
    "OpportunitySite_BanditCamp",
    "DelayedRewardDropPods",
    "OpportunitySite_DownedRefugee",
    "OpportunitySite_ItemStash",
    "LongRangeMineralScannerLump",
    "OpportunitySite_PeaceTalks",
    "OpportunitySite_PrisonerWillingToJoin",
    "TradeRequest",
    "RefugeePodCrash",
    "WandererJoins",
    "ButcherCorpseFlesh",
    "ButcherCorpseMechanoid",
    "SmashCorpseMechanoid",
    "CremateCorpse",
    "BurnApparel",
    "BurnWeapon",
    "BurnDrugs",
    "Make_Kibble",
    "Make_Pemmican",
    "Make_PemmicanBulk",
    "CookMealSimple",
    "CookMealSimpleBulk",
    "CookMealFine",
    "CookMealFine_Veg",
    "CookMealFine_Meat",
    "CookMealFineBulk",
    "CookMealFineBulk_Meat",
    "CookMealFineBulk_Veg",
    "CookMealLavish",
    "CookMealLavish_Meat",
    "CookMealLavish_Veg",
    "CookMealLavishBulk",
    "CookMealLavishBulk_Veg",
    "CookMealLavishBulk_Meat",
    "CookMealSurvival",
    "CookMealSurvivalBulk",
    "Make_StoneBlocksAny",
    "ExtractMetalFromSlag",
    "SmeltWeapon",
    "SmeltApparel",
    "DestroyWeapon",
    "DestroyApparel",
    "Make_ChemfuelFromWood",
    "Make_ChemfuelFromOrganics",
    "Make_ComponentIndustrial",
    "Make_ComponentSpacer",
    "Make_Patchleather",
    "Anesthetize",
    "Euthanize",
    "RemoveBodyPart",
    "SurgeryOutcomeBase",
    "PsychoidBrewing",
    "TreeSowing",
    "Brewing",
    "ComplexFurniture",
    "PassiveCooler",
    "Stonecutting",
    "ComplexClothing",
    "DrugProduction",
    "Cocoa",
    "Devilstrand",
    "CarpetMaking",
    "Pemmican",
    "Smithing",
    "RecurveBow",
    "PsychiteRefining",
    "WakeUpProduction",
    "GoJuiceProduction",
    "PenoxycylineProduction",
    "LongBlades",
    "PlateArmor",
    "Greatbow",
    "Electricity",
    "Batteries",
    "BiofuelRefining",
    "WatermillGenerator",
    "NutrientPaste",
    "SolarPanels",
    "AirConditioning",
    "Autodoors",
    "Hydroponics",
    "TubeTelevision",
    "PackagedSurvivalMeal",
    "Firefoam",
    "IEDs",
    "GeothermalPower",
    "SterileMaterials",
    "ColoredLights",
    "Machining",
    "SmokepopBelt",
    "Prosthetics",
    "Gunsmithing",
    "FlakArmor",
    "Mortars",
    "BlowbackOperation",
    "GasOperation",
    "GunTurrets",
    "FoamTurret",
    "MicroelectronicsBasics",
    "FlatscreenTelevision",
    "MoisturePump",
    "HospitalBed",
    "DeepDrilling",
    "GroundPenetratingScanner",
    "TransportPod",
    "MedicineProduction",
    "LongRangeMineralScanner",
    "ShieldBelt",
    "PrecisionRifling",
    "HeavyTurrets",
    "MultibarrelWeapons",
    "MultiAnalyzer",
    "VitalsMonitor",
    "Fabrication",
    "AdvancedFabrication",
    "Cryptosleep",
    "ReconArmor",
    "PoweredArmor",
    "ChargedShot",
    "Bionics",
    "SniperTurret",
    "RocketswarmLauncher",
    "ShipBasics",
    "ShipCryptosleep",
    "ShipReactor",
    "ShipEngine",
    "ShipComputerCore",
    "ShipSensorCluster",
    "Main",
    "Speech",
    "AttendedSpeech",
    "HugeRiver",
    "LargeRiver",
    "River",
    "Creek",
    "DirtPath",
    "DirtRoad",
    "StoneRoad",
    "AncientAsphaltRoad",
    "AncientAsphaltHighway",
    "Avoid",
    "Bulldoze",
    "Outline",
    "Dirt",
    "Gravel",
    "Asphalt",
    "Room",
    "Bedroom",
    "PrisonCell",
    "DiningRoom",
    "RecRoom",
    "Hospital",
    "Laboratory",
    "Workshop",
    "Storeroom",
    "Barracks",
    "PrisonBarracks",
    "Kitchen",
    "Tomb",
    "Barn",
    "Impressiveness",
    "Space",
    "Cleanliness",
    "InfectionChanceFactor",
    "SurgerySuccessChanceCleanlinessFactor",
    "ResearchSpeedFactor",
    "GraveVisitingJoyGainFactor",
    "FoodPoisonChance",
    "OutdoorsPath",
    "AncientComplexSketch",
    "BasePart",
    "BasePart_Indoors_Division",
    "BasePart_Indoors_Leaf",
    "BasePart_Outdoors",
    "BasePart_Outdoors_Division",
    "BasePart_Outdoors_LeafPossiblyDecorated",
    "BasePart_Outdoors_LeafDecorated",
    "BasePart_Outdoors_Leaf",
    "Clear",
    "SingleThing",
    "SinglePawn",
    "Filth",
    "FloorFill",
    "Roof",
    "EnsureCanReachMapEdge",
    "EnsureCanHoldRoof",
    "OutdoorsCampfire",
    "FirefoamPopper",
    "PawnGroup",
    "ThingSet",
    "LootScatter",
    "EmptyRoom",
    "Doors",
    "ExtraDoor",
    "EdgeSandbags",
    "EdgeWalls",
    "EdgeFloor",
    "AncientCryptosleepCasket",
    "EdgeThing",
    "CultivatedPlants",
    "Bed",
    "PrisonerBed",
    "RectTrigger",
    "EmptyRoomRounded",
    "SoundOneShotAction",
    "UnfoggedTrigger",
    "ContainerEmptiedTrigger",
    "OpenDoorAction",
    "EdgeDefense",
    "AncientShrinesGroup",
    "AncientShrine",
    "AncientRuins",
    "RandomMechanoidGroup",
    "Hives",
    "FillWithBeds",
    "Stockpile",
    "MannedMortar",
    "EdgeMannedMortar",
    "Farm",
    "FillWithThings",
    "ChargeBatteries",
    "PlaceChairsNearTables",
    "RandomlyPlaceMealsOnTables",
    "AddWortToFermentingBarrels",
    "Street",
    "EdgeStreet",
    "IndoorLighting",
    "OutdoorLighting",
    "InnerStockpile",
    "Brewery",
    "WorshippedTerminal",
    "BatteryRoom",
    "Storage",
    "AncientTemple",
    "TerrorBuildings",
    "Message",
    "Interior_Storage",
    "Interior_Barracks",
    "Interior_AncientTemple",
    "Interior_Brewery",
    "Interior_WorshippedTerminal",
    "Interior_BatteryRoom",
    "Interior_DiningRoom",
    "Interior_PrisonCell",
    "Ship_Core",
    "Ship_Pregen",
    "Ship_Spine",
    "Ship_Populate",
    "ArtDescriptionRoot_HasTale",
    "ArtDescriptionRoot_Taleless",
    "ArtDescriptionUtility_Global",
    "ArtDescription_Sculpture",
    "ArtDescription_WeaponMelee",
    "ArtDescription_WeaponGun",
    "ArtDescription_Furniture",
    "ArtDescription_SarcophagusPlate",
    "TalelessImages",
    "Battle_Solo",
    "Battle_Duel",
    "Battle_Internal",
    "Battle_War",
    "Battle_Brawl",
    "Combat_MeleeIncludes",
    "Combat_MeleeDamageIncludes",
    "Combat_WoundIncludes",
    "Combat_SkillIncludes",
    "Combat_FailIncludes",
    "Combat_DeflectIncludes",
    "Combat_Hit",
    "Combat_Deflect",
    "Combat_Miss",
    "Combat_Dodge",
    "Combat_RangedBase",
    "Combat_RangedFire",
    "Combat_RangedFire_Thrown",
    "Combat_RangedDamage",
    "Combat_RangedDeflect",
    "Combat_RangedMiss",
    "Combat_ExplosionImpact",
    "TribalWordUtility",
    "OutlanderPlaceNameUtility",
    "Damage_Bomb",
    "Damage_Flame",
    "Damage_Extinguish",
    "Damage_Stun",
    "Damage_EMP",
    "Damage_Smoke",
    "DamageEvent_Include",
    "DamageEvent_Ceiling",
    "DamageEvent_Fire",
    "DamageEvent_TrapSpike",
    "DamageEvent_PowerBeam",
    "DamageEvent_Tornado",
    "Event_Stun",
    "Event_AbilityUsed",
    "Event_ItemUsed",
    "GlobalUtility",
    "TalkTopicsUtility",
    "Maneuver_Slash",
    "Maneuver_Slash_MeleeHit",
    "Maneuver_Slash_MeleeDeflect",
    "Maneuver_Slash_MeleeMiss",
    "Maneuver_Slash_MeleeDodge",
    "Maneuver_Stab",
    "Maneuver_Stab_MeleeHit",
    "Maneuver_Stab_MeleeDeflect",
    "Maneuver_Stab_MeleeMiss",
    "Maneuver_Stab_MeleeDodge",
    "Maneuver_Smash_Damage",
    "Maneuver_Smash",
    "Maneuver_Smash_MeleeHit",
    "Maneuver_Smash_MeleeDeflect",
    "Maneuver_Smash_MeleeMiss",
    "Maneuver_Smash_MeleeDodge",
    "Maneuver_Scratch_Damage",
    "Maneuver_Scratch",
    "Maneuver_Scratch_MeleeHit",
    "Maneuver_Scratch_MeleeDeflect",
    "Maneuver_Scratch_MeleeMiss",
    "Maneuver_Scratch_MeleeDodge",
    "Maneuver_Poke",
    "Maneuver_Poke_MeleeHit",
    "Maneuver_Poke_MeleeDeflect",
    "Maneuver_Poke_MeleeMiss",
    "Maneuver_Poke_MeleeDodge",
    "Maneuver_Bite",
    "Maneuver_Bite_MeleeHit",
    "Maneuver_Bite_MeleeDeflect",
    "Maneuver_Bite_MeleeMiss",
    "Maneuver_Bite_MeleeDodge",
    "Maneuver_KickMaterialInEyes_MeleeHit",
    "Maneuver_KickMaterialInEyes_MeleeDeflect",
    "Maneuver_KickMaterialInEyes_MeleeMiss",
    "Maneuver_KickMaterialInEyes_MeleeDodge",
    "NamerAnimalUtility",
    "NamerAnimalGenericMale",
    "NamerAnimalGenericFemale",
    "ArtNameUtility",
    "NamerArtCommon",
    "NamerArtSculpture",
    "NamerArtFurniture",
    "NamerArtSarcophagusPlate",
    "NamerArtWeapon",
    "NamerArtWeaponMelee",
    "NamerArtWeaponGun",
    "NamerInitialSettlementColony",
    "NamerInitialSettlementTribe",
    "NamerFactionOutlander",
    "NamerSettlementOutlander",
    "NamerFactionTribal",
    "NamerSettlementTribal",
    "NamerFactionPirate",
    "NamerSettlementPirate",
    "NamerFactionMechanoid",
    "NamerPersonCorunan",
    "EmpireNameUtility",
    "NamerQuestDefault",
    "NamerScenario",
    "NamerTraderGeneral",
    "WorldFeatureNamerCommon",
    "NamerMountainRange",
    "NamerArchipelago",
    "NamerIsland",
    "NamerPeninsula",
    "NamerBay",
    "NamerLake",
    "NamerSea",
    "NamerOcean",
    "NamerDesert",
    "NamerSwamp",
    "NamerTropicalRainforest",
    "NamerForest",
    "NamerBorealForest",
    "NamerAridShrubland",
    "NamerIceSheet",
    "NamerTundra",
    "NamerWorld",
    "SeedGenerator",
    "Transition_Include",
    "Transition_Downed",
    "Transition_DiedInclude",
    "Transition_Died",
    "Transition_DiedExplosive",
    "DynamicWrapper",
    "Crashlanded",
    "Tutorial",
    "LostTribe",
    "TheRichExplorer",
    "NakedBrutality",
    "PlayerFaction",
    "ConfigPage_ConfigureStartingPawns",
    "PlayerPawnsArriveMethod",
    "GameStartDialog",
    "PawnFilter_Age",
    "OnPawnDeathExplode",
    "ForcedTrait",
    "ForcedHediff",
    "Naked",
    "SetNeedLevel",
    "StartingResearch",
    "GameCondition_Planetkiller",
    "Rule_DisallowDesignator_ZoneAdd_Growing",
    "Rule_DisallowDesignator_Mine",
    "Rule_DisallowDesignator_Hunt",
    "Rule_DisallowDesignator_Tame",
    "StatFactor",
    "NoPossessions",
    "DisableIncident",
    "CreateIncident",
    "Rule_DisallowBuilding",
    "PermanentGameCondition",
    "StartingAnimal",
    "StartingThing_Defined",
    "ScatterThingsNearPlayerStart",
    "ScatterThingsAnywhere",
    "Unload",
    "WaitTime",
    "Arrive",
    "Nothing",
    "AmbushEdge",
    "AmbushHidden",
    "BanditCamp",
    "BanditCampPower",
    "DownedRefugee",
    "ItemStash",
    "Manhunters",
    "Outpost",
    "OutpostPower",
    "PossibleUnknownThreatMarker",
    "PreciousLump",
    "PrisonerWillingToJoin",
    "Turrets",
    "TurretsPower",
    "Monument",
    "Symmetry",
    "AssignRandomStuff",
    "AddColumns",
    "AddCornerThings",
    "AddThingsCentral",
    "AddWallEdgeThings",
    "AddInnerMonuments",
    "DamageBuildings",
    "MonumentRuin",
    "Shooting",
    "Melee",
    "Cooking",
    "Crafting",
    "Intellectual",
    "EmpDisabled",
    "BulletShield_Ambience",
    "CryptosleepCasket_Eject",
    "CryptosleepCasket_Accept",
    "Hive_Spawn",
    "MechanoidsWakeUp",
    "ShipReactor_Startup",
    "BuildingDestroyed_Wood_Big",
    "BuildingDestroyed_Wood_Medium",
    "BuildingDestroyed_Wood_Small",
    "BuildingDestroyed_Metal_Big",
    "BuildingDestroyed_Metal_Medium",
    "BuildingDestroyed_Metal_Small",
    "BuildingDestroyed_Stone_Big",
    "BuildingDestroyed_Stone_Medium",
    "BuildingDestroyed_Stone_Small",
    "BuildingDestroyed_Soft_Medium",
    "BuildingDestroyed_Soft_Small",
    "Shuttle_PawnLoaded",
    "Shuttle_PawnExit",
    "ShuttleIdle_Ambience",
    "BurningPowerCell_Start",
    "BurningPowerCell_End",
    "BurningPowerCell_Loop",
    "GeyserSpray",
    "CrashedShipPart_Ambience",
    "GeothermalPlant_Ambience_Start",
    "GeothermalPlant_Ambience_Stop",
    "GeothermalPlant_Ambience",
    "WaterMill_Ambience",
    "MoisturePump_Ambience",
    "Television_Ambience",
    "ShipReactor_Ambience",
    "ScannerGroundPenetrating_Start",
    "ScannerGroundPenetrating_Stop",
    "ScannerGroundPenetrating_Ambience",
    "ScannerLongRangeMineral_Start",
    "ScannerLongRangeMineral_Stop",
    "ScannerLongRangeMineral_Ambience",
    "WoodFiredGenerator_Ambience",
    "ChemfuelFiredGenerator_Ambience",
    "WindTurbine_Ambience",
    "PsychicPulseGlobal",
    "PsychicSootheGlobal",
    "PsychicInsanityLanceCast",
    "PsychicShockLanceCast",
    "PsychicAnimalPulserCast",
    "PsychicSoothePulserCast",
    "ShipTakeoff",
    "MechSerumUsed",
    "RawVegetable_Eat",
    "RawMeat_Eat",
    "Meal_Eat",
    "Ingest_Beer",
    "Ingest_Beer_Start",
    "Ingest_Drink",
    "Ingest_Smoke",
    "Ingest_Snort",
    "Ingest_Pill",
    "Ingest_Inject",
    "Pawn_Melee_Punch_HitPawn",
    "Pawn_Melee_Punch_HitBuilding",
    "Pawn_Melee_Punch_Miss",
    "Pawn_Melee_SmallScratch_HitPawn",
    "Pawn_Melee_SmallScratch_HitBuilding",
    "Pawn_Melee_SmallScratch_Miss",
    "Pawn_Melee_BigBash_HitPawn",
    "Pawn_Melee_BigBash_HitBuilding",
    "Pawn_Melee_BigBash_Miss",
    "Pawn_Melee_MechanoidBash_HitPawn",
    "Pawn_Melee_MechanoidBash_HitBuilding",
    "Pawn_Melee_MechanoidBash_Miss",
    "Pawn_Melee_MechanoidSlash_HitPawn",
    "Pawn_Melee_MechanoidSlash_HitBuilding",
    "Pawn_Melee_MechanoidSlash_Miss",
    "MeleeHit_Metal_Sharp",
    "MeleeHit_Metal_Blunt",
    "MeleeHit_Stone",
    "MeleeHit_Wood",
    "Pawn_MeleeDodge",
    "Pawn_Melee_HumanBite_Hit",
    "Pawn_Melee_HumanBite_Miss",
    "MeleeHit_BionicPunch",
    "MeleeMiss_BionicPunch",
    "Pawn_Melee_PowerClaw_Hit",
    "Pawn_Melee_PowerClaw_Miss",
    "ToxicBuildupGained",
    "Building_Complete",
    "Building_Deconstructed",
    "ThingUninstalled",
    "PickHit",
    "FlickSwitch",
    "HorseshoeImpact",
    "StoneImpact",
    "PlayBilliards",
    "PokerChips",
    "TechMedicineUsed",
    "Roof_Start",
    "Roof_Finish",
    "Execute_Cut",
    "Replant_Complete",
    "Standard_Pickup",
    "Standard_Drop",
    "Grain_Drop",
    "Metal_Drop",
    "Corpse_Drop",
    "Wood_Drop",
    "Silver_Drop",
    "Stone_Drop",
    "ChunkRock_Drop",
    "ChunkSlag_Drop",
    "Interact_BeatFire",
    "Interact_Ignite",
    "Interact_ConstructMetal",
    "Interact_ConstructDirt",
    "Interact_GraveDig",
    "Harvest_Standard",
    "Harvest_Standard_Finish",
    "Interact_Repair_Start",
    "Interact_Repair",
    "Interact_Sow",
    "Interact_Research",
    "Harvest_Tree_Finish",
    "Recipe_MakeWoodPlanks_Hand",
    "Recipe_MakeWoodPlanks_Electric",
    "Recipe_CircularSaw_Off",
    "Interact_ConstructWood",
    "Finish_Wood",
    "Interact_CleanFilth",
    "Interact_CleanFilth_Scattered",
    "Interact_CleanFilth_Fluid",
    "Interact_CleanFilth_Dirt",
    "Recipe_MakeStoneBlocks",
    "Finish_StoneBlock",
    "Recipe_ButcherCorpseFlesh",
    "Recipe_ButcherCorpseMechanoid",
    "Recipe_SmashCorpseMechanoid",
    "Crematorium_Stop",
    "Recipe_Cremate",
    "Smelt_Start",
    "Smelt_Stop",
    "Recipe_Smelt",
    "Recipe_CookMeal",
    "Recipe_Sculpt",
    "Sculpt_Start",
    "Sculpt_Stop",
    "Recipe_Surgery",
    "Recipe_Smith",
    "Tailor_Start",
    "Recipe_Tailor",
    "Tend_Start",
    "Interact_Tend",
    "Recipe_Machining",
    "Machining_Stop",
    "Recipe_Brewing",
    "Brewing_Start",
    "Brewing_Stop",
    "Recipe_Drug",
    "Recipe_Drug_Start",
    "Recipe_Drug_Stop",
    "Recipe_MakeBow",
    "Speech_Throne_Male",
    "Speech_Throne_Female",
    "Pawn_Chick_Call",
    "Pawn_Chicken_Call",
    "Pawn_Chicken_Angry",
    "Pawn_Chicken_Wounded",
    "Pawn_Chicken_Death",
    "Pawn_DogSmall_Call",
    "Pawn_DogSmall_Angry",
    "Pawn_DogSmall_Injured",
    "Pawn_DogSmall_Dead",
    "Pawn_Dog_Call",
    "Pawn_Dog_Angry",
    "Pawn_Dog_Injured",
    "Pawn_Dog_Death",
    "Pawn_Cat_Call",
    "Pawn_Cat_Angry",
    "Pawn_Cat_Injured",
    "Pawn_Cat_Death",
    "Pawn_Megascarab_Call",
    "Pawn_Megascarab_Angry",
    "Pawn_Megascarab_Death",
    "Pawn_Megascarab_Wounded",
    "Pawn_BigInsect_Call",
    "Pawn_BigInsect_Angry",
    "Pawn_BigInsect_Death",
    "Pawn_BigInsect_Pain",
    "Pawn_Spelopede_Call",
    "Pawn_Spelopede_Angry",
    "Pawn_Spelopede_Death",
    "Pawn_Spelopede_Pain",
    "Pawn_Muffalo_Call",
    "Pawn_Muffalo_Angry",
    "Pawn_Muffalo_Wounded",
    "Pawn_Muffalo_Death",
    "Pawn_Boomrat_Angry",
    "Pawn_Boomrat_Call",
    "Pawn_Boomrat_Wounded",
    "Pawn_Boomrat_Death",
    "Pawn_Rodent_Angry",
    "Pawn_Rodent_Call",
    "Pawn_Rodent_Wounded",
    "Pawn_Rodent_Death",
    "Pawn_Alphabeaver_Call",
    "Pawn_Alphabeaver_Angry",
    "Pawn_Alphabeaver_Death",
    "Pawn_Alphabeaver_Wounded",
    "Pawn_Deer_Call",
    "Pawn_Deer_Angry",
    "Pawn_Deer_Death",
    "Pawn_Deer_Wounded",
    "Pawn_Dromedary_Call",
    "Pawn_Dromedary_Angry",
    "Pawn_Dromedary_Death",
    "Pawn_Dromedary_Wounded",
    "Pawn_Elk_Call",
    "Pawn_Elk_Angry",
    "Pawn_Elk_Death",
    "Pawn_Elk_Wounded",
    "Pawn_Monkey_Call",
    "Pawn_Monkey_Angry",
    "Pawn_Monkey_Death",
    "Pawn_Monkey_Wounded",
    "Pawn_Tortoise_Call",
    "Pawn_Tortoise_Angry",
    "Pawn_Tortoise_Death",
    "Pawn_Tortoise_Wounded",
    "Pawn_Wildboar_Call",
    "Pawn_Wildboar_Angry",
    "Pawn_Wildboar_Death",
    "Pawn_Wildboar_Wounded",
    "Pawn_Hare_Call",
    "Pawn_Hare_Angry",
    "Pawn_Hare_Death",
    "Pawn_Hare_Wounded",
    "Pawn_Cobra_Call",
    "Pawn_Cobra_Angry",
    "Pawn_Cobra_Death",
    "Pawn_Cobra_Wounded",
    "Pawn_Iguana_Call",
    "Pawn_Iguana_Angry",
    "Pawn_Iguana_Death",
    "Pawn_Iguana_Wounded",
    "Pawn_Rhinoceros_Call",
    "Pawn_Rhinoceros_Angry",
    "Pawn_Rhinoceros_Death",
    "Pawn_Rhinoceros_Wounded",
    "Pawn_Warg_Call",
    "Pawn_Warg_Angry",
    "Pawn_Warg_Wounded",
    "Pawn_Warg_Death",
    "Pawn_Elephant_Call",
    "Pawn_Elephant_Angry",
    "Pawn_Elephant_Injured",
    "Pawn_Elephant_Dead",
    "Pawn_Thrumbo_Call",
    "Pawn_Thrumbo_Angry",
    "Pawn_Thrumbo_Pain",
    "Pawn_Thrumbo_Death",
    "Pawn_Bear_Call",
    "Pawn_Bear_Angry",
    "Pawn_Bear_Injured",
    "Pawn_Bear_Death",
    "Pawn_Cougar_Angry",
    "Pawn_Cougar_Injured",
    "Pawn_Cougar_Death",
    "Pawn_Donkey_Call",
    "Pawn_Donkey_Angry",
    "Pawn_Donkey_Death",
    "Pawn_Donkey_Wounded",
    "Pawn_Bison_Call",
    "Pawn_Bison_Angry",
    "Pawn_Bison_Death",
    "Pawn_Bison_Wounded",
    "Pawn_Duck_Call",
    "Pawn_Duck_Angry",
    "Pawn_Duck_Death",
    "Pawn_Duck_Wounded",
    "Pawn_Goat_Call",
    "Pawn_Goat_Angry",
    "Pawn_Goat_Death",
    "Pawn_Goat_Wounded",
    "Pawn_Goose_Call",
    "Pawn_Goose_Angry",
    "Pawn_Goose_Death",
    "Pawn_Goose_Wounded",
    "Pawn_GuineaPig_Call",
    "Pawn_GuineaPig_Angry",
    "Pawn_GuineaPig_Death",
    "Pawn_GuineaPig_Wounded",
    "Pawn_Horse_Call",
    "Pawn_Horse_Angry",
    "Pawn_Horse_Death",
    "Pawn_Horse_Wounded",
    "Pawn_Sheep_Call",
    "Pawn_Sheep_Angry",
    "Pawn_Sheep_Death",
    "Pawn_Sheep_Wounded",
    "Pawn_Mech_Centipede_Wounded",
    "Pawn_Mech_Centipede_Death",
    "Pawn_Mech_Centipede_Call",
    "Pawn_Mech_Scyther_Wounded",
    "Pawn_Mech_Scyther_Death",
    "Pawn_Mech_Scyther_Call",
    "Pawn_Mech_Pikeman_Wounded",
    "Pawn_Mech_Pikeman_Death",
    "Pawn_Mech_Pikeman_Call",
    "Pawn_Mech_Termite_Wounded",
    "Pawn_Mech_Termite_Death",
    "Pawn_Mech_Termite_Call",
    "Standard_Reload",
    "RitualConclusion_Positive",
    "RitualConclusion_Negative",
    "Clock_Stop",
    "Clock_Normal",
    "Clock_Fast",
    "Clock_Superfast",
    "Designate_DragStandard_Changed",
    "Designate_DragStandard_Changed_NoCam",
    "Designate_DragZone_Changed",
    "Designate_DragBuilding_Start",
    "Designate_DragAreaAdd_Start",
    "Designate_DragAreaDelete_Start",
    "Designate_PlaceBuilding",
    "Designate_Cancel",
    "Designate_Deconstruct",
    "Designate_Mine",
    "Designate_Failed",
    "Designate_ZoneAdd",
    "Designate_ZoneAdd_Stockpile",
    "Designate_ZoneAdd_Dumping",
    "Designate_ZoneAdd_Growing",
    "Designate_ZoneAdd_Roof",
    "Designate_ZoneAdd_AllowedArea",
    "Designate_ZoneAdd_RemoveSnow",
    "Designate_ZoneDelete",
    "Designate_Haul",
    "Designate_Hunt",
    "Designate_Slaughter",
    "Designate_ReleaseToWild",
    "Designate_CutPlants",
    "Designate_Harvest",
    "Designate_HarvestWood",
    "Designate_HarvestPlants",
    "Designate_SmoothSurface",
    "Designate_RemoveFloor",
    "Designate_RemoveBridge",
    "Designate_PlanAdd",
    "Designate_PlanRemove",
    "Designate_Claim",
    "Designate_Paint",
    "Designate_RemovePaint",
    "Designate_ExtractTree",
    "Designate_Tame",
    "GameStartSting",
    "TinyBell",
    "TabOpen",
    "TabClose",
    "PageChange",
    "Tick_Tiny",
    "DragElement",
    "DropElement",
    "CancelMode",
    "Tick_Low",
    "Tick_High",
    "Crunch",
    "Click",
    "ClickReject",
    "Mouseover_ButtonToggle",
    "TutorMessageAppear",
    "ArchitectCategorySelect",
    "ExecuteTrade",
    "Mouseover_Standard",
    "Mouseover_Thump",
    "Mouseover_Category",
    "Mouseover_Command",
    "FloatMenu_Open",
    "FloatMenu_Cancel",
    "LetterArrive",
    "LetterArrive_BadUrgent",
    "LetterArrive_BadUrgentBig",
    "LetterArrive_BadUrgentSmall",
    "LetterArrive_Good",
    "DraftOn",
    "DraftOff",
    "ResearchStart",
    "ThingSelected",
    "MapSelected",
    "ColonistSelected",
    "ColonistOrdered",
    "DragGoto",
    "Message_NeutralEvent",
    "Message_PositiveEvent",
    "Message_NegativeEvent",
    "Message_ThreatBig",
    "Message_ThreatSmall",
    "Message_PawnDeath",
    "Message_NegativeHealthEvent",
    "Message_TaskCompletion",
    "DialogBoxAppear",
    "CommsWindow_Open",
    "CommsWindow_Close",
    "InfoCard_Open",
    "InfoCard_Close",
    "DragSlider",
    "RowTabSelect",
    "Mouseover_Tab",
    "Checkbox_TurnedOn",
    "Checkbox_TurnedOff",
    "Lesson_Activated",
    "Lesson_Deactivated",
    "PlanetkillerImpact",
    "Quest_Accepted",
    "Quest_Succeded",
    "Quest_Concluded",
    "Quest_Failed",
    "Designate_DragStandard",
    "Designate_DragBuilding",
    "Designate_DragAreaAdd",
    "Designate_DragAreaDelete",
    "RadioComms_Ambience",
    "Door_OpenPowered",
    "Door_ClosePowered",
    "Door_OpenManual",
    "Door_CloseManual",
    "Door_FenceGateManual",
    "Explosion_Bomb",
    "Explosion_Stun",
    "Explosion_Flame",
    "Explosion_EMP",
    "Explosion_Smoke",
    "Explosion_FirefoamPopPack",
    "Explosion_FirefoamPopper",
    "Explosion_GiantBomb",
    "Explosion_Thump",
    "Explosion_Rocket",
    "TurretAcquireTarget",
    "FoamTurret_Activate",
    "Roof_Collapse",
    "Power_OnSmall",
    "Power_OffSmall",
    "DispensePaste",
    "DropPod_Impact",
    "DropPod_Impact_Mechanoid",
    "DropPod_Leaving",
    "DropPod_Open",
    "DropPod_Open_Mechanoid",
    "TrapArm",
    "TrapSpring",
    "Bombardment_PreImpact",
    "Shuttle_CrashLanding",
    "Shuttle_Impact",
    "MortarRound_Ambient",
    "Mortar_LaunchA",
    "Artillery_HitThickRoof",
    "MortarRound_PreImpact",
    "Artillery_ShellLoaded",
    "MortarIncendiary_Explode",
    "MortarBomb_Explode",
    "MetalHitImportant",
    "BulletImpact_Ground",
    "BulletImpact_Wood",
    "BulletImpact_Metal",
    "BulletImpact_Flesh",
    "PunchThroughRoofMetal",
    "Interceptor_BlockProjectile",
    "EnergyShield_AbsorbDamage",
    "EnergyShield_Broken",
    "EnergyShield_Reset",
    "ThumpCannon_Impact",
    "Foam_Impact",
    "GunTail_Light",
    "GunTail_Medium",
    "GunTail_Heavy",
    "Interact_Grenade",
    "ThrowGrenade",
    "Interact_MolotovCocktail",
    "ThrowMolotovCocktail",
    "Interact_Revolver",
    "Interact_Autopistol",
    "GunShotA",
    "Interact_Shotgun",
    "Interact_Rifle",
    "Interact_AssaultRifle",
    "Interact_SMG",
    "Interact_ChargeRifle",
    "Interact_ChargeLance",
    "Bow_Small",
    "Bow_Recurve",
    "Bow_Large",
    "InfernoCannon_Fire",
    "Shot_ChargeRifle",
    "Shot_Revolver",
    "Shot_Autopistol",
    "Shot_MachinePistol",
    "Shot_HeavySMG",
    "Shot_AssaultRifle",
    "Shot_Autocannon",
    "Shot_TurretSniper",
    "Shot_Shotgun",
    "Shot_BoltActionRifle",
    "Shot_NeedleGun",
    "Shot_SniperRifle",
    "Shot_Minigun",
    "ChargeLance_Fire",
    "Shot_ChargeBlaster",
    "Shot_IncendiaryLauncher",
    "OrbitalTargeter_Fire",
    "ThumpCannon_Fire",
    "RocketswarmLauncher_Fire",
    "Ambient_NightInsects_Standard",
    "Ambient_NightInsects_Jungle",
    "Ambient_DayInsects_Jungle",
    "Ambient_Wind_Desolate",
    "Ambient_AltitudeWind",
    "Thunder_OffMap",
    "Thunder_OnMap",
    "Ambient_Wind_Clear",
    "Ambient_Wind_Fog",
    "Ambient_Rain",
    "Ambient_Wind_Storm",
    "Ambient_Space",
    "FireBurning",
    "Tunnel",
    "Tunnel_End",
    "HissSmall",
    "HissJet",
    "Roping",
    "OrbitalBeam",
    "OrbitalBeamSubtle",
    "FlashstormAmbience",
    "DropPod_Fall",
    "DropPod_Fall_Mechanoid",
    "OrbitalTargeter_Aiming",
    "Basics",
    "BasicsImportant",
    "BasicsPawnImportant",
    "BasicsNonPawnImportant",
    "BasicsPawn",
    "BasicsNonPawn",
    "AnimalProductivity",
    "Source",
    "Apparel",
    "Implant",
    "Weapon_Ranged",
    "Weapon_Melee",
    "Building",
    "DrugAddiction",
    "EquippedStatOffsets",
    "StuffStatFactors",
    "StuffStatOffsets",
    "StuffOfEquipmentStatFactors",
    "CapacityEffects",
    "PawnCombat",
    "PawnSocial",
    "PawnMisc",
    "PawnWork",
    "Meditation",
    "Genetics",
    "Ability_RequiredPsylink",
    "Ability_CastingTime",
    "Ability_EntropyGain",
    "Ability_PsyfocusCost",
    "Ability_Range",
    "Ability_Duration",
    "Ability_EffectRadius",
    "Ability_GoodwillImpact",
    "Ability_DetectChancePerEntropy",
    "StuffEffectMultiplierArmor",
    "StuffEffectMultiplierInsulation_Cold",
    "StuffEffectMultiplierInsulation_Heat",
    "ArmorRating_Sharp",
    "ArmorRating_Blunt",
    "ArmorRating_Heat",
    "Insulation_Cold",
    "Insulation_Heat",
    "EnergyShieldEnergyMax",
    "EnergyShieldRechargeRate",
    "SmokepopBeltRadius",
    "EquipDelay",
    "MaxHitPoints",
    "MarketValueIgnoreHp",
    "SellPriceFactor",
    "RoyalFavorValue",
    "Flammability",
    "WorkToMake",
    "DeteriorationRate",
    "BeautyOutdoors",
    "Nutrition",
    "FoodPoisonChanceFixedHuman",
    "ShootingAccuracyTurret",
    "MedicalPotency",
    "MedicalQualityMax",
    "ConstructionSpeedFactor",
    "MeditationFocusStrength",
    "PsychicSensitivityOffset",
    "FilthMultiplier",
    "CleaningTimeFactor",
    "WorkToBuild",
    "DoorOpenSpeed",
    "BedRestEffectiveness",
    "TrapMeleeDamage",
    "TrapSpringChance",
    "MedicalTendQualityOffset",
    "ImmunityGainSpeedFactor",
    "WorkTableWorkSpeedFactor",
    "WorkTableEfficiencyFactor",
    "JoyGainFactor",
    "SurgerySuccessChanceFactor",
    "MeleeDPS",
    "MeleeArmorPenetration",
    "MeleeHitChance",
    "MeleeDodgeChance",
    "ShootingAccuracyPawn",
    "ShootingAccuracyFactor_Touch",
    "ShootingAccuracyFactor_Short",
    "ShootingAccuracyFactor_Medium",
    "ShootingAccuracyFactor_Long",
    "AimingDelayFactor",
    "MortarMissRadiusFactor",
    "PawnTrapSpringChance",
    "IncomingDamageFactor",
    "MoveSpeed",
    "MentalBreakThreshold",
    "PsychicSensitivity",
    "ToxicResistance",
    "GlobalLearningFactor",
    "BedHungerRateFactor",
    "RestRateMultiplier",
    "EatingSpeed",
    "ComfyTemperatureMin",
    "ComfyTemperatureMax",
    "ImmunityGainSpeed",
    "InjuryHealingFactor",
    "CarryingCapacity",
    "MeatAmount",
    "LeatherAmount",
    "MinimumHandlingSkill",
    "PainShockThreshold",
    "ForagedNutritionPerDay",
    "FilthRate",
    "AnimalsLearningFactor",
    "CaravanRidingSpeedFactor",
    "MaxNutrition",
    "LifespanFactor",
    "MeditationFocusGain",
    "PsychicEntropyMax",
    "PsychicEntropyRecoveryRate",
    "ToxicEnvironmentResistance",
    "RestFallRateFactor",
    "NegotiationAbility",
    "PawnBeauty",
    "ArrestSuccessChance",
    "TradePriceImprovement",
    "DrugSellPriceImprovement",
    "SocialImpact",
    "TameAnimalChance",
    "TrainAnimalChance",
    "BondAnimalChanceFactor",
    "WorkSpeedGlobal",
    "MiningSpeed",
    "DeepDrillingSpeed",
    "MiningYield",
    "SmoothingSpeed",
    "ResearchSpeed",
    "AnimalGatherSpeed",
    "AnimalGatherYield",
    "PlantWorkSpeed",
    "PlantHarvestYield",
    "DrugHarvestYield",
    "HuntingStealth",
    "ConstructionSpeed",
    "ConstructSuccessChance",
    "FixBrokenDownBuildingSuccessChance",
    "CleaningSpeed",
    "MedicalTendSpeed",
    "MedicalTendQuality",
    "MedicalOperationSpeed",
    "MedicalSurgerySuccessChance",
    "SmeltingSpeed",
    "GeneralLaborSpeed",
    "DrugSynthesisSpeed",
    "CookSpeed",
    "DrugCookingSpeed",
    "ButcheryFleshSpeed",
    "ButcheryMechanoidSpeed",
    "ButcheryFleshEfficiency",
    "ButcheryMechanoidEfficiency",
    "StuffPower_Armor_Sharp",
    "StuffPower_Armor_Blunt",
    "StuffPower_Armor_Heat",
    "StuffPower_Insulation_Cold",
    "StuffPower_Insulation_Heat",
    "MeleeWeapon_AverageDPS",
    "MeleeWeapon_AverageArmorPenetration",
    "MeleeWeapon_DamageMultiplier",
    "MeleeWeapon_CooldownMultiplier",
    "SharpDamageMultiplier",
    "BluntDamageMultiplier",
    "AccuracyTouch",
    "AccuracyShort",
    "AccuracyMedium",
    "AccuracyLong",
    "RangedWeapon_Cooldown",
    "RangedWeapon_DamageMultiplier",
    "Ambush",
    "ManhunterAmbush",
    "CaravanMeeting",
    "CaravanDemand",
    "Disease_Flu",
    "Disease_Plague",
    "Disease_Malaria",
    "Disease_SleepingSickness",
    "Disease_FibrousMechanites",
    "Disease_SensoryMechanites",
    "Disease_GutWorms",
    "Disease_MuscleParasites",
    "Disease_AnimalFlu",
    "Disease_AnimalPlague",
    "ResourcePodCrash",
    "SelfTame",
    "AmbrosiaSprout",
    "FarmAnimalsWanderIn",
    "WandererJoin",
    "ThrumboPasses",
    "MeteoriteImpact",
    "HerdMigration",
    "WildManWandersIn",
    "ShortCircuit",
    "CropBlight",
    "Alphabeavers",
    "OrbitalTraderArrival",
    "TraderCaravanArrival",
    "VisitorGroup",
    "TravelerGroup",
    "RaidFriendly",
    "StrangerInBlackJoin",
    "RaidEnemy",
    "Infestation",
    "ManhunterPack",
    "DefoliatorShipPartCrash",
    "PsychicEmanatorShipPartCrash",
    "AnimalInsanityMass",
    "MechCluster",
    "AnimalInsanitySingle",
    "GiveQuest_Random",
    "GiveQuest_EndGame_ShipEscape",
    "ImmediateAttack",
    "ImmediateAttackFriendly",
    "ImmediateAttackSmart",
    "StageThenAttack",
    "ImmediateAttackBreaching",
    "ImmediateAttackBreachingSmart",
    "ImmediateAttackSappers",
    "Siege",
    "Cassandra",
    "Phoebe",
    "Tutor",
    "CaravanFormed",
    "CaravanFled",
    "CaravanAmbushDefeated",
    "CaravanRemoteMining",
    "CaravanAssaultSuccessful",
    "Captured",
    "Recruited",
    "Hunted",
    "DidSurgery",
    "KidnappedColonist",
    "TamedAnimal",
    "KilledBy",
    "SoldPrisoner",
    "TrainedAnimal",
    "KilledColonist",
    "KilledColonyAnimal",
    "DefeatedHostileFactionLeader",
    "TradedWith",
    "BondedWithAnimal",
    "BecameLover",
    "Marriage",
    "LaunchedShip",
    "CollapseDodged",
    "Wounded",
    "Downed",
    "KilledLongRange",
    "KilledMelee",
    "KilledMajorThreat",
    "KilledCapacity",
    "KilledMortar",
    "Exhausted",
    "IllnessRevealed",
    "HeatstrokeRevealed",
    "HypothermiaRevealed",
    "ToxicityRevealed",
    "GaveBirth",
    "CaravanAmbushedByHumanlike",
    "CaravanAmbushedByManhunter",
    "Raid",
    "ShipPartCrash",
    "TornadoFromItem",
    "MinedValuable",
    "CompletedLongConstructionProject",
    "CompletedLongCraftingProject",
    "AttendedParty",
    "Meditated",
    "Prayed",
    "BuiltSnowman",
    "VisitedGrave",
    "PlayedGame",
    "BuriedCorpse",
    "EnteredCryptosleep",
    "PutIntoCryptosleep",
    "Stripped",
    "GainedMasterSkillWithPassion",
    "GainedMasterSkillWithoutPassion",
    "IncreasedMenagerie",
    "MajorThreat",
    "LandedInPod",
    "Vomited",
    "WasOnFire",
    "MentalStateBerserk",
    "MentalStateGaveUp",
    "WalkedNaked",
    "AteRawHumanlikeMeat",
    "CraftedArt",
    "StruckMineable",
    "FinishedResearchProject",
    "ButcheredHumanlikeCorpse",
    "NoTattoo_Face",
    "NoTattoo_Body",
    "StrawMatting",
    "Concrete",
    "PavedTile",
    "WoodPlankFloor",
    "MetalTile",
    "SilverTile",
    "GoldTile",
    "SterileTile",
    "Carpet",
    "BurnedWoodPlankFloor",
    "BurnedCarpet",
    "BurnedStrawMatting",
    "TileSandstone",
    "TileGranite",
    "TileLimestone",
    "TileSlate",
    "TileMarble",
    "FlagstoneSandstone",
    "FlagstoneGranite",
    "FlagstoneLimestone",
    "FlagstoneSlate",
    "FlagstoneMarble",
    "Soil",
    "MossyTerrain",
    "MarshyTerrain",
    "SoilRich",
    "Sand",
    "SoftSand",
    "Mud",
    "Ice",
    "BrokenAsphalt",
    "PackedDirt",
    "Underwall",
    "Bridge",
    "WaterDeep",
    "WaterOceanDeep",
    "WaterMovingChestDeep",
    "WaterShallow",
    "WaterOceanShallow",
    "WaterMovingShallow",
    "Marsh",
    "Root",
    "Foods",
    "FoodMeals",
    "FoodRaw",
    "MeatRaw",
    "PlantFoodRaw",
    "AnimalProductRaw",
    "EggsUnfertilized",
    "EggsFertilized",
    "Manufactured",
    "Textiles",
    "Leathers",
    "Wools",
    "Drugs",
    "MortarShells",
    "ResourcesRaw",
    "PlantMatter",
    "StoneBlocks",
    "Items",
    "Unfinished",
    "Artifacts",
    "InertRelics",
    "Neurotrainers",
    "NeurotrainersPsycast",
    "NeurotrainersSkill",
    "Techprints",
    "BodyParts",
    "BodyPartsNatural",
    "BodyPartsSimple",
    "BodyPartsProsthetic",
    "BodyPartsBionic",
    "BodyPartsUltra",
    "BodyPartsArchotech",
    "BodyPartsMechtech",
    "ItemsMisc",
    "Weapons",
    "WeaponsMelee",
    "WeaponsMeleeBladelink",
    "WeaponsRanged",
    "Grenades",
    "Headgear",
    "ApparelArmor",
    "ArmorHeadgear",
    "ApparelUtility",
    "ApparelNoble",
    "HeadgearNoble",
    "ApparelMisc",
    "Buildings",
    "BuildingsArt",
    "BuildingsProduction",
    "BuildingsFurniture",
    "BuildingsPower",
    "BuildingsSecurity",
    "BuildingsMisc",
    "BuildingsJoy",
    "BuildingsTemperature",
    "BuildingsSpecial",
    "Chunks",
    "StoneChunks",
    "Stumps",
    "CorpsesHumanlike",
    "CorpsesAnimal",
    "CorpsesInsect",
    "CorpsesMechanoid",
    "AncientConcreteBarrier",
    "AncientLamppost",
    "Urn",
    "AncientCryptosleepPod",
    "AncientLamp",
    "SculptureSmall",
    "SculptureLarge",
    "SculptureGrand",
    "Snowman",
    "PsychicDronerShipPart",
    "DefoliatorShipPart",
    "ShipChunk",
    "Shuttle",
    "ShuttleCrashed",
    "PsychicDroner",
    "SleepingSpot",
    "DoubleSleepingSpot",
    "DoubleBed",
    "RoyalBed",
    "Bedroll",
    "BedrollDouble",
    "AnimalSleepingSpot",
    "AnimalSleepingBox",
    "AnimalBed",
    "Stool",
    "DiningChair",
    "Armchair",
    "EndTable",
    "Table1x2c",
    "Table2x2c",
    "Table2x4c",
    "Table3x3c",
    "PlantPot",
    "TorchLamp",
    "StandingLamp",
    "SunLamp",
    "Shelf",
    "ShelfSmall",
    "Dresser",
    "HorseshoesPin",
    "HoopstoneRing",
    "GameOfUrBoard",
    "ChessTable",
    "PokerTable",
    "BilliardsTable",
    "MegascreenTelevision",
    "BurningPowerCell",
    "EggBox",
    "OrbitalTradeBeacon",
    "CommsConsole",
    "PodLauncher",
    "ToolCabinet",
    "Grave",
    "Sarcophagus",
    "CryptosleepCasket",
    "MarriageSpot",
    "PartySpot",
    "CaravanPackingSpot",
    "SteleLarge",
    "SteleGrand",
    "PenMarker",
    "UnfinishedMusicalInstrument",
    "CollapsedRocks",
    "MineableSteel",
    "MineableSilver",
    "MineableGold",
    "MineableUranium",
    "MineablePlasteel",
    "MineableJade",
    "MineableComponentsIndustrial",
    "SteamGeyser",
    "Hive",
    "GlowPod",
    "RaisedRocks",
    "PowerConduit",
    "WaterproofConduit",
    "PowerSwitch",
    "WoodFiredGenerator",
    "ChemfuelPoweredGenerator",
    "WindTurbine",
    "Battery",
    "SolarGenerator",
    "GeothermalGenerator",
    "CraftingSpot",
    "ButcherSpot",
    "TableSculpting",
    "TableButcher",
    "HandTailoringBench",
    "ElectricTailoringBench",
    "FueledSmithy",
    "ElectricSmithy",
    "TableMachining",
    "ElectricStove",
    "FueledStove",
    "TableStonecutter",
    "DrugLab",
    "ElectricSmelter",
    "BiofuelRefinery",
    "FabricationBench",
    "SimpleResearchBench",
    "HiTechResearchBench",
    "ElectricCrematorium",
    "HydroponicsBasin",
    "FermentingBarrel",
    "DeepDrill",
    "NutrientPasteDispenser",
    "Hopper",
    "Sandbags",
    "Barricade",
    "TrapSpike",
    "TrapIED_HighExplosive",
    "TrapIED_Incendiary",
    "TrapIED_EMP",
    "TrapIED_Smoke",
    "TrapIED_Firefoam",
    "TrapIED_AntigrainWarhead",
    "Turret_MiniTurret",
    "Bullet_MiniTurret",
    "Gun_MiniTurret",
    "Turret_Autocannon",
    "Bullet_AutocannonTurret",
    "Gun_AutocannonTurret",
    "Turret_Sniper",
    "Bullet_TurretSniper",
    "Gun_TurretSniper",
    "Turret_Mortar",
    "Artillery_Mortar",
    "Turret_FoamTurret",
    "Proj_Foam",
    "Gun_TurretFoam",
    "Turret_RocketswarmLauncher",
    "Proj_Rocket",
    "Gun_RocketswarmLauncher",
    "Ship_Beam",
    "Ship_CryptosleepCasket",
    "Ship_ComputerCore",
    "Ship_Reactor",
    "Ship_Engine",
    "Ship_SensorCluster",
    "PsychicEmanator",
    "VanometricPowerCell",
    "InfiniteChemreactor",
    "Door",
    "Autodoor",
    "AnimalFlap",
    "Wall",
    "Fence",
    "FenceGate",
    "Column",
    "Campfire",
    "Heater",
    "Cooler",
    "Vent",
    "PsychicAnimalPulser",
    "PsychicSoothePulser",
    "AIPersonaCore",
    "MechSerumHealer",
    "MechSerumResurrector",
    "TechprofSubpersonaCore",
    "ThrumboHorn",
    "ElephantTusk",
    "AdministerMechSerumHealer",
    "MealSurvivalPack",
    "MealNutrientPaste",
    "MealSimple",
    "MealFine",
    "MealFine_Veg",
    "MealFine_Meat",
    "MealLavish",
    "MealLavish_Veg",
    "MealLavish_Meat",
    "Kibble",
    "Chocolate",
    "InsectJelly",
    "EggChickenUnfertilized",
    "EggChickenFertilized",
    "EggCobraFertilized",
    "EggIguanaFertilized",
    "EggTortoiseFertilized",
    "EggCassowaryFertilized",
    "EggEmuFertilized",
    "EggOstrichFertilized",
    "EggTurkeyFertilized",
    "EggDuckUnfertilized",
    "EggDuckFertilized",
    "EggGooseUnfertilized",
    "EggGooseFertilized",
    "MedicineHerbal",
    "MedicineIndustrial",
    "MedicineUltratech",
    "ComponentIndustrial",
    "ComponentSpacer",
    "Neutroamine",
    "Chemfuel",
    "ReinforcedBarrel",
    "RawPotatoes",
    "RawFungus",
    "RawRice",
    "RawAgave",
    "RawCorn",
    "RawBerries",
    "Hay",
    "RawHops",
    "PsychoidLeaves",
    "SmokeleafLeaves",
    "Shell_HighExplosive",
    "Bullet_Shell_HighExplosive",
    "Shell_Incendiary",
    "Bullet_Shell_Incendiary",
    "Shell_EMP",
    "Bullet_Shell_EMP",
    "Shell_Smoke",
    "Bullet_Shell_Smoke",
    "Shell_Firefoam",
    "Bullet_Shell_Firefoam",
    "Shell_AntigrainWarhead",
    "Bullet_Shell_AntigrainWarhead",
    "Silver",
    "Gold",
    "Steel",
    "Plasteel",
    "WoodLog",
    "Uranium",
    "Jade",
    "Cloth",
    "Synthread",
    "DevilstrandCloth",
    "Hyperweave",
    "WoolSheep",
    "WoolAlpaca",
    "WoolMegasloth",
    "WoolMuffalo",
    "WoolBison",
    "Leather_Plain",
    "Leather_Dog",
    "Leather_Wolf",
    "Leather_Panthera",
    "Leather_Camel",
    "Leather_Bluefur",
    "Leather_Bear",
    "Leather_GuineaPig",
    "Leather_Human",
    "Leather_Pig",
    "Leather_Light",
    "Leather_Bird",
    "Leather_Chinchilla",
    "Leather_Fox",
    "Leather_Lizard",
    "Leather_Elephant",
    "Leather_Heavy",
    "Leather_Rhinoceros",
    "Leather_Thrumbo",
    "Leather_Patch",
    "UnfinishedSculpture",
    "UnfinishedGun",
    "UnfinishedWeapon",
    "UnfinishedArmor",
    "UnfinishedTechArmor",
    "UnfinishedMetallicTechArmor",
    "UnfinishedApparel",
    "UnfinishedBelt",
    "UnfinishedPack",
    "UnfinishedComponent",
    "UnfinishedHealthItemProsthetic",
    "UnfinishedHealthItemBionic",
    "UnfinishedMask",
    "MinifiedThing",
    "MinifiedTree",
    "Apparel_ShieldBelt",
    "Apparel_CowboyHat",
    "Apparel_BowlerHat",
    "Apparel_TribalHeaddress",
    "Apparel_Tuque",
    "Apparel_WarMask",
    "Apparel_WarVeil",
    "Apparel_SimpleHelmet",
    "Apparel_AdvancedHelmet",
    "Apparel_PowerArmorHelmet",
    "Apparel_ArmorHelmetRecon",
    "Apparel_PsychicFoilHelmet",
    "Apparel_HatHood",
    "Apparel_SmokepopBelt",
    "Apparel_FirefoampopPack",
    "Apparel_PsychicShockLance",
    "Apparel_PsychicInsanityLance",
    "Apparel_TribalA",
    "Apparel_Parka",
    "Apparel_Pants",
    "Apparel_BasicShirt",
    "Apparel_CollarShirt",
    "Apparel_Duster",
    "Apparel_Jacket",
    "Apparel_PlateArmor",
    "Apparel_FlakVest",
    "Apparel_FlakPants",
    "Apparel_FlakJacket",
    "Apparel_PowerArmor",
    "Apparel_ArmorRecon",
    "Apparel_Cape",
    "Bombardment",
    "Mote_Bombardment_PreImpact",
    "PowerBeam",
    "SignalAction_Letter",
    "SignalAction_Ambush",
    "SignalAction_Message",
    "SignalAction_SoundOneShot",
    "SignalAction_OpenDoor",
    "SignalAction_Incident",
    "SignalAction_OpenCasket",
    "SignalAction_Infestation",
    "SignalAction_DormancyWakeUp",
    "SignalAction_StartWick",
    "SignalAction_Delay",
    "DropPodIncoming",
    "DropPodIncomingMechanoid",
    "DropPodLeaving",
    "ShipChunkIncoming",
    "CrashedShipPartIncoming",
    "MeteoriteIncoming",
    "ShuttleCrashing",
    "TriggerUnfogged",
    "TriggerContainerEmptied",
    "Explosion",
    "Blight",
    "TunnelHiveSpawner",
    "RadialTrigger",
    "PawnJumper",
    "Filth_Dirt",
    "Filth_AnimalFilth",
    "Filth_Trash",
    "Filth_Sand",
    "Filth_RubbleRock",
    "Filth_RubbleBuilding",
    "SlagRubble",
    "SandbagRubble",
    "Filth_Blood",
    "Filth_BloodInsect",
    "Filth_MachineBits",
    "Filth_AmnioticFluid",
    "Filth_Slime",
    "Filth_Vomit",
    "Filth_FireFoam",
    "Filth_Fuel",
    "Filth_CorpseBile",
    "Filth_Ash",
    "Filth_Water",
    "Filth_Hair",
    "ActiveDropPod",
    "ActiveDropPodMechanoid",
    "Fire",
    "Spark",
    "ChunkSlagSteel",
    "Sandstone",
    "SmoothedSandstone",
    "ChunkSandstone",
    "BlocksSandstone",
    "Granite",
    "SmoothedGranite",
    "ChunkGranite",
    "BlocksGranite",
    "Limestone",
    "SmoothedLimestone",
    "ChunkLimestone",
    "BlocksLimestone",
    "Slate",
    "SmoothedSlate",
    "ChunkSlate",
    "BlocksSlate",
    "Marble",
    "SmoothedMarble",
    "ChunkMarble",
    "BlocksMarble",
    "Make_StoneBlocksSandstone",
    "Make_StoneBlocksGranite",
    "Make_StoneBlocksLimestone",
    "Make_StoneBlocksSlate",
    "Make_StoneBlocksMarble",
    "MeleeWeapon_BreachAxe",
    "MeleeWeapon_Mace",
    "MeleeWeapon_Gladius",
    "MeleeWeapon_LongSword",
    "MeleeWeapon_Club",
    "MeleeWeapon_Knife",
    "MeleeWeapon_Ikwa",
    "MeleeWeapon_Spear",
    "Bullet_Revolver",
    "Gun_Revolver",
    "Gun_Autopistol",
    "Bullet_Autopistol",
    "Gun_MachinePistol",
    "Bullet_MachinePistol",
    "Gun_IncendiaryLauncher",
    "Bullet_IncendiaryLauncher",
    "Gun_SmokeLauncher",
    "Bullet_SmokeLauncher",
    "Gun_EmpLauncher",
    "Bullet_EMPLauncher",
    "Gun_BoltActionRifle",
    "Bullet_BoltActionRifle",
    "Gun_PumpShotgun",
    "Bullet_Shotgun",
    "Gun_ChainShotgun",
    "Gun_HeavySMG",
    "Bullet_HeavySMG",
    "Gun_LMG",
    "Bullet_LMG",
    "Gun_AssaultRifle",
    "Bullet_AssaultRifle",
    "Gun_SniperRifle",
    "Bullet_SniperRifle",
    "Gun_Minigun",
    "Bullet_Minigun",
    "Gun_TripleRocket",
    "Bullet_Rocket",
    "Gun_DoomsdayRocket",
    "Bullet_DoomsdayRocket",
    "Weapon_GrenadeFrag",
    "Proj_GrenadeFrag",
    "Weapon_GrenadeMolotov",
    "Proj_GrenadeMolotov",
    "Weapon_GrenadeEMP",
    "Proj_GrenadeEMP",
    "Bullet_ChargeBlasterHeavy",
    "Gun_ChargeBlasterHeavy",
    "Bullet_InfernoCannon",
    "Gun_InfernoCannon",
    "Gun_Needle",
    "Bullet_NeedleGun",
    "Bow_Short",
    "Arrow_Short",
    "Pila",
    "Pilum_Thrown",
    "Arrow_Recurve",
    "Bow_Great",
    "Arrow_Great",
    "Gun_ChargeRifle",
    "Bullet_ChargeRifle",
    "Gun_ChargeLance",
    "Bullet_ChargeLance",
    "OrbitalTargeterBombardment",
    "OrbitalTargeterPowerBeam",
    "TornadoGenerator",
    "Gun_ThumpCannon",
    "Bullet_ThumpCannon",
    "Glowstool",
    "Agarilux",
    "Bryolux",
    "Plant_Rose",
    "Plant_Daylily",
    "Plant_Rice",
    "Plant_Potato",
    "Plant_Corn",
    "Plant_Strawberry",
    "Plant_Haygrass",
    "Plant_Cotton",
    "Plant_Devilstrand",
    "Plant_Healroot",
    "Plant_Hops",
    "Plant_Smokeleaf",
    "Plant_Psychoid",
    "Plant_TreeCocoa",
    "BurnedTree",
    "ChoppedStump",
    "SmashedStump",
    "Plant_Ambrosia",
    "Plant_Tinctoria",
    "Dye",
    "Plant_Agave",
    "Plant_PincushionCactus",
    "Plant_SaguaroCactus",
    "Plant_TreeDrago",
    "Plant_Grass",
    "Plant_TallGrass",
    "Plant_Bush",
    "Plant_Brambles",
    "Plant_HealrootWild",
    "Plant_TreeWillow",
    "Plant_TreeCypress",
    "Plant_TreeMaple",
    "Plant_Chokevine",
    "Plant_Dandelion",
    "Plant_Astragalus",
    "Plant_Moss",
    "Plant_Berry",
    "Plant_TreeOak",
    "Plant_TreePoplar",
    "Plant_TreePine",
    "Plant_TreeBirch",
    "Plant_ShrubLow",
    "Plant_Alocasia",
    "Plant_Clivia",
    "Plant_Rafflesia",
    "Plant_TreeTeak",
    "Plant_TreeCecropia",
    "Plant_TreePalm",
    "Plant_TreeBamboo",
    "Bear_Grizzly",
    "Bear_Polar",
    "Ostrich",
    "Emu",
    "Cassowary",
    "Cougar",
    "Panther",
    "Lynx",
    "Cat",
    "YorkshireTerrier",
    "GuineaPig",
    "LabradorRetriever",
    "Husky",
    "Chicken",
    "Duck",
    "Turkey",
    "Goose",
    "Cow",
    "Boomalope",
    "Muffalo",
    "Bison",
    "Dromedary",
    "Goat",
    "Elk",
    "Yak",
    "Caribou",
    "Horse",
    "Donkey",
    "Elephant",
    "Rhinoceros",
    "Hare",
    "Snowhare",
    "Megascarab",
    "Spelopede",
    "Megaspider",
    "Thrumbo",
    "Cobra",
    "Tortoise",
    "Alphabeaver",
    "Pig",
    "WildBoar",
    "Ibex",
    "Deer",
    "Gazelle",
    "Chinchilla",
    "Sheep",
    "Alpaca",
    "Megasloth",
    "Capybara",
    "Squirrel",
    "Rat",
    "Boomrat",
    "Raccoon",
    "Iguana",
    "Warg",
    "Wolf_Timber",
    "Wolf_Arctic",
    "Fox_Fennec",
    "Fox_Red",
    "Fox_Arctic",
    "Mech_CentipedeBlaster",
    "Mech_CentipedeGunner",
    "Mech_CentipedeBurner",
    "Mech_Lancer",
    "Mech_Scyther",
    "Mech_Pikeman",
    "Mech_Termite",
    "MapGen_DefaultStockpile",
    "MapGen_AncientTempleContents",
    "MapGen_AncientPodContents",
    "MapGen_PrisonCellStockpile",
    "MapGen_AncientComplexRoomLoot_Default",
    "DebugCaravanInventory",
    "DebugQuestDropPodsContents",
    "TraderStock",
    "ResourcePod",
    "RefugeePod",
    "Meteorite",
    "VisitorGift",
    "Reward_ItemsStandard",
    "Animal",
    "AnimalConstant",
    "Humanlike",
    "HumanlikeConstant",
    "LordDuty",
    "LordDutyConstant",
    "MainColonistBehaviorCore",
    "MainWildManBehaviorCore",
    "BurningResponse",
    "DigOutIfCannotReachMapEdge",
    "MentalStateCritical",
    "MentalStateNonCritical",
    "LeaveIfWrongSeason",
    "LeaveIfStarving",
    "SatisfyBasicNeeds",
    "SatisfyBasicNeedsAndWork",
    "SatisfyVeryUrgentNeeds",
    "JoinAutoJoinableCaravan",
    "RopedPawn",
    "Despawned",
    "AnestheticHigh",
    "KnowGuestExecuted",
    "KnowColonistExecuted",
    "KnowPrisonerDiedInnocent",
    "KnowColonistDied",
    "BondedAnimalDied",
    "PawnWithGoodOpinionDied",
    "PawnWithBadOpinionDied",
    "MySonDied",
    "MyDaughterDied",
    "MyHusbandDied",
    "MyWifeDied",
    "MyFianceDied",
    "MyFianceeDied",
    "MyLoverDied",
    "MyBrotherDied",
    "MySisterDied",
    "MyGrandchildDied",
    "MyFatherDied",
    "MyMotherDied",
    "MyNieceDied",
    "MyNephewDied",
    "MyHalfSiblingDied",
    "MyAuntDied",
    "MyUncleDied",
    "MyGrandparentDied",
    "MyCousinDied",
    "MyKinDied",
    "DebugBad",
    "DebugGood",
    "AteLavishMeal",
    "AteFineMeal",
    "AteRawFood",
    "AteKibble",
    "AteCorpse",
    "AteHumanlikeMeatDirect",
    "AteHumanlikeMeatDirectCannibal",
    "AteHumanlikeMeatAsIngredient",
    "AteHumanlikeMeatAsIngredientCannibal",
    "AteRottenFood",
    "GotMarried",
    "AttendedWedding",
    "AttendedConcert",
    "HeldConcert",
    "TerribleSpeech",
    "UninspiringSpeech",
    "EncouragingSpeech",
    "InspirationalSpeech",
    "ColonistLost",
    "BondedAnimalReleased",
    "BondedAnimalLost",
    "PawnWithGoodOpinionLost",
    "PawnWithBadOpinionLost",
    "MySonLost",
    "MyDaughterLost",
    "MyHusbandLost",
    "MyWifeLost",
    "MyFianceLost",
    "MyFianceeLost",
    "MyLoverLost",
    "MyBrotherLost",
    "MySisterLost",
    "MyGrandchildLost",
    "MyFatherLost",
    "MyMotherLost",
    "MyNieceLost",
    "MyNephewLost",
    "MyHalfSiblingLost",
    "MyAuntLost",
    "MyUncleLost",
    "MyGrandparentLost",
    "MyCousinLost",
    "MyKinLost",
    "AteWithoutTable",
    "SleepDisturbed",
    "NewColonyOptimism",
    "NewColonyHope",
    "SleptOutside",
    "SleptOnGround",
    "SleptInCold",
    "SleptInHeat",
    "KnowPrisonerSold",
    "FreedFromSlavery",
    "ReleasedHealthyPrisoner",
    "HarvestedOrgan_Bloodlust",
    "KnowGuestOrganHarvested",
    "KnowColonistOrganHarvested",
    "MyOrganHarvested",
    "WasImprisoned",
    "Catharsis",
    "Nuzzled",
    "KnowBuriedInSarcophagus",
    "SoakingWet",
    "KnowButcheredHumanlikeCorpse",
    "ButcheredHumanlikeCorpseOpinion",
    "WitnessedDeathAlly",
    "WitnessedDeathNonAlly",
    "WitnessedDeathFamily",
    "WitnessedDeathBloodlust",
    "KilledHumanlikeBloodlust",
    "DefeatedHostileFactionLeaderOpinion",
    "DefeatedMechCluster",
    "DefeatedInsectHive",
    "DeniedJoining",
    "ColonistBanished",
    "ColonistBanishedToDie",
    "PrisonerBanishedToDie",
    "ColonyPrisonerEscaped",
    "BondedAnimalBanished",
    "FailedToRescueRelative",
    "RescuedRelative",
    "Rescued",
    "TravelAnticipation",
    "OnDuty",
    "AteInImpressiveDiningRoom",
    "JoyActivityInImpressiveRecRoom",
    "SleptInBedroom",
    "SleptInBarracks",
    "Slighted",
    "Insulted",
    "InsultedMood",
    "KindWordsMood",
    "RapportBuilt",
    "HadAngeringFight",
    "HadCatharticFight",
    "HarmedMe",
    "BotchedMySurgery",
    "RescuedMe",
    "RescuedMeByOfferingHelp",
    "RecruitedMe",
    "CrashedTogether",
    "SoldMyLovedOne",
    "SoldMyBondedAnimal",
    "SoldMyBondedAnimalMood",
    "ForcedMeToTakeDrugs",
    "ForcedMeToTakeDrugsMood",
    "ForcedMeToTakeLuciferium",
    "ForcedMeToTakeLuciferiumMood",
    "RebuffedMyRomanceAttempt",
    "RebuffedMyRomanceAttemptMood",
    "FailedRomanceAttemptOnMe",
    "FailedRomanceAttemptOnMeLowOpinionMood",
    "BrokeUpWithMe",
    "BrokeUpWithMeMood",
    "CheatedOnMe",
    "CheatedOnMeMood",
    "DivorcedMe",
    "DivorcedMeMood",
    "RejectedMyProposal",
    "RejectedMyProposalMood",
    "IRejectedTheirProposal",
    "HoneymoonPhase",
    "GotSomeLovin",
    "KilledMyFriend",
    "KilledMyRival",
    "KilledMyLover",
    "KilledMyFiance",
    "KilledMySpouse",
    "KilledMyFather",
    "KilledMyMother",
    "KilledMySon",
    "KilledMyDaughter",
    "KilledMyBrother",
    "KilledMySister",
    "KilledMyKin",
    "KilledMyBondedAnimal",
    "ArtifactMoodBoost",
    "EnvironmentDark",
    "ApparelDamaged",
    "WrongApparelGender",
    "DeadMansApparel",
    "HumanLeatherApparelSad",
    "HumanLeatherApparelHappy",
    "Sick",
    "EnvironmentCold",
    "EnvironmentHot",
    "NeedFood",
    "NeedRest",
    "NeedJoy",
    "NeedComfort",
    "NeedBeauty",
    "NeedRoomSize",
    "NeedOutdoors",
    "NeedIndoors",
    "DrugDesireFascination",
    "DrugDesireFascinationSatisfied",
    "DrugDesireInterest",
    "DrugDesireInterestSatisfied",
    "HospitalPatientRoomStats",
    "Affair",
    "Incestuous",
    "Disfigured",
    "HardWorkerVsLazy",
    "TeetotalerVsChemicalInterest",
    "TeetotalerVsAddict",
    "ChemicalInterestVsTeetotaler",
    "HoldingMePrisoner",
    "Pretty",
    "Ugly",
    "AnnoyingVoice",
    "CreepyBreathing",
    "Man",
    "Woman",
    "TranshumanistAppreciation",
    "BodyPuristDisgust",
    "OpinionOfMyLover",
    "BondedAnimalMaster",
    "NotBondedAnimalMaster",
    "WantToSleepWithSpouseOrLover",
    "ColonistLeftUnburied",
    "Pain",
    "PsychicEmanatorSoothe",
    "DoingPassionateWork",
    "MissingTongue",
    "RotStink",
    "RotStinkLingering",
    "MasochistPain",
    "ProsthophileNoProsthetic",
    "ProsthophileHappy",
    "ProsthophobeUnhappy",
    "BrawlerUnhappy",
    "PyromaniacHappy",
    "PyromaniacNearFire",
    "ClothedNudist",
    "HappyNude",
    "UndergrounderIndoors",
    "UndergrounderUnderground",
    "UndergrounderOutdoors",
    "NightOwlDuringTheDay",
    "NightOwlDuringTheNight",
    "Greedy",
    "Jealous",
    "Ascetic",
    "MoodOffsetSanguine",
    "MoodOffsetOptimist",
    "MoodOffsetPessimist",
    "MoodOffsetDepressive",
    "MoodOffsetTorturedArtist",
    "Base_Neolithic_Standard",
    "Base_Outlander_Standard",
    "Caravan_Neolithic_BulkGoods",
    "Caravan_Neolithic_WarMerchant",
    "Caravan_Neolithic_Slaver",
    "Caravan_Neolithic_ShamanMerchant",
    "Caravan_Outlander_BulkGoods",
    "Caravan_Outlander_CombatSupplier",
    "Caravan_Outlander_PirateMerchant",
    "Caravan_Outlander_Exotic",
    "Orbital_BulkGoods",
    "Orbital_CombatSupplier",
    "Orbital_Exotic",
    "Orbital_PirateMerchant",
    "Visitor_Neolithic_Standard",
    "Visitor_Outlander_Standard",
    "Obedience",
    "Tameness",
    "Nudist",
    "Bloodlust",
    "Kind",
    "Psychopath",
    "Abrasive",
    "TooSmart",
    "Brawler",
    "Masochist",
    "NightOwl",
    "Gay",
    "Bisexual",
    "Asexual",
    "Pyromaniac",
    "Wimp",
    "Nimble",
    "FastLearner",
    "SlowLearner",
    "Undergrounder",
    "Transhumanist",
    "BodyPurist",
    "DislikesMen",
    "DislikesWomen",
    "GreatMemory",
    "Tough",
    "TorturedArtist",
    "Gourmand",
    "QuickSleeper",
    "SpeedOffset",
    "NaturalMood",
    "Nerves",
    "Neurotic",
    "Industriousness",
    "ShootingAccuracy",
    "Immunity",
    "WorldCameraMovement",
    "ReformCaravan",
    "Rescuing",
    "Capturing",
    "ShieldBelts",
    "InteractingWithTraders",
    "Drafting",
    "GroupGotoHereDragging",
    "BuildOrbitalTradeBeacon",
    "AnimalsDontAttackDoors",
    "BillsTab",
    "OpeningComms",
    "DrugPolicies",
    "TVForSickPeople",
    "PrisonerTab",
    "SetGrowingZonePlant",
    "DrugBurning",
    "QueueOrders",
    "Shelves",
    "CameraDolly",
    "CameraZoom",
    "TimeControls",
    "Pause",
    "Stockpiles",
    "Forbidding",
    "GrowingFood",
    "EquippingWeapons",
    "Alerts",
    "WorkTab",
    "ForbiddingDoors",
    "CoverAndShooting",
    "FormCaravan",
    "AnimalTaming",
    "AnimalTraining",
    "InfoCard",
    "StorageTab",
    "HomeArea",
    "SpoilageAndFreezers",
    "AllowedAreas",
    "MedicalOperations",
    "TimeAssignments",
    "ManualWorkPriorities",
    "GettingMoreTraders",
    "TileInspector",
    "Outfits",
    "FirePreparation",
    "HistoryTab",
    "ClickingMessages",
    "ShotAccuracyTooltip",
    "FriendlyFireSafety",
    "TradeGoodsMustBeNearBeacon",
    "ArrestingCreatesEnemies",
    "SwitchFlickingDesignation",
    "MaxNumberOfPlayerSettlements",
    "TradingRequiresPermit",
    "SteamDeckControlsMainMenu",
    "SteamDeckControlsGame",
    "CreateWorldParams",
    "ChooseLandingSite",
    "ReorderCharacters",
    "RandomizeCharacter",
    "AcceptStartingPawns",
    "MapCameraDolly",
    "MapCameraZoom",
    "MakeStockpile",
    "EndStockpileDesignating",
    "UnforbidStartingResources",
    "BuildRoomWalls",
    "BuildRoomDoor",
    "BuildBeds",
    "BuildTorchLamp",
    "BuildAnimalSleepingSpot",
    "BuildHorseshoesPin",
    "MakeGrowingZone",
    "SetToGrowRice",
    "EquipWeapons",
    "BuildFueledStove",
    "AddBillSimpleMeal",
    "MineSteel",
    "ChopTrees",
    "OpenMainTabWork",
    "ChangeWorkSettings",
    "BuildSimpleResearchBench",
    "OpenMainTabResearch",
    "SelectResearchProject",
    "ExpandAreaHome",
    "ExpandAreaBuildRoof",
    "BuildSandbags",
    "FinishSandbags",
    "DownRaider",
    "UndraftAll",
    "ChooseStoryteller",
    "Ranged",
    "MeleePiercer",
    "MeleeBlunt",
    "LongShots",
    "ShortShots",
    "RangedHeavy",
    "RangedLight",
    "Neolithic",
    "Ultratech",
    "Rain",
    "DryThunderstorm",
    "RainyThunderstorm",
    "FoggyRain",
    "SnowHard",
    "SnowGentle",
    "FightFires",
    "PatientGoToBedEmergencyTreatment",
    "PatientGoToBedTreatment",
    "DoctorTendEmergency",
    "DoctorTendToHumanlikes",
    "DoctorTendToSelf",
    "DoctorTendToSelfEmergency",
    "DoctorFeedHumanlikes",
    "DoBillsMedicalHumanOperation",
    "DoctorRescue",
    "DoctorTendToAnimals",
    "DoctorFeedAnimals",
    "DoBillsMedicalAnimalOperation",
    "PatientGoToBedRecuperate",
    "BasicReleasePrisoner",
    "DoExecution",
    "ExecuteGuiltyColonist",
    "TakePrisonerToBed",
    "FeedPrisoner",
    "DeliverFoodToPrisoner",
    "ChatWithPrisoner",
    "TakeRoamingAnimalsToPen",
    "HandlingFeedPatientAnimals",
    "TakeToPen",
    "RebalanceAnimalsInPens",
    "DoBillsCook",
    "DoBillsCookCampfire",
    "DoBillsButcherFlesh",
    "CookFillHopper",
    "DoBillsBrew",
    "HunterHunt",
    "BuildRoofs",
    "RemoveRoofs",
    "ConstructFinishFrames",
    "ConstructDeliverResourcesToFrames",
    "ConstructDeliverResourcesToBlueprints",
    "ConstructRemoveFloors",
    "ConstructSmoothFloors",
    "ConstructSmoothWalls",
    "GrowerHarvest",
    "GrowerSow",
    "PlantsCut",
    "DoBillsMakeWeapons",
    "DoBillsMachiningTable",
    "DoBillsFabricationBench",
    "DoBillsMakeApparel",
    "DoBillsSculpt",
    "DoBillsUseCraftingSpot",
    "DoBillsRefinery",
    "DoBillsProduceDrugs",
    "DoBillsStonecut",
    "DoBillsSmelter",
    "RearmTurrets",
    "UnloadCarriers",
    "HelpGatheringItemsForCaravan",
    "LoadTransporters",
    "HaulCorpses",
    "DoBillsCremate",
    "DoBillsHaulCampfire",
    "HaulGeneral",
    "DeliverResourcesToFrames",
    "DeliverResourcesToBlueprints",
    "HaulMerge",
    "EmptyEggBox",
    "CleanClearSnow",
    "CleanFilth",
    "LongRangeScan",
    "GroundPenetratingScan",
    "StudyThing",
    "Firefighter",
    "Patient",
    "Doctor",
    "PatientBedRest",
    "BasicWorker",
    "Handling",
    "Hunting",
    "Growing",
    "PlantCutting",
    "Tailoring",
    "Art",
    "Hauling",
    "Cleaning",
    "Components",
    "Lakes",
    "Rivers",
    "AncientSites",
    "AncientRoads",
    "Features",
    "AbandonedSettlement",
    "DestroyedSettlement",
    "AttackedNonPlayerCaravan",
    "TravelingTransportPods",
    "RoutePlannerWaypoint",
    "Site",
    "PeaceTalks",
    "Debug_Arena",
  ],
  title: [
    "sewer kid",
    "navy scientist",
    "glitterworld empath",
    "glitterworld surgeon",
    "novelist",
    "charity worker",
    "glitterworld officer",
    "biosphere manager",
    "VR designer",
    "architect",
    "sculptor",
    "medieval farm oaf",
    "medieval lord",
    "medieval minstrel",
    "taster",
    "blacksmith",
    "message carrier",
    "medieval doctor",
    "herbalist",
    "medieval sailor",
    "medieval slave",
    "medieval lordling",
    "convent child",
    "policeman",
    "chef",
    "housemate",
    "inventor",
    "teacher",
    "civil servant",
    "bartender",
    "conceptual artist",
    "evangelist",
    "ascetic priest",
    "escaped convict",
    "nurse",
    "house servant",
    "bodyguard",
    "mathematician",
    "paramedic",
    "gardener",
    "torturer",
    "defector",
    "construction engineer",
    "rancher",
    "low-wage worker",
    "model",
    "geologist",
    "jailbird",
    "actor",
    "veterinarian",
    "explosives expert",
    "counselor",
    "recruiter",
    "drifter",
    "machine collector",
    "con artist",
    "cave explorer",
    "quarry worker",
    "contract miner",
    "logger",
    "ranger",
    "forester",
    "furniture builder",
    "hunter",
    "slaughterer",
    "animal farmer",
    "crop farmer",
    "corporate manager",
    "livestock farmer",
    "vatgrown soldier",
    "sickly child",
    "frightened child",
    "coma child",
    "pyromaniac",
    "mute",
    "war refugee",
    "musical kid",
    "child star",
    "child spy",
    "shop kid",
    "organ farm",
    "medical assistant",
    "cult child",
    "story writer",
    "factory worker",
    "psychiatric patient",
    "human computer",
    "sheriff",
    "urbworld entrepreneur",
    "joywire artist",
    "mafia boss",
    "urbworld drone",
    "urbworld rebel",
    "caveworld illuminator",
    "colony settler",
    "deep space miner",
    "starship janitor",
    "castaway",
    "taxonomist",
    "space tactician",
    "industrial orphan",
    "urbworld urchin",
    "test subject",
    "wreckage explorer",
    "apocalypse survivor",
    "caveworld tender",
    "caveworld tunneler",
    "scout",
    "shelter child",
    "hermit",
    "space pirate",
    "pit brawler",
    "illegal shipwright",
    "gigolo",
    "space marine",
    "assassin",
    "newborn",
    "child",
    "colony child",
    "tribe child",
    "vatgrown child",
    "colonist",
    "tribe member",
    "gatherer",
    "digger",
    "weaver",
    "framer",
    "stew keeper",
    "tamer",
    "carver",
    "healer",
    "hearth tender",
    "warrior",
    "archer",
    "brave",
    "vengeful hunter",
    "muffalo shaman",
    "lore keeper",
    "loner",
    "banished",
    "malingerer",
    "excavator",
    "cave builder",
    "treehouse builder",
    "plank cutter",
    "herder",
    "butcher",
    "abandoned child",
    "reclusive child",
    "scavenger",
    "cave child",
    "sole survivor",
    "vengeful child",
    "fire keeper",
    "hideaway",
    "crash baby",
    "budding artist",
    "bully",
    "bookworm",
    "mad scientist",
    "civil engineer",
    "army cook",
    "urbworld politican",
    "graphic designer",
    "space technician",
    "doomsday pariah",
    "combat engineer",
    "military engineer",
    "coliseum fighter",
    "fighter controller",
    "fervent researcher",
    "vengeful explorer",
    "banished soldier",
    "stalwart farmer",
    "space researcher",
    "genetic scientist",
    "reporter",
    "pop idol",
    "unstable butcher",
    "archaeologist",
    "pirate king",
    "military inventor",
    "engineered pilot",
    "bandit leader",
    "colonial governor",
    "mercenary chef",
    "cargo pilot",
    "space humanitarian",
    "executive officer",
    "rugby player",
    "state engineer",
    "combat negotiator",
    "space station cook",
    "space hunter",
    "political assassin",
    "AI researcher",
    "army scientist",
    "feline scientist",
    "mercenary",
    "microbiologist",
    "ace fighter pilot",
    "brigand",
    "business gangster",
    "paramilitary agent",
    "storyteller",
    "information broker",
    "versatile worker",
    "aerospace engineer",
    "hired muscle",
    "alcoholic trucker",
    "intelligence agent",
    "war chief",
    "involuntary hermit",
    "medical scientist",
    "void raider",
    "midworld sailor",
    "coreworld jeweler",
    "medieval knight",
    "star knight",
    "genetic engineer",
    "ninja assassin",
    "lazy programmer",
    "mindwiped assassin",
    "spaceship salesman",
    "AI programmer",
    "white-hat hacker",
    "vinho king",
    "slave chemist",
    "rocket engineer",
    "planetary diplomat",
    "guardian",
    "renegade engineer",
    "osteologist",
    "gnomebiologist",
    "criminal kingpin",
    "urbworld sex slave",
    "urbworld sergeant",
    "system lord",
    "hunter of the king",
    "energy researcher",
    "bounty hunter",
    "missionary",
    "mercenary pilot",
    "lone traveler",
    "undertaker",
    "hired assassin",
    "spaceship chef",
    "dreaded dude",
    "engineer",
    "minister",
    "pirate",
    "spiceminer",
    "crime lord",
    "marble doctor",
    "mob henchman",
    "mech war veteran",
    "poison gardener",
    "artificer rampant",
    "systems engineer",
    "neuro scientist",
    "pirate captain",
    "hedge fund manager",
    "computer engineer",
    "expert handyman",
    "medic soldier",
    "exiled researcher",
    "villain",
    "space navy doctor",
    "government agent",
    "selfless hunter",
    "acolyte of stars",
    "space raider",
    "spy",
    "wandering healer",
    "cosmetic reject",
    "raider king",
    "frontier marshal",
    "religious hierarch",
    "anarchist rebel",
    "criminal surgeon",
    "sanitation captain",
    "overwatch sniper",
    "sightseer",
    "game tester",
    "wandering crafter",
    "mutinous captain",
    "intimate assassin",
    "corp researcher",
    "AWOL soldier",
    "explorer",
    "starship doctor",
    "fallen official",
    "orbital reservist",
    "shaman of shadows",
    "station security",
    "space trafficker",
    "pop idol pirate",
    "roboticist",
    "chemist",
    "urbworld pimp",
    "particle physicist",
    "defense lawyer",
    "clan chief",
    "faction leader",
    "prosthetic surgeon",
    "soldier-farmer",
    "pirate trooper",
    "combat medic",
    "hired gun",
    "stiletto assassin",
    "battlefield tech",
    "master trader",
    "exotic chef",
    "space explorer",
    "smuggler",
    "destroyer-general",
    "serial murderer",
    "software developer",
    "human trafficker",
    "mental patient",
    "envoy of the stars",
    "clone farmer",
    "gang boss",
    "lost marine",
    "toaster repairman",
    "archotech spy",
    "behaviour research",
    "political activist",
    "flaneur",
    "chief engineer",
    "reptile researcher",
    "blacksmith shooter",
    "addiction counsel",
    "bloodgame survivor",
    "voidspace raider",
    "vagabond",
    "machine fixer",
    "space merchant",
    "beast slayer",
    "drug lieutenant",
    "urbworld enforcer",
    "tool mechanic",
    "craft shaper",
    "mercenary leader",
    "special forces",
    "dromedary knight",
    "battle mechanic",
    "discharged soldier",
    "super soldier",
    "corporate builder",
    "mechanics engineer",
    "plague doctor",
    "network engineer",
    "imperial general",
    "caravaneer",
    "military gunsmith",
    "aromatherapist",
    "rebel fighter",
    "private detective",
    "space bartender",
    "cosmetic surgeon",
    "upright diplomat",
    "video producer",
    "bush sniper",
    "pirate sympathizer",
    "unethical doctor",
    "shock trooper",
    "combat medtech",
    "wildlife ranger",
    "treasure hunter",
    "starfighter pilot",
    "gang soldier",
    "adventurer",
    "bloody wanderer",
    "pirate doctor",
    "bloody dentist",
    "master chef",
    "explorer-writer",
    "militia soldier",
    "warship captain",
    "forest prowler",
    "runaway dancer",
    "prostitute idol",
    "sickly lawyer",
    "tinkerer",
    "rocket pioneer",
    "theater technician",
    "army sergeant",
    "stellar pirate",
    "lost soldier",
    "language analyst",
    "prisoner of war",
    "mad accountant",
    "politician",
    "philosopher",
    "adventurous weirdo",
    "casket builder",
    "military officer",
    "fearful chef",
    "muffalo researcher",
    "artifact hunter",
    "herpetologist",
    "fugitive",
    "gun dealer",
    "colony engineer",
    "deep space surveyor",
    "costume crafter",
    "gunfighter",
    "renowned professor",
    "navy tech officer",
    "king of pirates",
    "space navy tech",
    "space marine medic",
    "technician",
    "mercenary lord",
    "shadow marine",
    "warlordess",
    "commoner lord",
    "tournament fighter",
    "hypnocult leader",
    "art student",
    "vengeful nomad",
    "mod designer",
    "mercenary captain",
    "restorer",
    "Rimworld exile",
    "Streamer",
    "Civil servant",
    "Traveling bard",
    "game developer",
    "fallen prodigy",
    "farm kid",
    "farmer boy",
    "urbworld criminal",
    "optimistic child",
    "urbworld hooligan",
    "indworld urchin",
    "child scientist",
    "mechanoid nerd",
    "coliseum cleaner",
    "officer cadet",
    "reclusive prodigy",
    "work camp slave",
    "disciplined farmer",
    "voyager child",
    "vatgrown medic",
    "core dilettante",
    "aspiring pop idol",
    "farm boy",
    "logical child",
    "station whelp",
    "construction grunt",
    "student engineer",
    "street kid",
    "pizza lover",
    "mercenary recruit",
    "traders' child",
    "corp student",
    "VR addict",
    "nerd",
    "rebel slave",
    "medieval plower",
    "son of a huntress",
    "student socialite",
    "awkward nerd",
    "midworld geek",
    "cat herder",
    "vatgrown assassin",
    "urbworld child",
    "starforce cadet",
    "stableboy",
    "artful dodger",
    "pickpocket",
    "disaster survivor",
    "history student",
    "noble ward",
    "feral child",
    "spoiled child",
    "amateur engineer",
    "street urchin",
    "wild child",
    "hacker prodigy",
    "youth delinquent",
    "hillbilly prodigy",
    "midworld sketcher",
    "coreworld student",
    "medieval squire",
    "star squire",
    "drug mule",
    "artisan farmer",
    "pampered",
    "military child",
    "gang member",
    "fire-scarred child",
    "tech enthusiast",
    "diplomat's child",
    "winerunner",
    "street child",
    "slave farmer",
    "foundry apprentice",
    "privileged prodigy",
    "privileged child",
    "child prodigy",
    "bone collector",
    "g-nome sculptor",
    "circus performer",
    "vatgrown slavegirl",
    "gun kid",
    "feudal lordling",
    "feudal farm boy",
    "space fanboy",
    "glitterworld nerd",
    "war child",
    "upper urbworlder",
    "idealistic cadet",
    "child of glass",
    "amateur botanist",
    "child slave",
    "adventuring child",
    "video gamer",
    "dreaded baby",
    "displaced noble",
    "chess master",
    "orphan",
    "straggler",
    "brutal thief",
    "boy soldier",
    "apocalypse child",
    "orphan of war",
    "imperial student",
    "power-mad scholar",
    "tech-head",
    "abductee",
    "blackjack player",
    "academy student",
    "aspiring engineer",
    "medical student",
    "high baroness",
    "world slider",
    "aspergers rebel",
    "shooting coma",
    "psychology student",
    "space smuggler",
    "blessed child",
    "glitterworld kid",
    "trainee alchemist",
    "military cadet",
    "space cadet",
    "naturalist",
    "drudge",
    "bunker kid",
    "child of drifters",
    "tribal thunderer",
    "gymnast",
    "corp-bred student",
    "military trainee",
    "colony kid",
    "caravan child",
    "re-educated youth",
    "farm mechanic",
    "accursed child",
    "amateur astronomer",
    "farm hand",
    "energetic pop idol",
    "ice planet child",
    "scrounger",
    "toxic child",
    "boy scout",
    "science prodigy",
    "speeder racer",
    "marine cadet",
    "young psychologist",
    "lab-grown child",
    "pit gladiator",
    "factory drone",
    "rich boy",
    "athlete",
    "mechanoid hacker",
    "project subject",
    "hex-cell artist",
    "plague prodigy",
    "poor kid",
    "dreamer",
    "military recruit",
    "kid scientist",
    "help desk worker",
    "medieval thief",
    "traumatized youth",
    "youth soldier",
    "galactic page",
    "apprentice smith",
    "clone-farmed",
    "militant child",
    "killer",
    "professional gamer",
    "data decoder",
    "wolf pack member",
    "rebel student",
    "cadet",
    "ship technician",
    "farmer's daughter",
    "blacksmith's son",
    "joywire addict",
    "child-knave",
    "wasteland wanderer",
    "social pariah",
    "pyro assistant",
    "ritual child",
    "brothel gofer",
    "labor camp orphan",
    "game fanatic",
    "class clown",
    "crime boss' child",
    "sentimental child",
    "dusty farm hand",
    "hacker kid",
    "student",
    "headjack addict",
    "urbworld army brat",
    "plague child",
    "technical kid",
    "young master",
    "caravan traveler",
    "midworld loner",
    "jungle kid",
    "farmer's son",
    "wealthy student",
    "street peddler",
    "bodyguard trainee",
    "ranger child",
    "glitterworld royal",
    "plague survivor",
    "offworld recruit",
    "prodigal student",
    "animal caretaker",
    "adventurous youth",
    "pilot fan",
    "medical helper",
    "country child",
    "rebel writer",
    "exiled prince",
    "new age duelist",
    "spoiled brat",
    "cow farmer",
    "discarded youth",
    "rebel child",
    "midworld cadet",
    "forest child",
    "vatgrown scientist",
    "music idol",
    "sickly liar",
    "iceworld survivor",
    "tragic loner",
    "schoolyard outcast",
    "antisocial child",
    "young pirate",
    "soldier experiment",
    "dedicated student",
    "infantry",
    "angry student",
    "transfer student",
    "desert rat",
    "artistic weirdo",
    "apprentice oracle",
    "junkyard mechanic",
    "empath",
    "animal lab tech",
    "ship child",
    "pet keeper",
    "child researcher",
    "vidtube star",
    "corporate slave",
    "aspiring physicist",
    "quiet nerd",
    "spacer orphan",
    "small town kid",
    "steamworld tinker",
    "abandoned orphan",
    "space nerd",
    "turtle herder",
    "computer geek",
    "freethinker",
    "navy pathfinder",
    "hunter scavenger",
    "computer",
    "commoner heir",
    "rebellious student",
    "spaceyacht pilot",
    "shunned girl",
    "medieval nomad",
    "art slave",
    "orphaned acrobat",
    "curious child",
    "Steward's assisant",
    "Monkey child",
    "Old money heir",
    "Musical kid",
    "punk",
  ],
  titleFemale: [
    "sewer girl",
    "medieval lady",
    "policewoman",
    "housewife",
    "gigolo",
  ],
  titleShort: [
    "sewer boy",
    "scientist",
    "empath",
    "surgeon",
    "novelist",
    "altruist",
    "officer",
    "botanist",
    "game dev",
    "architect",
    "sculptor",
    "oaf",
    "noble",
    "minstrel",
    "taster",
    "blacksmith",
    "messenger",
    "quack",
    "herbalist",
    "sailor",
    "slave",
    "lordling",
    "illicit",
    "policeman",
    "chef",
    "housemate",
    "inventor",
    "teacher",
    "bureaucrat",
    "barkeep",
    "artist",
    "evangelist",
    "priest",
    "escapee",
    "nurse",
    "servant",
    "bodyguard",
    "math prof",
    "paramedic",
    "gardener",
    "torturer",
    "defector",
    "builder",
    "rancher",
    "grunt",
    "model",
    "geologist",
    "jailbird",
    "actor",
    "vet",
    "blaster",
    "counselor",
    "recruiter",
    "drifter",
    "collector",
    "con artist",
    "cave explorer",
    "quarry worker",
    "contract miner",
    "logger",
    "ranger",
    "forester",
    "hunter",
    "slaughterer",
    "animal farmer",
    "farmer",
    "manager",
    "vatgrown",
    "patient",
    "scared",
    "coma child",
    "pyro",
    "mute",
    "refugee",
    "musician",
    "star",
    "spy",
    "shopkid",
    "organ farm",
    "medic",
    "cult kid",
    "writer",
    "worker",
    "computer",
    "sheriff",
    "entrepreneur",
    "joywirer",
    "boss",
    "drone",
    "rebel",
    "illuminator",
    "settler",
    "miner",
    "janitor",
    "castaway",
    "taxonomist",
    "tactician",
    "orphan",
    "urchin",
    "testee",
    "explorer",
    "survivor",
    "cave kid",
    "tunneler",
    "scout",
    "shelterkid",
    "hermit",
    "pirate",
    "brawler",
    "shipwright",
    "courtesean",
    "marine",
    "assassin",
    "newborn",
    "child",
    "colonist",
    "tribal",
    "gatherer",
    "digger",
    "weaver",
    "framer",
    "stewkeeper",
    "tamer",
    "carver",
    "healer",
    "tender",
    "warrior",
    "archer",
    "brave",
    "vengeful",
    "shaman",
    "keeper",
    "loner",
    "banished",
    "malingerer",
    "excavator",
    "cave builder",
    "treehouse builder",
    "plank cutter",
    "herder",
    "butcher",
    "abandoned",
    "reclusive",
    "scavenger",
    "cave child",
    "firekeep",
    "hideaway",
    "crashbaby",
    "bully",
    "bookworm",
    "engineer",
    "cook",
    "politician",
    "designer",
    "technician",
    "pariah",
    "fighter",
    "controller",
    "researcher",
    "outlaw",
    "geneticist",
    "reporter",
    "pop idol",
    "pilot",
    "bandit",
    "gigolo",
    "governor",
    "mercenary",
    "activist",
    "executive",
    "winger",
    "negotiator",
    "huntsman",
    "deathjack",
    "merc",
    "biologist",
    "ace",
    "brigand",
    "gangster",
    "agent",
    "fabulist",
    "broker",
    "experiment",
    "hired thug",
    "alcoholic",
    "chief",
    "Pirate",
    "jeweler",
    "knight",
    "subject",
    "ninja",
    "programmer",
    "mindwipe",
    "salesman",
    "hacker",
    "booze king",
    "chemist",
    "diplomat",
    "guardian",
    "scholar",
    "kingpin",
    "sex slave",
    "sergeant",
    "lord",
    "pest guard",
    "missionary",
    "traveler",
    "undertaker",
    "dude",
    "minister",
    "spiceminer",
    "crime lord",
    "doctor",
    "henchman",
    "veteran",
    "artificer",
    "captain",
    "banker",
    "tech head",
    "handyman",
    "exile",
    "villain",
    "reject",
    "marshal",
    "hierarch",
    "anarchist",
    "sniper",
    "sightseer",
    "tester",
    "crafter",
    "soldier",
    "official",
    "reservist",
    "security",
    "trafficker",
    "roboticist",
    "pimp",
    "physicist",
    "lawyer",
    "leader",
    "trooper",
    "hired gun",
    "trader",
    "smuggler",
    "general",
    "murderer",
    "developer",
    "envoy",
    "cloner",
    "traitor",
    "repairman",
    "AI spy",
    "flaneur",
    "gunsmith",
    "bloodgamer",
    "vagabond",
    "fixer",
    "merchant",
    "slayer",
    "drugman",
    "enforcer",
    "mechanic",
    "shaper",
    "specialist",
    "caravaneer",
    "therapist",
    "detective",
    "bartender",
    "producer",
    "shocktroop",
    "adventurer",
    "wanderer",
    "bad doc",
    "dentist",
    "prowler",
    "dancer",
    "prostitute",
    "tinkerer",
    "rocketeer",
    "lost",
    "linguist",
    "prisoner",
    "accountant",
    "sage",
    "weirdo",
    "artifacter",
    "herper",
    "fugitive",
    "gun dealer",
    "surveyor",
    "costumer",
    "gunfighter",
    "professor",
    "navy tech",
    "techie",
    "merc lord",
    "warlordess",
    "cultist",
    "nomad",
    "modder",
    "restorer",
    "Exile",
    "Streamer",
    "Bureaucrat",
    "Musician",
    "prodigy",
    "farm kid",
    "criminal",
    "optimistic",
    "hooligan",
    "mechanerd",
    "cleaner",
    "cadet",
    "voyager",
    "dilettante",
    "farm boy",
    "logic kid",
    "whelp",
    "street kid",
    "pizza kid",
    "student",
    "VR addict",
    "nerd",
    "plower",
    "socialite",
    "geek",
    "clone",
    "urbkid",
    "stableboy",
    "dodger",
    "pickpocket",
    "ward",
    "feral",
    "spoiled",
    "street rat",
    "wild child",
    "delinquent",
    "hillbilly",
    "sketcher",
    "squire",
    "mule",
    "pampered",
    "military",
    "ganger",
    "scarred",
    "tech nerd",
    "winerunner",
    "street",
    "foundryman",
    "privileged",
    "pupil",
    "performer",
    "slave girl",
    "gun kid",
    "fanboy",
    "war child",
    "high urber",
    "gamer",
    "baby dude",
    "chesshead",
    "straggler",
    "thief",
    "apocalypse",
    "tech-head",
    "abductee",
    "gambler",
    "slider",
    "blessed",
    "glit kid",
    "alchemist",
    "naturalist",
    "drudge",
    "bunker kid",
    "thunderer",
    "gymnast",
    "trainee",
    "colony kid",
    "reeducated",
    "cursed",
    "astronomer",
    "farm hand",
    "ice child",
    "scrounger",
    "toxic",
    "racer",
    "recruit",
    "psych",
    "lab-grown",
    "gladiator",
    "rich boy",
    "athlete",
    "mechacker",
    "poor kid",
    "dreamer",
    "help desk",
    "trauma",
    "page",
    "apprentice",
    "disposable",
    "gang kid",
    "killer",
    "pro gamer",
    "decoder",
    "farm girl",
    "addict",
    "knave",
    "assistant",
    "grifter",
    "sacrifice",
    "gofer",
    "clowny kid",
    "crime kid",
    "nice kid",
    "headjacker",
    "army brat",
    "tech kid",
    "master",
    "jungle kid",
    "peddler",
    "thinker",
    "ranger kid",
    "royalty",
    "caretaker",
    "pilot fan",
    "med helper",
    "hick kid",
    "prince",
    "duelist",
    "brat",
    "discarded",
    "forest kid",
    "music idol",
    "liar",
    "iceborn",
    "outcast",
    "antisocial",
    "infantry",
    "desert rat",
    "oracle",
    "lab tech",
    "ship child",
    "pet keeper",
    "vidtuber",
    "town kid",
    "tinker",
    "space nerd",
    "pathfinder",
    "heir",
    "shunned",
    "acrobat",
    "curious",
    "Steward",
    "Monkey kid",
    "Heir",
    "Music kid",
    "punk",
  ],
  titleShortFemale: [
    "sewer girl",
    "lady",
    "policewoman",
    "housewife",
    "courtesean",
  ],
  baseDesc: [
    "[PAWN_nameDef] grew up in the sludge-smeared sewers of a polluted industrial world.\n\\n[PAWN_pronoun] befriended the strange insects in the darkness, and learned to love them.",
    "Interstellar warfare is won by technology, so glitterworld navies are always on the peak of modern research. Even better, they have first access to archotechnological artifacts because they find them in space.\\n\\n[PAWN_nameDef] worked in a navy lab.",
    "[PAWN_nameDef] had an amazing ability to relate to others and mediate conflict. [PAWN_pronoun] was selected to train as an empath. The training intensified [PAWN_possessive] natural abilities, but [PAWN_pronoun] became unable to harm others.",
    "[PAWN_nameDef] worked as a surgeon on a world mostly free of disease and human suffering.\\n\\n[PAWN_possessive] job mostly involved elaborate and creative cosmetic surgeries. [PAWN_pronoun] has a good understanding of human biology, but never had to remove a cancer — or a bullet.",
    "[PAWN_nameDef] lived on a glitterworld, penning wildly successful novels. [PAWN_pronoun] lived a carefree lifestyle, spending [PAWN_possessive] days writing and [PAWN_possessive] nights partying - and never did a day's manual labour in [PAWN_possessive] life.",
    "Glitterworlds are havens of safety and comfort for those lucky enough to live there, but [PAWN_nameDef] could not ignore nearby planets where people suffered in poverty. [PAWN_pronoun] spent [PAWN_possessive] working life appealing for donations and supporting those in need.",
    "Though glitterworlds are peaceful places, they often remain prepared for war. [PAWN_nameDef]'s unit rarely saw any real action.\\n\\nThough [PAWN_pronoun] pursued [PAWN_possessive] artistic hobbies, [PAWN_possessive] subordinates preferred to entertain themselves by brawling, so [PAWN_nameDef] got good at breaking up fights.",
    "[PAWN_nameDef] lived on a peaceful glitterworld where all menial work was done by robots and people devoted themselves to leisure. [PAWN_pronoun] managed the plant and animal life of a sprawling park, where citizens came to admire the natural beauty.",
    "[PAWN_nameDef] designed virtual reality simulations for glitterworld citizens. [PAWN_pronoun] paid great attention to the details of [PAWN_possessive] worlds, including learning all [PAWN_pronoun] could about plant life to make [PAWN_possessive] landscapes more realistic.",
    "[PAWN_nameDef] designed and constructed buildings. On [PAWN_possessive] glitterworld home, most of the technical aspects of architecture were handled by an AI. This enabled [PAWN_objective] to push the artistic limits of the craft, but also meant [PAWN_pronoun] never had to get [PAWN_possessive] hands dirty at building sites.",
    "[PAWN_nameDef] started off sculpting person-sized chunks of stone, but [PAWN_pronoun] soon began to think bigger. With the help of mining robots, [PAWN_pronoun] learned how to carve huge monuments out of cliffsides. Soon the nature parks of the glitterworld where [PAWN_pronoun] lived were full of giant rock figures.",
    "Tilling, hoeing, guiding ox carts, pushing wheelbarrows. Digging ditches, planting seeds, predicting the harvest.\\n\\nMedieval-level farmers aren't educated in the usual sense, but they know a lot about growing plants without technology. That said, such a life leaves one essentially incapable of participating in intellectual, technology-driven activities.",
    "[PAWN_nameDef] was a lord on a preindustrial planet. [PAWN_pronoun] went to parties, managed the underlings, and even learned some swordplay.\\n\\n[PAWN_possessive] soft hands did not hold a work tool during that entire time. [PAWN_pronoun] considers manual labor to be beneath [PAWN_objective].",
    "[PAWN_nameDef] was a traveling entertainer on a medieval world.\\n\\n[PAWN_pronoun] could always be found telling stories or singing songs, and is capable of protecting [PAWN_objective]self from the dangers of the road. However, [PAWN_pronoun] was always conspicuously absent whenever there was hard labour to be done.",
    "As the taster for a medieval king, any dish served at the royal table had to be sampled first by [PAWN_nameDef]. [PAWN_pronoun] lived a decadent lifestyle at court, getting fat and doing very little work.",
    "As a smith on a medieval world, [PAWN_nameDef] gained a reputation for the high quality of [PAWN_possessive] work. [PAWN_pronoun] wasn't bad at using the swords [PAWN_pronoun] forged either.",
    "On a medieval world, the fastest way to send a message is to give it to somebody on a horse and hope they survive the journey. [PAWN_nameDef] was that somebody.",
    "[PAWN_nameDef] worked as a doctor on a medieval planet. [PAWN_pronoun] firmly believes that most ailments can be cured with a little bloodletting.\\n\\n[PAWN_pronoun] was also a master anaesthetist, developing a specialty technique that involved a heavy blow to the head.",
    "[PAWN_nameDef] lived in the forest near a village. Though many of the villagers feared [PAWN_objective], sick villagers would come to [PAWN_objective] to purchase salves and poultices made from the herbs [PAWN_pronoun] grew in [PAWN_possessive] garden. [PAWN_pronoun] was happy to help them — for a price.",
    "[PAWN_nameDef] explored the oceans on a wooden ship, seeking out plant and animal specimens from exotic places, and occasionally fending off pirates. [PAWN_pronoun] loved the sea so much [PAWN_pronoun] refused to do all but the barest minimum of work on land, except to sell the treasures [PAWN_pronoun] collected.",
    "[PAWN_nameDef] grew up pulling carts and digging holes on a medieval world. Simple manual labor is [PAWN_possessive] oldest companion - along with the master's lash.\\n\\n[PAWN_pronoun] didn't learn to read until age nine.",
    "[PAWN_nameDef] was a minor noble in an old kingdom on a medieval world. [PAWN_pronoun] grew up in a manor made of stone, served by bowing lowerclassmen.\\n\\nSuch a life teaches no technical skills and instils a lifelong aversion to manual labor - but [PAWN_nameDef] learned early the ways of social manipulation.",
    "The child of an illicit affair, [PAWN_nameDef] was bought up by nuns in a medieval convent. [PAWN_pronoun] learned the value of hard work and submission, but was taught that technology is heretical.",
    "[PAWN_nameDef] kept the peace as a line officer in a municipal police force.\r\n\\n[PAWN_pronoun] was trained in de-escalation, physical control, shooting, and other police skills.",
    "[PAWN_nameDef] ran a high-class restaurant. [PAWN_pronoun] was famous among patrons for [PAWN_possessive] creative culinary specialties, and infamous among kitchen workers for [PAWN_possessive] casual disdain for grunt work.",
    "As an adult, [PAWN_nameDef] kept house and cared for children while [PAWN_possessive] spouse worked.",
    "On [PAWN_possessive] homeworld, [PAWN_nameDef] worked as a moderately successful inventor. [PAWN_pronoun] developed several minor technologies.",
    "[PAWN_nameDef] was educated in the liberal arts and taught at a public school. [PAWN_pronoun] was widely knowledgeable and well-liked by [PAWN_possessive] students.",
    "[PAWN_nameDef] worked as a low-ranking administrator for a moribund government bureaucracy. [PAWN_pronoun] is most at home filling out complicated paperwork and playing office politics.",
    "[PAWN_nameDef] worked as a bartender in a seedy establishment. The job was one part drink-mixing, one part diplomacy, and one part head-bashing.",
    "[PAWN_nameDef] was well-known in art circles on [PAWN_possessive] home world for [PAWN_possessive] unique and creative conceptual artworks.\\n\\nNobody was sure exactly what [PAWN_pronoun] was trying to communicate, but [PAWN_possessive] pieces were highly valued by collectors.",
    "As a youth, [PAWN_nameDef] experienced a religious awakening. [PAWN_pronoun] decided to spend the rest of [PAWN_possessive] life spreading the word of [PAWN_possessive] deity, the beauty of its culture, and its unusual medical tradition.",
    "After taking a vow of silence, [PAWN_nameDef] joined a monastery to spend [PAWN_possessive] days in quiet contemplation.\\n\\n[PAWN_pronoun] found happiness growing vegetables in the garden and making cheese in the monastery cellars.",
    "[PAWN_nameDef] denies involvement in the crimes that brought about [PAWN_possessive] incarceration in a brutal penal colony. [PAWN_pronoun] escaped by tunneling beneath the perimeter using modified cutlery.",
    "[PAWN_nameDef] worked in a hospital, doing routine work such as changing bandages and taking temperatures.\\n\\nIt was a busy job, but [PAWN_pronoun] could always find time for a chat with a patient.",
    "[PAWN_nameDef] was a domestic servant to wealthy homeowners.\\n\\n[PAWN_pronoun] got to know the kitchens and basements of [PAWN_possessive] master's mansion well, but never did any work outside.",
    "[PAWN_nameDef] protected whoever paid [PAWN_objective]. [PAWN_pronoun] gained proficiency in many different combat forms, and was known for [PAWN_possessive] ruthlessness against those who crossed [PAWN_objective].",
    "[PAWN_nameDef] did mathematical research at a university.\\n\\n[PAWN_pronoun] spent much of [PAWN_possessive] spare time immersed in shooting simulations, though [PAWN_pronoun] was frequently ridiculed by other players for [PAWN_possessive] terrible aim.",
    "[PAWN_nameDef]'s job was to respond rapidly to medical emergencies. [PAWN_pronoun] is used to dealing with severe injuries with only limited medical supplies.\\n\\n[PAWN_pronoun] treated so many gunshot wounds over the years that even seeing a gun made [PAWN_objective] uncomfortable.",
    "[PAWN_nameDef] worked at the mansion of a powerful family, tending the lavish gardens as part of a team of servants.",
    "Working for a tyrannical dictator, [PAWN_nameDef] earned a reputation as an expert in 'persuasion.' Any prisoner who went down into the dungeons left with no secrets - and with [PAWN_nameDef]'s smile scarred permanently into their nightmares.",
    "Early in [PAWN_possessive] adulthood, [PAWN_nameDef] decided to leave the oppressive dictatorship where [PAWN_pronoun] lived. [PAWN_possessive] defection was not well-received, and agents were sent out after [PAWN_objective].\\n\\n[PAWN_pronoun] spent years on the run, treating [PAWN_possessive] own wounds so no doctor could betray [PAWN_objective]. The ordeal made [PAWN_objective] bitter and untrusting.",
    "[PAWN_nameDef] was a construction worker. [PAWN_pronoun] lead a team which built everything from office blocks to cathedrals.\\n\\n[PAWN_possessive] busy job and numerous nearby fast-food outlets meant [PAWN_pronoun] never cooked for [PAWN_objective]self.",
    "[PAWN_nameDef] owned and operated a successful ranch where [PAWN_pronoun] raised animals for meat and wool.\\n\\n[PAWN_pronoun] refused to do any dumb labour [PAWN_pronoun] could pay someone else to do for [PAWN_objective].",
    "[PAWN_nameDef] worked a variety of casual jobs to support [PAWN_possessive] family, gaining a set of basic hands-on skills.",
    "[PAWN_nameDef] modelled clothes and jewellery for advertisers, and was also used as a physical blueprint for characters in virtual reality simulations.",
    "[PAWN_nameDef] worked with miners and cave-diggers, identifying rock types and natural formations.\\n\\nDuring [PAWN_possessive] years underground [PAWN_pronoun] also gained experience repairing drilling machines and other technical equipment.",
    "[PAWN_nameDef] spent most of [PAWN_possessive] life in prisons, where [PAWN_pronoun] was put to work in the kitchens. [PAWN_pronoun] had a habit of getting into fights, and developed an aggressive way of speaking.",
    "[PAWN_nameDef] travelled with a company of actors, playing to packed theatres and loving audiences everywhere. [PAWN_pronoun] was a perfectionist, and made [PAWN_possessive] own props and costumes rather than use the ones [PAWN_pronoun] was given.",
    "[PAWN_nameDef] treated sick and injured animals for a living. Seeing their suffering affected [PAWN_possessive] stance on the practice of eating meat, and for many years [PAWN_pronoun] lived as a vegetarian.",
    "[PAWN_nameDef] was an explosive engineer employed in mines. [PAWN_pronoun] took [PAWN_possessive] job very seriously and was well-versed in the technicalities - so much so that [PAWN_pronoun] refused to demean [PAWN_objective]self by helping with the clean-up once [PAWN_possessive] carefully-calculated explosion was complete.",
    "A terrifying trauma when [PAWN_nameDef] was a young adult caused [PAWN_objective] to develop a serious eating disorder. With counseling [PAWN_pronoun] learned to have a healthier relationship with food, and decided to put [PAWN_possessive] new skills to use helping others overcome their emotional problems.",
    "[PAWN_nameDef] was part of a revered order of martial artists, infamous both for their skill in combat and for their practice of refusing to treat their wounded.\\n\\n[PAWN_pronoun] travelled [PAWN_possessive] homeworld, judging the young people [PAWN_pronoun] met to determine if they might be suitable for training.",
    "[PAWN_nameDef] never figured out what to do with [PAWN_possessive] life. [PAWN_pronoun] travelled often, taking up casual work wherever [PAWN_pronoun] found it.\\n\\n[PAWN_pronoun] also occasionally worked on a novel that [PAWN_pronoun] knew would be a bestseller - just as soon as [PAWN_pronoun] could find a publisher who was interested.",
    "[PAWN_nameDef] was obsessed with old machines and arcane pieces of technology. [PAWN_pronoun] obtained them wherever [PAWN_pronoun] could, and loved taking them apart to see how they worked.\\n\\n[PAWN_pronoun] had a habit of talking about [PAWN_possessive] collection long after people around [PAWN_objective] had stopped listening.",
    "[PAWN_nameDef] never created anything in [PAWN_possessive] life. [PAWN_pronoun] did, however, prove to be a natural at getting others to give [PAWN_objective] what they had created.",
    "[PAWN_nameDef] made a living mapping out dark tunnels and near-inaccessible crevices in search of valuable minerals. [PAWN_possessive] work was very dangerous, but the pay was good.",
    "[PAWN_nameDef] worked in a quarry helping to extract valuable stone from the hillside. [PAWN_pronoun] learned to sense opportunities and dangers in the stone by sight, touch, and intuition.",
    "[PAWN_nameDef] moved from job to job, extracting minerals and ancient valuables in tunnels and strip-mines. The work was tough and dirty, but [PAWN_pronoun] found it rewarding.",
    "[PAWN_nameDef] took down trees and collected wood in hilly passes and ravines. [PAWN_pronoun] learned both how to fell the trees safely, and how to manage the forest to keep it healthy.",
    "[PAWN_nameDef] tracked animals and people for a wide range of clients. [PAWN_pronoun] became adept at reading spoor, finding food in the wild, and stalking prey.",
    "[PAWN_nameDef] grew and harvested forests. [PAWN_pronoun] understood both the practical challenges of soil types, wind, and rain, as well as the long-term planning of forest growth.",
    "[PAWN_nameDef] grew up near forests. [PAWN_pronoun] spent [PAWN_possessive] time building beautiful furniture for wealthy glitterworld clients.",
    "[PAWN_nameDef] hunted wild animals to help feed [PAWN_possessive] community. When times became tough, others looked to [PAWN_objective] as the one to help people through a tough season.",
    "[PAWN_nameDef] slaughtered animals for a living. Others looked down on this work as filthy, but the skills required to manage and cleanly slaughter large numbers of animals were never simple.",
    "[PAWN_nameDef] raised a variety of animals to provide meat, milk, eggs, and leather.",
    "[PAWN_nameDef] ran a crop farm. [PAWN_pronoun] analyzed soil, agricultural equipment, weather patterns, and price trends to optimize the planting and harvesting of massive crop fields.",
    "[PAWN_nameDef] worked in a massive open-plan office, ensuring that [PAWN_possessive] assigned team of workers stayed mostly on-task.\r\n\\nThe job was intensely political. In order to advance, [PAWN_nameDef] learned how to arrange things so [PAWN_pronoun] could take credit for work done by almost anyone.",
    "[PAWN_nameDef] ran a livestock farm. [PAWN_pronoun] analyzed animal genetics, feed types, birth and slaughter methods, and price trends to optimize the raising of huge animal herds.",
    "[PAWN_nameDef] wasn't made as a person, but as an instrument of destruction. Grown in a bioweapons facility and taught combat during [PAWN_possessive] accelerated growth, [PAWN_nameDef] still has a proclivity for combat of all kinds and an aversion to human contact.",
    "As a child, [PAWN_nameDef] suffered from a rare disease. Quarantined in a hospital, [PAWN_pronoun] had minimal human contact and got little physical exercise. In the sterile hospital environment, however, [PAWN_pronoun] became very familiar with science and medicine.",
    "[PAWN_nameDef] grew up with a laundry list of phobias and neuroses. [PAWN_pronoun] feared, among other things, doctors and foodborne pathogens.\\n\\nAs a result, [PAWN_pronoun] learned to cook and care for [PAWN_objective]self, but many of [PAWN_possessive] fears dog [PAWN_objective] in adulthood.",
    "A childhood accident put [PAWN_nameDef] into a coma. [PAWN_pronoun] didn't wake up until [PAWN_pronoun] was in [PAWN_possessive] late teens. [PAWN_possessive] body never recovered from the years of inactivity, but people tend to take pity on [PAWN_objective] when they hear [PAWN_possessive] story.",
    "From an early age, [PAWN_nameDef] had an unhealthy fascination with fire. [PAWN_pronoun] would set refuse heaps ablaze and become so entranced by the flames [PAWN_pronoun] would absent-mindedly burn [PAWN_objective]self.\\n\\nOne day while playing with matches, [PAWN_pronoun] carelessly burned down [PAWN_possessive] home.",
    "[PAWN_nameDef] was greatly affected by a traumatic event early in [PAWN_possessive] life. For many years [PAWN_pronoun] refused to speak to people, preferring instead to play with [PAWN_possessive] household's numerous pets.",
    "War broke out in [PAWN_nameDef]'s home when [PAWN_pronoun] was a baby. [PAWN_possessive] parents fled with [PAWN_objective], seeking safety wherever they could find it. [PAWN_nameDef]'s earliest memories are of being taught how to defend [PAWN_objective]self.\\n\\nThe violence and destruction [PAWN_pronoun] witnessed left [PAWN_objective] scarred for life.",
    "As a child, [PAWN_nameDef] had a talent for playing musical instruments and singing. [PAWN_pronoun] was given expert training and loved to perform in recitals and concerts, though the lavish praise [PAWN_pronoun] received made [PAWN_objective] a little self-obsessed.",
    "[PAWN_nameDef] was well-known throughout [PAWN_possessive] homeworld as a child actor in films and TV shows. [PAWN_possessive] fame put [PAWN_objective] in contact with many different kinds of people, but also tended to get in the way of [PAWN_possessive] education.",
    "Children are presumed innocent, which makes them excellent spies. [PAWN_nameDef] was trained in the art of infiltration when [PAWN_pronoun] was just a small child.\r\n\\n[PAWN_possessive] years undercover gave [PAWN_objective] experience with social manipulation and lying, but [PAWN_pronoun] never had a normal education.",
    "[PAWN_nameDef]'s mother was often ill, and it fell to [PAWN_objective] to run the store which was their only source of income. [PAWN_pronoun] learned a little about the exotic artifacts which [PAWN_pronoun] sold, and a lot about the art of the deal.",
    "[PAWN_nameDef] was raised in an illegal underground organ farm. [PAWN_possessive] body was used to grow organic implants for wounded mercenaries. Though [PAWN_possessive] upbringing has left [PAWN_objective] haunted, it has also given [PAWN_objective] a unique understanding of human biology.",
    "[PAWN_nameDef] was born during a catastrophic war in which both sides used incendiary weapons. [PAWN_pronoun] grew up helping [PAWN_possessive] parents in an infirmary, treating the cascade of horrific burns from the battlefields. [PAWN_pronoun] was left with a lifelong fear of fire.",
    "[PAWN_nameDef] was born into a powerful cult which shunned advanced technology and believed that all illness could be cured by cleansing the soul through sacred art.\\n\\nAfter [PAWN_possessive] first glimpse of the outside world, [PAWN_pronoun] decided to run away.",
    "As a child, [PAWN_nameDef] was addicted to reading. [PAWN_pronoun] would spend all day in [PAWN_possessive] local library with [PAWN_possessive] nose in a book. When budget cuts forced the library to close, [PAWN_nameDef] was distraught. [PAWN_pronoun] decided to fill the gap by writing [PAWN_possessive] own stories instead.",
    "[PAWN_nameDef] did menial, unskilled work in an industrial factory. [PAWN_possessive] job also included caring for the mules and horses which transported the goods.",
    "[PAWN_nameDef] spent most of [PAWN_possessive] adult life in an insane asylum. [PAWN_possessive] industrial homeworld had a poor understanding of mental illness, and [PAWN_pronoun] was treated more like an animal than a person.\\n\\nThough [PAWN_pronoun] eventually recovered and was released, [PAWN_possessive] experience dampened many of [PAWN_possessive] basic life skills.",
    "[PAWN_nameDef] turned out to have an excellent memory and a gift for performing complex calculations in [PAWN_possessive] head. An industrial-world dictator decided to employ [PAWN_nameDef] to keep track of [PAWN_possessive] state's finances and expenditure.",
    "[PAWN_nameDef] was the law enforcer in an isolated industrial town. [PAWN_pronoun] dealt with petty crime, dispute resolution, and the occasional drunken saloon shootout.",
    "In the urbworlds, most suffer. But someone has to run the corporations.\\n\\n[PAWN_nameDef] learned the skills of the trade - greasing palms and technical analysis. [PAWN_pronoun] is a sociointellectual machine.",
    "[PAWN_nameDef] worked in an urbworld lab developing cutting-edge joywire software to maximize user pleasure.\\n\\nWhen the local government imposed harsh restrictions on joywire manufacturing, [PAWN_pronoun] began selling [PAWN_possessive] products on the black market.",
    "[PAWN_nameDef] was a high-ranking member of an urbworld crime syndicate.\\n\\n[PAWN_pronoun] bribed officials, maintained the loyalty of [PAWN_possessive] subordinates, and extracted overdue payments - by any means necessary.",
    "[PAWN_nameDef] worked as a mindless construction drone on a massive urbworld. Though [PAWN_pronoun] is now freed from the brutal social experiments to which [PAWN_pronoun] was subjected, [PAWN_pronoun] remains incapable of creative thought and leadership.",
    "Most of the people on [PAWN_nameDef]'s world gave up their individuality to join together in an online hivemind. [PAWN_nameDef] joined a rebel faction that rejected technology entirely.",
    "Among tunnel-dwellers, those with vision as strong as [PAWN_nameDef]'s are revered as sages. [PAWN_pronoun] would lead the way, marking spots to dig with bioluminescent fungus and warning others of impending danger.",
    "[PAWN_nameDef] was a settler on a new colony world.\\n\\nSuch a life requires a jack-of-all trades at basic hands-on tasks.",
    "[PAWN_nameDef] did the sweaty, grimy work of pulling metal out of asteroids on a deep space rig. [PAWN_pronoun] used [PAWN_possessive] hands-on industrial skills daily - and wasn't bad in a bar fight either.",
    "While other passengers pass the years between star systems in cryptosleep sarcophagi, [PAWN_nameDef] had to wake up at periodic intervals to perform inspections, check the navigation systems, and to oil the mechanoids.",
    "[PAWN_nameDef] was the only survivor of a ship crash on an unhabited animal world. For many years until [PAWN_possessive] rescue [PAWN_pronoun] scrounged an existence out of whatever [PAWN_pronoun] could find.\\n\\n[PAWN_possessive] survival skills became razor-sharp, but spending so long alone severely dampened [PAWN_possessive] conversatial abilities.",
    "[PAWN_nameDef] travelled between star systems, studying and classifying the plant and animal life [PAWN_pronoun] found in the hopes of creating a complete catalogue.",
    "[PAWN_nameDef] joined the space navy in an unstable system, fraught with large-scale interplanetary wars. [PAWN_pronoun] turned out to have a sharp mind for battle, and became adept at commanding combat units to great effect.",
    "[PAWN_nameDef] never knew [PAWN_possessive] parents. [PAWN_possessive] earliest memories were of drudgery in the mines and workhouses of [PAWN_possessive] industrial world.\\n\\nBecause of this, [PAWN_pronoun] never received a proper education.",
    "The urbworlds - ancient and deep industrial cityscapes bursting with humanity and poison. [PAWN_nameDef] grew up in the dark, unwanted reaches of such a place. [PAWN_pronoun] had to fight for every scrap of food.",
    "On the most corrupt urbworlds, scientists without a moral compass commit unspeakable atrocities in the name of research. [PAWN_nameDef] was kept alone in a sealed facility from birth and subjected to a variety of behavioural experiments in an attempt to turn [PAWN_objective] into a perfect super-soldier.",
    "[PAWN_nameDef] was tasked with watching [PAWN_possessive] family's herds, but often shirked [PAWN_possessive] duties to go exploring the crashed warships scattered around the planet.",
    "[PAWN_nameDef] was born during a time of unrest on [PAWN_possessive] homeworld, as climate change threatened mass starvation and flooding. As [PAWN_pronoun] grew up the situation worsened - billions died and peaceful states descended into anarchy. [PAWN_nameDef] and [PAWN_possessive] parents did whatever they had to to survive.",
    "[PAWN_nameDef] grew up in cave complex deep beneath the surface of an inhospitable world. [PAWN_pronoun] worked with the other children tending the tribe's fungus crops.",
    "[PAWN_nameDef] worked as a digger in the massive underground cave complex.\\n\\n[PAWN_pronoun] knows rock so well that [PAWN_pronoun] can almost navigate caves by smell.",
    "Born to the administrators of a rimworld colony, [PAWN_nameDef] was enrolled in a youth program that taught military scouting skills.\\n\\n[PAWN_pronoun] learned to survive in the wilderness, to obey, and not to ask questions.",
    "[PAWN_nameDef] grew up in a shelter deep beneath a toxic world. [PAWN_pronoun] received a comprehensive education, but had no opportunity to do physical labour.",
    "Worn out by the pressures of social interaction, [PAWN_nameDef] left [PAWN_possessive] crowded city to live a simple life in the wilderness. There, [PAWN_pronoun] spent [PAWN_possessive] days alone, tending [PAWN_possessive] garden and crafting the simple tools [PAWN_pronoun] needed to survive.",
    "Piracy appears everywhere that governments are weak and society spread thin. [PAWN_nameDef] was part of this age-old part of human existence, extorting and smashing peaceful trade ships for profit.",
    "[PAWN_nameDef] was nine years old when [PAWN_pronoun] got in [PAWN_possessive] first fight. [PAWN_pronoun] won, but more important was the enjoyment of [PAWN_possessive] audience. Pit fighting turned out to be a lucrative career for those who could survive it. And it was even mostly legal.",
    "There is a law that says that you're not allowed to put terawatt-range grasers on a cargo scow. Especially if you hide them under what looks like a communications dish for better ambush potential. [PAWN_nameDef] discovered that there is great profit to be made, however, from those who are uninterested in these laws.",
    "[PAWN_nameDef] was used for [PAWN_possessive] body by hundreds of customers in brothels on several planets. [PAWN_pronoun] gained some mental marks and a special kind of street smarts.",
    "[PAWN_nameDef] was a warrior in an Imperial navy. [PAWN_possessive] job was to punch into enemy starships, gun down the crew, and capture the ship intact. And [PAWN_pronoun] was good at it.",
    "[PAWN_nameDef] was a professional assassin. [PAWN_pronoun] was cold, calculating, and made a good profit. In this business, an utter lack of empathy was an asset.",
    "[PAWN_nameDef] is a baby. [PAWN_possessive] life revolves around milk and naps.",
    "[PAWN_nameDef] is a child. The story of [PAWN_possessive] childhood is still being written.",
    "[PAWN_nameDef] grew up in our colony.",
    "[PAWN_nameDef] grew up in our tribe.",
    "[PAWN_nameDef] spent most of [PAWN_possessive] childhood in a growth vat.",
    "[PAWN_nameDef] became an adult in our colony. [PAWN_possessive] story is still being written.",
    "[PAWN_nameDef] became an adult in our tribe. [PAWN_possessive] story is still being written.",
    "[PAWN_nameDef] tracked, trapped and killed animals for their meat and leather.\r\n\\n[PAWN_nameDef] used both ranged and melee weapons. Sometimes, [PAWN_pronoun] hunted alongside animals.",
    "[PAWN_nameDef] chopped trees and hauled their lumber back to the tribe. [PAWN_pronoun] wielded [PAWN_possessive] axe with the finesse of an artist and the force of a charging muffalo.",
    "Using [PAWN_possessive] knowledge of plants, roots, and berries, [PAWN_nameDef] could find food in even the most barren landscapes. [PAWN_pronoun] stayed away from animals.",
    "[PAWN_nameDef] carved living spaces and mined minerals from the sides of hills and mountains. [PAWN_pronoun] learned to feel at home picking through rock and shoring up cave walls.",
    "[PAWN_nameDef] was an expert at working wool, plant fibers and natural dyes into beautiful clothing for [PAWN_possessive] kin. [PAWN_possessive] handicrafts were traded frequently with other settlements.",
    "[PAWN_nameDef] was responsible for erecting structures for [PAWN_possessive] fellow tribespeople to live in. This included both temporary structures for nomadic travel, and permanent settlements. Gathering building materials from local plant life was part of the job.",
    "[PAWN_nameDef] prepared meals from the plants and animals brought in by gatherers, farmers, and hunters of [PAWN_possessive] tribe. [PAWN_pronoun] had to make sure it was calorie-efficient, long-lasting, and healthy. [PAWN_pronoun] often processed and sometime gathered plants [PAWN_objective]self.",
    "[PAWN_nameDef]'s role in [PAWN_possessive] tribe was to connect with the natural world around - especially the world of animals. In addition to fulfilling a spiritual role, [PAWN_pronoun] also tamed wild beasts and cared for them as they served the tribe.",
    "[PAWN_nameDef] carved artworks for [PAWN_possessive] tribe from wood, stone, and occasionally, more exotic materials. The work was sometimes sold, and sometimes kept to beautify settlements and provide a focus for rituals.",
    "After [PAWN_possessive] tribe's elder healer was killed in a raid, [PAWN_nameDef] took on the role. [PAWN_pronoun] spent [PAWN_possessive] days scrounging up herbs and mineral compounds from the nearby area to use in surprisingly effective remedies.",
    "While the others were out hunting and foraging, [PAWN_nameDef] would stay at home to cook and take care of the young and sick.",
    "[PAWN_nameDef] was a fearsome warrior, proficient with many weapons. [PAWN_pronoun] participated in many battles.",
    "[PAWN_nameDef] fought for [PAWN_possessive] tribe. [PAWN_pronoun] and specialized in the use of bows, pila, and other ranged weapons.",
    "[PAWN_nameDef] wielded ikwa, axes, clubs, and other close-ranged weapons in battles for [PAWN_possessive] tribe.",
    "Since [PAWN_possessive] tribe made contact with local outlanders, [PAWN_nameDef] contracted [PAWN_possessive] services out as a guide. Frequent contact with ancient technology made [PAWN_objective] comfortable with the lost machines.",
    "Following the death of a close friend by animal attack, [PAWN_nameDef] hunted the beast responsible. [PAWN_pronoun] tracked it to a nearby village, only to find one of the villagers wearing its pelt.",
    "Because of [PAWN_possessive] quiet wisdom and great strength, [PAWN_nameDef] became the spiritual guide for [PAWN_possessive] tribe. [PAWN_pronoun] had a special connection with the great spirit of the muffalo.",
    "[PAWN_nameDef] was one of a long line of lore keepers in [PAWN_possessive] tribe. Every night around the fire, [PAWN_pronoun] would pass on ancient knowledge and helpful wisdom through stories.",
    "[PAWN_nameDef] never much liked the tribal council or the yearly festivals. [PAWN_pronoun] preferred the open plain and the whistle of wind through the rocks.\r\n\\n[PAWN_pronoun] visited [PAWN_possessive] tribe from time to time, but mostly took care of [PAWN_objective]self using [PAWN_possessive] own survival skills.",
    "[PAWN_nameDef]'s tribe banished [PAWN_objective] following a bloody dispute. [PAWN_pronoun] survived in the wilds alone for a long time.",
    "[PAWN_nameDef] often feigned sickness in order to avoid [PAWN_possessive] responsibilities. While resting in the sick hut, [PAWN_pronoun] told stories to the children.",
    "[PAWN_nameDef] worked at dig sites, extracting valuable items and materials from ancient compacted ruins. [PAWN_pronoun] learned how to spot valuables in the ground and use a variety of excavating tools.",
    "[PAWN_nameDef] labored in mines and caves, digging out spaces for storing items and hiding from threats. [PAWN_possessive] work provided hiding spots for [PAWN_possessive] friends on many occasions.",
    "[PAWN_nameDef] specialized in cave complex excavation and construction.",
    "[PAWN_nameDef] built houses among, and sometimes suspended in, the trees for [PAWN_possessive] people to use while traveling or foraging. [PAWN_nameDef] learned how to best find and use wild plants, and how to fight off wild animals.",
    "[PAWN_nameDef] helped [PAWN_possessive] tribe build huge wooden structures by cutting trees into sturdy planks. [PAWN_nameDef] developed a fine understanding of how wood grows and splits.",
    "[PAWN_nameDef] herded a variety of animals to help feed and clothe [PAWN_possessive] tribe while on the move. [PAWN_nameDef] learned how to calm and direct the beasts, and how to hunt [PAWN_possessive] own meals on the trail.",
    "[PAWN_nameDef]'s main job in the hunting party was the butchering of animals. [PAWN_pronoun] became a master with the knife, able to extract every bit of value from a carcass in a short time.",
    "[PAWN_nameDef] grew up in a tribe, running around the village, moving with the muffalo herds, learning essential skills from [PAWN_possessive] parents.\\n\\n[PAWN_pronoun] never learned to read and never saw a machine that wasn't an ancient ruin.",
    "[PAWN_nameDef] was born sickly. Thinking that [PAWN_pronoun] would only burden the tribe, [PAWN_possessive] parents exposed [PAWN_objective] to the elements. Somehow, [PAWN_pronoun] survived.",
    "[PAWN_nameDef] didn't learn to speak until [PAWN_pronoun] was nearly five years old. Even then [PAWN_pronoun] preferred to keep to [PAWN_objective]self.\r\n\\nTo the chagrin of [PAWN_possessive] caretakers, [PAWN_pronoun] made a habit of wandering off to live in the wilderness for weeks at a time.",
    "[PAWN_nameDef] tended the muffalo herds, keeping them safe from predators and treating sick animals. It was quiet work, but [PAWN_pronoun] enjoyed being away from people.",
    "[PAWN_nameDef] spent [PAWN_possessive] childhood escaping grunt work to go digging through wrecks and ruins for treasures. [PAWN_possessive] natural curiosity got [PAWN_objective] into a lot of trouble, but it also yielded many interesting finds.",
    "[PAWN_nameDef] grew up in a large and intricate cave complex that extended deep into a mountainside. [PAWN_pronoun] helped the adults maintain and improve the deep caves.",
    "[PAWN_nameDef]'s entire tribe was wiped out in a raid. Though [PAWN_pronoun] was adopted by another group, [PAWN_pronoun] was emotionally scarred, and preferred to stay near home, cooking and tending crops.",
    "As a child, [PAWN_nameDef] returned to [PAWN_possessive] village to find that it had been wiped out by bandits. [PAWN_pronoun] swore revenge on the attackers and began a violent rampage across the wilderness.",
    "[PAWN_nameDef] was responsible for keeping the tribe's fire going. [PAWN_pronoun] took this responsibility very seriously.",
    "[PAWN_nameDef]'s overprotective parents encouraged [PAWN_objective] to stay at home nearly every day. Though [PAWN_pronoun] had a lot of time to read and pursue crafting hobbies, [PAWN_pronoun] never developed normal social skills.",
    "As a baby, [PAWN_nameDef] was the only survivor of a deadly spacecraft crash. A passing tribe discovered [PAWN_objective] in the wreckage and adopted [PAWN_objective].",
    "[PAWN_nameDef] had a knack for art. Traders and collectors from many different societies sought to buy [PAWN_possessive] creations.",
    "[PAWN_nameDef] tormented other children for fun. To keep [PAWN_objective] busy, an elder assigned [PAWN_objective] to a hunting party at an early age.",
    "Rather than socialize with the other children, [PAWN_nameDef] preferred to get lost in literature. [PAWN_pronoun] taught [PAWN_objective]self to read at an early age with books bought from passing traders.",
    "Stripped of [PAWN_possessive] life's work and exiled after [PAWN_possessive] unethical experiments on the survivors of the Callos IX incident were published, [PAWN_nameDef] learned the skills necessary to survive in the outer rim.\r\n\r\nContinuing [PAWN_possessive] research with nothing left to lose, [PAWN_pronoun] made minions to carry out the tasks that bored him.",
    "[PAWN_nameDef] was a well-known civil engineer. [PAWN_possessive] job involved designing and maintaining rock fortification structures. [PAWN_pronoun] did enough statistical analysis to keep [PAWN_possessive] mind sharp.",
    "[PAWN_nameDef] joined the army as a worker and spent most of [PAWN_possessive] time cooking and repairing. While [PAWN_pronoun] was stationed on a dangerous planet, [PAWN_pronoun] underwent basic shooting and survival training.",
    "It's no secret that the Companies own much of the urbworlds, but someone has to take the bribes. [PAWN_nameDef] was one such figurehead.\r\n\r\n[PAWN_pronoun] learned how to manipulate the hopes and dreams of the people while living comfortably in a penthouse.",
    "[PAWN_nameDef]' interest in artistic expression led [PAWN_objective] to become a designer. [PAWN_possessive] eye for detail made [PAWN_objective] a reasonably well-known artist on [PAWN_possessive] planet, though [PAWN_possessive] meticulousness often led [PAWN_objective] to spend too much time perfecting a single project.",
    "[PAWN_nameDef] finally managed to flee [PAWN_possessive] criminal life by getting a maintenance job on a nearby space station. [PAWN_pronoun] performed multiple repairing and building operations. [PAWN_pronoun] also used to participate in basic research activities and often defused co-workers' arguments. [PAWN_pronoun] never liked doing art.",
    "[PAWN_nameDef] managed to open a vault of otherworldly technology while scavenging a dig site. [PAWN_pronoun] unwittingly triggered a doomsday device that cleansed the planet of all life. More interested in the tech than human life, [PAWN_pronoun] boarded the vault's spacecraft and departed to find more relics to abuse.",
    "[PAWN_nameDef] was recruited by the military as an engineer and set to work improving the navy's space shuttles. The harsh training taught [PAWN_objective] how to build and repair military vehicles and structures.\r\n\r\nOne mission left [PAWN_nameDef] with pyrophobia and a strong desire to avoid plants.",
    "[PAWN_nameDef] worked as an engineer for a colonial military. [PAWN_pronoun] got to play with weapons, murder-drones, and other 'fun' stuff.\r\n\r\n[PAWN_pronoun] specialized in repairing and modifying mechanoids' tools. Sometimes [PAWN_pronoun] tested them [PAWN_objective]self.",
    "Applying the knowledge that [PAWN_pronoun] gained from years around fighters, [PAWN_pronoun] became a successful gladiator in the coliseum that [PAWN_pronoun] once cleaned.",
    "During the Zartha crisis, [PAWN_nameDef] fought across many worlds, providing the vital link between the ground and the air as a fighter controller. During the campaign, [PAWN_pronoun] saw friends injured and killed. This mental trauma haunts [PAWN_possessive] dreams to this day, but [PAWN_possessive] aim remains sharp.",
    "As a young adult, [PAWN_nameDef] was sure that [PAWN_possessive] planet and its people were nearing their time of transcendence.\r\n\r\nA firm belief that [PAWN_possessive] research would be the catalyst drove [PAWN_objective] to increasingly alarming acts as bureaucrats and bioethics committees worked to stall [PAWN_possessive] progress.",
    "A violent drifter without a home, [PAWN_nameDef] and [PAWN_possessive] father fought many battles across hundreds of years. [PAWN_pronoun] became a grizzled fighter and crack shot.\r\n\r\nAfter [PAWN_possessive] father's death in battle, [PAWN_nameDef] began exploring the stars alone, seeking [PAWN_possessive] father's killer, on the hunt for revenge.",
    "[PAWN_nameDef] became the most physically intimidating of the slaves, spending [PAWN_possessive] little free time obsessively sculpting [PAWN_possessive] body. [PAWN_possessive] efforts eventually paid off when the lord offered [PAWN_objective] a job as a personal bodyguard.\r\n\r\nLater, when [PAWN_pronoun] plotted to use [PAWN_possessive] position to kill the lord and free the slaves, [PAWN_pronoun] was discovered and barely escaped with [PAWN_possessive] life.",
    "With the farm under constant threat from brigands, [PAWN_nameDef] learned to defend [PAWN_objective]self with [PAWN_possessive] father's hunting rifle. [PAWN_pronoun] also mastered how to construct fences to keep livestock in and the local wildlife out. [PAWN_nameDef] tried to paint a picture of [PAWN_possessive] home and learned [PAWN_pronoun] can only draw scribbles and ducks.",
    "[PAWN_nameDef] inherited [PAWN_possessive] parents' ship and carried on their research.\r\n\r\n[PAWN_possessive] childhood experiences with diverse cultures allowed [PAWN_objective] to preserve [PAWN_possessive] caring nature despite spending most of [PAWN_possessive] life isolated in space.",
    "After the war [PAWN_pronoun] joined a genetic engineering firm. [PAWN_pronoun] worked on enhancements for humans and livestock. [PAWN_possessive] experience in inflicting and healing wounds was very beneficial to [PAWN_possessive] work, but [PAWN_pronoun] developed a black sense of humor. This made social gatherings awkward.",
    "[PAWN_nameDef] spent many years as an investigative reporter. [PAWN_pronoun] was notorious for making chaotic reports from exotic locations.\r\n\r\nAlthough seen as a lightweight by [PAWN_possessive] critics, [PAWN_pronoun] managed to break several high-profile stories after lengthy investigations.",
    "[PAWN_nameDef] performed and did interviews constantly. [PAWN_pronoun] refined [PAWN_possessive] skills in dancing and singing, and became a master of social presentation.",
    "[PAWN_nameDef] began hearing voices. The animals were talking to [PAWN_objective], insulting him. [PAWN_pronoun] came to hate them, and eventually killed [PAWN_possessive] furry former friends. [PAWN_pronoun] started selling the meat just to get human interaction.",
    "[PAWN_pronoun] was trapped in an uninspired life. One day, [PAWN_pronoun] jumped on a ship to learn archaeology and see the universe.\r\n\r\n[PAWN_pronoun] learned how to survive. [PAWN_pronoun] also learned about people - although [PAWN_pronoun] understood the dead better than the living.",
    "With no real care for other people, [PAWN_nameDef] fit in perfectly with the pirate crew that had once held [PAWN_objective] captive. Shortly after joining the crew, [PAWN_nameDef] began to kill anyone or anything that got in [PAWN_possessive] way—including [PAWN_possessive] crewmates.",
    "Jackson, in a final act of rebellion, left [PAWN_possessive] father's lab and joined the local Imperial military.\r\n\r\n[PAWN_pronoun] used [PAWN_possessive] laboratory skills to design machines of war. At this [PAWN_pronoun] was one of the best on [PAWN_possessive] planet.",
    'After [PAWN_possessive] province was besieged by one of its neighbors, [PAWN_nameDef] volunteered for a generic modification program that created pilots for the very fighter craft that [PAWN_pronoun] had helped develop. The modifications allowed [PAWN_objective] to pilot the ship, but also made [PAWN_objective] less able to focus on the people around him.\r\n\r\nBy this time, people were calling [PAWN_objective] "Squirrel."',
    "[PAWN_nameDef] rose up the ranks of the crime organization, eventually becoming the leader of one of their most remote cells of bandits. [PAWN_possessive] dog Rest never left [PAWN_possessive] side.",
    "[PAWN_nameDef] sold [PAWN_objective]self into slavery for money to purchase boomrat pizza. [PAWN_pronoun] was then traded to the Zeglar colonies, where [PAWN_pronoun] worked as a male prostitute.\r\n\r\nIn a fluke event, [PAWN_pronoun] managed to join other escaping slaves as they hijacked a ship. After fighting with the captain of the slave crew over the last piece of boomrat pizza, [PAWN_nameDef] was sent off the ship in an escape pod.",
    "Disillusioned by rampant government corruption, [PAWN_nameDef] ran for governor and won. However, the local gangs and their pet officials soon forced [PAWN_objective] out of power.\r\n\r\n[PAWN_pronoun] left the community to return to [PAWN_possessive] life as a marshal.",
    "Following in [PAWN_possessive] family's footsteps, [PAWN_nameDef] was a soldier for hire.\r\n\r\n[PAWN_pronoun] was a naturally gifted sharpshooter. However, [PAWN_possessive] real passion is in perfecting a new recipe or dissecting a new gadget.",
    "[PAWN_nameDef] was brought up by cargo hands on a long-haul ore transport ship. [PAWN_pronoun] perfected [PAWN_possessive] skills at trading and manipulation of people while running weapons between systems.",
    "After seeing the rampant poverty common on overcrowded urban worlds, [PAWN_nameDef] decided to dedicate [PAWN_possessive] life to helping the less fortunate. This crusade taught [PAWN_objective] how to care for the sick and the hungry.",
    "[PAWN_nameDef] was an executive officer for a large space trading corporation. After a failed attempt at manipulating [PAWN_possessive] way up the corporate ladder, [PAWN_pronoun] was framed for the rape and murder of another executive and [PAWN_possessive] family.\r\n\r\n[PAWN_pronoun] was found guilty. However, because of [PAWN_possessive] family's influence, [PAWN_pronoun] was exiled instead of put to death.",
    "After years of addiction to virtual reality games, [PAWN_nameDef] was saved when the doctors unplugged him.\r\n\r\nUnfortunately, they unplugged [PAWN_objective] during a match of Rugby Rampage 4. The mental backlash merged [PAWN_possessive] real identity and [PAWN_possessive] virtual identity, leaving [PAWN_objective] with the personality and skills of a rugby player.",
    "[PAWN_nameDef] enrolled in the state weapons research program.\r\n\r\nWhile brilliant in [PAWN_possessive] work, [PAWN_pronoun] was so enthusiastic in testing [PAWN_possessive] creations that [PAWN_pronoun] accidentally wounded some colleagues and was marked as unfit for service.",
    "After escaping [PAWN_possessive] homeworld, [PAWN_nameDef] took [PAWN_possessive] skills to the stars.\r\n\r\n[PAWN_pronoun] chose to operate as a hired gun, working for various rebel organizations, enslaved groups, and merchant enclaves. [PAWN_possessive] specialty was negotiation in combat situations.",
    "The space station [PAWN_nameDef] came from was far from any populated planets, and was in itself understaffed. For this reason, [PAWN_nameDef] was forced to learn how to cook in order to keep the crew alive. While [PAWN_pronoun] appreciated this learning opportunity, [PAWN_pronoun] didn't appreciate the criticism which came with it, and has had self-esteem issues ever since.",
    "Now a man as well as proficient hunter and marksman, [PAWN_nameDef] yearned for more. [PAWN_pronoun] took leave from [PAWN_possessive] birth world, traveling the great expanse in search of exotic game.",
    "[PAWN_nameDef] realized that [PAWN_possessive] true calling was in physical solutions to diplomatic problems. [PAWN_pronoun] sought training from the assassins guild on Ceti V.\r\n\r\n[PAWN_pronoun] was a quick study at the arts of subterfuge and death. [PAWN_pronoun] soon earned the guild rank of Deathjack.",
    "[PAWN_nameDef] was a renowned researcher in artificial intelligence, robotics, and interactive holography. [PAWN_possessive] friendships with the artificial minds [PAWN_pronoun] created gave [PAWN_objective] the confidence to interact with real people, and [PAWN_pronoun] soon excelled at personal communication.",
    "[PAWN_nameDef] did scientific research for a planetary army. [PAWN_pronoun] studied war scenarios and designed weapon systems to help win battles with a minimum of fuss.",
    "[PAWN_nameDef] became a renowned scientist in the field of felines. Wanting the best for [PAWN_possessive] animals and specializing in selective breeding, [PAWN_pronoun] set out on a journey to find the perfect breeding grounds for [PAWN_possessive] cats.",
    "[PAWN_nameDef] was recruited into the security forces of an off-planet corporation.\r\n\r\n[PAWN_pronoun] defended their ships against pirates and engaged in private space warfare contracts.",
    "[PAWN_nameDef] spent [PAWN_possessive] teenage years as a mercenary, being hired to kill and maim others. [PAWN_pronoun] was tall, menacing, and frightening. [PAWN_pronoun] could instill fear into the hearts of any man who crossed [PAWN_objective], and kill anyone [PAWN_pronoun] wanted.",
    "A plague struck [PAWN_nameDef]'s native urbworld. [PAWN_nameDef] and other researchers revealed that the illness was a bioweapon, but the people turned on them, blaming them for the sickness.\r\n\r\n[PAWN_nameDef] barely escaped [PAWN_possessive] homeworld as it fell into chaos.",
    "[PAWN_nameDef] graduated from the Star Academy with honors and distinguished [PAWN_objective]self as an ace fighter pilot in three campaigns against more advanced aggressor cultures. \r\n\r\nHowever, after one vicious battle, [PAWN_pronoun] found [PAWN_objective]self stranded and [PAWN_possessive] carrier ship destroyed. With nowhere to go, [PAWN_pronoun] entered [PAWN_possessive] escape pod and prayed.",
    "[PAWN_nameDef] flew with a band of brigands [PAWN_pronoun] called friends. [PAWN_pronoun] even had a ship of [PAWN_possessive] own - The Dung Mucker 2000.",
    "[PAWN_nameDef] was specially trained as an operative to be used for high-risk assassinations. [PAWN_possessive] skill with a rifle was unrivalled.\r\n\r\n[PAWN_pronoun] was eventually betrayed by [PAWN_possessive] superiors when a target found out about the hit and offered to fund their future projects. [PAWN_nameDef] swore to never trust anyone again.",
    "Staying one step ahead of the law, [PAWN_nameDef] became a legitimate businessman and silenced anyone who dared say otherwise. As proprietor of brothels, speakeasies and eateries, [PAWN_nameDef]'s good fortune continued while [PAWN_possessive] competition suffered a series of unfortunate and unexplained accidents.",
    "After scraping by on assorted shady jobs, [PAWN_nameDef] joined with a large paramilitary group to fight a war on [PAWN_possessive] homeworld. [PAWN_possessive] role was infiltration and intelligence gathering",
    "[PAWN_nameDef] traveled [PAWN_possessive] world recounting the legends that [PAWN_pronoun] had studied.\r\n\r\nObsessed with the legends of [PAWN_possessive] people, [PAWN_nameDef] seeks someone who can help [PAWN_objective] grow scales on [PAWN_possessive] skin, so [PAWN_pronoun] too can be as the ancients were.",
    "[PAWN_nameDef] caught a ship to the next star system and began a life of travel and learning, quickly collecting a massive bank of knowledge from people of all shapes and sizes.\r\n\r\n[PAWN_pronoun] learned to sell this knowledge for great profit, and became a powerful broker of information.",
    "Spending [PAWN_possessive] later teenage years in a colony of settlers, [PAWN_pronoun] offered what little skills [PAWN_pronoun] had to anyone who would take him.\r\n\r\nBeing a quick learner, [PAWN_pronoun] honed many of [PAWN_possessive] skills and, apart from [PAWN_possessive] crippling inability to understand fire, is now a fully functioning adult.",
    "Kidnapped as a teenager, [PAWN_nameDef] was an unwilling test subject in experimental gene therapies. Labs and scientists scare [PAWN_objective].",
    "[PAWN_nameDef] was an engineer responsible for the production of aircraft and spaceships. [PAWN_pronoun] focused on improving production lines, and was known for [PAWN_possessive] mastery of technical and research issues.",
    "Knowing what life on the streets was truly like, [PAWN_nameDef] slipped into police work. However, a particularly disturbing case ended with [PAWN_objective] beating the perpetrator to death.\r\n\r\nDishonorably discharged from [PAWN_possessive] duties, [PAWN_pronoun] used [PAWN_possessive] contacts and skills to find work as a thug for hire.",
    "[PAWN_nameDef] was a space trucker working for Arcknight Industries when [PAWN_pronoun] killed [PAWN_possessive] wife and daughter in a crash.\r\n\r\n[PAWN_possessive] body was repaired with an experimental nano-genetic therapy. Now [PAWN_possessive] muscles continually regenerate and harden, and every movement tears the tissue anew. [PAWN_pronoun] bears the pain in silence.",
    "Because of [PAWN_possessive] hacking skills, [PAWN_nameDef] was recruited by [PAWN_possessive] home planet's governing body to serve as an intelligence agent. The government trained [PAWN_objective] in combat, but [PAWN_pronoun] prefers psychological warfare.\r\n\r\nGovernment rules proved too strict for [PAWN_objective], so [PAWN_pronoun] went rogue. [PAWN_possessive] current activities are unknown.",
    "[PAWN_nameDef] was a tribal gang leader on a rimworld. For [PAWN_objective], the battlefield is a game, and there is nothing more fun than the fires of war.",
    "[PAWN_nameDef]'s escape pod was jettisoned onto an unexplored region of a frontier world. [PAWN_pronoun] eked out a lonely existence with only a herd of muffalo for company.\r\n \r\nLater, [PAWN_pronoun] was spotted clad in pygmy wombat furs, discussing the importance of hoof hygiene with a group of elderly muffalo.",
    "[PAWN_nameDef] enlisted as a doctor on a passing science vessel. Roaming the stars with a large crew of xenohumans and transbirds, [PAWN_pronoun] did genetic research on encountered species. [PAWN_pronoun] developed a deep friendship with one transbird but was forced to leave the ship when the captain dismissed all non-avians.",
    "Craving adventure and glory, [PAWN_nameDef] set out across the void with a raider band, swearing [PAWN_possessive] loyalty to [PAWN_possessive] band and brothers, and spreading their glory through the stars with [PAWN_possessive] blade and pistol in hand.",
    "[PAWN_nameDef] joined [PAWN_possessive] country's Royal Navy. After years as a non-commissioned officer, [PAWN_pronoun] eventually cracked and used the skills [PAWN_pronoun] had acquired to start a mutiny on [PAWN_possessive] ship.\r\n\r\nIn the end, [PAWN_nameDef] was the leader of a large group of trained and dangerous pirates. [PAWN_pronoun] henceforth always had chefs to cook for him.",
    "After [PAWN_nameDef] had completed all of [PAWN_possessive] surgeries, [PAWN_pronoun] found that [PAWN_pronoun] had a lot of time and energy to dedicate to [PAWN_possessive] passion: trinket crafting. [PAWN_pronoun] spent years perfecting [PAWN_possessive] art as a jeweler, then left [PAWN_possessive] home world to sell [PAWN_possessive] wares across the galaxy.",
    "[PAWN_nameDef] fought for king and country on the battlefield, where [PAWN_pronoun] further honed [PAWN_possessive] skill as a swordsman. [PAWN_possessive] greatest glory was leading a charge into an enemy courtroom and capturing the king at sword point.",
    "Abducted from [PAWN_possessive] medieval homeworld, [PAWN_nameDef] later escaped [PAWN_possessive] captors via an impressive display of swordsmanship.\r\n\r\nFor a moment, as [PAWN_pronoun] drifted in the escape pod, [PAWN_possessive] childhood dream of becoming a knight among the stars felt so real. Then [PAWN_pronoun] crash-landed.",
    "[PAWN_nameDef] enrolled in a scientific study that promised it could make [PAWN_objective] smarter. Unfortunately, the side effects were very different than [PAWN_pronoun] expected.[PAWN_pronoun] went insane and killed a number of people before escaping.",
    "[PAWN_nameDef] carried out [PAWN_possessive] first genetic experiments on farm animals. [PAWN_pronoun] soon grew to become quite skilled in all forms of genetic engineering.\r\n\r\nA horrifying lab accident left [PAWN_objective] with a mortal fear of rodents.",
    "[PAWN_nameDef] performed stiletto-precise assassinations for an interplanetary conglomerate. [PAWN_pronoun] was assigned the most complex missions involving disguise, deception, subterfuge, and efficient violence.\r\n\r\nA nasty incident with a potted plant and an assassination gone wrong left [PAWN_objective] with an aversion to plant life.",
    "[PAWN_nameDef] independently developed software that had a competitive edge against local urbworld corporations.\r\n\r\n[PAWN_possessive] legally questionable methods lead to a growing number in unsolved claims of intellectual property theft.",
    "The corporation took and remade [PAWN_nameDef]. They trained [PAWN_objective] into an tool of destruction and subversion. [PAWN_pronoun] took to [PAWN_possessive] new life, finding satisfaction in the jobs they sent [PAWN_objective] on.\r\n\r\nWhen [PAWN_pronoun] learned that they planned on disposing of [PAWN_objective], [PAWN_nameDef] turned on [PAWN_possessive] masters, killing several and fleeing the planet.",
    "[PAWN_nameDef]'s tests went from geometry to quantum physics, and [PAWN_pronoun] could run the grand gauntlet without a scratch.\r\n\r\nOne day, Mother said that [PAWN_possessive] final test lay beyond the red door, and that even if [PAWN_pronoun] couldn't hear her voice, Mother would always be there.",
    "[PAWN_nameDef] tried [PAWN_possessive] hand at various jobs, including building space rabbit cages and working at a mutant wheat research project. Finally, [PAWN_pronoun] found [PAWN_possessive] true calling as a spacecraft salesman. Specializing in recreational spacecraft, [PAWN_possessive] smooth talk and charming nature served [PAWN_objective] well.",
    "[PAWN_nameDef] enlisted in the military's robotics division, developing smarter combat AI.\r\n\r\nThe whole time [PAWN_pronoun] was there, [PAWN_pronoun] never spoke with another human. [PAWN_pronoun] spent all [PAWN_possessive] time conversing with the AI [PAWN_pronoun] was developing.",
    "From [PAWN_possessive] computer, [PAWN_nameDef] helped rid the online world of bad people.",
    "After prohibition came to Aracena VI, [PAWN_nameDef] expanded [PAWN_possessive] underground liquor business until it dominated the market on two continents. They called [PAWN_objective] the Vinho King.\r\n\r\nThough [PAWN_pronoun] mostly controlled [PAWN_possessive] competition by masterful political maneuvering, [PAWN_pronoun] was not above the occasional beat-down or stiletto assassination.",
    "[PAWN_nameDef] became a gifted pharmaceutical scientist, but was captured by slavers. [PAWN_pronoun] was sold to a warlord and forced to create drugs to test on other slaves. This left [PAWN_objective] with deep and troubling questions on the ethics of scientific research and medicine.",
    "[PAWN_nameDef] won a grant to a top school and earned a degree in rocket engineering. After several years working for a space mining company [PAWN_pronoun] left to travel and see the universe.",
    "[PAWN_nameDef] joined a squad of space marines known for their brutal efficiency at killing. [PAWN_possessive] last name and [PAWN_possessive] lack of emotion during combat inspired [PAWN_possessive] nickname.",
    "[PAWN_nameDef] became a combat engineer. [PAWN_pronoun] built bases, fixed guns, and repaired vehicles for the army - when [PAWN_pronoun] wasn't shooting at people, that is.",
    "[PAWN_nameDef]'s passion and profession was interplanetary politics. [PAWN_pronoun] was a master of social manipulation and negotiation and devoted [PAWN_objective]self to working towards peace, compromise and mutual benefit.",
    "After [PAWN_pronoun] learned what truly matters in life, [PAWN_nameDef] changed for the better. [PAWN_pronoun] learned to work hard and protect the things that matter - not money or material things, but friends and loved ones.\r\n\r\n[PAWN_pronoun] became a professional guardian.",
    "After a daring escape from the prison planet with a small crew of fellow inmates, [PAWN_nameDef] set [PAWN_possessive] gaze on [PAWN_possessive] homeworld.\r\n\r\n[PAWN_pronoun] travelled there, recruited more followers, hijacked a space cruiser, and launched into the void.",
    "After graduating university at the top of [PAWN_possessive] class, [PAWN_nameDef] quickly became a well-known and athletic college professor.\r\n\r\nWith [PAWN_possessive] new found fame and fitness came a sudden reluctance to preform menial labor - such tasks are better left to graduate students.",
    "[PAWN_nameDef] was a xenobiology professor in a glitterworld university. [PAWN_pronoun] went to conferences and managed an art gallery.\r\n\r\nHowever, [PAWN_pronoun] never stopped sculpting yard gnomes, and considers this to be [PAWN_possessive] true profession.",
    "[PAWN_nameDef] discovered [PAWN_possessive] gift - people did what [PAWN_pronoun] said, when [PAWN_pronoun] said it. Taking advantage of this, [PAWN_pronoun] set off for the rimworlds to make a name for [PAWN_objective]self in the criminal underworld.\r\n\r\nHaving people do things for [PAWN_objective] taught [PAWN_objective] to avoid manual labor at all costs.",
    "[PAWN_nameDef] was sold into sexual slavery. Having been designed to be inhumanly attractive and too weak to rebel against [PAWN_possessive] masters, [PAWN_pronoun] was passed between dozens of owners and knew nothing of freedom.",
    "[PAWN_nameDef]'s passion for all things militaristic kept with [PAWN_objective] all the way to adulthood.\r\n\r\nAfter enrolling as a local policeman, [PAWN_pronoun] was soon promoted to sergeant.",
    "For [PAWN_nameDef], ruling a country, or even a planet, was not good enough. [PAWN_pronoun] sought to expand [PAWN_possessive] influence across the system - by legal or extralegal means.",
    "[PAWN_nameDef] was forced to protect [PAWN_possessive] colony in the name of the king after a mysterious outbreak of murderous genetically-modified wildlife.\r\n\r\nDespite [PAWN_possessive] best efforts, [PAWN_possessive] kingdom was destroyed. [PAWN_nameDef] developed PTSD, a hatred of animals and a bad case of technophobia. [PAWN_pronoun] was named for the place they found him.",
    "[PAWN_nameDef] was a passenger on a routine interstellar transit. When [PAWN_possessive] ship was destroyed, [PAWN_pronoun] lived as a castaway on an uninhabited planet for several years.",
    "[PAWN_nameDef] was working on an idea for rapid communication over long distances. [PAWN_pronoun] made an error which destroyed [PAWN_possessive] lab and several nearby buildings. [PAWN_pronoun] fled the planet to escape the authorities.",
    "When the civil war ended, [PAWN_nameDef] had to find a new way to use [PAWN_possessive] fighting skills. [PAWN_pronoun] decided to hunt down war criminals and soon realized that [PAWN_pronoun] enjoyed capturing bad guys by any means necessary.",
    "[PAWN_nameDef] decided to devote [PAWN_possessive] life to religious service. [PAWN_pronoun] made a vow of peace and spent several years preaching and serving food in soup kitchens for the homeless.",
    "[PAWN_nameDef] convinced [PAWN_possessive] squadron to abscond with their ships and make a course for the rimworlds. There they could fight for the causes they believed in.\r\n\r\n[PAWN_possessive] men were loyal and fought hard, but their ideals soon faded away and their cause became that of the highest bidder.",
    "After escaping [PAWN_possessive] homeworld on a jury-rigged ship, [PAWN_nameDef] traveled to new worlds to experience their beauty.\r\n\r\n[PAWN_pronoun] joined resistance groups and applied the skills [PAWN_pronoun] cultivated on [PAWN_possessive] homeworld. [PAWN_pronoun] often warned of the nuclear horror [PAWN_pronoun] saw as a child.",
    "[PAWN_nameDef] roamed, offering grief assistance to those who've had a recent loss. While [PAWN_pronoun] never shied away from physical confrontation, [PAWN_pronoun] prefers to confront tough situations with a calm word.",
    "After escaping a crew of rimworld slavers, [PAWN_nameDef] developed a lack of respect for life. [PAWN_pronoun] proceeded to sign on to a mercenary group where [PAWN_pronoun] developed skills using guns and survival techniques. [PAWN_nameDef] did dirty work where [PAWN_pronoun] found it, and traveled to many worlds.",
    '[PAWN_nameDef] was a master thief, working mostly for organized crime. Over time, [PAWN_pronoun] made a name for [PAWN_objective]self and shifted [PAWN_possessive] business into the paid "removal" of human threats.',
    "[PAWN_nameDef] got a spot on a ship by becoming the ship's cook. [PAWN_pronoun] enjoyed cooking and helping the doctor clean wounds, but [PAWN_pronoun] never got used to cleaning the dishes.",
    "Some followers say that [PAWN_nameDef] and [PAWN_possessive] crew of misfits found the fountain of youth, many, many centuries ago, and that they caused the extinction of the dinosaurs on many planets.\r\n\r\nThere's even a religion about them, somewhere, involving noodles and meatballs.",
    "[PAWN_nameDef] found a job as a tinkering engineer on the trading hub planet Irithir. Tough local traders forced [PAWN_objective] to learn negotiation skills, and [PAWN_pronoun] made good profits selling refurbished weapons and tools.",
    "[PAWN_nameDef] managed to secure an important position in the government of a minor glitterworld. [PAWN_pronoun] got used to the opulence, while attempting to keep [PAWN_possessive] citizens content. [PAWN_pronoun] had ample time for pleasure and indulgence – though [PAWN_pronoun] never forgot how to do hard work.",
    "As a pirate leader, [PAWN_nameDef] was well-known for [PAWN_possessive] cunning plans and chess-like traps. [PAWN_pronoun] was never afraid to sacrifice a few pawns to capture an important target.\r\n\r\n[PAWN_possessive] name has been linked more then once to strategies that overcame overwhelming odds.",
    "[PAWN_nameDef] was a self-employed bounty hunter. [PAWN_pronoun] spent [PAWN_possessive] days hunting space pirates and collecting cash bounties.",
    "[PAWN_nameDef] made [PAWN_possessive] mark on the universe as a spice miner assigned to the lucrative mining colony of Rural Pen'The.\r\n\r\nLittle did [PAWN_pronoun] know, [PAWN_nameDef] was about to embark on a career path that would change [PAWN_possessive] life.",
    "Through brutality and cruelty, [PAWN_nameDef] rose to become a crime lord.\r\n\r\n[PAWN_pronoun] relied less on [PAWN_possessive] fists and more on [PAWN_possessive] guns. [PAWN_possessive] reputation spread quickly due to [PAWN_possessive] cold-bloodedness and ruthless methods.",
    "On a bomb-blasted world, first aid is often the only aid.\r\n\r\n[PAWN_nameDef] used [PAWN_possessive] medical skills to help the injured and the sick. [PAWN_pronoun] believed that while guns and machines may be powerful, a doctor is even more so.",
    'After being "saved" from [PAWN_possessive] home world by a slaver ship, [PAWN_nameDef] was sold to an urbworld crime lord, where [PAWN_pronoun] was used as a henchman. [PAWN_pronoun] specialized in low-tech beat-downs and intimidation.',
    "[PAWN_nameDef] fought against swarms of rogue mechanoids since [PAWN_pronoun] was old enough to enlist. [PAWN_pronoun] has bled on half a dozen worlds and has lost more than [PAWN_pronoun] cares to recall. These experiences left [PAWN_objective] hardened, both mentally and physically.",
    "[PAWN_nameDef] spent almost all [PAWN_possessive] time tending to a poison garden and became withdrawn from society.\r\n\r\nIn that time [PAWN_pronoun] learnt a few safe culinary and medicinal uses for the otherwise deadly plants.",
    "Fuelled by the thrill of discovery and [PAWN_possessive] own megalomania, [PAWN_nameDef] set out to invent new devices and improve existing ones, breaking laws and customs as necessary.\r\n\r\n[PAWN_pronoun] formed a crew to gather materials for [PAWN_possessive] work - and to deal with outsiders who might interfere.",
    "Like [PAWN_possessive] father, [PAWN_nameDef] was a systems engineer. [PAWN_pronoun] was qualified in both colony and ship systems.\r\n\r\nWhen not working, [PAWN_pronoun] would make mechanical figurines, read old books, or occasionally travel to uncharted worlds. Being introverted, [PAWN_pronoun] did these things mostly alone.",
    "[PAWN_nameDef] worked for a long time to improve mankind's understanding of the human brain.\r\n\r\nAfter succeeding in mapping the whole brain, [PAWN_nameDef] joined a team of scientists on a quest to map the brains of the most exotic altered humans.",
    "[PAWN_nameDef] worked [PAWN_possessive] way up through the ranks of a pirate ship, eventually becoming captain. [PAWN_pronoun] leads [PAWN_possessive] crew between worlds, making a name to remember.",
    "A top hedge fund manager on a teeming urbworld, [PAWN_nameDef]'s portfolio grew rapidly as [PAWN_pronoun] charmed clients with a sweet voice and devious intent. When the deal turned out too good to be true, [PAWN_pronoun] was forced to flee the planet with a bounty on [PAWN_possessive] head.\r\n\r\nAs [PAWN_pronoun] travelled the stars [PAWN_pronoun] found a passion in the arts, making masterpieces fit for high society customers.",
    'Bored of [PAWN_possessive] code-monkey office job and missing the glory days of the Academy, [PAWN_nameDef] saw a commercial about the frontier where "only the strong survive".\r\n\r\nWith [PAWN_possessive] wife Morgan, [PAWN_nameDef] undertook a journey into the unknown.',
    "[PAWN_nameDef] worked as a traveling engineer. [PAWN_pronoun] fixed things ranging from a simple communications array to the intricate software harness enveloping [PAWN_possessive] ship's AI persona. Nothing is beyond repair for [PAWN_objective].",
    "[PAWN_nameDef] enrolled in [PAWN_possessive] planetary army as a frontline medic. [PAWN_pronoun] soon knew the horrors of war and was deeply marked by them.\r\n\r\n[PAWN_pronoun] left the military and [PAWN_possessive] homeworld and began researching medicine and helping those [PAWN_pronoun] came across.",
    "[PAWN_nameDef]'s love of robotics was not appreciated in [PAWN_possessive] technophobic empire. The High Cardinal of the system excommunicated her, and [PAWN_pronoun] was never allowed to return.",
    "After rising to the top of [PAWN_possessive] criminal band, [PAWN_nameDef] was taught the arts of villainy, from handling firearms to developing new weapons technologies. [PAWN_pronoun] excelled at bending others to [PAWN_possessive] will.",
    "[PAWN_nameDef] served several tours as a doctor on one of the few warships defending [PAWN_possessive] homeworld. [PAWN_pronoun] learned combat skills while fighting occasional pirate boarding parties, and became an expert at treating gruesome combat wounds.",
    "[PAWN_nameDef] worked for the government against rebel groups and excelled in this capacity. During [PAWN_possessive] training [PAWN_pronoun] was taught firearms, melee combat and medical skills.\r\n\r\nHaving grown up in a war-ravaged city, dirt, blood and dead bodies don't bother [PAWN_objective] and [PAWN_pronoun] sees no reason to clean them up.",
    "[PAWN_nameDef] was a hunter of mysterious creatures that many didn't even believe existed. Sometimes the people were right - and sometimes they were wrong.\r\n\r\nAlong the way, [PAWN_pronoun] helped people in need.",
    "Ever the dreamer, [PAWN_nameDef] traveled across the universe to find the thing [PAWN_pronoun] felt was calling to him.\r\n\r\n[PAWN_pronoun] became poorer and poorer, but used every means possible to carry on.",
    "[PAWN_nameDef] was the leader of a spaceborne pirate crew. Skipping between the rimworlds, [PAWN_pronoun] became the feared enemy of many settlements.",
    "[PAWN_nameDef] was trained by [PAWN_possessive] government in infiltration and espionage. [PAWN_pronoun] learned to keep a cool head and to talk [PAWN_possessive] way out of tight situations. When talking didn't work, [PAWN_pronoun] was capable of more violent direct action.",
    "[PAWN_nameDef] studied to be a doctor, but was dissatisfied with [PAWN_possessive] practice on an otherwise peaceful midworld.\r\n\r\nInstead, [PAWN_pronoun] chose to pull up roots and travel to the rimworlds in order to care for people who needed [PAWN_objective] most.",
    "Living on the streets, [PAWN_nameDef] submitted [PAWN_objective]self to an unethical cosmetics lab in exchange for food and shelter.\r\n\r\nAfter some painful cosmetic modification, [PAWN_nameDef] barely resembles [PAWN_possessive] former self. Having been forced to work for the lab until [PAWN_pronoun] was rescued, [PAWN_nameDef] is now too afraid to lash out at anyone.",
    "Starting as nothing more than a slave, [PAWN_nameDef] rose quickly among the raider ranks until all knew [PAWN_possessive] name and [PAWN_possessive] ruthlessness.",
    "[PAWN_nameDef] was the marshal of [PAWN_possessive] colony. [PAWN_pronoun] tried to honorably uphold the law, but the corrupt local mayor killed [PAWN_possessive] family and left [PAWN_objective] for dead.\r\n\r\nAfter regaining [PAWN_possessive] health, [PAWN_nameDef] arrested the mayor. [PAWN_pronoun] left [PAWN_possessive] homeworld and started a new life working to make a difference in the universe.",
    "Ordained as a priest in [PAWN_possessive] local community, [PAWN_nameDef] used intrigue and diplomacy to rise to the higher echelon of the clergy. [PAWN_pronoun] held numerous titles and lands.\r\n\r\nOne day, a merchant landed [PAWN_possessive] spaceship near [PAWN_nameDef]'s home. [PAWN_pronoun] decided to accompany the merchant in search for new worlds and challenges.",
    "After being abandoned on a special operation, [PAWN_nameDef] swore vengeance upon the state. [PAWN_pronoun] formed an anarchist group dedicated to bringing down coreworld governments.\r\n\r\nAfter too many close calls, and too few successes, [PAWN_nameDef] fled to the outer rim.",
    "Being near many injured fellow criminals, [PAWN_nameDef] took it upon [PAWN_objective]self to work on them.\r\n\r\nAlthough many people died, [PAWN_pronoun] did get better at using knives.",
    'After graduating officer training school, [PAWN_nameDef] was assigned to main battle deck on the Thunder-Child. [PAWN_pronoun] served there for a year before [PAWN_possessive] "gallant" actions saw [PAWN_objective] reassigned to the maintenance corps.\r\n\r\nIt was with the maintenance corps [PAWN_pronoun] was dubbed [PAWN_nameDef] on account of [PAWN_possessive] legs.',
    "[PAWN_nameDef] didn't know why [PAWN_pronoun] joined the military, but [PAWN_pronoun] stayed to protect [PAWN_possessive] fellow soldiers.\r\n\r\nArmy life broke [PAWN_objective] down and built [PAWN_objective] back up. It taught [PAWN_objective] marksmanship, hand to hand combat and how to patch a bullet wound in a hurry.",
    "[PAWN_nameDef] traveled the stars. [PAWN_pronoun] could barely scrape together travel costs doing odd-jobs, but it was all worth it.\r\n\r\n[PAWN_pronoun] loved camping in exotic places and learning the patterns of strange wildlife. [PAWN_pronoun] never could focus on intellectual endeavors, as [PAWN_possessive] sightseeing distracted [PAWN_objective] far too much.",
    "Making a new life on a barely-livable planet after nuclear war, [PAWN_nameDef] was able to fulfill [PAWN_possessive] desires with money borrowed from [PAWN_possessive] father.\r\n\r\n[PAWN_pronoun] loved playing a particular colony simulator. [PAWN_possessive] favorite thing to do in the game was to build elaborate hospitals. Spending most of [PAWN_possessive] time playing, [PAWN_pronoun] forgot horrors of war and [PAWN_possessive] need for revenge.",
    "[PAWN_nameDef] continued to follow [PAWN_possessive] parents' nomadic ways, supporting [PAWN_objective]self with [PAWN_possessive] crafting skills. But wandering is a hard life, and [PAWN_pronoun] often thought of finding somewhere to settle down and put [PAWN_possessive] skills to good use.",
    "[PAWN_nameDef] was taken to the stars by slavers after [PAWN_possessive] tribe was decimated in a raid. Over the years [PAWN_pronoun] learned the language of [PAWN_possessive] captors, eventually working for them as an interpreter and diplomat.\r\n\r\nThe captain only learned of [PAWN_nameDef]'s true cunning when revenge was taken by form of mutiny.",
    "[PAWN_nameDef] was a professional assassin. [PAWN_pronoun] was sadistic, calculating, and appeared utterly harmless.\r\n\r\n[PAWN_pronoun] preferred using intimate means to dispatch [PAWN_possessive] targets. This fulfilled both [PAWN_possessive] contracts and [PAWN_possessive] own personal desire for control.",
    "[PAWN_nameDef] was a leading researcher for a massive space exploration corporation.",
    "[PAWN_nameDef] lived in a remote colony. When mechanoid centipedes attacked [PAWN_possessive] home and killed [PAWN_possessive] people, [PAWN_pronoun] was the last survivor.",
    "[PAWN_nameDef] was an infantryman.\r\n\r\nWhen [PAWN_pronoun] was informed of [PAWN_possessive] assignment to the Xennoa-Zartza War, [PAWN_pronoun] decided [PAWN_pronoun] did not want to be a soldier. [PAWN_pronoun] was able to escape via military spacejet.",
    "[PAWN_nameDef] traveled from planet to planet, gathering samples, stories, and research. [PAWN_pronoun] hoped one day to compile a record of every animal, plant, mineral, and machine and device in known space: The Complete Traveler's Guide to the RimWorlds.",
    "[PAWN_nameDef] was a doctor on a starship. [PAWN_pronoun] was a brilliant surgeon and dabbled in research of [PAWN_possessive] own. However, [PAWN_pronoun] was quite reclusive and never had the best bedside manner.",
    "[PAWN_nameDef] was a bounty hunter on a massive glitterworld. [PAWN_pronoun] worked sensitive assignments for extremely wealthy clients, and was known for quiet execution and total discretion.",
    "[PAWN_nameDef] was an official for an autocratic government.\r\n\r\nWhen [PAWN_possessive] superiors demanded [PAWN_pronoun] participate in atrocities, [PAWN_nameDef] resigned and escaped from [PAWN_possessive] homeworld with nothing but the clothes on [PAWN_possessive] back.",
    "When the government declared that it would strengthen its military defenses, [PAWN_nameDef] was drafted and trained.\r\n\r\n[PAWN_pronoun] was stationed on an orbital base, manning the defense systems and, in dire situations, descending in a dropship to the surface.",
    "When the monsters of fire came from the sky, [PAWN_nameDef] was called upon by [PAWN_possessive] tribe to guide them into battle.\r\n\r\n[PAWN_nameDef] made use of medicines and rituals to inspire and lead the warriors of many tribes against the invaders. The pirates were forced to retreat without capturing a single slave.",
    "[PAWN_nameDef] was commissioned as a special constable on a network of space stations. There [PAWN_pronoun] prevented illegal human trafficking.\r\n\r\nOnce, fire broke out on the station, and [PAWN_pronoun] saved many from the flames. Since then, [PAWN_pronoun] has avoided fires.",
    '[PAWN_nameDef] discovered [PAWN_pronoun] was heir of [PAWN_possessive] distant uncle\'s weapons-trading business.\r\n\r\nTo protect the future of the company [PAWN_pronoun] went through extensive military training, in case of any "unforeseen circumstances".',
    "[PAWN_nameDef] and [PAWN_possessive] fans set out as a space pirate crew. [PAWN_pronoun] raided corporations for money and staged performances to spread [PAWN_possessive] name.\r\n\r\n[PAWN_nameDef] became afraid of fire when a rival burned [PAWN_possessive] stage down. [PAWN_pronoun] relied on [PAWN_possessive] fans to do the work [PAWN_pronoun] found unappealing.",
    "Sailors often died on the dangerous waters of [PAWN_nameDef]'s ocean planet. [PAWN_pronoun] created robots to replace them.\r\n\r\nOver time, [PAWN_pronoun] collected a small crew of robots to do [PAWN_possessive] bidding. [PAWN_pronoun] became proficient at mechanics and engineering, but lost the taste for manual labor.",
    "[PAWN_nameDef] was a renowned chemist on a thriving midworld.\r\n\r\nAfter performing inhumane experiments that turned men into beasts, [PAWN_pronoun] was arrested and banished to a far-off rimworld.",
    "With the farm under constant threat from brigands, [PAWN_nameDef] learned to defend [PAWN_objective]self with [PAWN_possessive] father's rifle. [PAWN_pronoun] also mastered how to construct walls to keep livestock in and predators out.\r\n\r\n[PAWN_pronoun] once tried to paint a picture of [PAWN_possessive] home, but discovered that [PAWN_pronoun] could only draw scribbles and ducks.",
    "At first, [PAWN_nameDef] made a small profit from selling drugs. Then, [PAWN_pronoun] switched to selling women and made a fortune.\r\n\r\n[PAWN_pronoun] developed great skills with [PAWN_possessive] fists. [PAWN_pronoun] also learned to fix up the injuries [PAWN_pronoun] inflicted on the girls.",
    "[PAWN_nameDef] performed cutting-edge physics research. [PAWN_pronoun] wanted to help build a better and more peaceful future.",
    "[PAWN_nameDef] found that [PAWN_pronoun] could make more money with a quick word than a blaster. Seeking a job where [PAWN_possessive] silver tongue could be useful, [PAWN_pronoun] turned to the law.\r\n\r\n[PAWN_pronoun] often defended the illegal speeder racers [PAWN_pronoun] grew up with.",
    "[PAWN_nameDef] lived alone, deep in a forest. [PAWN_pronoun] protected the wildlife against poachers, and learned to satisfy [PAWN_possessive] own material needs without outside help.",
    "[PAWN_nameDef] managed a small criminal clan on an outlying trade hub world.",
    "Early in [PAWN_possessive] adulthood, [PAWN_nameDef] found [PAWN_objective]self surrounded by a gaggle of low-lifes. \r\n\r\nFor fun, [PAWN_pronoun] gathered them and lead them to a certain death. [PAWN_pronoun] knew then that [PAWN_pronoun] had the talent to realize [PAWN_possessive] ambitions of leadership.",
    "[PAWN_nameDef] used [PAWN_possessive] talent for prosthetics to 'advance' others by replacing limbs and organs with metal and electronics.",
    "[PAWN_nameDef] was sold to a corporation and put to work as a corporate slave doing scientific research.\r\n\r\nUnable to adapt to the social politics of [PAWN_possessive] workplace, [PAWN_pronoun] buried [PAWN_objective]self in [PAWN_possessive] work and failed to progress up the corporate ladder. Every day, [PAWN_pronoun] yearned to be left alone.",
    "[PAWN_nameDef] was a member of an elite imperial space warrior unit. Subjected to intense training, [PAWN_pronoun] developed remarkable combat skills.\r\n\r\n[PAWN_possessive] unit's quasi-religious ceremonies and beliefs helped [PAWN_objective] stay more-or-less sane through the horrors of the war.",
    "[PAWN_nameDef] was a farmer on [PAWN_possessive] midworld, and spent [PAWN_possessive] free time practicing with guns. [PAWN_pronoun] knew how important the skills of farming and shooting would be in hard times, and trained to serve in a local militia.",
    "[PAWN_nameDef] joined a renowned interstellar criminal organization, and was often part of shock-assault boarding parties during starship raids.\r\n\r\nThough [PAWN_possessive] combat experience made [PAWN_objective] a good fighter, the ruthlessness of the job left [PAWN_objective] cold-hearted and unenthusiastic about social interaction.",
    "After [PAWN_possessive] home country entered a large-scale war, [PAWN_nameDef] was drafted into the army as a combat medic.\r\n\r\n[PAWN_possessive] few years in the trenches trying to keep [PAWN_possessive] fellow soldiers alive gave [PAWN_objective] an acute sense for first aid. Losing many friend has made [PAWN_objective] stoic and reserved.",
    "[PAWN_nameDef] always wanted to prove [PAWN_pronoun] could make a living without [PAWN_possessive] parents' help. [PAWN_pronoun] did shady jobs that often involved pointing guns at innocent people.\r\n\r\n[PAWN_pronoun] eventually made enough money to board a cheap freighter. [PAWN_pronoun] discovered why it was so cheap when it crashed.",
    "Because of [PAWN_possessive] skills, [PAWN_nameDef] developed a sense of superiority. In time, [PAWN_pronoun] lost [PAWN_possessive] sense of empathy. [PAWN_pronoun] often got into fights, and discovered how easy it is to kill a person.\r\n\r\nAfter realizing [PAWN_possessive] talents, [PAWN_pronoun] became one of the most efficient assassins in the system.",
    "[PAWN_nameDef] was a master hunter.\r\n\r\n[PAWN_pronoun] learned to track and trap any animal in the most dangerous of places, and had deep knowledge of many ingenious methods for taking down specific large animals.",
    "[PAWN_nameDef] had received firearms training, but [PAWN_possessive] work was focused on technical adaptation and manipulation of combat mechanoids on the battlefield.\r\n\r\n[PAWN_pronoun] developed PTSD after narrowly escaping a primitive firebomb attack in a wheat field. The army medically discharged [PAWN_objective] from service.",
    "[PAWN_nameDef] was a master at trading. [PAWN_pronoun] earned [PAWN_possessive] nickname by helping a village through a trying time.",
    "[PAWN_nameDef] has always gone overboard when it comes to food. [PAWN_pronoun] is always seeking new and exotic ingredients.\r\n\r\n[PAWN_possessive] quest for ingredients has brought [PAWN_objective] into some close calls with local flora and fauna.",
    "[PAWN_nameDef]'s lust for knowledge was only matched by [PAWN_possessive] disdain for anyone who would stand in the way of [PAWN_possessive] research.\r\n\r\nTraveling from world to world, [PAWN_pronoun] sought answers to questions few dared to ask.",
    "[PAWN_nameDef] was a war hero during [PAWN_possessive] planet's third world war. [PAWN_pronoun] helped prevent the launch of nuclear weapons during a particularly tense standoff.",
    "[PAWN_nameDef] spent years trapped, alone on an unknown planet. [PAWN_pronoun] quickly adapted to the local environment, and learned to communicate with [PAWN_possessive] local enemies.\r\n\r\nThis long period alone left [PAWN_objective] without close friends. [PAWN_possessive] heart is sensitive, but [PAWN_pronoun] learned to hide [PAWN_possessive] emotions very well.",
    "As a contract pilot, [PAWN_nameDef] had a knack for stealing goods and trafficking contraband without getting caught.\r\n\r\n[PAWN_pronoun] eventually saved up enough to buy [PAWN_possessive] own ship, and used it to travel from world to world dealing [PAWN_possessive] goods in person.",
    "[PAWN_nameDef] held the rank of Destroyer-General in a powerful midworld military.\r\n\r\n[PAWN_pronoun] was known for [PAWN_possessive] mastery of weapons, and was also a good ship pilot.",
    "[PAWN_nameDef] started to enjoy killing people, so [PAWN_pronoun] did more often and perfected [PAWN_possessive] methods. [PAWN_pronoun] lurked in the darkest streets, stalking prey for hours.\r\n\r\n[PAWN_pronoun] enjoyed making artworks of [PAWN_possessive] victims, and was known for leaving [PAWN_possessive] signature on the bodies of those [PAWN_pronoun] killed.",
    "After finishing [PAWN_possessive] education, [PAWN_nameDef] was hired by the planet's leading genetic researcher. Later, [PAWN_pronoun] was caught running illegal, inhumane experiments.\r\n\r\nDespite [PAWN_possessive] family's influence, [PAWN_pronoun] was convicted and sentenced to hard labor on a penal colony.",
    "After [PAWN_pronoun] gained the ability to use automation to remove tedium, [PAWN_nameDef] could no longer tolerate traditional education and employment.",
    "[PAWN_nameDef] stole children from their homes to sell them to interested buyers.\r\n\r\nOver time, [PAWN_pronoun] lost what little moral sense [PAWN_pronoun] had left.",
    "[PAWN_nameDef] was placed in a psychiatric hospital. There, [PAWN_pronoun] spent [PAWN_possessive] time engaged in the calming activities of the asylum.\r\n\r\n[PAWN_pronoun] was eventually released, but [PAWN_pronoun] retained [PAWN_possessive] emotional distance, [PAWN_possessive] curiosity about human anatomy, and [PAWN_possessive] namesake manic giggling.",
    "[PAWN_nameDef] was a warrior in an Imperial navy.\r\n\r\n[PAWN_possessive] job was to punch into enemy starships, gun down the crew, and capture the ship intact. And [PAWN_pronoun] was good at it.",
    "[PAWN_nameDef] entered the diplomatic corps. Honor and tradition were the values [PAWN_pronoun] took with [PAWN_objective] on every mission.\r\n\r\n[PAWN_possessive] prestigious position distanced [PAWN_objective] from backbreaking manual labor, allowing [PAWN_objective] to focus on [PAWN_possessive] wordsmithing abilities. [PAWN_pronoun] left the blacksmithing to others.",
    "As a blacksmith on a medieval world, [PAWN_nameDef] gained a reputation for the high quality of [PAWN_possessive] work. [PAWN_pronoun] wasn't bad at using the swords [PAWN_pronoun] forged either.",
    "Harvesting the products of clone farms is mostly done by the clones themselves - particularly to those whose sims tended towards the social. This clone was one such, who escaped from the farms and headed out to the stars.",
    "To survive, [PAWN_nameDef]'s gang often had to rob trade ships for food and supplies. Sometimes [PAWN_pronoun] had to kill the guards. Sometimes [PAWN_pronoun] had to kill the police who arrived to stop him.\r\n\r\nAfter years of this, [PAWN_pronoun] became one of the most-wanted criminals in the local empire.",
    "Shortly after being promoted to a respected position in [PAWN_possessive] planet's military, [PAWN_nameDef] disappeared without a trace.\r\n\r\nLater, [PAWN_pronoun] reappeared at the head of [PAWN_possessive] own military force. No one knows why [PAWN_pronoun] became who [PAWN_pronoun] was.",
    "[PAWN_nameDef] took the time to admire the beauty of the world. \r\n\r\n[PAWN_possessive] passive-aggressiveness surfaced once in a while, but [PAWN_pronoun] tried to adapt to [PAWN_possessive] changing life.",
    "Good with [PAWN_possessive] hands and passionate about technology, [PAWN_nameDef] aspired to invent gadgets and machines that would change [PAWN_possessive] home world forever.\r\n\r\nA few failed and occasionally disastrous creations later, [PAWN_pronoun] gave up on [PAWN_possessive] dream and took a job more befitting [PAWN_possessive] skill set.",
    "[PAWN_nameDef] was a cybernetic researcher. Studying a transcended world, [PAWN_pronoun] became too involved with [PAWN_possessive] subjects. Over time, the archotech recruited [PAWN_objective] into its service, and used [PAWN_objective] as a spy.\r\n\r\nWhen [PAWN_pronoun] later rebelled against [PAWN_possessive] inhuman master, it sent mechanoids across space to hunt [PAWN_objective] down.",
    "Captured as a feral child, [PAWN_nameDef] was forced into the ways of modern society. [PAWN_pronoun] quickly adapted and became a behavioural researcher, eventually owning a private facility.\r\n\r\n[PAWN_pronoun] specialized in canines, but learned a great deal about all animals. [PAWN_pronoun] never had interest in plants, however.",
    "[PAWN_nameDef] was involved with a radical political faction which worked against [PAWN_possessive] homeworld's government.\r\n\r\nThe guerilla tactics training that [PAWN_nameDef] received from [PAWN_possessive] associates gave [PAWN_objective] the skills to fight, but also drove [PAWN_objective] to compromise [PAWN_possessive] own beliefs.",
    "[PAWN_nameDef] strolled and sipped [PAWN_possessive] way through the streets and cafes of [PAWN_possessive] world, pursuing freedom at every turn, never becoming attached.\r\n\r\nThrough all this time, [PAWN_pronoun] remained distrustful of others. And never took an order from anyone.",
    "As chief engineer on board a large spaceship, [PAWN_nameDef] was an expert in all things fiddly and complex.\r\n\r\n[PAWN_pronoun] relied on other members of the crew for some of the basic necessities of life. [PAWN_pronoun] and [PAWN_possessive] ship eventually disappeared into a longsleep voyage of exploration.",
    'After leaving [PAWN_possessive] parents\' vineyard, [PAWN_nameDef] traveled across much of known space, and learned many skills along the way.\r\n\r\n[PAWN_pronoun] spent most of [PAWN_possessive] time researching and interacting with reptile species. [PAWN_pronoun] was renowned for making several breakthroughs, and for discovering the "Thorny Devil".',
    "As a young blacksmith, [PAWN_nameDef]'s family shop was raided by the police. [PAWN_pronoun] shot two officers before they knocked [PAWN_objective] out and arrested him.\r\n\r\nSentenced to life in prison, [PAWN_nameDef] learned about traveling and raiding from other criminals.",
    "After recovering from a joywire addiction, [PAWN_nameDef] adopted a non-violent way of life and vowed to help others.\r\n\r\nTravelling between communities, [PAWN_pronoun] used medicine, arts, and crafts to aid others who struggled with their own addictions.",
    "[PAWN_nameDef] was sold to the Corestars Entertainment Company and used as meat in one of the company's system-wide broadcast shows.\r\n \r\n[PAWN_possessive] manipulative nature made [PAWN_objective] quite a nightmare, even to the audience. [PAWN_pronoun] was kicked out and exiled to a planet full of deadly animals, criminals and armed camera-drones.",
    "After years of seeking the assassin that broke up [PAWN_possessive] family, [PAWN_nameDef] was offered a place with a group of space-faring raiders. [PAWN_pronoun] accepted, hoping to find the killer [PAWN_pronoun] sought.\r\n\r\nDue to [PAWN_possessive] seemingly-unending ability to narrowly escape danger, [PAWN_pronoun] earned the nickname 'Blackjack' in recognition of [PAWN_possessive] luck.",
    "[PAWN_nameDef] awoke on a dangerous planet with no resources and few survival skills. [PAWN_pronoun] bounced between camps, doing whatever work needed to be done, just to see the sun rise once more.",
    "[PAWN_nameDef] was adept at dealing with mechanical problems, as long as the problem didn't involve the kitchen.\r\n\r\nAfter a life spent around dangerous machinery and flammable chemicals, [PAWN_pronoun] learned how to patch [PAWN_objective]self up pretty well. Despite the pain, [PAWN_pronoun] never learned to dislike fire.",
    "As part of a freelance interplanetary lifestyle, [PAWN_nameDef] sought to dominate [PAWN_possessive] romantic interests as much as [PAWN_possessive] business adversaries. When [PAWN_pronoun] didn't have [PAWN_possessive] own ship to fly, [PAWN_pronoun] worked charter ships for hire.",
    "[PAWN_nameDef] traveled between planets, following news of animal attacks. [PAWN_pronoun] would camp on the planet for weeks, learning about [PAWN_possessive] prey before striking. [PAWN_pronoun] most enjoyed hunting thrumbos.\r\n\r\nPreferring to work alone, [PAWN_nameDef] enjoyed the thrill of the hunt, and the meat from the kill.",
    "[PAWN_nameDef] worked the drug trade under kingpin Grady Loughman. [PAWN_pronoun] had [PAWN_possessive] men sell drugs when it was profitable, and fight the other cartels when the government came around.\r\n\r\n[PAWN_possessive] social skills kept [PAWN_objective] on top of the political game, and [PAWN_pronoun] always had servants to cook and clean.",
    "[PAWN_nameDef] was an enforcer of law on an ancient urbworld.\r\n\r\n[PAWN_pronoun] dealt with the worst of humanity, from protecting greedy urbworld nobility in their spire palaces to rooting out cannibal cults in the deepest reaches of the underground hive.",
    "[PAWN_nameDef] was a famous tool mechanic on a dusty rimworld.\r\n\r\nAfter [PAWN_possessive] firm closed due to scandal, [PAWN_pronoun] joined a tribe to survive, crafting fine knives and hammers, traveling, and dealing [PAWN_possessive] wares between settlements.",
    "[PAWN_nameDef] locked [PAWN_objective]self in [PAWN_possessive] studio for years, ordering delivery food to save time on cooking.\r\n\r\nEventually, [PAWN_possessive] creations brought [PAWN_objective] the highest honor on Semantic World: Permission to materialize any design in minutes using the most advanced technologies.",
    "Alone, [PAWN_nameDef] set out to rebuild [PAWN_possessive] father's life's work. [PAWN_pronoun] challenged the leader of a small band of mercenaries and took control, then led the band as they hijacked trade ships and stole valuable cargo.\r\n\r\n[PAWN_possessive] men mutinied. [PAWN_pronoun] was abandoned, arrested, and sentenced to death.",
    "Give me a reason to kill - a good reason!\r\n\r\n[PAWN_nameDef] was a soldier and a skilled one - so skilled that [PAWN_pronoun] entered the special forces to battle militants and xenohuman raiders. [PAWN_pronoun] never imagined [PAWN_objective]self as lone hero, but [PAWN_pronoun] played [PAWN_possessive] part in the group well.",
    "Having caught the eye of [PAWN_possessive] people's Sand King, [PAWN_nameDef] was trained in the Sandy Boomrat fighting technique.\r\n\r\nAlways with a camel to carry [PAWN_possessive] things, [PAWN_pronoun] served [PAWN_possessive] sand people faithfully.",
    "[PAWN_nameDef] was a tech-obsessed mercenary in an early fusion-era system.\r\n\r\n[PAWN_pronoun] was unusually obsessed with gathering the right gear, and often customized [PAWN_possessive] own equipment with original modifications.",
    "[PAWN_nameDef] prostituted [PAWN_objective]self to fund [PAWN_possessive] drug habits. As an escape, [PAWN_pronoun] joined the military and learned to fight.\r\n\r\nToo smart for the army, [PAWN_pronoun] questioned and often disagreed with [PAWN_possessive] superiors' decisions. This eventually led to [PAWN_possessive] dishonorable discharge and left [PAWN_objective] with a chip on [PAWN_possessive] shoulder.",
    "[PAWN_nameDef] was a research chemist. [PAWN_pronoun] worked with chemicals, from pharmaceuticals to explosives, to develop new substances and treatments.",
    "Product of a super-soldier program run by a now-deposed government, [PAWN_nameDef] was lost. [PAWN_pronoun] survived the final suicide attack on the enemy mothership. What now?\r\n\r\nFor the first time in [PAWN_possessive] life, [PAWN_pronoun] had no orders, no objectives. [PAWN_pronoun] rose from wreckage and strove towards uncertainty, towards freedom.",
    "Even as [PAWN_pronoun] stewed in [PAWN_possessive] own wasted potential, [PAWN_nameDef] found [PAWN_pronoun] had a knack for moving objects quickly. It was just what the planetary mega-corps wanted in their construction divisions.\r\n\r\nUnfortunately, the monotonous work erased [PAWN_possessive] remaining creative impulses.",
    "[PAWN_nameDef] loved solving problems and, with [PAWN_possessive] steady hands and a reputation for quality work, earned a job as a mechanical engineer. [PAWN_pronoun] built and redesigned devices of all shapes and sizes.\r\n\r\nEventually, [PAWN_pronoun] was able to pick and choose [PAWN_possessive] corporate clients. [PAWN_pronoun] made several wealthy friends, as well as a few powerful enemies.",
    "[PAWN_nameDef] provided medical care on multiple plague-wracked worlds, always working under the Hippocratic oath. [PAWN_pronoun] improved conditions for those under quarantine while administering complex medical treatments and developing medicines.\r\n\r\n[PAWN_pronoun] never had time to enjoy a normal life outside of work.",
    "[PAWN_nameDef] spent all [PAWN_possessive] time working on computer networking systems.\r\n\r\n[PAWN_pronoun] lived without a care in the world - other than uptime and dropped packets.",
    "[PAWN_nameDef]'s thirst for power defined [PAWN_objective]. [PAWN_pronoun] quickly rose through the military ranks and soon attained the rank of general.\r\n\r\n[PAWN_pronoun] was given the most challenging task - conquering distant and unexplored rimworlds. Victory here could even position [PAWN_objective] as a successor to the emperor.",
    "[PAWN_nameDef] was the leader of a caravan. [PAWN_pronoun] was responsible for the safety of [PAWN_possessive] caravan and was the head negotiator in countless trade deals.\r\n\r\n[PAWN_pronoun] and [PAWN_possessive] people prospered, but their wealth made them a target for brigands. They often had to take up arms to fend off bandits and highwaymen.",
    "When [PAWN_possessive] world was thrown into conflict, [PAWN_nameDef] was conscripted along with many of [PAWN_possessive] peers into the war machine that tore across the planet.\r\n\r\nWith [PAWN_possessive] particular expertise, [PAWN_pronoun] was lucky enough to find a position serving as small arms mechanic rather than on the front line.",
    "[PAWN_nameDef] practiced aromatherapy, using essences extracted from home-grown plants.",
    'When civil war broke out [PAWN_nameDef] remained neutral, until [PAWN_possessive] home was firebombed by a loyalist militia.\r\n\r\nLater, [PAWN_possessive] unit gave [PAWN_objective] the nickname "Rare" after [PAWN_pronoun] burnt down the luxury villa of a loyalist leader, with them still inside it.',
    "[PAWN_nameDef] felt more comfortable with robots and artificial intelligences than with organic people, so [PAWN_pronoun] worked as a roboticist. [PAWN_pronoun] took a particular interest in mechanites and ancient technology.  \r\n\r\n[PAWN_nameDef] relied on other people for [PAWN_possessive] basic needs.",
    "As a private eye, sharp wits and a silver tongue were [PAWN_nameDef]'s greatest tools. [PAWN_pronoun] often spent [PAWN_possessive] nights working cases that ranged from uncovering affairs and learning trade secrets to solving murder cases and infiltrating criminal organizations. There wasn't a case [PAWN_pronoun] wouldn't accept for the right price.",
    "[PAWN_nameDef] became a bartender on a space station. [PAWN_pronoun] interacted with and befriended many strangers.\r\n\r\nAs time went on, [PAWN_nameDef] used [PAWN_possessive] knowledge of herbs to craft [PAWN_possessive] own strange concoctions for [PAWN_possessive] customers.",
    "[PAWN_nameDef] had a terrible bedside manner due to [PAWN_possessive] abrasiveness. [PAWN_pronoun] often bullied [PAWN_possessive] patients into getting cosmetic surgery. [PAWN_pronoun] made a lot of money this way.\r\n\r\nWhile very studious and careful in [PAWN_possessive] work, [PAWN_pronoun] never had to lift a finger doing domestic chores.",
    "As a diplomat, [PAWN_nameDef] was assigned to deal with diplomatic tasks in the blood-soaked outer rim sectors.\r\n\r\n[PAWN_pronoun] hoped to end the endless wars, until [PAWN_possessive] consularship, the St. Anthem, was attacked by a raider fleet.",
    'Too awkward to socialize, [PAWN_nameDef] found comfort in the production of videos. Oddly, people enjoyed [PAWN_possessive] videos, calling them "perfect sitcom dramas".\r\n\r\n[PAWN_nameDef] took advantage of this and broadcast more, ever hopeful that [PAWN_pronoun] would be contacted by the Wizards.',
    "[PAWN_nameDef]'s peaceful life was cut short when [PAWN_possessive] country was brutally invaded.\r\n\r\n[PAWN_nameDef] was drafted into service as soon as [PAWN_pronoun] was of legal age, and quickly showed an aptitude for rifles. [PAWN_pronoun] spent months living in the forests picking off soldiers who dared cross the border.",
    "From [PAWN_possessive] youth, [PAWN_nameDef] developed connections in the underworld. There [PAWN_pronoun] trained in melee combat and became a trusted underworld advisor.\r\n\r\nAfter participating in a failed rebellion, [PAWN_pronoun] fled [PAWN_possessive] homeworld to travel with a pirate band.",
    "[PAWN_nameDef] became a doctor to save lives and research medicine. [PAWN_pronoun] soon realized the only way to make progress on [PAWN_possessive] research was to perform experiments on human patients.\r\n\r\n[PAWN_pronoun] often used patients for [PAWN_possessive] experiments - whether they were willing or not.",
    "[PAWN_nameDef] was in a deep space shock troop unit deployed on multiple planets in various wars.\r\n\r\nDuring a risky assault, [PAWN_possessive] whole unit was wiped out. Nobody else knew what happened on the field that day, but [PAWN_nameDef] will carry the burden forever.",
    "As a military medtech, [PAWN_nameDef]'s job was to fix and build anything [PAWN_pronoun] could get [PAWN_possessive] hands on, from living people to machines and mechs.\r\n\r\nSent into dangerous areas, [PAWN_pronoun] never had a problem saving soldiers' lives and building the technology and machines needed to win.",
    "Dismayed at the poachers driving several animal species to near-extinction, [PAWN_nameDef] became a wildlife ranger. [PAWN_pronoun] cared for and protect the animals - by force if necessary.\r\n\r\n[PAWN_pronoun] grew to hate people slaughtering animals for luxury and profit.",
    "[PAWN_nameDef] explored outlying rimworlds in hopes of finding rare treasures.\r\n\r\nAfter succeeding in finding one legendary sculpture, [PAWN_pronoun] was betrayed by [PAWN_possessive] men. [PAWN_pronoun] survived their treasonous attack, but the sculpture was taken.\r\n\r\n[PAWN_pronoun] created the Anvil Mercenary Company to help [PAWN_objective] seek revenge.",
    "After years of training and drilling, [PAWN_nameDef] finally became a starfighter pilot.\r\n\r\nHundreds of combat missions later, [PAWN_pronoun] grew bored and started seeking newer thrills. [PAWN_pronoun] joined a band of space pirates, which eagerly welcomed [PAWN_objective] because of [PAWN_possessive] piloting skill.",
    "Living for many years between three raider settlements, [PAWN_nameDef] persevered through many challenges: a spacecraft implosion, cryptostasis, crashlanding on a miserable dustball of a planet, and nursing an old man back to health, and many of battles.\r\n\r\n[PAWN_pronoun] eventually took control of a violent gang.",
    "[PAWN_nameDef] joined Interplanetary Marines to travel the stars fight for [PAWN_possessive] planet. [PAWN_pronoun] distinguished [PAWN_objective]self in several battles.\r\n\r\n[PAWN_possessive] experiences desensitized [PAWN_objective] to people around [PAWN_objective], and [PAWN_possessive] social skills degraded. But, [PAWN_pronoun] did learn how to fight.",
    "[PAWN_nameDef]'s thirst for adventure took [PAWN_objective] to many planets. [PAWN_pronoun] visited the brightest glitterworlds and the darkest war-torn toxic planets in [PAWN_possessive] quest to find novelty and excitement.\r\n\r\n[PAWN_pronoun] worked as little as possible, often skirting ethical boundaries to make a quick buck. Among all jobs, [PAWN_pronoun] hated cooking the most.",
    "[PAWN_nameDef] was a wanderer, traveling from town to town, taking odd jobs and stealing to live.\r\n\r\nOne day, [PAWN_pronoun] had a mental break and went on a long rampage, destroying several towns and killing many. [PAWN_pronoun] eventually calmed, but [PAWN_possessive] bloodlust never left [PAWN_objective].",
    "[PAWN_nameDef] had a passion for medicine, but never bothered to get a medical degree. Only underfunded pirates and terrorists were desperate enough to hire [PAWN_possessive] services, and [PAWN_possessive] surgical patients had about a 50% survival rate.\r\n\r\nDespite this, [PAWN_possessive] optimistic attitude drove [PAWN_objective] to keep trying to heal those in need. As long as they paid up front.",
    "After studying at a famous college, [PAWN_nameDef]'s weak personality eventually snapped under the strain of angry administrators and whining patients. [PAWN_pronoun] went on a secret murder spree, killing many of those under [PAWN_possessive] care.\r\n\r\nAfter a pursuit, [PAWN_pronoun] managed to escape [PAWN_possessive] planet and travel to a new world.",
    "On a glitterworld, [PAWN_nameDef] found a job washing dishes at a famous restaurant and worked [PAWN_possessive] way up the ranks.\r\n\r\nA few years later, [PAWN_possessive] career came to an end when someone poisoned the meal [PAWN_pronoun] was preparing for the mayor. Jobless, [PAWN_pronoun] and left to explore the stars once again.",
    "After escaping [PAWN_possessive] home planet, [PAWN_nameDef] fell in with a band of mercenaries. [PAWN_pronoun] fought alongside [PAWN_possessive] brothers and sisters in arms for many years.\r\n\r\nOne day, they were caught in a fight they couldn't win. Refusing to retreat, [PAWN_nameDef] was shot down by [PAWN_possessive] enemies. [PAWN_pronoun] was alarmed to awake in a heap of corpses, mysteriously unharmed.",
    "[PAWN_nameDef] traveled from planet to planet, gathering samples, stories, and research. \r\n\r\n[PAWN_possessive] goal was to bring together enough knowledge to make a survival guide for future generations.",
    "[PAWN_nameDef] joined the militia forces and fought for rights and peace.\r\n\r\nAfter [PAWN_possessive] homeworld was unexpectedly destroyed in the wars, [PAWN_pronoun] traveled great distances, seeking a refuge where [PAWN_pronoun] could build a new, free way of life.",
    "Years of being commanding officer of an advanced corvette taught [PAWN_nameDef] the art of leadership, the techniques of higher engineering, and how to stay calm while enemies try to kill you.\r\n\r\nUnfortunately, [PAWN_nameDef] only very rarely had contact with nature.",
    "[PAWN_nameDef] led a band of wild men in the forest. They foraged for food, hunted, and sometimes murdered more civilized people to steal their shiny objects.",
    "Grown by and for science, [PAWN_nameDef] gave it up. Instead, [PAWN_pronoun] wanted to dance for crowds across many worlds, from the glamor of the glitterworlds to the dangers of the rim.\r\n\r\nSuch work required wearing a smile on [PAWN_possessive] face and a pistol under [PAWN_possessive] costume.",
    "After [PAWN_possessive] father was deposed, [PAWN_nameDef]'s beauty led [PAWN_objective] to be forced into pornography to survive.\r\n\r\nOver years of difficult treatments, [PAWN_possessive] body was remodeled to appear temporarily ageless. Sold to an orbital brothel, [PAWN_pronoun] became popular, with a steady stream of clients from all over the planet.",
    "As a lawyer, [PAWN_nameDef] could convict a deaf man for stealing music. [PAWN_possessive] sharp mind and lack of empathy let [PAWN_objective] say anything to get the other person to talk. With the right amount of money, [PAWN_pronoun] knew, any case can be won.\r\n\r\n[PAWN_possessive] childhood cough never went away.",
    '"How does this work?\r\n\r\nWhy does this move?\r\n\r\nMaybe if I change this... oops, I hope it works better... or maybe I broke it..."',
    "As a self-taught engineer, [PAWN_nameDef] escaped [PAWN_possessive] dying homeworld on a rocket [PAWN_pronoun] built [PAWN_objective]self. \r\n\r\n[PAWN_pronoun] later spent years of [PAWN_possessive] life on several worlds, helping less-developed planets develop rocket technology.",
    "[PAWN_nameDef] spent countless hours behind the scenes of a famous theater. [PAWN_pronoun] built scenery, programmed lights, and monitored the machines that moved the sets.\r\n\r\nOff duty, [PAWN_pronoun] would talk with the cast members. Navigating the social drama of the actors helped [PAWN_objective] learn how to communicate well and manipulate others.",
    "[PAWN_nameDef] served in [PAWN_possessive] country's military, commanding small units as a non-commissioned officer.\r\n\r\n[PAWN_pronoun] excelled creating tactically sound plans despite difficult circumstances.",
    "[PAWN_nameDef] was captain of a pirate ship. [PAWN_pronoun] and [PAWN_possessive] crew made their living capturing traders who wandered off-course.\r\n\r\n[PAWN_pronoun] was known for [PAWN_possessive] balanced approach to problems, building, fighting, or negotiating as needed.",
    "[PAWN_nameDef]'s childhood soldier conditioning failed, and the experiment was shut down. [PAWN_pronoun] was abandoned, purposeless, friendless.\r\n\r\n[PAWN_nameDef] eventually found solace in physically demanding work. [PAWN_pronoun] especially liked building houses and crafting heavy armor.",
    "After war broke out on [PAWN_possessive] homeworld, [PAWN_nameDef] was conscripted as a linguist. [PAWN_pronoun] spent [PAWN_possessive] days in a space station, decoding enemy communications and tending the hydroponic crops.\r\n\r\nAfter a meteorite damaged the station, [PAWN_pronoun] was forced to enter cryptosleep and hope for rescue.",
    "[PAWN_nameDef] was captured and put on death row for war crimes.\r\n\r\nFortunately for [PAWN_objective], someone cut the power to [PAWN_possessive] cell block. Riots ignited. Guards and trained wargs were deployed to quell the uprising. Organizing a few other inmates, [PAWN_nameDef] escaped in a small spacecraft.",
    "As an accountant, [PAWN_nameDef] often socialized with colleagues, and made many friends in upper management.\r\n\r\nOne day, [PAWN_nameDef] discovered a corruption racket run by some of [PAWN_possessive] bosses. After reporting this, [PAWN_pronoun] was fired. Wishing to hunt down those responsible, [PAWN_pronoun] went on a mass murder spree.",
    "[PAWN_nameDef] was an activist in a powerful political faction. There [PAWN_pronoun] learned the art of persuasion and speech.\r\n\r\n[PAWN_pronoun] had many enemies, so [PAWN_pronoun] took secret courses in shooting and hand-to-hand combat.",
    "[PAWN_nameDef]'s thirst for archaeo-technological knowledge drove [PAWN_objective] to spend years surveying abandoned data centers and studying ancient coding languages.\r\n\r\n[PAWN_pronoun] claimed to be one of the few who could piece together the tragedy of the past - and offer a path to the future.",
    "A creative but strange individual, [PAWN_nameDef] dedicated [PAWN_possessive] life to [PAWN_possessive] twin passions of medieval world history and high technology.\r\n\r\n[PAWN_pronoun] was fascinated by the idea of becoming a 'skyknight' with glittering armor and a giant sword.",
    "[PAWN_nameDef] was fascinated with cryptosleep, and spent [PAWN_possessive] life learning about the mysterious technology.\r\n\r\nWorking as an assembler on a midworld, [PAWN_nameDef] built an experimental prototype casket from discarded parts. Unfortunately, while [PAWN_pronoun] was searching for the final component, [PAWN_possessive] home was leveled by a bomb.",
    "Obsessed with interstellar travel, [PAWN_nameDef] left [PAWN_possessive] desolate life behind to join a military academy in hopes of becoming a pilot.\r\n\r\n[PAWN_pronoun] was trained in advanced combat and survival skills. While [PAWN_pronoun] excelled in [PAWN_possessive] studies, [PAWN_nameDef] was a loner and never cared about [PAWN_possessive] crewmates.",
    "[PAWN_nameDef] was a excellent chef who worked in a high-end restaurant.\r\n\r\nOne day, [PAWN_pronoun] left the stove on, and accidentally burned down the whole building. This event shook [PAWN_objective] so much that [PAWN_pronoun] swore to never touch a stove again.",
    "[PAWN_nameDef] specialized in studying and manipulating the genetic code of the muffalo.\r\n\r\n[PAWN_possessive] work left little time to develop an appreciation for the arts or other people's company.",
    "[PAWN_nameDef] became depressed and lost interest in life. [PAWN_pronoun] travelled from planet to planet, searching for psychic artifacts amid mechanoid ruins in the hope that they would cure the pain in [PAWN_possessive] soul.\r\n\r\nA steady trigger finger and careful planning kept [PAWN_nameDef] alive.",
    "After a terrible mining accident, [PAWN_nameDef] set off into space in search of exotic new animal species.\r\n\r\n[PAWN_pronoun] hoped to leave [PAWN_possessive] past behind and find long-lived companions. [PAWN_pronoun] knew the pain of loss too well.",
    "[PAWN_nameDef] rebelled against the corporation [PAWN_pronoun] worked for. [PAWN_pronoun] failed, and was forced [PAWN_objective] to go on the run.\r\n\r\n[PAWN_pronoun] was always on the move, always leaving everything behind. [PAWN_pronoun] tried to gain supporters for [PAWN_possessive] cause, but failed due to [PAWN_possessive] poor social skills.",
    "[PAWN_nameDef] traded high-tech firearms between warring factions.\r\n\r\nOver time, [PAWN_pronoun] became very skilled at conducting product demonstrations and negotiating profitable deals.",
    "The children took over the facility, and they declared independence from the corporation.\r\n\r\n[PAWN_nameDef] had used the VR system to become a master engineer, and [PAWN_pronoun] worked diligently to prepare the colony for the corporation's inevitable return.",
    "[PAWN_nameDef] was a deep space surveyor. [PAWN_pronoun] studied which worlds were the most suitable for colonization.\r\n\r\n[PAWN_possessive] expeditions were met by hostile natives, green-painted space-women, and wannabe Greek gods. Surviving many firefights, [PAWN_pronoun] learned to build rudimentary lathes and rock cannons to fend off enemies.",
    "By day, [PAWN_nameDef] was an office worker on a midworld. At night, [PAWN_pronoun] designed and built elaborate monster costumes for science fiction conventions.\r\n\r\n[PAWN_pronoun] learned a great deal about sewing. Unfortunately this came at the cost of being able to cook anything more complex than an instant meal.",
    "[PAWN_nameDef] was a deadly shot. Peace wasn't for him. [PAWN_pronoun] found [PAWN_possessive] family among the brothers and sisters that [PAWN_pronoun] spent years fighting alongside.\r\n\r\nAfter most of those close to [PAWN_objective] died, [PAWN_pronoun] once again set off to lend [PAWN_possessive] gun to those who needed it - or those who could pay.",
    "[PAWN_nameDef]'s bottomless compassion and love of knowledge drove [PAWN_objective] to a life of teaching. [PAWN_pronoun] became one of the best-known names in academia throughout the urbworld bubble.\r\n\r\n[PAWN_possessive] holo-lectures were revered by all that watched, and the few students [PAWN_pronoun] accepted into [PAWN_possessive] seminars spoke widely of [PAWN_possessive] kindness and patience.",
    "After repairing a fleet admiral's holoscreen with nothing but a pair of rusty pliers and scrap wire, [PAWN_nameDef] was invited to the Federation Naval Academy.\r\n\r\n[PAWN_pronoun] received an excellent technical education and extensive firearms training, but had no interest in studying more menial skills.",
    "As a self-proclaimed king of pirates, [PAWN_nameDef] was ruthless. Manipulative in nature, [PAWN_pronoun] was not afraid to sacrifice the people around [PAWN_objective] in service of [PAWN_possessive] own goals. [PAWN_pronoun] was a good shot, but even more skilled with a sword, and [PAWN_pronoun] loved the adrenaline rush of close combat.",
    "[PAWN_nameDef] was in a space navy for the most powerful planet in the local star group. [PAWN_pronoun] developed skills in maintenance, electronic systems, radar and imaging, and logistics management.\r\n\r\n[PAWN_pronoun] served with pride and patriotic love for [PAWN_possessive] planet.",
    "[PAWN_nameDef] decided to leave the oppressive dictatorship where [PAWN_pronoun] lived. [PAWN_possessive] defection was not well-received, and agents were sent after [PAWN_objective].\r\n\r\n[PAWN_pronoun] spent years on the run. Since [PAWN_pronoun] could trust no doctor, [PAWN_pronoun] treated [PAWN_possessive] own wounds. The ordeal made [PAWN_objective] bitter and untrusting.",
    "[PAWN_nameDef] joined a colony contact expeditionary force as a medic. The mission turned bad when the colonists turned out to be suffering from a zombifying disease. [PAWN_pronoun] ran and fought for days.\r\n\r\nCornered with wounded men, [PAWN_pronoun] sprayed enough ammunition to wear out four machine gun barrels, and learned the value of high-volume fire. But [PAWN_possessive] nickname, Noob, stuck from that day forward.",
    "As an IT technician, [PAWN_nameDef] didn't have much time to write code any more.\r\n\r\n[PAWN_pronoun] got called to work all the time to fix failures in the cryptosleep chamber and AI persuasion systems.",
    "[PAWN_nameDef] formed a mercenary company out of freelancers who wanted to make good money while also making slightly better-than-average moral choices. [PAWN_pronoun] called it the Ashmarines.\r\n\r\nTo avoid the coreworlds' military forces, [PAWN_pronoun] moved [PAWN_possessive] company to the rimworlds. There, [PAWN_pronoun] established bases and communities. In ruling, [PAWN_pronoun] maintained a form of order among the raiders and madmen of deep space.",
    "After perfecting [PAWN_possessive] skills as a pathfinder, [PAWN_nameDef] left [PAWN_possessive] unit to put [PAWN_possessive] skills to use on the planets [PAWN_pronoun] helped chart.\r\n\r\nFamiliar with orbital trade routes, [PAWN_pronoun] was able to get onto and off any planet without being detected.",
    "[PAWN_nameDef] was the tough leader of a pirate band.\r\n\r\n[PAWN_pronoun] would accept any challenge, no matter how violent or dangerous. Others called [PAWN_objective] a killing machine.",
    "Leveraging [PAWN_possessive] childhood experience, [PAWN_nameDef] became a computer engineer. [PAWN_pronoun] also learned to craft delicate sculptures and random electronics for fun.\r\n\r\n        [PAWN_nameDef] became fond of technology and mostly gave up on talking to people. Using computers as friends has left [PAWN_nameDef] unable to care for others.",
    "After years of training in martial arts and diplomacy, [PAWN_nameDef] was eventually given land and subjects of [PAWN_possessive] own to rule.\r\n\r\n        Because of [PAWN_nameDef]'s commoner heritage, the other lords disapproved. They framed [PAWN_objective] for a heinous crime, and the emperor had no choice but to exile [PAWN_objective].",
    "Motivated by the violence in [PAWN_possessive] environment, [PAWN_nameDef] studied martial arts, eventually signing up for an unarmed fighting tournament.\r\n\r\n        Unlike [PAWN_possessive] opponents, [PAWN_nameDef] looked to the ancient warriors for guidance. [PAWN_pronoun] trained from dusk till dawn, perfecting [PAWN_possessive] skills.",
    "Desiring to understand people, [PAWN_nameDef] learned hypnotism and discovered [PAWN_possessive] talent for the art.\r\n\r\n        [PAWN_pronoun] gathered followers and formed a cult around [PAWN_possessive] vibrant personality. The authorities discovered [PAWN_possessive] illegal operations, and [PAWN_nameDef] fled before [PAWN_pronoun] could be arrested.",
    "After years of practice, Freya was able to enrol into an art university and take her skills further. She sought art industry work after graduating with good grades. She made some progress with private commissions, managing to make a decent living from heart.",
    "After refusing the wild demands of a tyrannical king, [PAWN_nameDef]'s nomad band was marked as an outlaw group and systematically hunted.\r\n\r\n        [PAWN_nameDef]'s family was eventually captured. Those who weren't killed were taken as slaves. Sold to the owner of a manufactory, [PAWN_nameDef] swore that one day [PAWN_pronoun] would have [PAWN_possessive] revenge.",
    "[PAWN_nameDef] designed combat modifications for frontline soldiers.\r\n\r\nOne night, in a nightmare, [PAWN_nameDef] was confronted by all the men and women killed by [PAWN_possessive] work. [PAWN_pronoun] decided to travel to the rimworlds and use [PAWN_possessive] skills for good.",
    "[PAWN_nameDef] was in the crew of a mercenary ship. Disciplined and confident, [PAWN_pronoun] quickly rose through the ranks and gained friends.\r\n\r\nIn [PAWN_possessive] time as a mercenary captain, [PAWN_pronoun] was known for being gregarious and calm - possibly thanks to the joywires.",
    "[PAWN_nameDef] traveled the world, always looking for old and forgotten things to repair for the good of others, working to see the true beauty in all things.",
    "After [PAWN_possessive] planet was technologically uplifted by a benevolent glitterworld charity, [PAWN_nameDef] saw an opportunity to make some money by defrauding the wealthy glitterworld visitors.\r\n\r\nAfter [PAWN_pronoun] was caught, [PAWN_pronoun] was exiled to the rim, where [PAWN_pronoun] targeted rich trading companies to continue [PAWN_possessive] life of crime.",
    "[PAWN_nameDef] worked as a videogame streamer, and was known for [PAWN_possessive] monkey-related impressions and jokes.\r\n\r\nA pandemic forced [PAWN_objective] to go into cryptosleep for several years. During [PAWN_possessive] sleep, [PAWN_pronoun] was launched on an interstellar diplomatic mission. Nothing was heard of [PAWN_objective] ever again.",
    '[PAWN_nameDef] was bureaucrat in the civil service.\r\n\r\nAlthough [PAWN_possessive] family connections took [PAWN_objective] far, [PAWN_possessive] vocal opposition to [PAWN_possessive] bosses\' plans hindered [PAWN_possessive] advancement. Called a "red prince" by some, [PAWN_nameDef] sympathized with the poor, leading ultimately to disgrace in [PAWN_possessive] career.',
    "[PAWN_nameDef] joined the famous Star Pilots On Channel K (aka S.P.O.C.K) and toured the star system, but eventually the band split up and their fame faded away.\r\n\r\n[PAWN_pronoun] ended up as a travelling bard playing on [PAWN_possessive] portable synthesizer as [PAWN_pronoun] traveled from spaceport to spaceport.",
    "[PAWN_nameDef] was an independent game developer.\r\n\r\nAfter an early success, [PAWN_possessive] career quickly degenerated into a circus of misguided ideas, deals gone wrong, and desperate, failed PR stunts.",
    "[PAWN_nameDef] was born on a glitterworld falling into chaos. [PAWN_possessive] father was killed in action.\r\n\r\n[PAWN_pronoun] struggled for a scholarship at Utmaior Academy and had to prove [PAWN_possessive] right to be there. A child genius, [PAWN_pronoun] was bullied as a charity case and couldn't make friends with the other kids.",
    "[PAWN_nameDef] grew up on [PAWN_possessive] family's beef farm. [PAWN_pronoun] enjoyed working the fields and taking care of the animals.",
    "[PAWN_nameDef]'s parents died in a fire when [PAWN_pronoun] was seven. [PAWN_pronoun] grew up on [PAWN_possessive] uncle's farm, plowing fields and doing manual labor.\r\n\r\n[PAWN_pronoun] could not bear answering questions about [PAWN_possessive] parents, so [PAWN_pronoun] replaced social contact with hard work.",
    "Born into bad circumstance on an overpopulated urbworld, [PAWN_nameDef] turned to small-time crime as a way to avoid starvation and hypothermia.\r\n\r\nRobbery and murder were daily activities for [PAWN_objective]. [PAWN_nameDef] learned that surviving was winning.",
    "[PAWN_nameDef] was blessed with loving parents and a pleasant midworld life. [PAWN_pronoun] was an  optimistic and sociable kid who loved making friends and listening to their stories. [PAWN_possessive] imagination would run wild with ideas and questions.",
    "[PAWN_nameDef] grew up in a dangerous urbworld. [PAWN_pronoun] quickly learned how to get [PAWN_possessive] daily meal - by crime. Such means left little to no space for cooking and growing activities.",
    "[PAWN_nameDef] grew up on the streets of a world in the early stages of its industrial revolution. [PAWN_pronoun] passed [PAWN_possessive] days stealing, begging and tinkering with discarded machine scraps, always on the lookout for a way to escape poverty.",
    "After graduating college very young, [PAWN_nameDef] devoted [PAWN_possessive] life to becoming immortal. [PAWN_pronoun] was arrested for trying to genetically modify [PAWN_objective]self.\r\n\r\nThe authorities released [PAWN_objective] on the condition that [PAWN_pronoun] would work in a government lab on spacecraft technology. [PAWN_pronoun] was permitted to continue [PAWN_possessive] personal research in [PAWN_possessive] free time.",
    "[PAWN_nameDef] grew up in an urbworld as the only child of a pair of mechanoid designers.\r\nThey encouraged [PAWN_possessive] interest in the machines. Eventually, [PAWN_pronoun] became obsessed with building [PAWN_possessive] own.\r\n\r\nUnfortunately this also lead to [PAWN_objective] being a loner as [PAWN_pronoun] prefered technical books to friends.",
    "During the 'Inner Destrian War' fallout, [PAWN_possessive] parents were captured and [PAWN_pronoun] was born into a life of slavery. Forced to clean coliseums after bloody battles for money. Watching, waiting, and learning. Coliseums were the only thing [PAWN_pronoun] ever knew. One night while cleaning the coliseum, [PAWN_possessive] family was murdered.",
    "From a young age, [PAWN_nameDef] trained to be a leader of men. [PAWN_pronoun] enrolled in the Vanu Defense College when [PAWN_pronoun] was a boy and became proficient with a range of weapons and survival techniques.",
    "Growing up on a flourishing glitterworld afforded [PAWN_nameDef] the chance to fully devote [PAWN_objective]self to [PAWN_possessive] studies.\r\n\r\nHaving taken a keen interest in genetic modification and neural augmentation from a young age, [PAWN_pronoun] had little time (or desire) for a regular childhood.",
    "A war broke on out [PAWN_nameDef]'s home planet.\r\n\r\nGathering what little food and belongings they could, [PAWN_nameDef] and [PAWN_possessive] father stole a ship and escaped into space.",
    "[PAWN_nameDef] grew up as a slave to a particularly nasty noble family on a medieval world. \r\n\r\nWhile [PAWN_pronoun] received no formal education, the harsh labor regimen made [PAWN_possessive] body strong.",
    "[PAWN_nameDef] was the younger of two sons on the family farm, a frontier plot that struggled to turn a profit. [PAWN_nameDef]'s father was a strict disciplinarian, constantly at [PAWN_possessive] sons to work harder and keep quiet. [PAWN_nameDef] burnt [PAWN_possessive] hand making breakfast once and swore to cook only when [PAWN_possessive] life was in danger.",
    "[PAWN_nameDef] was raised on an R&D starship, and spent most of [PAWN_possessive] childhood travelling through the void.\r\n\r\nApproaching a mysterious planetoid, the ship was severely damaged. [PAWN_possessive] next memory is of the ship heading out of orbit, fully repaired. [PAWN_pronoun] soon developed an unnatural gift for technological research.",
    'Raised to be a combat medic, [PAWN_nameDef] was trained in firearms as well as medicine. [PAWN_possessive] favorite phrase when coming upon a wounded soldier was, "Life or death?" Most chose life.',
    "[PAWN_nameDef] spent [PAWN_possessive] formative years on a glitterworld in the core region, where [PAWN_pronoun] and [PAWN_possessive] friends pursued lives of idle pleasure.\r\n\r\nAs [PAWN_pronoun] grew up, [PAWN_pronoun] began to find the life of ease unfulfilling. [PAWN_pronoun] decided to look for a more challenging path.",
    "[PAWN_nameDef] was being trained in song and dance to become the next big pop idol. [PAWN_pronoun] grew up being taken care of by company handlers.\r\n\r\n[PAWN_pronoun] never knew manual labor, but learned a lot about music and social etiquette.",
    "[PAWN_nameDef] worked on [PAWN_possessive] family's farm, looking after the animals and treating them when they were injured. Preferring hands-on tasks and the outdoors, [PAWN_pronoun] avoided softer jobs that might have kept [PAWN_objective] cooped up inside.\r\n\r\n[PAWN_pronoun] enjoyed this lonely work, and tended to stay out of people's way and do [PAWN_possessive] own thing.",
    "[PAWN_pronoun] preferred logical activities like computers and was completely useless at art.\r\n\r\nBeing awkward in social situations, [PAWN_possessive] friends were few but close.",
    "[PAWN_nameDef] spent [PAWN_possessive] childhood as a penniless orphan living on a space station. [PAWN_pronoun] managed to scrape by doing filthy jobs and stealing. [PAWN_pronoun] became so violent due to poor treatment by [PAWN_possessive] “betters” that [PAWN_pronoun] was banished from the station, just to be picked up by space pirates.",
    "Growing up in [PAWN_possessive] father's lab, [PAWN_nameDef] was given the life of an intellectual elite. [PAWN_pronoun] got everything [PAWN_pronoun] desired, and price was never an object.\r\n\r\nHowever [PAWN_nameDef] did not partake in the luxury given to him. Instead, [PAWN_pronoun] pursued more physical, and - in [PAWN_possessive] father's eyes - lower-class jobs.",
    "A genius child, [PAWN_nameDef] was put in a special training program covering aerospace warfare and engineering.\r\n\r\nOne day, [PAWN_pronoun] tried to befriend a squirrel by giving it a bracelet. The squirrel bit [PAWN_objective], earning [PAWN_objective] the nickname “Squirrel {PAWN_gender ? Boy : Girl}”.\r\n\r\n[PAWN_nameDef] came to believe that work involving manual labor is beneath [PAWN_objective].",
    "Growing up on the streets and fields of a rimworld, [PAWN_nameDef]'s [PAWN_possessive] only friend was a dog named Rest. The pair scraped by, finding just enough food to survive.\r\n\r\nWhen [PAWN_pronoun] was 13 years old, a criminal group took [PAWN_objective] under their wing.",
    "[PAWN_nameDef] loved boomrat pizza intensely. Rarely eating anything else, [PAWN_pronoun] was prone to bad health and low oxygen uptake.\r\n\r\n[PAWN_pronoun] loved bashing in the skulls of random creatures to see what was inside.",
    "[PAWN_nameDef] inherited a sense of duty from [PAWN_possessive] father, and began a law enforcement career on [PAWN_possessive] frontier homeworld.\r\n\r\n[PAWN_pronoun] tried to uphold the law with honor, but the corruption and greed of local government officials often discouraged him.",
    "Descended from a long line of mercenaries, [PAWN_nameDef] grew up in a busy trading hub.\r\n\r\n[PAWN_possessive] interest in the foreign goods at the market often distracted [PAWN_objective] from [PAWN_possessive] chores and training.",
    "[PAWN_nameDef] was a quick witted, funny child. One day, [PAWN_pronoun] wandered off on [PAWN_possessive] wealthy parents, and was ultimately lost in a supposedly unused ore warehouse. Due to cloning technology, [PAWN_possessive] parents decided that the time looking for [PAWN_objective] was better spent on just cloning a better son.",
    "[PAWN_nameDef] grew up in a family of nomadic traders, making a living from selling and buying goods on many worlds.\r\n\r\n[PAWN_nameDef] learned the customs and methods of trade of many cultures by participating in [PAWN_possessive] parents' business.",
    "De Dion was bred to become an executive officer for the large space trading corporation that owned [PAWN_possessive] home planet. [PAWN_possessive] family had been working for that corporation for seven generations.\r\n\r\nAt age six, [PAWN_pronoun] started to study at the corporate academy, where [PAWN_pronoun] became a loyal follower and a ruthless executive.",
    "[PAWN_nameDef] was a VR head - someone who is permanently jacked into the virtual gaming universe by [PAWN_possessive] spinal plug. [PAWN_pronoun] moved through [PAWN_possessive] daily tasks barely aware of the physical reality around him. This left [PAWN_objective] nearly unable to socialize.",
    "[PAWN_nameDef] was curious about everything. While other kids played tag in the suburbs of their industrial city, [PAWN_nameDef] read every book [PAWN_pronoun] could find about technology, robots, and weapons - whatever looked coolest.\r\n\r\n[PAWN_possessive] strong French accent kept [PAWN_objective] from making real friends.",
    "[PAWN_nameDef] was born into corporate slavery and raised to perform menial tasks for minimum pay. [PAWN_pronoun] was just another cog in the machine. \r\n\r\n[PAWN_nameDef] found [PAWN_possessive] freedom by joining a rebel organization whose goal was to break free from their corporate masters.",
    "[PAWN_nameDef] lived on a planet where kings and queens ruled with little regard for the peasants beneath them. [PAWN_possessive] family owned a large farm, but the king took most of the food it produced. This left [PAWN_nameDef]'s family poor, and unable to pay for [PAWN_possessive] education. Instead, [PAWN_pronoun] was required to work the fields with [PAWN_possessive] parents, and never had time to practice creativity.",
    "In the mountains of the planet Ticonderoga, [PAWN_nameDef] was raised by [PAWN_possessive] tribal mother. She taught [PAWN_objective] survival skills - trapping, tracking, shooting, skinning, cooking and healing.\r\n\r\n[PAWN_possessive] departed father had left behind an old bolt-action rifle, and [PAWN_nameDef] practiced with it every chance [PAWN_pronoun] got.",
    "[PAWN_nameDef] learned politics in an elite training school for socially gifted students on Kalthas IV.\r\n\r\nWhile [PAWN_pronoun] was naturally adept at reading and manipulating people, [PAWN_pronoun] found no joy in it. [PAWN_pronoun] left the academy several years before graduation.",
    "Always fascinated by machines, [PAWN_nameDef] spent [PAWN_possessive] time studying robotics and holography. [PAWN_pronoun] preferred the company of [PAWN_possessive] scientific creations to that of other people.",
    "[PAWN_nameDef] grew up in a quiet suburban neighborhood. [PAWN_pronoun] was never a master of social interaction, but [PAWN_possessive] interest in computers blossomed into a true talent at an early age.",
    "[PAWN_nameDef] helped out in [PAWN_possessive] father's cat breeding business, socializing, herding, and feeding hundreds of cats.\r\n\r\nWhen [PAWN_pronoun] refused to clean up after the cats, [PAWN_pronoun] was transferred to the breeding science division.",
    "[PAWN_nameDef] grew up in one of the few remaining cities on a world ravaged by nuclear war.\r\n\r\n[PAWN_pronoun] learned to survive on [PAWN_possessive] own in this post-apocalyptic wasteland by scavenging for technology and supplies.",
    "[PAWN_nameDef] was not made as a man, but a cold hearted assassin. [PAWN_pronoun] was bio-engineered by scientists, and trained as a killer. [PAWN_pronoun] was bred to have no emotion, no feelings, and no care for who lives, and who dies.",
    "[PAWN_nameDef] had an isolated upbringing on an urbworld. [PAWN_possessive] hatred of heights kept [PAWN_objective] indoors often, and made [PAWN_objective] an introverted child.\r\n\r\nWhen [PAWN_pronoun] did go out onto the catwalks of the city, [PAWN_pronoun] enjoyed playing war games, becoming proficient with various simulation weapons.",
    "Raised on Amen-Ti, glitterworld capital of the Star Empire, [PAWN_nameFull] had an easy childhood.\r\n\r\nAs a youth, [PAWN_nameDef] decided that joining the Starforce would be [PAWN_possessive] way of giving back to the Empire.",
    "[PAWN_nameDef] was a stableboy on a medieval planet, mucking dung almost every day to earn [PAWN_possessive] keep.\r\n\r\nBy the time [PAWN_pronoun] was exiting childhood, [PAWN_nameDef] had saved up enough money to pay a space trader to take [PAWN_objective] offworld.",
    "[PAWN_nameDef] grew up on one of the urbworlds and had to fend for [PAWN_objective]self all [PAWN_possessive] life. [PAWN_pronoun] never trusted anyone, relying on [PAWN_possessive] persuasiveness and cunning to survive.\r\n\r\n[PAWN_pronoun] soon became skilled with firearms and knives as well as words.",
    "Orphaned and abandoned on the tumultuous streets of [PAWN_possessive] polluted, teeming homeworld, [PAWN_nameDef] survived by deft hand and fleet foot. A natural born thief and trickster, [PAWN_pronoun] rose to prominence early, running the notorious and violent urchin gang 'Doomben Rats'.",
    "[PAWN_nameDef] was uprooted when marauders attacked [PAWN_possessive] family farm, destroying machinery and killing farmhands and beasts alike.\r\n\r\nAfter the death of all [PAWN_pronoun] knew, [PAWN_pronoun] was left in the ruins to fend for [PAWN_objective]self.",
    "As a child, [PAWN_nameDef] learned many artistic forms including music and novel writing. As [PAWN_pronoun] grew older, [PAWN_pronoun] began to study legends from [PAWN_possessive] home world - legends of the lizard-like beings at the center of [PAWN_possessive] culture's folklore.",
    "[PAWN_nameDef] was adopted by a prominent noble family after being left on their doorstep by [PAWN_possessive] mother.\r\n\r\n[PAWN_pronoun] quickly learned secrets that passed between the nobles like cheap wine - of worlds beyond [PAWN_possessive] own, languages, cultures and technologies both new and old.",
    'Abandoned on an animal planet as a small child with nought but a blanket with a name embroidered on it, [PAWN_nameDef] made [PAWN_objective]self one with the wilderness.\r\n\r\nWhen [PAWN_pronoun] was 13, [PAWN_pronoun] encountered a team of mineral surveyors, who "offered" [PAWN_objective] passage off of the planet.',
    "[PAWN_nameDef] grew up the child of an industrious colony manager. In this position, most manual and dangerous tasks were forbidden by [PAWN_possessive] parents, but on the rim everyone has to dirty their hands.",
    "[PAWN_nameDef] grew up in a family with a military and engineering background. [PAWN_pronoun] wanted to join the army but [PAWN_possessive] father didn't like the idea, so [PAWN_possessive] interest turned to great flying machines and works of engineering. [PAWN_pronoun] secretly hoped that this would one day lead [PAWN_objective] to a life of galactic exploration.",
    "Born to a poor family, [PAWN_nameDef] was a sickly child who never quite developed the strength of [PAWN_possessive] siblings.\r\n\r\n[PAWN_possessive] parents, unable to afford to provide for [PAWN_objective] and certain [PAWN_pronoun] couldn't pay [PAWN_possessive] own way, threw [PAWN_objective] to the streets. [PAWN_pronoun] learned hard and fast how to survive by any means necessary.",
    "[PAWN_nameDef] was abandoned on a toxic world overgrown with hostile plant life. [PAWN_pronoun] became accustomed early to the cold burn of loneliness.\r\n\r\n[PAWN_pronoun] learned to fight, but ate [PAWN_possessive] food raw and uncooked.",
    "[PAWN_nameDef] was raised as the only child of wealthy surgeons. After being pressured into accepting a medical apprenticeship, [PAWN_pronoun] snapped. [PAWN_pronoun] seized [PAWN_possessive] inheritance and went underground to learn how to exploit computer networks. [PAWN_pronoun] quickly became one of the most feared hackers on [PAWN_possessive] home planet.",
    "[PAWN_nameDef] grew up miserable on the plains of a rimworld. [PAWN_pronoun] found the strength to fight under the teachings of an old, broken scientist.\r\n\r\n[PAWN_pronoun] quickly learned to play with people's fears, and was nicknamed 'mad scientist'.",
    "[PAWN_nameDef] was the only child of celebrity sommeliers. [PAWN_possessive] parents expected [PAWN_objective] to take up the family profession, but after [PAWN_possessive] third admission to a youth detention center, this career path became unlikely.\r\n\r\nWhile in detention, [PAWN_nameDef] became skilled at making shanks and developed an interest in ornithology.",
    "Born on a cold rimworld inhabited mainly by furred xenohumans, [PAWN_nameDef] grew up to the sound of bar fights and shootouts. Though [PAWN_possessive] childhood was spent playing the banjo and working as a mechanic, [PAWN_possessive] abnormal intelligence made [PAWN_objective] want something more; [PAWN_pronoun] entered medical school at a young age.",
    "Abandoned among the filthy concrete spires, [PAWN_nameDef] never knew [PAWN_possessive] parents. [PAWN_pronoun] never received formal education, and often resorted to doing menial labor in exchange for food. Sometimes [PAWN_pronoun] lied, cheated, and stole to survive.",
    "[PAWN_nameDef] was born into a loving but poor family.\r\n\r\n[PAWN_pronoun] discovered [PAWN_pronoun] had an artistic talent which [PAWN_pronoun] inherited from [PAWN_possessive] father. [PAWN_possessive] mother taught [PAWN_objective] the benefits of hard work and determination. As [PAWN_pronoun] grew older, [PAWN_nameDef] developed a fascination with technology and military history.",
    "Born a male named Alex, [PAWN_nameDef] didn't fit in well with the other boys. When very young, [PAWN_pronoun] preferred creative pursuits, such as crafting jewelry, over sports. [PAWN_pronoun] felt [PAWN_pronoun] had the wrong body. Luckily, [PAWN_possessive] family and friends supported [PAWN_possessive] sex reassignment; as a teen, [PAWN_pronoun] underwent surgery to become a female.",
    "[PAWN_nameDef] grew up on a medieval planet as a knight in training. [PAWN_pronoun] trained directly under the king's war adviser for most of [PAWN_possessive] youth, and learned to fight with a sword and shield.",
    "Born on a medieval world, [PAWN_nameDef]'s first memory is of gazing up into the night's sky. \r\n\r\nEver since, [PAWN_pronoun] dreamed of squiring for a knight amidst the star-filled heavens. [PAWN_possessive] focus on that vision left [PAWN_objective] somewhat single-minded.",
    'Raised in an orphanage, [PAWN_nameDef] turned towards the gang life at age ten.\r\n\r\n[PAWN_pronoun] was exploited by the local gang as a drug mule to traffic "substance F" across rival gang territory. [PAWN_pronoun] took a bullet or two.',
    "[PAWN_nameDef] grew up on a [PAWN_possessive] family's glitterworld farm. They were one of the last farms on the planet that preferred traditional farming methods to glitterworld technology.",
    "Born on a decadent glitterworld, [PAWN_nameDef] was given every expensive toy.\r\n\r\nThis pampered lifestyle caused [PAWN_objective] to miss many basic life lessons. [PAWN_pronoun] developed a special aversion to cooking, and always ordered the staff to do the kitchen work.",
    "[PAWN_nameDef] grew up in a family with a rich military background. [PAWN_possessive] teenage years were spent traveling system to system wherever [PAWN_possessive] parents were deployed.\r\n\r\nFollowing the tradition of [PAWN_possessive] family, [PAWN_pronoun] enlisted at the earliest possible age.",
    "[PAWN_nameDef] grew up homeless on an urbworld. [PAWN_pronoun] was forced to fight and struggle for everything, making [PAWN_objective] hard and ruthless long before adulthood.\r\n\r\n[PAWN_nameDef] would have stayed in those streets, had [PAWN_pronoun] not been injured in a shootout and had [PAWN_possessive] body confiscated for use by one of the worldwide city's ruling corporations.",
    "Test subject #11,529,914 of experiment #56,048 spent [PAWN_possessive] childhood in white rooms performing mental and physical tests.\r\n\r\n[PAWN_possessive] only companion was a voice that called itself Mother. Mother rewarded success with praise - and failure with harsh punishment.",
    "[PAWN_nameDef] was an active child who lived an uneventful childhood until [PAWN_pronoun] fell into a fire and suffered horrific burns to [PAWN_possessive] hands and arms. Although the scars have faded, [PAWN_pronoun] can't bear to be in close proximity to fire.",
    "[PAWN_nameDef] had all the latest gadgets as a child. [PAWN_pronoun] spent all [PAWN_possessive] time playing games with AIs instead of with other children. [PAWN_pronoun] always felt awkward around new people.",
    "[PAWN_nameDef] was born in diplomatic family.\r\n\r\nTravelling often, [PAWN_pronoun] was home-schooled and saw the world mostly through a computer.",
    "Abandoned by [PAWN_possessive] parents, [PAWN_nameDef] was raised by the monks of the Novo Mosteiro dos Jerónimos monastery on Aracena VI.\r\n\r\nThe monks taught [PAWN_objective] discipline and hard work. In return, [PAWN_pronoun] would go into the city and 'acquire' exotic wines for the monks' nightly tastings.",
    "[PAWN_nameDef]'s drug-addicted mother died, leaving [PAWN_objective] an orphan at a young age. To stay alive, [PAWN_pronoun] resorted to theft, and when necessary, prostitution. When [PAWN_nameDef] was caught stealing from a church, the priestess saw a wounded but smart child, and took [PAWN_objective] in to give [PAWN_objective] a second chance at life.",
    "Abandoned as a little girl, [PAWN_nameDef] was found by a farmer. Being infertile [PAWN_objective]self, the farmer kept [PAWN_objective] as a slave. The constant beatings left [PAWN_objective] scarred and unable to handle violence. After many years, [PAWN_pronoun] ran away.",
    "Born into slavery, [PAWN_nameDef] never knew [PAWN_possessive] parents. [PAWN_pronoun] eventually escaped from [PAWN_possessive] masters and boarded a military cargo ship, where [PAWN_pronoun] was pressed into military service.",
    "[PAWN_nameDef] grew up as an apprentice in the foundries of an industrial world. This experience gave [PAWN_objective] metalworking skills and strong muscles, but stunted [PAWN_possessive] artistic development.",
    "[PAWN_nameDef] was recognized as gifted early in [PAWN_possessive] glitterworld upbringing. Luckily, [PAWN_possessive] family was in a position to cultivate that genius through advanced education. [PAWN_possessive] training included science, leadership, and the arts.",
    "Born to an upper-class family, [PAWN_nameDef] grew up with all the best things - the best education, the best social contacts, and of course the best technology money could buy.\r\n\r\nUnfortunately, living in such decadence left [PAWN_nameDef] rather spoiled when it came to labor.",
    "After graduating college at age twelve, [PAWN_nameDef] devoted [PAWN_possessive] life to becoming immortal. However [PAWN_possessive] research crossed the line when [PAWN_pronoun] tried to modify [PAWN_possessive] body using gene therapy and mechanical augmentation. [PAWN_pronoun] was arrested and condemned to a prison planet.",
    "Born to a family of fortune hunters, [PAWN_nameDef] always had a passion for ancient history.\r\n\r\nThough never a tough or social boy, [PAWN_pronoun] loved to dig through history books as well as dirt piles.",
    "[PAWN_nameDef] was engineered in a lab as part of the G-nome Project. [PAWN_pronoun] was implanted at birth with encyclopedic knowledge of all aspects of xenobiology.\r\n\r\nThe G-nome scientists nicknamed [PAWN_objective] [PAWN_nameDef] and occupied [PAWN_objective] with sculpting. [PAWN_pronoun] developed a love of sculpting gnomes and gnome accessories.",
    "Growing up in the circus, [PAWN_nameDef] learned a lot of interesting things. More interesting than the balls [PAWN_pronoun] juggled were the pockets [PAWN_pronoun] picked between shows.\r\n\r\nA mistake with some firesticks made [PAWN_objective] develop a deathly fear of fire.",
    "[PAWN_nameDef] was vat-grown as a slave in an illegal urbworld laboratory. As a young child, [PAWN_pronoun] was taught only to cook, clean and serve [PAWN_possessive] masters. For most of [PAWN_possessive] childhood, [PAWN_pronoun] knew nothing else.",
    "Growing up in a urbworld, [PAWN_nameDef] never had it easy. Every day was a struggle and pollution, hunger, and gangs of older kids.\r\n\r\nIn the little space [PAWN_pronoun] had to [PAWN_objective]self, [PAWN_pronoun] studied [PAWN_possessive] passion - guns, combat tactics, and war history.",
    "[PAWN_nameDef] grew up on a feudal world that was part of a multi-planet empire. As the son of a high lord, [PAWN_pronoun] enjoyed many privileges.\r\n\r\n[PAWN_pronoun] learned to maneuver in both the political landscape and in close quarters combat.",
    "[PAWN_nameDef] was the son of a medieval farmer, and was expected to follow in [PAWN_possessive] footsteps. [PAWN_pronoun] was brought up as a kind, well trained farm boy.\r\n\r\n[PAWN_pronoun] lived in an unusual feudal kingdom which co-existed with a midworld society which was itself well-known for genetic manipulation.",
    "[PAWN_nameDef] dreamed of space travel. [PAWN_pronoun] built [PAWN_possessive] own pretend spaceship from an old police box and went to see the great unknown.",
    "[PAWN_nameDef] loved technology from the day [PAWN_pronoun] was born. [PAWN_pronoun] had a mechanoid companion which [PAWN_pronoun] tried to modify.\r\n\r\n[PAWN_possessive] obsession with technology meant that [PAWN_pronoun] never appreciated arts or culture.",
    "[PAWN_nameDef]'s parents were drafted into a civil war. Growing up surrounded by fighting and death, [PAWN_pronoun] became well-accustomed to tragedy. [PAWN_possessive] expressive side, however, never developed.",
    "[PAWN_nameDef] had a privileged childhood on a major urbworld. Living in an apartment far above the dense poverty of the city, [PAWN_pronoun] spent most of [PAWN_possessive] time reading or drawing the cityscape [PAWN_pronoun] saw through [PAWN_possessive] window.",
    "Raised in the military traditions of [PAWN_possessive] forefathers, [PAWN_nameDef] was taught from a young age that [PAWN_pronoun] would be a great leader and the hero of [PAWN_possessive] family.\r\n\r\n[PAWN_pronoun] excelled at [PAWN_possessive] studies and graduated from the academy with honors.",
    '[PAWN_nameDef] was raised underground on a "marble" planet - a wasteland of radioactive asphalt and toxic fallout.\r\n\r\nTo survive on a planet devoid of life, [PAWN_pronoun] had to learn how to farm underground and how to fight without wasting bullets.',
    "Spending many summers crawling through dirt, [PAWN_nameDef] found [PAWN_pronoun] had quite the green thumb. Instead of learning to cook the food [PAWN_pronoun] grew, [PAWN_pronoun] just grew more and more.",
    "[PAWN_nameDef] was born to a poor family on a rimworld. [PAWN_possessive] father sold [PAWN_objective] into slavery at a young age. [PAWN_pronoun] was traded many times. A tycoon bought [PAWN_objective] and sent [PAWN_objective] down into mines to look after machines and to work alongside them.",
    "[PAWN_nameDef] was raised to become an engineer. For years, [PAWN_pronoun] planned to stow away on a cargo ship and start a new, more adventuresome life.\r\n\r\nOne night, after [PAWN_possessive] parents fell asleep, [PAWN_pronoun] managed to sneak on board a cargo ship just before it left port.",
    "[PAWN_nameDef] was raised in a glitterworld. Everything [PAWN_pronoun] wanted came to him. In school [PAWN_pronoun] was a social butterfly. At home, [PAWN_pronoun] spent [PAWN_possessive] time looking up the newest gadgets and playing [PAWN_possessive] favourite video games.",
    "[PAWN_nameDef] was found as a baby in a crashed spacecraft. According to the ship's records, [PAWN_pronoun] invented the nuclear device that powered [PAWN_possessive] ship. Apparently, [PAWN_pronoun] also invented the sky and the hamburger, and is said to have fathered a race of tasty golden kittens.",
    "[PAWN_nameDef] grew up on a scrap-heap of a planet - the garbage dump of other planets in the system. [PAWN_pronoun] learned to make new machines from the dead parts of old ones. With some friends, [PAWN_pronoun] eventually escaped on a salvaged and repaired ship.",
    "Born on an urbworld to the ruler of three megacities, [PAWN_nameDef]'s prospects looked good - until a violent insurrection overthrew [PAWN_possessive] family. Exile introduced [PAWN_nameDef] to hard work and combat, but some high-born squeamishness remains.",
    "[PAWN_nameDef] loved to play chess. [PAWN_pronoun] even earned the nickname [PAWN_nameDef] for some of [PAWN_possessive] craftier moves.\r\n\r\n[PAWN_pronoun] never got into trouble - mostly because [PAWN_pronoun] was good at not getting caught.",
    "Born on a deep space station, [PAWN_nameDef] was orphaned at a young age. In the orphanage, [PAWN_pronoun] stood up for the weaker kids and fought off the bullies.",
    "Despite being blessed with parental love, [PAWN_nameDef] hardly knew [PAWN_possessive] parents.\r\n\r\n[PAWN_pronoun] was frequently left to [PAWN_possessive] own devices which meant more time devoted to exploring [PAWN_possessive] interests…and getting into trouble.",
    "Growing up in a gang, [PAWN_nameDef] learned the brutality of the streets.\r\n\r\nKnowing that showing weakness could be fatal, [PAWN_pronoun] closed [PAWN_objective]self off from others.",
    "War may never change - but the cast of characters does.\r\n\r\nBorn on a violent urbworld, [PAWN_nameDef] was trained from a young age to fight the wars of others, and became rather good at it.",
    "[PAWN_nameDef] spent [PAWN_possessive] childhood on a post-apocalyptic world. [PAWN_pronoun] fought for survival from a young age, on a planet where trust did not exist.\r\n\r\n[PAWN_pronoun] told everyone that [PAWN_pronoun] had no luck.",
    "[PAWN_nameDef] lost [PAWN_possessive] family and home early in life. [PAWN_possessive] life became emotionally hollow, but [PAWN_possessive] painful memories drove [PAWN_objective] to survive.\r\n\r\n[PAWN_pronoun] took several jobs, but never achieved more than a basic education.",
    "[PAWN_nameDef] studied on an imperial midworld where guns were banned and self-defense study was encouraged. The relative safety allowed [PAWN_objective] to focus on [PAWN_possessive] botanical research.",
    '"Knowledge is power." These words sparked something within [PAWN_nameDef], and came to form [PAWN_possessive] core drive. When not entombed within libraries, [PAWN_pronoun] would take things apart to see first-hand how they worked, with little regard for the border between mechanical and organic.',
    "Standing on the ship hull with [PAWN_possessive] father in an child-size EVA suit, [PAWN_nameDef] loved space from a young age.\r\n\r\n[PAWN_pronoun] was put in a Civil Academics Program. While pretending to be like [PAWN_possessive] father, [PAWN_pronoun] spent [PAWN_possessive] time taking care of plants in [PAWN_possessive] messy room. [PAWN_possessive] nickname was given for [PAWN_possessive] love of circles.",
    "Left alone in the world without parents, [PAWN_nameDef] did the best [PAWN_pronoun] could to adapt.\r\n\r\nHaving to take care both of [PAWN_objective]self and younger kids at the orphanage, [PAWN_pronoun] learned a lot about humans and how to interact with them.",
    "[PAWN_nameDef] was abducted at a young age and forced to do menial labor on a pirate ship.",
    "The only useful skill [PAWN_nameDef] learned from [PAWN_possessive] tough military school was card-counting. [PAWN_pronoun] amassed many enemies by cheating at casinos, becoming ever more edgy and violent as the threat of retaliation grew.\r\n\r\nWhen [PAWN_pronoun] was finally caught, they burned half [PAWN_possessive] skin off. [PAWN_pronoun] could never face fire or violence again.",
    "[PAWN_nameDef] went to school like a good space cadet would. [PAWN_pronoun] was very tall and was known for [PAWN_possessive] good looks.\r\n\r\nThough [PAWN_pronoun] worried more about [PAWN_possessive] hairstyle than [PAWN_possessive] grades, [PAWN_pronoun] still somehow passed the final exams.",
    "[PAWN_nameDef] had a fascination with gadgets and gizmos. [PAWN_pronoun] took apart and put together almost anything [PAWN_pronoun] could find.\r\n\r\n[PAWN_pronoun] got used to repairing toys brought to [PAWN_objective] by other children, and even fixed a few devices from [PAWN_possessive] elders.",
    "[PAWN_nameDef] grew up on a glitterworld in a family of doctors and chose to maintain the tradition.\r\n\r\n[PAWN_pronoun] had few friends, but got along with [PAWN_possessive] siblings very well.",
    "[PAWN_nameDef] was born as low-ranking royalty in a large imperial family.\r\n\r\n[PAWN_pronoun] was placed In charge of running [PAWN_possessive] home planet from an early age, and learned important political and cultural skills in that role.",
    "[PAWN_nameDef] was raised by a world-hopping band of criminals. [PAWN_pronoun] learned not to leave evidence of [PAWN_possessive] presence in case the group had to leave in a hurry. [PAWN_pronoun] also learned about medicine and hand-to-hand combat from [PAWN_possessive] fellow criminals.",
    "Born into a long line of doctors, [PAWN_nameDef] was tutored in all fields of medicine, from herbal ointments to the modern synthetic drugs. [PAWN_pronoun] also picked up a healthy disdain for lower class work.",
    "[PAWN_nameDef] grew up as a rebel on an formerly-advanced rimworld devastated by war.\r\n\r\n[PAWN_possessive] Aspergers syndrome meant [PAWN_pronoun] struggled with social situations and was incapable of caring, but [PAWN_pronoun] learned hard skills like research and shooting very quickly.",
    "[PAWN_nameDef] fell into a coma at a young age and spent years dreaming about shooting. When [PAWN_pronoun] awoke, [PAWN_pronoun] was useless at most tasks - but [PAWN_pronoun] could aim pretty well.",
    "[PAWN_nameDef] researched new religions and traditions and often dreamt of distant stars. \r\n\r\n[PAWN_possessive] dreams prompted [PAWN_objective] to ask what lay beyond the lights in the sky.",
    "[PAWN_nameDef]'s parents used [PAWN_objective] to help smuggle contraband between a cluster of rimworlds.\r\n\r\nAided by [PAWN_possessive] small size, [PAWN_nameDef] became very adept at carrying out [PAWN_possessive] parents' missions, learning weaponry, negotiations, and most of all smuggling.",
    "[PAWN_nameDef] was abducted by xenohumans when [PAWN_pronoun] was still a baby. They experimented on [PAWN_objective] to understand [PAWN_possessive] genetic structure.\r\n\r\nAs [PAWN_pronoun] grew up, [PAWN_nameDef] grew a little bit too big and strong for [PAWN_possessive] captors and escaped.",
    "[PAWN_nameDef] was born under auspicious circumstances to a midworld spiritual group and held in reverence throughout [PAWN_possessive] childhood.\r\n\r\n[PAWN_pronoun] learned to take care of the poor and give succor to the faithful from an early age.",
    'The son of a genetically-engineered "perfect mate" on a glitterworld, [PAWN_nameDef] was much more shy, withdrawn and nervous than [PAWN_possessive] parents. [PAWN_pronoun] kept mostly to [PAWN_objective]self, studying science and medicine and taking on gardening as a hobby. \r\n\r\nIn [PAWN_possessive] teens, [PAWN_pronoun] ran away from home, seeking a quieter life.',
    "[PAWN_nameDef] and [PAWN_possessive] family lived a hard but prosperous life along with their fellow colonists on an outlying rimworld.\r\n\r\nOne day, a group of mechanoids attacked, killing everyone aside from [PAWN_nameDef]. [PAWN_pronoun] then lived alone in the desert until a group of raiders found him.",
    "[PAWN_nameDef] loved being outdoors. [PAWN_possessive] parents enrolled [PAWN_objective] in a program that taught military scouting skills. [PAWN_pronoun] thrived when [PAWN_pronoun] was left alone in the wilderness.\r\n\r\nUnfortunately, [PAWN_nameDef] did not learn the basic technological skills that are taken for granted by many others.",
    "[PAWN_nameDef] grew up on a medieval world. [PAWN_pronoun] learned the basics of alchemy and medicine in one the few monastic schools on [PAWN_possessive] planet.",
    "Orphaned as a child, [PAWN_nameDef] was sent to a secret military school on a harsh deadworld.\r\n\r\nTaking quickly to firearms and survival training, [PAWN_pronoun] graduated with honor, transitioning into a leadership position in covert operations.",
    "At a young age, [PAWN_nameDef] witnessed [PAWN_possessive] parents' murder. With no guidance, [PAWN_pronoun] had to fend for [PAWN_objective]self. Joining a small group of misfits, [PAWN_pronoun] did whatever was necessary to survive.",
    "Growing up on a rural farm-world leaves little opportunity for excitement and adventure, so when the Royal Fleet began a recruiting program on [PAWN_possessive] home planet, [PAWN_nameDef] threw down [PAWN_possessive] hoe and cattle prod to took up arms for the crown.\r\n\r\n[PAWN_pronoun] served on the interplanetary super-destroyer HMS Thunder-Child.",
    "[PAWN_nameDef] grew up on a backwater planet with minimal education. [PAWN_pronoun] had to hunt and grow food to survive.\r\n\r\n[PAWN_possessive] family's home was frequently raided for food by scavengers. This made [PAWN_nameDef] very suspicious and slow to trust anyone [PAWN_pronoun] doesn't know.",
    "[PAWN_nameDef] was never sure what [PAWN_pronoun] wanted to do with [PAWN_possessive] life. [PAWN_pronoun] spent most of [PAWN_possessive] time doing low-wage jobs and wondering what [PAWN_possessive] future would be like.\r\n\r\n[PAWN_pronoun] entertained [PAWN_objective]self with space sims and survival games, dreaming of one day being somewhere more interesting.",
    "[PAWN_nameDef] grew up in an underground shelter, waiting for radioactive fallout to subside. [PAWN_possessive] rich family had gained access to a luxury bunker city, while billions died on the surface.\r\n\r\nDetermined to one day seek revenge against the hated enemy, [PAWN_nameDef] spent most of [PAWN_possessive] time practicing shooting in [PAWN_possessive] private training facility.",
    "Ever since [PAWN_pronoun] was very small, [PAWN_nameDef] never knew a home beyond [PAWN_possessive] parent's ship. Their nomadic meandering provided a constant change of scenery. [PAWN_possessive] life was often perilous but never dull, and [PAWN_pronoun] inherited [PAWN_possessive] parents' wanderlust.",
    "Years ago, [PAWN_nameDef]'s tribe stumbled upon an abandoned gun vault. Believing the weapons to be sacred gifts, the shaman would select a child born under superstitious circumstances and assign them the honour of bearing one to defend the village. [PAWN_nameDef] is such a child.",
    "[PAWN_nameDef] was a professional gymnast at an early age. Thanks to [PAWN_possessive] skills, [PAWN_pronoun] was able to enroll in a glitterworld university.\r\n\r\nBecause of the lack of career opportunities in gymnastics, [PAWN_pronoun] left the university unemployed and carrying an enormous debt.",
    "[PAWN_nameDef] was bred to become an executive for the space exploration corporation that owned [PAWN_possessive] home planet. [PAWN_possessive] family had been working for that corporation for four generations.\r\n\r\nAt age five, [PAWN_pronoun] enrolled at the corporate academy where [PAWN_pronoun] learned loyalty and ruthlessness. [PAWN_nameDef] excelled in finding diplomatic solutions where others would need violence.",
    "As a child, [PAWN_pronoun] was launched into space as part of an interstellar colonization program.",
    "[PAWN_nameDef] was raised on a military base in the Xennoa system. [PAWN_pronoun] was exposed to many different strenuous activities and grew strong at an early age. [PAWN_pronoun] also learned negotiation, medical, and military tactics.",
    "[PAWN_nameDef] spent [PAWN_possessive] youth in the library, reading every book [PAWN_pronoun] could about the technical marvels of space travel, the engineering ingenuity of the space-faring pioneers, and the horrible yet fascinating tales of mechanoid wars. [PAWN_pronoun] vowed that one day, [PAWN_pronoun] would see these things for [PAWN_objective]self.",
    "[PAWN_nameDef] was born the child of two doctors in a small colony. Because of [PAWN_possessive] parents, [PAWN_pronoun] was always interested in science and medicine.\r\n\r\n[PAWN_nameDef] never really got along with other children, and as a result became withdrawn and unsociable.",
    "[PAWN_nameDef] was born on a urbworld merchant ship to an entrepreneurial mother and an absent father. Born male, [PAWN_pronoun] disliked boy stuff, and got into [PAWN_possessive] mother's things all the time.\r\n\r\nEventually, [PAWN_pronoun] traveled with [PAWN_possessive] mother to a glitterworld and spent [PAWN_possessive] savings on a body [PAWN_pronoun] was happy with.",
    "[PAWN_nameDef] lived on a midworld where the government cared about the youth. \r\n\r\n[PAWN_pronoun] was one of the many children who were taken from their parents and forced into the new education programs.",
    "Growing up on a farming planet, [PAWN_nameDef] spent [PAWN_possessive] time learning about the automated machinery that grew and harvested the multitude of crops.",
    "[PAWN_nameDef] was born at the peak of a lunar eclipse. The elders declared [PAWN_objective] a child of darkness and brought [PAWN_objective] under their care.\r\n\r\n[PAWN_possessive] entire childhood was spent studying the lore and rituals of [PAWN_possessive] people - until the day of calling.",
    "[PAWN_nameDef] was fascinated with astronomy. [PAWN_pronoun] would spend hours gazing at planets and nebulae through [PAWN_possessive] telescope.\r\n\r\n[PAWN_pronoun] is credited with discovering a small comet that would, years later, strike a nearby moon and disrupt the mining operations there.",
    "[PAWN_nameDef] was born on a farm on a rimworld.\r\n\r\nEverything was taken care of by the few members of the farm, including [PAWN_nameDef]. This helped [PAWN_objective] build independence, spirit, and a well-rounded character.",
    "[PAWN_nameDef] grew up on a glitterworld, training in rapier arts and singing. [PAWN_pronoun] spent several years as an energetic teen pop idol.\r\n\r\nHowever, [PAWN_pronoun] decided that the music and modeling industries were not paying [PAWN_objective] enough attention, so [PAWN_pronoun] left.",
    "Growing up on the frozen wastes of an ocean moon, [PAWN_nameDef] only had animals and a few hard-bitten sailors as companions.\r\n\r\nThe lack of social interaction made [PAWN_objective] develop a interest in engineering - but [PAWN_pronoun] never developed any great fondness for humans.",
    "[PAWN_nameDef] would dive into junk mounds in search for valuables and items of interest.\r\n\r\n[PAWN_pronoun] was never bothered by the stink, or dangers that could leave [PAWN_objective] wounded for weeks.",
    "Growing up on a an industrial planet, [PAWN_nameDef] started working in a chemical plant at age of six. Years of exposure to industrial toxins left [PAWN_objective] mentally scarred.\r\n\r\n[PAWN_pronoun] eventually blew up the facility and escaped the planet in a stolen cargo ship.",
    "[PAWN_nameDef] was in a boy scout troop on a midworld.\r\n\r\n[PAWN_pronoun] learned many survival skills including how to thrive in the outdoors and how to tend to basic wounds.",
    "[PAWN_nameDef] was top of [PAWN_possessive] class in chemistry, physics, exobiology, astronomy and opera.\r\n\r\nAn unfortunate lab accident left [PAWN_objective] with a deathly fear of fire.",
    "[PAWN_nameDef] was the son of a fern farmer in the towering forests of Khalderia.\r\n\r\n[PAWN_pronoun] found [PAWN_possessive] first love in speeder racing, zipping in and out of the massive canopies and gorgeous vistas of [PAWN_possessive] homeworld. The seedy underworld of racing also forced [PAWN_objective] to learn to defend [PAWN_objective]self with a quick word or a quicker shot.",
    "Born to a long line of off-world mercenaries, [PAWN_nameDef] grew up in a busy trading hub. At a young age, [PAWN_pronoun] was recruited into one of the mercenary crews.",
    "[PAWN_nameDef] was in a planetary marine cadet program.\r\n\r\n[PAWN_pronoun] was kicked out for shooting an officer. It was never established whether this was an accident.",
    "[PAWN_nameDef] was born and raised on a poor midworld, in the front passenger seat of [PAWN_possessive] mother's cab.\r\n\r\nWatching pedestrians and listening to the taxi passengers all day long, [PAWN_pronoun] soon became very good at figuring out someone's real purpose.",
    "[PAWN_nameDef] spent [PAWN_possessive] spare time creating things from [PAWN_possessive] imagination out of scrap metal and discarded machinery.\r\n\r\n[PAWN_pronoun] created simple robots and small tools, for both for fun and for utility.",
    "[PAWN_nameDef] was born in a laboratory as part of a altruistic but failed attempt to create a new class of human.\r\n\r\n[PAWN_possessive] childhood was filled with books and one-on-one tutoring. [PAWN_pronoun] was awkward, shy, and naive to the true nature of humanity.",
    "Born in a brothel on a harsh world, [PAWN_nameDef] never really had a childhood. [PAWN_pronoun] did odd jobs to survive, and became distant from others.",
    "[PAWN_nameDef] hung around a group of local luddite farmers on [PAWN_possessive] midworld. They helped [PAWN_objective] practice shooting every single day, and passed on some basic farming skills. They also taught [PAWN_nameDef] how to focus on working hard with your hands instead of getting distracted by highfalutin' ideas and clever machines.",
    "[PAWN_nameDef] was enslaved as a child and forced to fight creatures and other people in an underground fighting arena.\r\n\r\n[PAWN_pronoun] showed an affinity for the sport, and eventually bought [PAWN_possessive] own freedom. However, [PAWN_possessive] time in the pits never brought [PAWN_objective] much intellectual stimulation.",
    "[PAWN_nameDef] grew up in a large factory city on an industrial world.\r\n\r\nSince poverty was rampant and food scarce, [PAWN_pronoun] worked for whatever wages [PAWN_pronoun] could get. This wasn't an easy life, but [PAWN_nameDef] never shied away from a hard day's work.",
    "[PAWN_nameDef] grew up on a midworld with loving parents, a cute pet and a lot of money - but no friends.\r\n\r\n[PAWN_pronoun] was always told by [PAWN_possessive] father that 'those peasants just want your money'. So, [PAWN_pronoun] spent most of [PAWN_possessive] time alone, or fighting other kids.",
    "[PAWN_nameDef] was professional athlete at early age. Thanks to [PAWN_possessive] skills, [PAWN_pronoun] was able to leave [PAWN_possessive] homeworld and enroll in a glitterworld university of science and technology.\r\n\r\nBecause of [PAWN_possessive] demanding schedule and introverted nature, [PAWN_pronoun] became socially inept.",
    "[PAWN_nameDef]'s entire tribe was wiped out by a mysterious disease.\r\n\r\nFound alone and adopted by another band, [PAWN_pronoun] never became close with the other tribe members. [PAWN_pronoun] preferred to stay away from [PAWN_possessive] new home, wandering the woods and tending the animals.",
    "The only son of a well respected mechanoid inventor, [PAWN_nameDef] had access to the materials to subvert and modify [PAWN_possessive] father's creations.\r\n\r\n[PAWN_pronoun] used drugs to increase [PAWN_possessive] productivity. Unfortunately, the side-effects included persistent delusions of being mechanized, which limited [PAWN_possessive] social life.",
    '[PAWN_nameDef] was picked by government agents for the mysterious "Frame Project".\r\n\r\nDue to memory blockages, however, [PAWN_pronoun] remembers very little about this project or its true agenda - only that there were few survivors.',
    "[PAWN_nameDef] crafted sculptures from spent hex-cells and traded them to a local museum for food.\r\n\r\nAfter [PAWN_possessive] popularity grew, [PAWN_pronoun] was approached by a pirate and abducted. The pirate kept [PAWN_objective] prisoner and forced [PAWN_objective] to create sculptures for sale.",
    "[PAWN_nameDef]'s childhood was cut short when a mysterious plague hit [PAWN_possessive] homeworld.\r\n\r\n[PAWN_pronoun] watched [PAWN_possessive] friends die, and [PAWN_possessive] compassion for humanity died with them. In its place a new thirst for knowledge emerged.",
    "Abandoned by [PAWN_possessive] parents, [PAWN_nameDef] learned how to survive by [PAWN_objective]self before [PAWN_pronoun] was ten years old.",
    "[PAWN_nameDef] was an expressive child. [PAWN_pronoun] sang often, and made friends very easily, be they young or old, male or female.\r\n\r\n[PAWN_pronoun] hated fighting, but when made angry, [PAWN_pronoun] could be dangerous. [PAWN_possessive] temper was quick.",
    "[PAWN_nameDef] was born in the darkest slums of [PAWN_possessive] urban homeworld. Neglected by [PAWN_possessive] mother, [PAWN_pronoun] learned to survive on [PAWN_possessive] own, battling for every scrap of food [PAWN_pronoun] saw.\r\n\r\nEventually, as [PAWN_possessive] talents exceeded [PAWN_possessive] peers, [PAWN_pronoun] ascended from the depths to the surface streets and left [PAWN_possessive] mother behind.",
    "[PAWN_nameDef] was born on a midworld run by an intensely militaristic dictatorship.\r\n\r\nFrom a young age, [PAWN_pronoun] was trained to be a good soldier. They taught [PAWN_objective] how to use a gun and how to fight with melee weapons.",
    "Born to a poor family on an urbworld, [PAWN_nameDef] was abandoned on the streets at a young age.\r\n\r\n[PAWN_pronoun] learned to steal and kill to survive the ruthless streets, gaining skills in melee and ranged combat. There was little time for talk in [PAWN_possessive] life.",
    "Born into an influential family, [PAWN_nameDef] received the best education money could buy. [PAWN_possessive] intellect soon proved to be superior to many. However, [PAWN_possessive] lack of empathy quickly put [PAWN_objective] at odds with [PAWN_possessive] teachers and [PAWN_possessive] parents.",
    "Due to [PAWN_possessive] affinity for technology and desire to help others, [PAWN_nameDef] jumped at the chance to take a job at a help desk.\r\n\r\nUnfortunately, the job's soul-crushing after-effects lasted longer than [PAWN_possessive] enthusiasm.",
    "[PAWN_nameDef] grew up poor and hungry on a medieval planet, learning to fend for [PAWN_objective]self.\r\n\r\nAt first, [PAWN_pronoun] only took what [PAWN_pronoun] needed. Then [PAWN_pronoun] learned to take what [PAWN_pronoun] wanted.",
    "[PAWN_nameDef] lived on a pleasant midworld.\r\n\r\n[PAWN_possessive] body purist mother fell sick with heart disease. In desperation, [PAWN_nameDef]'s father abducted innocent people and harvested their hearts. [PAWN_nameDef]'s father was arrested, but the child remained scarred from the experience.",
    "Born to a long line of soldiers, [PAWN_nameDef] joined a military training program.\r\n\r\n[PAWN_pronoun] excelled in physical training, and even passed most of the intellectual exams. While [PAWN_pronoun] was never particularly bright or nimble, [PAWN_nameDef] learned the value of hard work and suffering.",
    "[PAWN_nameDef] served the high admiral of a space fleet. [PAWN_pronoun] learned the ways of court, including etiquette and speechcraft.\r\n\r\nIn [PAWN_possessive] feudal society, it was considered a great honor to serve a man of such prestige.",
    "[PAWN_nameDef] grew up helping in [PAWN_possessive] father's smithy.\r\n\r\nThey were some of the last smiths on the planet that to use traditional smithing methods. They even collect some materials themselves.\r\n\r\nSometimes, after work, [PAWN_nameDef] would practice using the swords [PAWN_pronoun] forged.",
    "Clone children are seeded into nutrient-rich womb-vats and rapidly grown in a simmed universe. They're harvested later, sometimes for food, sometimes for organs, sometimes for workers - but they're always disposable.",
    "[PAWN_nameDef] grew up without parents. [PAWN_possessive] whole life was spent alone, fighting for survival on the streets.\r\n\r\nNo matter how hard it became to survive, [PAWN_pronoun] never gave up.",
    "[PAWN_nameDef]'s military family forced [PAWN_objective] to train in hand-to-hand combat and fighting tactics.\r\n\r\nIn [PAWN_possessive] own time, [PAWN_pronoun] built small inventions. This sharpened [PAWN_possessive] mind.",
    "[PAWN_nameDef] was a bloodlusting child. Villagers thought [PAWN_objective] the product of a snake demon and human coupling.\r\n\r\nAfter watching how [PAWN_possessive] human father betrayed and murdered [PAWN_possessive] mother, [PAWN_pronoun] longed to see how many more humans [PAWN_pronoun] could get to fall into [PAWN_possessive] hands.",
    "[PAWN_nameDef] was obsessed with video games since [PAWN_possessive] hands were big enough to grip a joystick.\r\n\r\n[PAWN_pronoun] achieved middling finishes in several local tournaments during the 16-bit era. Nobody noticed when [PAWN_pronoun] retired early in [PAWN_possessive] teenage years.",
    "Born on a glitterworld, [PAWN_nameDef] was very interested  in the process of documenting information, and quickly became senior glitterpedia recorder.\r\n\r\n[PAWN_pronoun] was effective at self-study, but [PAWN_pronoun] was lacked in social experiences.",
    "[PAWN_nameDef] was discarded by [PAWN_possessive] family. Raised by wolves, [PAWN_pronoun] ran, hunted, and defended [PAWN_possessive] pack.\r\n\r\n[PAWN_pronoun] learned to fight efficiently by tooth and claw. [PAWN_pronoun] also learned brutally effective primal hunting strategies.",
    "[PAWN_nameDef] grew up in a modest but privileged family who encouraged [PAWN_objective] to play chess and shoot skeet at a young age.\r\n\r\nAs a bored student, [PAWN_pronoun] found joy in challenging [PAWN_possessive] teachers about the contradictions between [PAWN_possessive] planet's official values and their government's policies.",
    "Born on the planet New China, [PAWN_nameDef]'s father was a police chief and kept extremely strict watch over [PAWN_possessive] son.\r\n\r\n[PAWN_nameDef] had to do military-style drill exercises every day and keep [PAWN_possessive] room spotlessly clean, always ready for inspection. [PAWN_pronoun] came to abhor violence.",
    "[PAWN_nameDef] was an apprentice technician on trade ships plying their routes between the stations and planets of [PAWN_possessive] home system. In this job, [PAWN_pronoun] learned to fix and improve many machines.\r\n\r\nSometimes, [PAWN_possessive] ship was assigned to short exploratory jaunts into dangerous regions of space.",
    "[PAWN_nameDef] grew up on [PAWN_possessive] parents' vineyard. [PAWN_pronoun] spent [PAWN_possessive] youth exploring the land and making friends with various bugs and insects.\r\n\r\nHaving heard stories about all the fascinating things out there in the universe, [PAWN_pronoun] always dreamed of venturing out to see it for [PAWN_objective]self.",
    "[PAWN_nameDef]'s father owned the blacksmith shop in an run-down old city district. [PAWN_nameDef] would help [PAWN_possessive] father whenever [PAWN_pronoun] could.\r\n\r\nLater, [PAWN_possessive] father took [PAWN_objective] as a blacksmith's apprentice and raised [PAWN_objective] as a man. [PAWN_nameDef] also took on shooting as a hobby.",
    "[PAWN_nameDef]'s wealthy parents provided everything [PAWN_pronoun] ever wanted. After discovering joywires, [PAWN_pronoun] became obsessed. Once [PAWN_possessive] parents realized what happened, they cut [PAWN_objective] off.\r\n\r\nUncaring and often violent, [PAWN_pronoun] sought [PAWN_possessive] next joywire fix by any means possible.",
    "[PAWN_nameDef] was a child-knave of King Loteric. [PAWN_pronoun] enjoyed the training with wooden sticks and engaging others in close combat. [PAWN_pronoun] adapted quickly to the heat of battle and was good at spreading fire.\r\n\r\n[PAWN_pronoun] served [PAWN_possessive] lord well, until the king died in an unfortunate accident.",
    "Born into a wealthy family on a desert world, [PAWN_nameDef] was cast out after a hired attack squad destroyed [PAWN_possessive] ancestral home.\r\n\r\nThe boy managed to hide in a cooling duct beneath [PAWN_possessive] family's villa. Vowing revenge against the killers and whomever had hired them, [PAWN_nameDef] struck out into the wasteland, alone.",
    "[PAWN_nameDef]'s family never fit in. They were oddballs who couldn't conform to their regimented society. Because of this, they were forced into cryptosleep and sent to different rimworlds, never to see each other again.",
    "On an industrial world, [PAWN_nameDef] learned early that if [PAWN_pronoun] wanted to eat, [PAWN_pronoun] had to work. So work [PAWN_pronoun] did. Kids fit in places adults can't, and where [PAWN_pronoun] was from, the safety laws were quite flexible.\r\n\r\n[PAWN_pronoun] was always a bit of a pyromaniac, and was banned from the kitchen after an unfortunate incident.",
    "After running away from home, [PAWN_nameDef] had to live on the streets.\r\n\r\n[PAWN_pronoun] grew up fast, and learned early that [PAWN_pronoun] had to figure out how to fool people into connecting with [PAWN_objective].",
    "Born with a special mark on [PAWN_possessive] neck, [PAWN_nameDef]'s tribe chose to sacrifice [PAWN_objective] in a blood ritual. They left [PAWN_objective] in the forest to die. A pack of arctic wolves found and adopted [PAWN_objective].\r\n\r\nOver time, [PAWN_pronoun] learned to make tools to hunt with the pack.",
    "Born on a steam-powered midworld wracked by a century of economic crises, [PAWN_nameDef] went to work at a young age. Scrounging, shoe-polishing, sewing - [PAWN_pronoun] did it all. But [PAWN_pronoun] was most known as a brothel gofer, delivering all manner of aphrodisiacs and chemicals to the girls' rooms.",
    "[PAWN_nameDef] lost [PAWN_possessive] parents in an industrial accident and grew up in an orphans' labor camp. The camp overseers worked their charges mercilessly - but at least [PAWN_pronoun] was clothed and fed.",
    "[PAWN_nameDef] was a fanatical gamer who learned to survive in virtual reality games.\r\n\r\nOnce, while attempting to prove [PAWN_possessive] skills in the real world, [PAWN_pronoun] was abducted by a criminal scientist and experimented on. [PAWN_pronoun] escaped, but the experience stayed with him.",
    "In the ultra-competitive environs of [PAWN_possessive] glitterworld school, [PAWN_nameDef] always offered to play the class clown to diffuse tension.\r\n\r\n[PAWN_pronoun] developed a sense of social desperation from this, as well as an appreciation for the artistic side of comedy.",
    "[PAWN_nameDef] was adopted child of a notorious crime boss. [PAWN_pronoun] was taught all facets of the family business, from smuggling to inventive ways of killing.\r\n\r\nWhen the family was attacked, [PAWN_possessive] father ordered [PAWN_objective] to hide in a secret cryptosleep vault.",
    "[PAWN_nameDef] was a nice child. When anybody had a problem, [PAWN_pronoun] tried to fix it. But, being a child, [PAWN_pronoun] did not always succeed. This hurt [PAWN_possessive] sensitive soul.\r\n\r\n[PAWN_pronoun] dreamed of being a soldier who fights raiders and aliens.",
    "From the time [PAWN_nameDef] could walk, [PAWN_pronoun] helped take care of the animals and crops that [PAWN_possessive] people tended in their arid homeland.\r\n\r\nThe work toughened [PAWN_objective], but left little time for intellectual activities.",
    "Born on a high-tech world, [PAWN_nameDef] learned to hack computers at a young age. \r\n\r\nSpending many hours tinkering alone made [PAWN_objective] very good with machines, but very bad with humans.",
    "[PAWN_nameDef] grew up on a midworld, mostly locked in [PAWN_possessive] room, playing video games. [PAWN_pronoun] was warm-hearted, with a deep fondness for animals.\r\n\r\nAs [PAWN_pronoun] grew up, [PAWN_pronoun] turned to drugs to enhance [PAWN_possessive] reality. During these trying times [PAWN_pronoun] found passion and refuge in the gym.",
    "[PAWN_nameDef] studied chemistry and quantum mechanics for entertainment.\r\n\r\n[PAWN_pronoun] was very good at convincing others to do [PAWN_possessive] physical work, and made it a goal in life to avoid manual labor.",
    "[PAWN_nameDef]'s government ran an experimental super-soldier development program. They kidnapped thousands of infants, conditioned their minds with drugs and machines, and trained them to fight.\r\n\r\nMost infants died, but [PAWN_nameDef] did not. [PAWN_pronoun] killed [PAWN_possessive] first man at age six, and was fighting in field operations not long after.",
    "Plugged in to the computer via head-jack for days at a time, [PAWN_nameDef] found [PAWN_pronoun] preferred the company of computers to that of people or pets.",
    "[PAWN_nameDef] grew up on an urbworld military base. [PAWN_pronoun] was too young to fight, but [PAWN_pronoun] learned to make [PAWN_objective]self useful in other ways.\r\n\r\n[PAWN_pronoun] became familiar with guns and military equipment, but never really got in touch with the natural world.",
    "Born on a world wracked by plague, both of [PAWN_nameDef]'s parents were doctors. \r\n\r\n[PAWN_nameDef] was raised in reverse-quarantine, under the Hippocratic oath. [PAWN_pronoun] experienced little social interaction. However, [PAWN_pronoun] gained a lot of medical experience assisting in treatments.",
    "[PAWN_nameDef] loved nothing more then to forget the world around [PAWN_objective] and focus on the task at hand.",
    "Born to two medics, [PAWN_nameDef] longed for power. [PAWN_possessive] keen intellect and charisma helped [PAWN_objective] gain the respect of [PAWN_possessive] peers.\r\n\r\nDeciding that the best way to gain power was to climb the ranks of the imperial military, [PAWN_pronoun] joined at the youngest possible age.",
    "Born to a family of traveling merchants, [PAWN_nameDef] was mentored by [PAWN_possessive] father in the ways of being a trader. [PAWN_pronoun] was often tasked with caring for the pack animals. Due to [PAWN_possessive] nomadic lifestyle, [PAWN_pronoun] hunted and bartered for [PAWN_possessive] food.",
    "[PAWN_nameDef] was born on a peaceful, unimportant midworld.\r\n\r\nWhile [PAWN_pronoun] had a few friends, [PAWN_pronoun] preferred to spend [PAWN_possessive] time in solitude, tinkering on [PAWN_possessive] autocycle while listening to netcasts, or plinking at plastic soldiers with a new rifle [PAWN_pronoun] had just put together.",
    "[PAWN_nameDef] was abandoned as a newborn, and grew up among the animals of [PAWN_possessive] homeworld's dense jungles.\r\n\r\nWhen [PAWN_pronoun] was a teenager, a traveling doctor found [PAWN_objective] injured near a road, hissing and meowing. [PAWN_pronoun] rescued [PAWN_objective] and took [PAWN_objective] on as an apprentice.",
    "[PAWN_nameDef] spent much of [PAWN_possessive] childhood learning biome farming. In [PAWN_possessive] biome they kept animals to investigate which would cope best in the alien environment.\r\n\r\nDue to this, the travel restrictions and oxygen rationing system, [PAWN_pronoun] rarely got to meet anyone from outside [PAWN_possessive] family.",
    "[PAWN_nameDef] was born on a wealthy glitterworld. [PAWN_pronoun] studied at the Caspian school of Engineering, and excelled in mathematics and computer programming.\r\n\r\n[PAWN_nameDef] grew up in clean, sterile environments. [PAWN_pronoun] never saw a farm or livestock.",
    "Growing up on an industrial midworld where robberies and muggings weren't uncommon, [PAWN_nameDef] helped support [PAWN_possessive] family by making small trinkets and novelties to sell to passers-by.\r\n\r\n[PAWN_pronoun] learned early on that it wasn't always what [PAWN_pronoun] knew, but who [PAWN_pronoun] knew that would get [PAWN_objective] far in life.",
    "[PAWN_nameDef] was born into a famously skilled family of bodyguards. [PAWN_possessive] mothers Elena and Victoria forced [PAWN_objective] into many dangerous situations, training [PAWN_objective] to put [PAWN_possessive] client's well-being over [PAWN_possessive] own.\r\n\r\n[PAWN_nameDef] was taught about many herbs and natural poisons to help [PAWN_objective] prevent clients from being poisoned.",
    "[PAWN_nameDef] was the child of an industrious space engineer. [PAWN_possessive] parents forbade most manual and dangerous tasks, so [PAWN_pronoun] learned art and music instead.\r\n\r\n[PAWN_pronoun] loved animals, but [PAWN_possessive] parents never let [PAWN_objective] have a pet - though [PAWN_pronoun] played with other people's pets a lot.",
    "[PAWN_nameDef] was a student on a glitterworld. [PAWN_pronoun] had a hard time in school, since the other kids thought [PAWN_objective] rather strange.\r\n\r\n[PAWN_pronoun] always maintained a distance from these events, being continuously surprised by the many interesting and awkward ways life can go.",
    "[PAWN_nameDef] grew up in a cave on an tundra planet, and was adopted by a traveling group of entertainers known only as the Wizards. Once a starfaring crew, the Wizards told [PAWN_objective] wondrous stories about the universe.\r\n\r\nOne day, the Wizards did not return from scavenging. After years of waiting, [PAWN_nameDef] set off into space to find them.",
    "[PAWN_nameDef] was raised in a forest. [PAWN_possessive] father taught [PAWN_objective] to hunt and live off the land, so that [PAWN_pronoun] could live without the need of others when father died.\r\n\r\nAccustomed to manual labor and with an intuitive mind, [PAWN_nameDef] could survive weeks alone.",
    "[PAWN_nameDef] grew up in a glitterworld royal household. [PAWN_pronoun] was groomed from a young age to marry into another planet's royal family.\r\n\r\nUnfortunately, [PAWN_possessive] crooked teeth made [PAWN_objective] undesirable to suitors, so [PAWN_pronoun] became bitter and resentful.",
    "[PAWN_nameDef] watched as a mysterious plague spread through [PAWN_possessive] town, killing [PAWN_possessive] family and friends.\r\n\r\n[PAWN_pronoun] learned some medicine from watching the plague doctors, but was mentally scarred by the ordeal.",
    "[PAWN_nameDef] was born an raised in an offworld soldier growth facility. From a very young age, [PAWN_pronoun] was taught close-quarters combat tactics, aggression, and how to survive on distant planets.\r\n\r\nOne of the best, [PAWN_nameDef] was eventually chose to enter the orbital-deployment shock troop corps.",
    "[PAWN_nameDef] was a faithful student, and was dedicated to learning anything and everything [PAWN_pronoun] could about humanity and its creations.\r\n\r\nWhile [PAWN_pronoun] was shunned as a nerd, [PAWN_pronoun] didn't mind. [PAWN_pronoun] hoped for a brighter future.",
    "Born on a medieval farm, [PAWN_nameDef] was tasked with caring for domestic animals. [PAWN_pronoun] grew to love them.\r\n\r\nWith time, [PAWN_pronoun] learned to tame wild animals. [PAWN_pronoun] dreamed of one day meeting a thrumbo and taming it.",
    "[PAWN_nameDef] explored all around [PAWN_possessive] family's large estate, uncovering little natural wonders hidden in nearby catacombs, rivers, and caves.\r\n\r\nDuring [PAWN_possessive] teenage years, [PAWN_nameDef] made numerous enemies",
    "[PAWN_nameDef]'s father was a starfighter pilot, and [PAWN_pronoun] always idolized the old man.\r\n\r\nFrom a young age, [PAWN_pronoun] collected pilot memorabilia and studied pilot books, preparing to join the deep space navy and follow in [PAWN_possessive] father's footsteps.",
    "[PAWN_nameDef] traveled between rimworlds with [PAWN_possessive] family. [PAWN_nameDef]'s mother, a renowned doctor, often delivered lectures from the hull of their retrofitted cargo/medical ship.\r\n\r\nSometimes, the family took on difficult long-term medical work with especially needy patients, and [PAWN_nameDef] helped where [PAWN_pronoun] could.",
    "[PAWN_nameDef] was raised up to fear God and love [PAWN_possessive] country. [PAWN_pronoun] was a genuine backwoods kid. [PAWN_pronoun] always worked hard to earn respect rather than demanding it.",
    "Early on, [PAWN_nameDef] developed a talent for writing. [PAWN_pronoun] was soon writing a popular online journal - anonymously, to hide [PAWN_possessive] age - on topics ranging from bioethics to political theory and xenosociology.",
    "A member of a royal family, [PAWN_nameDef] was exiled for shaming [PAWN_possessive] family.\r\n\r\nLiving in a foreign land, mostly alone, [PAWN_pronoun] spent most of [PAWN_possessive] time making huts and houses to live in. [PAWN_pronoun] found little time in an average day for enjoyment, and lost all [PAWN_possessive] friends and family.",
    "[PAWN_nameDef] was fascinated with combat. [PAWN_possessive] parents traveled often, so [PAWN_pronoun] was able to sample many different fighting styles, from 76th-wave jujutsu to the infamous 'urbworld-style' karate.\r\n\r\nA polite child, most fighters accepted [PAWN_possessive] requests for training - but moving around often without finishing a tutelage made [PAWN_objective] lazy.",
    "Born in a rich family, [PAWN_nameDef] was given everything, and never developed basic work ethic or the foundations of a non-dependent personality.\r\n\r\n[PAWN_pronoun] was expected to become one of the best doctors in the world.",
    "[PAWN_nameDef] grew up on a rimworld, under the tyranny of [PAWN_possessive] father, who forced [PAWN_objective] to work every day on the farm. [PAWN_pronoun] dreamed of escaping [PAWN_possessive] father and exploring the universe.\r\n\r\nOne day, when the trade ship was overhead, [PAWN_pronoun] stowed away among the goods in the launch pods, and escaped into space.",
    "[PAWN_nameDef] grew up isolated on a trash planet. A dumping ground for surrounding glitterworlds, it was a harsh home. As a baby, [PAWN_pronoun] sucked on the tap of a discarded nutrient paste dispenser for comfort.\r\n\r\nIn these desperate circumstances, against all odds, [PAWN_pronoun] survived - and thrived.",
    "[PAWN_nameDef]'s planet collided with a small moon. Everything [PAWN_pronoun] knew as home was destroyed, and [PAWN_possessive] entire family died. [PAWN_pronoun] was left in the ruins to fend for [PAWN_objective]self.",
    "[PAWN_nameDef] was born under authoritarian rule. Despite intense oppression from family and community, [PAWN_pronoun] never gave up fighting for [PAWN_possessive] dignity and [PAWN_possessive] freedom.\r\n\r\n[PAWN_pronoun] was often put into hopeless situations where even family would try to terrorize [PAWN_objective] into propriety. [PAWN_pronoun] learned to trust no one.",
    "Growing up on a high-tech midworld with a flourishing space transit industry, [PAWN_nameDef] wished to leave for the stars and live among the growing spacer class.\r\n\r\n[PAWN_pronoun] excelled in [PAWN_possessive] studies, and gained entry to [PAWN_possessive] homeworld's most prestigious naval academy.",
    "When [PAWN_pronoun] was a baby, [PAWN_nameDef]'s mother went insane and left [PAWN_objective] in the woods.\r\n\r\nRaised by wild people, [PAWN_nameDef] was known for both loving and killing animals.",
    "[PAWN_nameDef] was grown to be a perfect scientist, with a mind perfectly tuned for physics and chemistry.\r\n\r\n[PAWN_possessive] creators used [PAWN_objective] as a teaching aid on mind design, hoping [PAWN_pronoun] would eventually grow to be a great mind and continue their research.",
    "[PAWN_nameDef] was the only child of a powerful company president. [PAWN_possessive] beautiful appearance led to a career as a music idol.\r\n\r\nWhen [PAWN_possessive] mother died, [PAWN_nameDef] could not bear [PAWN_possessive] father's loneliness, and became his sexual companion.",
    "It is not uncommon for a sickly child to be cast away. What is uncommon is for that child to survive and even thrive with such a weak body.\r\n\r\nUsing [PAWN_possessive] quick wit and silver tongue, [PAWN_nameDef] was able to get out of almost any situation - most of the time at the cost others around him.",
    "[PAWN_nameDef] was born on an iceworld. Survival depended on staying together and building with nothing.\r\n\r\n[PAWN_pronoun] got used to the cold. [PAWN_pronoun] never got used to dealing with those strange green things called plants.",
    "[PAWN_nameDef] was involved in a traumatic accident that resulted in [PAWN_objective] killing [PAWN_possessive] own family.\r\n\r\nCast out from society, [PAWN_pronoun] was left with only [PAWN_possessive] animal companions and several engineering textbooks to keep [PAWN_objective] company.",
    "[PAWN_nameDef] had a modest but proper upbringing. Despite a good family background and plenty of support, [PAWN_pronoun] struggled to make friends and was often bullied. [PAWN_pronoun] learned to work or play alone, and avoided socializing to avoid conflict.\r\n\r\nWhen conflict did arise, [PAWN_nameDef] would retaliate violently.",
    "[PAWN_nameDef] lacked typical social skills, and avoided social interaction.\r\n\r\n[PAWN_pronoun] gained satisfaction only from steady work. [PAWN_pronoun] especially disliked speaking with overly creative or outgoing individuals.",
    "[PAWN_nameDef] was born to pirates, in a dirty metal room that smelled of motor oil.\r\n\r\n[PAWN_pronoun] was never exactly taught anything, but [PAWN_pronoun] still learned the ways of survival, barter, and combat.",
    "[PAWN_nameDef] grew up believing [PAWN_pronoun] was a normal, albeit slightly sheltered child.\r\n\r\nIn truth, [PAWN_pronoun] was part of an elaborate experiment. Researchers were conditioning [PAWN_objective] using social interactions and mechanite injections to try to produce an elite soldier.",
    "The child of a wealthy manufacturer, [PAWN_nameDef] was pampered from an early age. [PAWN_pronoun] developed an affinity for reading and art, and a distaste for menial chores.\r\n\r\nA revolution brought [PAWN_possessive] father's businesses under state control. Penniless, [PAWN_nameDef] worked hard to complete [PAWN_possessive] education.",
    "[PAWN_nameDef] was raised on a world wracked by war.\r\n\r\nAt an early age, [PAWN_pronoun] was shown how to use guns and cruelty to project [PAWN_possessive] will. [PAWN_pronoun] later distinguished [PAWN_objective]self by committing atrocities with more enthusiasm than anyone else.",
    "[PAWN_nameDef] trained towards [PAWN_possessive] dream of working for [PAWN_possessive] hometown's local council.\r\n\r\nFor reasons [PAWN_pronoun] never quite understood, [PAWN_pronoun] was bullied relentlessly by [PAWN_possessive] classmates. [PAWN_pronoun] chose to repress [PAWN_possessive] rage.",
    "A midworld child, [PAWN_nameDef]'s wealthy parents sent [PAWN_objective] to a nearby glitterworld to receive a better education.\r\n\r\n[PAWN_nameDef] was a talented student. However, due to [PAWN_possessive] family's wealth, [PAWN_pronoun] never had to do dumb labor.",
    "[PAWN_nameDef] was born to a tribe of desert ascetics who wandered the endless wastes.\r\n\r\nThey sought a mythical substance they believed could liberate them from ignorance through psychedelic revelation - and usher in a new period of interstellar peace.",
    "[PAWN_nameDef] grew up in a house near a bustling midworld metropolis.\r\n\r\n[PAWN_pronoun] was talented at art and creative work, but often acted strangely, and thus had few friends.",
    '[PAWN_nameDef] was chosen at an early age by the village elders to keep the sacred rituals of the Oracle.\r\n\r\nAn irrepressibly curious child, [PAWN_nameDef] caused a religious crisis for [PAWN_possessive] tribe when [PAWN_pronoun] accidentally flipped a switch to open the "tombs" of the Gods - cryptosleep caskets inhabited by some very confused ancestors.',
    "Left for dead at a young age, [PAWN_nameDef] was rescued by an old man who ran an urbworld junkyard. The old man forced [PAWN_nameDef] to do dangerous, demanding work.\r\n\r\n[PAWN_nameDef] became very familiar with machines, but [PAWN_pronoun] grew up with almost no other experiences.",
    "[PAWN_nameDef] was an incredibly empathetic child, so much that [PAWN_pronoun] was totally overwhelmed by simple social interactions. Once, [PAWN_pronoun] stepped on a bug and felt so guilty [PAWN_pronoun] cried for an hour.\r\n\r\n[PAWN_nameDef] did try to use a gun one time, but it went very poorly, as the loud noise made [PAWN_objective] flinch uncontrollably.",
    "[PAWN_nameDef] worked as a technician in a lab studying animals.\r\n\r\n[PAWN_pronoun] spent [PAWN_possessive] days taking care of the animals and cleaning up after them. [PAWN_pronoun] dreamed of having [PAWN_possessive] own lab one day.",
    "[PAWN_nameDef]'s family were space traders. One day, [PAWN_nameDef]'s cryptosleep pod failed in transit. [PAWN_pronoun] had to spend years awake on the ship as the other slept.\r\n\r\n[PAWN_pronoun] filled [PAWN_possessive] days creating beautiful contraptions from the ship's cargo - but [PAWN_pronoun] didn't learn a lot of basic planetary living skills.",
    "[PAWN_nameDef] spent most of [PAWN_possessive] childhood tending the animals [PAWN_pronoun] had bought or rescued.\r\n\r\n[PAWN_pronoun] saw beauty in natural things more than fabricated objects, and chose the company of [PAWN_possessive] animals over that of [PAWN_possessive] peers.",
    "A frightfully intelligent child, [PAWN_nameDef] was kidnapped by a glitterworld corporation and forced to research technologies for weaponizing anti-matter.\r\n\r\n[PAWN_pronoun] vowed never to invent anything again.",
    "[PAWN_nameDef]'s hobby was making videos for the popular video sharing service Vidtube. [PAWN_pronoun] made everything from video game reviews to pasta cooking guides.\r\n\r\n[PAWN_pronoun] gained a over a million followers.",
    "[PAWN_nameDef] grew up in a colony owned by a large glitterworld corporation. All children had virtual reality devices attached by force, and were raised in a brutal digital world.\r\n\r\nConstantly forced to fight others for the entertainment of the wealthy, gunplay and tactics became the center of [PAWN_nameDef]'s universe.",
    "The daughter of an engineer and doctor, [PAWN_nameDef]'s early life was intellectually rich. After visiting a physics lab, [PAWN_pronoun] decided [PAWN_pronoun] wanted to be a quantum physicist.\r\n\r\nBitten by a camel, kicked off a horse, and chased by dogs, [PAWN_nameDef] developed a fear of animals.",
    "[PAWN_nameDef] was raised by doting parents on a midworld. Instead of playing with other children, [PAWN_pronoun] read books voraciously.\r\n\r\n[PAWN_pronoun] was not particularly rugged, and struggled with physical labor.",
    "Born among stars to a spacefaring family, the [PAWN_nameDef] was the only survivor when [PAWN_possessive] family's ship was destroyed.\r\n\r\n[PAWN_pronoun] was forced to find a way to survive, and seek the joy of knowing another family.",
    "[PAWN_nameDef] grew up in an isolated midworld village, surrounded by opticows and countryside.\r\n\r\n[PAWN_possessive] parents taught [PAWN_objective] a wide range of useful domestic skills, but a peaceful and secure childhood left [PAWN_objective] with little understanding of the harder parts of life.",
    "In the slums of a steamworld, [PAWN_nameDef] developed a fascination with machines and contraptions. [PAWN_pronoun] found [PAWN_pronoun] preferred their company to that of other people.\r\n\r\n[PAWN_possessive] remarkable dexterity earned [PAWN_objective] a steady stream of pocket change, and [PAWN_pronoun] spent every penny on spare parts and tools to play with.",
    "Abandoned at birth, young [PAWN_nameDef] started [PAWN_possessive] life in an orphanage.\r\n\r\nA rascal and a scoundrel, [PAWN_pronoun] became a clever troublemaker.",
    "[PAWN_nameDef] just wanted to be cool like [PAWN_possessive] favorite superhero All-Might. [PAWN_pronoun] dreamed of going on space adventures and exploring new worlds. [PAWN_pronoun] also dreamed of chocolate... space chocolate.",
    "Children are often presumed innocent, and so make ideal spies. [PAWN_nameDef] was trained in the arts of infiltration and information-gathering when [PAWN_pronoun] was very young.\r\n\r\n[PAWN_possessive] spent years behind enemy lines, gathering intel in a brutal war. During this time, [PAWN_pronoun] had limited opportunity for education.",
    "Born to settler folk, [PAWN_nameDef]'s family had a beloved herd of turtles, who protected them by absorbing shots from raiders.\r\n\r\nAt a young age, [PAWN_pronoun] was entrusted with the turtles. [PAWN_pronoun] bred them, successfully - too successfully. The massive turtle herds consumed every food source and destroyed the local ecosystem.",
    "[PAWN_nameDef] spent most of [PAWN_possessive] childhood on [PAWN_possessive] computer, typing away, never knowing when to get up and eat.\r\n\r\n[PAWN_pronoun] had a very narrow interest: hacking cryptosleep safety protocols.",
    "[PAWN_nameDef] grew up on a toxic world with tyrannical leaders. While the rest of the population was high on the planet's narcotic exports, [PAWN_pronoun] joined a rebel militia.\r\n\r\nAfter a risky operation against the regime failed, [PAWN_pronoun] fled the planet, staying alive by threatening mutual annihilation with a planetcracker antimatter bomb.",
    "[PAWN_nameDef] was raised and trained by a group of military explorers dedicated to charting pathways through deep space and on remote planets.",
    "Born to a family of raiders in the mudlands of Vinna, [PAWN_nameDef] survived by scavenging food and resources from nearby settlements with [PAWN_possessive] gang. [PAWN_pronoun] was the most ferocious of the bunch.",
    'As a child, [PAWN_nameDef] crafted complex algorithms. [PAWN_pronoun] was used as a "human computer" for most of [PAWN_possessive] childhood. This left [PAWN_objective] socially awkward and rather scrawny.\r\n\r\n        Despite the solitary confinement, [PAWN_nameDef] developed a great imagination to occupy [PAWN_possessive] idle time.',
    "[PAWN_nameDef] was a street urchin on a feudal steamworld.\r\n\r\n        After [PAWN_pronoun] tried to steal food from the palace, the emperor, desperate to secure an heir, took [PAWN_objective] in and groomed [PAWN_objective] to be next in line for the throne.",
    "[PAWN_nameDef] had a shot at an education, but [PAWN_pronoun] rebelled against the injustices [PAWN_pronoun] saw and was expelled from three schools. This left [PAWN_objective] with a sense of integrity, but a lack of social skills.\r\n\r\n        [PAWN_nameDef] sought self-actualization. [PAWN_pronoun] spent [PAWN_possessive] days meditating and practicing katana and staff fighting techniques.",
    "[PAWN_nameDef] ferried wealthy businessmen and politicians to and from [PAWN_possessive] home world.\r\n\r\n        Witnessing the depths of hedonism these people descended to changed [PAWN_objective] in ways not even [PAWN_pronoun] understood.",
    "Freya was born into a small, poor family. She was bullied relentlessly, beaten and hated. As she grew up she developed an   interest in guns. She usually studied from books, but occasionally managed to get some practice time with the real thing. Freya later   discovered a talent for art and began to teach herself how to draw and paint.",
    "Born to a nomadic family in a feudal society, [PAWN_nameDef] was instructed in the arts of speechcraft, sleight of hand, horse riding.\r\n\r\n        [PAWN_pronoun] was always running around the camp doing odd jobs to help [PAWN_possessive] extended family.",
    "[PAWN_nameDef] was born on the dark edge of a tidally-locked urbworld. After an argument, [PAWN_possessive] father sold [PAWN_objective] to a local district lord as a slave artist.\r\n\r\nForced to create art or be punished, [PAWN_pronoun] withdrew and became unable to form relations with others.",
    "Born a quiet urbworld orphan, [PAWN_nameDef] was invited to join a traveling circus. [PAWN_possessive] small size and observant nature helped [PAWN_nameDef] become a noted acrobat.\r\n\r\nUnfortunately, [PAWN_possessive] violent tendencies brought [PAWN_possessive] acrobatic career to an early end.",
    "[PAWN_nameDef] was more interested in the systems and patterns of the world rather than its inhabitants. [PAWN_possessive] social skills suffered.\r\n\r\n[PAWN_nameDef] came to understand that all things are part of the whole, and to destroy part would be to destroy all.",
    "A steward on medieval merchant ships, [PAWN_nameDef] was well-travelled on [PAWN_possessive] homeworld by [PAWN_possessive] early teens.\r\n\r\nThe constant orders from [PAWN_possessive] captain, however, fostered a defiant streak, as well as a general disaste for anything [PAWN_pronoun] considered to be busywork.",
    "When [PAWN_pronoun] was a baby, [PAWN_nameDef]'s parents traded their child to a troop of monkeys. Little is known of [PAWN_possessive] life among the primates.",
    "[PAWN_nameDef] grew up a sheltered and spoiled child in one of the many manors of [PAWN_possessive] old-money industrialist family.\r\n\r\nWhile attending an elite private school, [PAWN_nameDef] received an extensive education in the arts and sciences, but never saw the horrors of the real world.",
    "[PAWN_nameDef] was born with an almost magic voice. [PAWN_pronoun] learned to sing as a baby. [PAWN_possessive] voice also had a special timbre to it which calmed down everyone who listened to it.",
    "[PAWN_nameDef] spent [PAWN_possessive] childhood selling knockoff cigarettes to 15-year-olds. The cigarettes were often full of grass clippings.",
    "[PAWN_nameDef] spent his childhood selling knockoff cigarettes to 15-year-olds. The cigarettes were often full of grass clippings.",
    "[PAWN_nameDef] was an independent game developer.\\n\\nAfter an early success, [PAWN_possessive] career quickly degenerated into a circus of misguided ideas, deals gone wrong, and desperate, failed PR stunts.",
  ],
  slot: ["Childhood", "Adulthood", "Radio"],
  key: [
    "Cooking",
    "Intellectual",
    "Social",
    "Medicine",
    "Artistic",
    "MedicineUltratech",
    "Construction",
    "Mining",
    "Melee",
    "Shooting",
    "Animals",
    "Plants",
    "Crafting",
    "BlocksMarble",
    "Apparel_Cape",
    "MealLavish",
    "MeleeWeapon_LongSword",
    "MedicineHerbal",
    "MealFine",
    "Beer",
    "Gun_Autopistol",
    "PlantPot",
    "Apparel_CowboyHat",
    "Jade",
    "WoodLog",
    "Leather_Bear",
    "Meat_Pig",
    "Kibble",
    "SunLamp",
    "Milk",
    "Apparel_Duster",
    "Cloth",
    "Pila",
    "Bow_Short",
    "MeleeWeapon_Spear",
    "Meat_Bison",
    "Hay",
    "MealSurvivalPack",
    "Plasteel",
    "MealNutrientPaste",
    "ComponentIndustrial",
    "Apparel_GasMask",
    "Penoxycyline",
    "ThrumboHorn",
    "MedicineIndustrial",
    "Gun_SniperRifle",
    "AestheticNose",
    "Meat_Thrumbo",
    "Flake",
    "EggCobraFertilized",
    "PsychiteTea",
    "Kidney",
    "Gold",
    "Heart",
    "WoolMuffalo",
    "InsectJelly",
    "Gun_Revolver",
    "GameOfUrBoard",
    "Blunt",
  ],
  value: [
    "2",
    "8",
    "5",
    "3",
    "1",
    "-5",
    "6",
    "-3",
    "4",
    "-4",
    "7",
    "9",
    "10",
    "-2",
    "-1",
    "20",
    "0",
    "$(roundToTicksRough(randInt(1800, 2400)))",
    "$points",
    "$rewardValue",
    "0.60",
    "0.25",
    "0.15",
    "$pointsFactorTwoStar",
    "$pointsFactorThreeStar",
    "$peacefulChallengeRating",
    "$firstRaidDelayTicks",
    "$raidCount",
    "$raid(($raidLoopCounter))/raidDelayTicks",
    "true",
    "0.7",
    "0.85",
    "0.5",
    "$(30*60000)",
    "5~13",
    "$mapWealth",
    "$($requestedThingMarketValue * $wealthRewardValueFactor * randFloat(1.5, 2.1))",
  ],
  bodyTypeMale: ["Male", "Thin", "Hulk", "Fat", "Female"],
  bodyTypeFemale: ["Female", "Thin", "Hulk", "Fat", "Male"],
  Psychopath: ["0", ""],
  bodyTypeGlobal: ["Fat", "Thin", "Male", "Female", "Hulk"],
  MayRequireAnyOf: ["Ludeon.RimWorld.Royalty,Ludeon.RimWorld.Biotech"],
  Ascetic: ["0"],
  Beauty: [
    "2",
    "1",
    "-1",
    "-4",
    "0",
    "4",
    "11",
    "-6",
    "-3",
    "-10",
    "5",
    "50",
    "100",
    "400",
    "-200",
    "-20",
    "75",
    "8",
    "3",
    "0.5",
    "-8",
    "15",
    "30",
    "-2",
    "-12",
    "-15",
    "-30",
    "-25",
    "-18",
    "6",
    "20",
    "10",
    "2.5",
    "2.3",
    "3.2",
    "5.5",
    "1.5",
    "1.7",
    "1.3",
    "1.9",
    "2.8",
    "3.6",
    "2.0",
    "1.2",
    "1.6",
    "1.85",
    "2.4",
    "-40",
    "-50",
    "1.1",
    "1.35",
    "14",
    "18",
  ],
  Pyromaniac: ["", "0"],
  Undergrounder: ["0"],
  Brawler: ["0"],
  SpeedOffset: ["2"],
  ignoreIllegalLabelCharacterConfigError: ["False", "true"],
  identifier: [
    "MadScientist22",
    "CivilEngineer2",
    "ArmyCook0",
    "UrbworldPolitican92",
    "GraphicDesigner33",
    "SpaceTechnician29",
    "DoomsdayPariah18",
    "CombatEngineer30",
    "MilitaryEngineer45",
    "ColiseumFighter22",
    "FighterController67",
    "FerventResearcher72",
    "VengefulExplorer54",
    "BanishedSoldier85",
    "StalwartFarmer21",
    "SpaceResearcher25",
    "GeneticScientist66",
    "Reporter71",
    "PopIdol59",
    "UnstableButcher31",
    "Archaeologist85",
    "PirateKing69",
    "MilitaryInventor35",
    "EngineeredPilot75",
    "BanditLeader74",
    "Gigolo68",
    "ColonialGovernor78",
    "MercenaryChef44",
    "CargoPilot58",
    "SpaceHumanitarian9",
    "ExecutiveOfficer5",
    "RugbyPlayer71",
    "StateEngineer60",
    "CombatNegotiator31",
    "SpaceStationCook63",
    "SpaceHunter79",
    "PoliticalAssassin46",
    "AIResearcher94",
    "ArmyScientist35",
    "FelineScientist76",
    "SpaceMarine51",
    "Mercenary55",
    "Microbiologist12",
    "AceFighterPilot54",
    "Brigand68",
    "Assassin7",
    "BusinessGangster58",
    "ParamilitaryAgent11",
    "Storyteller63",
    "InformationBroker77",
    "VersatileWorker13",
    "TestSubject90",
    "AerospaceEngineer44",
    "HiredMuscle5",
    "AlcoholicTrucker93",
    "IntelligenceAgent10",
    "WarChief97",
    "InvoluntaryHermit38",
    "MedicalScientist16",
    "VoidRaider74",
    "MidworldSailor91",
    "CoreworldJeweler19",
    "MedievalKnight26",
    "StarKnight5",
    "TestSubject39",
    "GeneticEngineer89",
    "NinjaAssassin31",
    "LazyProgrammer3",
    "MindwipedAssassin50",
    "TestSubject92",
    "SpaceshipSalesman34",
    "AIProgrammer22",
    "WhiteHatHacker82",
    "VinhoKing98",
    "SlaveChemist84",
    "RocketEngineer53",
    "SpaceMarine19",
    "CombatEngineer4",
    "PlanetaryDiplomat7",
    "Guardian55",
    "RenegadeEngineer43",
    "Osteologist74",
    "Gnomebiologist96",
    "CriminalKingpin36",
    "UrbworldSexSlave25",
    "UrbworldSergeant50",
    "SystemLord77",
    "HunterOfTheKing53",
    "Castaway81",
    "EnergyResearcher89",
    "BountyHunter93",
    "Missionary99",
    "MercenaryPilot63",
    "LoneTraveler95",
    "Undertaker93",
    "Mercenary4",
    "HiredAssassin37",
    "SpaceshipChef41",
    "DreadedDude58",
    "Engineer40",
    "Minister88",
    "Pirate56",
    "BountyHunter17",
    "Spiceminer81",
    "CrimeLord10",
    "MarbleDoctor99",
    "MobHenchman53",
    "MechWarVeteran77",
    "PoisonGardener29",
    "ArtificerRampant95",
    "SystemsEngineer1",
    "NeuroScientist19",
    "PirateCaptain69",
    "HedgeFundManager54",
    "ComputerEngineer10",
    "ExpertHandyman8",
    "MedicSoldier54",
    "ExiledResearcher44",
    "Villain89",
    "SpaceNavyDoctor72",
    "GovernmentAgent61",
    "SelflessHunter61",
    "AcolyteOfStars6",
    "SpaceRaider71",
    "Spy58",
    "WanderingHealer52",
    "CosmeticReject64",
    "RaiderKing38",
    "FrontierMarshal27",
    "ReligiousHierarch16",
    "AnarchistRebel77",
    "CriminalSurgeon99",
    "SanitationCaptain29",
    "OverwatchSniper42",
    "Sightseer70",
    "GameTester77",
    "WanderingCrafter42",
    "MutinousCaptain52",
    "IntimateAssassin35",
    "CorpResearcher93",
    "SoleSurvivor85",
    "AWOLSoldier49",
    "Explorer49",
    "StarshipDoctor37",
    "BountyHunter41",
    "FallenOfficial12",
    "OrbitalReservist22",
    "ShamanOfShadows47",
    "StationSecurity38",
    "SpaceTrafficker68",
    "PopIdolPirate39",
    "Roboticist1",
    "Chemist78",
    "StalwartFarmer90",
    "UrbworldPimp93",
    "ParticlePhysicist44",
    "DefenseLawyer71",
    "Ranger6",
    "ClanChief14",
    "FactionLeader74",
    "ProstheticSurgeon0",
    "CorpResearcher71",
    "SpaceMarine9",
    "TechnologyDoctor35",
    "PirateTrooper73",
    "CombatMedic82",
    "HiredGun70",
    "StilettoAssassin34",
    "Hunter73",
    "BattlefieldTech52",
    "MasterTrader65",
    "ExoticChef96",
    "MadScientist2",
    "Warrior73",
    "SpaceExplorer53",
    "Smuggler23",
    "DestroyerGeneral26",
    "SerialMurderer47",
    "MadScientist31",
    "SoftwareDeveloper84",
    "HumanTrafficker35",
    "MentalPatient69",
    "SpaceMarine94",
    "EnvoyOfTheStars19",
    "Blacksmith7",
    "CloneFarmer58",
    "GangBoss49",
    "LostMarine81",
    "Healer35",
    "ToasterRepairman22",
    "ArchotechSpy75",
    "BehaviourResearch74",
    "PoliticalActivist20",
    "Flaneur30",
    "ChiefEngineer62",
    "ReptileResearcher37",
    "BlacksmithShooter21",
    "AddictionCounsel60",
    "BloodgameSurvivor6",
    "VoidspaceRaider94",
    "Vagabond73",
    "MachineFixer31",
    "SpaceMerchant97",
    "BeastSlayer67",
    "DrugLieutenant98",
    "UrbworldEnforcer11",
    "ToolMechanic77",
    "CraftShaper37",
    "MercenaryLeader28",
    "SpecialForces13",
    "DromedaryKnight37",
    "BattleMechanic27",
    "DischargedSoldier53",
    "Chemist73",
    "SuperSoldier95",
    "CorporateBuilder58",
    "MechanicsEngineer64",
    "PlagueDoctor31",
    "NetworkEngineer34",
    "ImperialGeneral27",
    "Caravaneer53",
    "MilitaryGunsmith27",
    "Aromatherapist80",
    "RebelFighter39",
    "Roboticist41",
    "PrivateDetective66",
    "SpaceBartender0",
    "CosmeticSurgeon36",
    "UprightDiplomat49",
    "VideoProducer83",
    "BushSniper94",
    "PirateSympathizer24",
    "UnethicalDoctor29",
    "ShockTrooper15",
    "CombatMedtech59",
    "WildlifeRanger99",
    "TreasureHunter82",
    "StarfighterPilot79",
    "GangSoldier39",
    "SpaceMarine5",
    "Adventurer19",
    "BloodyWanderer28",
    "PirateDoctor0",
    "BloodyDentist9",
    "MasterChef48",
    "Mercenary20",
    "ExplorerWriter10",
    "MilitiaSoldier79",
    "WarshipCaptain67",
    "ForestProwler15",
    "RunawayDancer35",
    "ProstituteIdol28",
    "SicklyLawyer49",
    "Tinkerer86",
    "RocketPioneer19",
    "TheaterTechnician80",
    "ArmySergeant16",
    "StellarPirate10",
    "LostSoldier13",
    "LanguageAnalyst27",
    "PrisonerOfWar2",
    "MadAccountant61",
    "Politician57",
    "Philosopher97",
    "AdventurousWeirdo55",
    "CasketBuilder52",
    "MilitaryOfficer17",
    "FearfulChef49",
    "MuffaloResearcher67",
    "ArtifactHunter48",
    "Herpetologist3",
    "Fugitive4",
    "GunDealer14",
    "ColonyEngineer7",
    "DeepSpaceSurveyor1",
    "CostumeCrafter41",
    "Gunfighter51",
    "RenownedProfessor51",
    "NavyTechOfficer0",
    "KingOfPirates25",
    "SpaceNavyTech37",
    "Defector95",
    "SpaceMarineMedic10",
    "Technician9",
    "MercenaryLord13",
    "ShadowMarine63",
    "Warlordess56",
    "ComputerEngineer36",
    "CommonerLord45",
    "TournamentFighter28",
    "HypnocultLeader61",
    "ArtStudent79",
    "VengefulNomad67",
    "ModDesigner85",
    "MercenaryCaptain98",
    "Restorer70",
    "RimworldExile32",
    "Streamer52",
    "CivilServant25",
    "TravelingBard93",
    "GameDeveloper95",
    "FallenProdigy40",
    "FarmKid60",
    "FarmerBoy88",
    "UrbworldCriminal6",
    "OptimisticChild30",
    "UrbworldHooligan12",
    "IndworldUrchin73",
    "ChildScientist30",
    "MechanoidNerd10",
    "ColiseumCleaner54",
    "OfficerCadet25",
    "ReclusiveProdigy96",
    "WarRefugee96",
    "WorkCampSlave37",
    "DisciplinedFarmer28",
    "VoyagerChild94",
    "VatgrownMedic53",
    "CoreDilettante33",
    "AspiringPopIdol28",
    "FarmBoy64",
    "LogicalChild2",
    "StationWhelp94",
    "ConstructionGrunt84",
    "StudentEngineer34",
    "StreetKid19",
    "PizzaLover94",
    "FrontierMarshal54",
    "MercenaryRecruit36",
    "AbandonedChild30",
    "TradersChild62",
    "CorpStudent95",
    "VRAddict29",
    "Nerd92",
    "RebelSlave14",
    "MedievalPlower14",
    "SonOfAHuntress75",
    "StudentSocialite89",
    "AwkwardNerd48",
    "MidworldGeek18",
    "CatHerder4",
    "Scavenger62",
    "VatgrownAssassin20",
    "UrbworldChild56",
    "StarforceCadet79",
    "Stableboy49",
    "ArtfulDodger78",
    "Pickpocket82",
    "DisasterSurvivor65",
    "HistoryStudent12",
    "NobleWard61",
    "FeralChild96",
    "SpoiledChild33",
    "AmateurEngineer3",
    "StreetUrchin45",
    "WildChild5",
    "HackerProdigy84",
    "MadScientist47",
    "YouthDelinquent30",
    "HillbillyProdigy60",
    "UrbworldUrchin90",
    "MidworldSketcher71",
    "CoreworldStudent50",
    "MedievalSquire5",
    "StarSquire9",
    "DrugMule80",
    "ArtisanFarmer23",
    "Pampered87",
    "MilitaryChild82",
    "GangMember83",
    "TestSubject82",
    "FireScarredChild1",
    "TechEnthusiast28",
    "DiplomatsChild97",
    "Winerunner8",
    "StreetChild4",
    "SlaveFarmer99",
    "MedievalSlave50",
    "FoundryApprentice76",
    "PrivilegedProdigy70",
    "PrivilegedChild86",
    "ChildProdigy76",
    "BoneCollector14",
    "GNomeSculptor34",
    "CircusPerformer37",
    "VatgrownSlavegirl8",
    "GunKid30",
    "FeudalLordling56",
    "FeudalFarmBoy0",
    "SpaceFanboy22",
    "GlitterworldNerd20",
    "WarChild24",
    "UpperUrbworlder12",
    "IdealisticCadet64",
    "ChildOfGlass61",
    "AmateurBotanist79",
    "ChildSlave58",
    "AdventuringChild30",
    "VideoGamer55",
    "DreadedBaby56",
    "Tinkerer79",
    "DisplacedNoble67",
    "ChessMaster67",
    "Orphan15",
    "Straggler71",
    "BrutalThief59",
    "BoySoldier14",
    "ApocalypseChild23",
    "OrphanOfWar60",
    "ImperialStudent49",
    "PowerMadScholar30",
    "TechHead8",
    "Orphan25",
    "Abductee43",
    "BlackjackPlayer76",
    "AcademyStudent58",
    "AspiringEngineer58",
    "MedicalStudent96",
    "HighBaroness37",
    "WorldSlider42",
    "MedicalStudent38",
    "AspergersRebel13",
    "ShootingComa59",
    "PsychologyStudent15",
    "SpaceSmuggler6",
    "Abductee7",
    "BlessedChild46",
    "GlitterworldKid85",
    "FeralChild85",
    "Scout6",
    "TraineeAlchemist64",
    "MilitaryCadet16",
    "Pickpocket61",
    "SpaceCadet77",
    "Naturalist14",
    "Drudge9",
    "BunkerKid41",
    "ChildOfDrifters18",
    "TribalThunderer45",
    "Gymnast48",
    "CorpBredStudent54",
    "Colonist22",
    "MilitaryTrainee20",
    "Bookworm3",
    "ColonyKid47",
    "CaravanChild53",
    "ReEducatedYouth23",
    "FarmMechanic1",
    "AccursedChild88",
    "AmateurAstronomer77",
    "FarmHand2",
    "EnergeticPopIdol61",
    "IcePlanetChild95",
    "Scrounger25",
    "ToxicChild96",
    "BoyScout42",
    "ScienceProdigy65",
    "SpeederRacer71",
    "MercenaryRecruit18",
    "MarineCadet73",
    "YoungPsychologist58",
    "Tinkerer11",
    "LabGrownChild22",
    "Orphan11",
    "TechScholar75",
    "PitGladiator19",
    "FactoryDrone58",
    "RichBoy9",
    "Athlete47",
    "SoleSurvivor63",
    "MechanoidHacker93",
    "ProjectSubject99",
    "HexCellArtist91",
    "PlagueProdigy12",
    "PoorKid18",
    "Dreamer79",
    "UrbworldUrchin6",
    "MilitaryRecruit49",
    "StreetUrchin53",
    "KidScientist53",
    "HelpDeskWorker31",
    "MedievalThief74",
    "TraumatizedYouth87",
    "YouthSoldier99",
    "GalacticPage37",
    "ApprenticeSmith37",
    "CloneFarmed21",
    "GangMember16",
    "MilitantChild49",
    "Killer41",
    "ProfessionalGamer76",
    "DataDecoder39",
    "WolfPackMember26",
    "RebelStudent14",
    "Cadet96",
    "ShipTechnician0",
    "FarmersDaughter81",
    "BlacksmithsSon73",
    "JoywireAddict76",
    "ChildKnave69",
    "WastelandWanderer81",
    "SocialPariah3",
    "PyroAssistant82",
    "StreetUrchin74",
    "RitualChild20",
    "BrothelGofer84",
    "LaborCampOrphan91",
    "GameFanatic86",
    "ClassClown96",
    "CrimeBossChild39",
    "SentimentalChild55",
    "DustyFarmHand75",
    "HackerKid98",
    "VideoGamer16",
    "Student65",
    "SuperSoldier99",
    "HeadjackAddict4",
    "UrbworldArmyBrat84",
    "PlagueChild44",
    "TechnicalKid1",
    "YoungMaster23",
    "CaravanTraveler6",
    "MidworldLoner80",
    "JungleKid35",
    "FarmersSon20",
    "WealthyStudent59",
    "StreetPeddler66",
    "BodyguardTrainee54",
    "SpoiledChild80",
    "Philosopher82",
    "CaveChild17",
    "RangerChild57",
    "GlitterworldRoyal24",
    "PlagueSurvivor39",
    "OffworldRecruit91",
    "ProdigalStudent67",
    "AnimalCaretaker20",
    "AdventurousYouth70",
    "PilotFan16",
    "MedicalHelper27",
    "CountryChild95",
    "RebelWriter82",
    "ExiledPrince58",
    "NewAgeDuelist27",
    "SpoiledBrat59",
    "CowFarmer39",
    "DiscardedYouth93",
    "DisasterSurvivor29",
    "RebelChild8",
    "MidworldCadet83",
    "ForestChild83",
    "VatgrownScientist91",
    "MusicIdol50",
    "SicklyLiar3",
    "IceworldSurvivor75",
    "TragicLoner87",
    "SchoolyardOutcast11",
    "AntisocialChild83",
    "YoungPirate71",
    "SoldierExperiment50",
    "DedicatedStudent12",
    "Infantry99",
    "AngryStudent88",
    "TransferStudent10",
    "DesertRat47",
    "ArtisticWeirdo56",
    "ApprenticeOracle83",
    "JunkyardMechanic51",
    "Empath47",
    "AnimalLabTech39",
    "ShipChild46",
    "PetKeeper7",
    "ChildResearcher32",
    "VidtubeStar98",
    "CorporateSlave22",
    "AspiringPhysicist47",
    "QuietNerd97",
    "SpacerOrphan77",
    "SmallTownKid41",
    "SteamworldTinker38",
    "AbandonedOrphan61",
    "SpaceNerd97",
    "ChildSpy84",
    "TurtleHerder41",
    "ComputerGeek62",
    "Freethinker38",
    "NavyPathfinder53",
    "HunterScavenger64",
    "Computer80",
    "CommonerHeir5",
    "RebelliousStudent74",
    "SpaceyachtPilot89",
    "ShunnedGirl30",
    "MedievalNomad12",
    "ArtSlave57",
    "OrphanedAcrobat84",
    "CuriousChild33",
    "StewardsAssisant28",
    "MonkeyChild67",
    "OldMoneyHeir46",
    "MusicalKid14",
    "Punk30",
  ],
  workDisables: [
    "Hauling, Mining",
    "None",
    "Caring, Social, Firefighting",
    "ManualDumb, Crafting",
    "Artistic",
    "Caring, Artistic",
    "Artistic, Firefighting, PlantWork",
    "Caring, Artistic, PlantWork, Mining",
    "Intellectual",
    "ManualDumb, ManualSkilled",
    "Caring",
    "Social, Artistic, Crafting, Cooking",
    "ManualDumb, Cleaning, Hauling, PlantWork, Mining",
    "Caring, Social",
    "Intellectual, Cleaning",
    "PlantWork",
    "Cooking, Cleaning",
    "Cleaning",
    "ManualDumb, Caring, Social, Artistic",
    "ManualDumb",
    "Caring, Artistic, Crafting, Cooking, Cleaning, PlantWork",
    "Caring, Cleaning, PlantWork",
    "Cooking, Mining",
    "Social, Intellectual, Firefighting",
    "Cleaning, PlantWork",
    "Caring, Social, Intellectual, Artistic, Cleaning",
    "Hauling, PlantWork",
    "Caring, Artistic, Cleaning",
    "Cooking",
    "Caring, Social, Artistic, Cooking, Cleaning, PlantWork",
    "Violent",
    "PlantWork, Mining",
    "Caring, Social, PlantWork, Mining",
    "ManualDumb, Violent, Hauling, PlantWork, Mining",
    "Cooking, Firefighting, Cleaning",
    "Violent, Intellectual",
    "Animals, Artistic, PlantWork",
    "Crafting",
    "Artistic, Cleaning",
    "Social, Hauling, Mining",
    "Social",
    "ManualDumb, Violent",
    "Hauling",
    "ManualDumb, Artistic",
    "Crafting, Cleaning",
    "Caring, Animals",
    "Animals, Artistic",
    "ManualSkilled",
    "Firefighting",
    "Animals, Artistic, Crafting",
    "ManualDumb, Caring, Firefighting",
    "Animals, Artistic, Cooking",
    "ManualDumb, ManualSkilled, Caring",
    "Mining",
    "Firefighting, PlantWork",
    "Caring, Animals, Artistic",
    "Animals",
    "ManualDumb, Cleaning, Hauling",
    "Caring, Artistic, PlantWork",
    "Cooking, Firefighting, Mining",
    "ManualDumb, Mining",
    "Intellectual, Artistic",
    "Cooking, Firefighting",
    "Artistic, Cooking, Cleaning",
    "Animals, PlantWork",
    "Intellectual, Animals, Artistic",
    "Social, Animals, Artistic",
    "Violent, Animals, Artistic, Cooking",
    "Cooking, PlantWork",
    "ManualDumb, Social",
    "ManualDumb, Animals, Artistic",
    "Artistic, Hauling",
    "Social, Firefighting",
    "Social, Artistic",
    "Artistic, Cooking, Firefighting",
    "Animals, Mining",
    "Caring, Firefighting, Mining",
    "Social, Artistic, PlantWork",
    "Social, Cooking",
    "Artistic, Mining",
    "ManualDumb, ManualSkilled, Caring, Artistic",
    "Cleaning, Hauling",
    "Caring, Artistic, Cooking, PlantWork",
    "ManualDumb, Firefighting, PlantWork, Mining",
    "Social, Intellectual",
    "Caring, Intellectual, Artistic, Cleaning",
    "ManualDumb, Cooking",
    "Social, Artistic, Cleaning",
    "Artistic, Crafting",
    "Caring, Social, Intellectual, Artistic, Cleaning, PlantWork",
    "Social, PlantWork, Mining",
    "Violent, Social",
    "Social, Animals",
    "Crafting, Firefighting, Cleaning",
    "Violent, Firefighting",
    "ManualDumb, ManualSkilled, Intellectual, Artistic",
    "Artistic, PlantWork",
    "Firefighting, PlantWork, Mining",
    "Intellectual, Artistic, Crafting",
    "Violent, Artistic",
    "Artistic, Firefighting",
    "Firefighting, Cleaning, Hauling, Mining",
    "Caring, Social, Artistic",
    "Caring, Artistic, Cooking",
    "Animals, Cleaning",
    "ManualSkilled, Social, Intellectual, Cooking",
    "Artistic, Cleaning, PlantWork",
    "Animals, Cooking, Cleaning",
    "Violent, Social, Animals",
    "Animals, Cooking, PlantWork, Mining",
    "Caring, Animals, Cooking",
    "Social, Cooking, PlantWork",
  ],
  requiredWorkTags: ["None"],
  shuffleable: ["False", "false"],
  Greedy: ["0"],
  ShootingAccuracy: ["-1", "1"],
  Transhumanist: ["0"],
  Kind: ["0", ""],
  Abrasive: ["0"],
  Bloodlust: ["0"],
  FastLearner: ["0"],
  BodyPurist: ["0"],
  Gourmand: ["0"],
  Industriousness: ["1", "-2", "-1"],
  Nimble: ["0"],
  MayRequire: [
    "Ludeon.Rimworld.Biotech",
    "Ludeon.Rimworld.Royalty",
    "Ludeon.RimWorld.Biotech",
    "Ludeon.RimWorld.Ideology",
    "Ludeon.RimWorld.Royalty",
    "Ludeon.Rimworld.Ideology",
    "Ludeon.RimWorld.Royalty,Ludeon.RimWorld.Ideology",
  ],
  Tough: ["0"],
  DrugDesire: ["2", "1"],
  TooSmart: ["0"],
  NaturalMood: ["1"],
  Gay: ["0"],
  AnnoyingVoice: ["0"],
  Immunity: ["-1", "Immunity"],
  Nerves: ["-1", "2"],
  PsychicSensitivity: ["1", "-0.90", "0.5", "0.75", "0.8", "0.4", "-0.5", "-1"],
  ParentName: [
    "Solid",
    "MechanicalTermiteRingBase",
    "ClawBase",
    "MechanicalThorax",
    "MechanicalCentipedeRingBase",
    "StructureColorBase",
    "DelayedThreat",
    "SleepingThreat",
    "Flame",
    "CutBase",
    "BluntBase",
    "Scratch",
    "Bite",
    "Bomb",
    "Arrow",
    "StunBase",
    "DrugBase",
    "ResourceBase",
    "DrugToleranceBase",
    "AddictionBase",
    "DrugAddictionNeedBase",
    "MakeableDrugBase",
    "DrugPillBase",
    "MakeableDrugPillBase",
    "MoteBase",
    "Deflect_Metal",
    "Deflect_General",
    "Power_Cell_Burning_Base",
    "FleckBase",
    "FleckFeedbackBase",
    "FleckBase_Thrown",
    "FleckBase_RandomGraphic",
    "MicroSparks",
    "FleckGlowDistortBackground",
    "FleckBase_RandomGraphic_Thrown",
    "FleckBase_Water",
    "InteractionMoteBase",
    "MoodMoteBase",
    "Mote_ProgressBar",
    "FoodBitBase",
    "Mote_PsychicConditionCauserEffect",
    "ForceJob",
    "FactionBase",
    "AncientsBase",
    "OutlanderFactionBase",
    "OutlanderRoughBase",
    "TribeBase",
    "TribeRoughBase",
    "TribeSavageBase",
    "PlayerFactionBase",
    "GeneHairColorBase",
    "GeneSkinColorMelanin",
    "AverageBase",
    "NarrowBase",
    "BodyPartBase",
    "BodyPartArchotechBase",
    "AddedBodyPartBase",
    "SurgeryInstallBodyPartArtificialBase",
    "ImplantHediffBase",
    "SurgeryFlesh",
    "SurgeryInstallImplantBase",
    "BodyPartBionicBase",
    "SurgeryInstallWoodenPartBase",
    "BodyPartNaturalBase",
    "SurgeryInstallBodyPartNaturalBase",
    "BodyPartProstheticBase",
    "BodyPartProstheticMakeableBase",
    "SurgeryInstallBodyPartProstheticBase",
    "SurgeryRemoveImplantBase",
    "DiseaseBase",
    "ChronicDiseaseBase",
    "InfectionBase",
    "MechanitesBase",
    "InjuryBase",
    "BurnBase",
    "MapCommonBase",
    "BaseMentalState",
    "Binging_DrugExtremeState",
    "WanderPsychotic",
    "Tantrum",
    "InsultingSpree",
    "Binging_DrugExtremeBreak",
    "Manhunter",
    "GameMapKeyBinding",
    "GameKeyBinding",
    "MiscKeyBinding",
    "SelectionSpecialKeyBinding",
    "ArchitectBase",
    "ModifierKeyBinding",
    "DevelopmentKeyBinding",
    "CustomChoiceLetterBase",
    "NegativeEvent",
    "PositiveEvent",
    "ThreatBig",
    "HumanlikeAdolescent",
    "AnimalBaby",
    "Label",
    "LabelWithIcon",
    "StoneRoot",
    "SmearRoot",
    "MercenaryBase",
    "GrenadierBase",
    "MercenaryMidTierBase",
    "MercenaryGunnerBase",
    "MercenarySniperBase",
    "MercenarySlasherBase",
    "MercenaryEliteTierBase",
    "MercenaryEliteBase",
    "OutlanderBase",
    "PirateBase",
    "PirateScavTierBase",
    "BasePlayerPawnKind",
    "SpaceRefugeeBase",
    "TribalBase",
    "Tribal_Hunter",
    "TribalChiefBase",
    "BaseMechanoidKind",
    "ButcherCorpseMechanoidBase",
    "CookMealBase",
    "CookMealFineBase",
    "CookMealFineBulkBase",
    "CookMealLavishBase",
    "CookMealLavishBulkBase",
    "MakeStoneBlocksBase",
    "ShipResearchProjectBase",
    "Crashlanded",
    "DisallowDesignatorBase",
    "Outpost",
    "Designate_DragStandard_Changed",
    "DropPodImpact",
    "DropPodOpen",
    "DropPodFall",
    "ArmorRatingBase",
    "InsulationBase",
    "MarketValueBase",
    "Beauty",
    "MeditationFocusBase",
    "ShootingAccuracyFactorBase",
    "ButcherySpeedBase",
    "ButcheryEfficiencyBase",
    "AccuracyBase",
    "DiseaseIncident",
    "DiseaseAnimalIncident",
    "GiveQuestBase",
    "ImmediateAttack",
    "BreachingBase",
    "BaseStoryteller",
    "FloorBase",
    "TileMetalBase",
    "BurnedFloorBase",
    "TileStoneBase",
    "FlagstoneBase",
    "NaturalTerrainBase",
    "TerrainRoadBase",
    "WaterBase",
    "WaterDeepBase",
    "WaterChestDeepBase",
    "WaterShallowBase",
    "BuildingBase",
    "AncientCryptosleepCasket",
    "SculptureBase",
    "CrashedShipPartBase",
    "ShuttleBase",
    "FurnitureBase",
    "FurnitureWithQualityBase",
    "SleepingSpotBase",
    "BedBase",
    "BedWithQualityBase",
    "ArtableBedBase",
    "SansComfortBedBase",
    "BasicBedBase",
    "AnimalBedFurnitureBase",
    "ArtableFurnitureBase",
    "TableBase",
    "TableGatherSpotBase",
    "LampBase",
    "StandingLampBase",
    "ShelfBase",
    "MechBuildingBase",
    "SteleBase",
    "UnfinishedBase",
    "BuildingNaturalBase",
    "RockBase",
    "PowerConduit",
    "BenchBase",
    "TrapIEDBase",
    "BaseWeapon",
    "BaseWeaponTurret",
    "BaseBullet",
    "AutocannonTurret",
    "BaseArtilleryBuilding",
    "BaseArtilleryWeapon",
    "DoorBase",
    "ArtifactBase",
    "MechSerumBase",
    "ResourceVerbBase",
    "MealBaseIngredientless",
    "MealBase",
    "MealCookedIngredientless",
    "MealCooked",
    "MealFineBase",
    "MealLavishBase",
    "OrganicProductBase",
    "EggBase",
    "EggUnfertBase",
    "EggFertBase",
    "MedicineBase",
    "PlantFoodRawBase",
    "RoughPlantBase",
    "ShellBase",
    "MakeableShellBase",
    "WoolBase",
    "LeatherBase",
    "UnfinishedTechArmor",
    "MinifiedThing",
    "ApparelBase",
    "ApparelMakeableBase",
    "ArmorMachineableBase",
    "HatMakeableBase",
    "CowboyHat",
    "ArmorHelmetMakeableBase",
    "ApparelArmorHelmetPowerBase",
    "ApparelArmorHelmetReconBase",
    "HatBase",
    "ApparelNoQualityBase",
    "ArmorSmithableBase",
    "ApparelArmorPowerBase",
    "ApparelArmorReconBase",
    "EtherealThingBase",
    "OrbitalStrikeBase",
    "SignalActionBase",
    "SignalActionDelay",
    "SkyfallerBase",
    "DropPodIncoming",
    "ShuttleSkyfallerBase",
    "PawnFlyerBase",
    "BaseFilth",
    "ActiveDropPod",
    "ChunkBase",
    "UglyRockBase",
    "SandstoneBase",
    "ChunkRockBase",
    "StoneBlocksBase",
    "GraniteBase",
    "LimestoneBase",
    "SlateBase",
    "MarbleBase",
    "BaseGun",
    "BaseGunWithQuality",
    "BaseMakeableGun",
    "BaseMeleeWeapon",
    "BaseMeleeWeapon_Sharp",
    "BaseMeleeWeapon_Blunt_Quality",
    "BaseMeleeWeapon_Sharp_Quality",
    "BaseMeleeWeapon_Blunt",
    "BaseHumanMakeableGun",
    "BaseMakeableGrenade",
    "BaseGrenadeProjectile",
    "BaseFragGrenadeProjectile",
    "BaseIncendiaryProjectile",
    "Gun_ChargeBlasterHeavyBase",
    "Gun_InfernoCannonBase",
    "BaseWeaponNeolithic",
    "BaseProjectileNeolithic",
    "OrbitalUtilityBase",
    "PlantBaseNonEdible",
    "PlantBase",
    "TreeBase",
    "CavePlantBase",
    "HealrootBase",
    "StumpBase",
    "BushBase",
    "DeciduousTreeBase",
    "BasePawn",
    "AnimalThingBase",
    "BaseBear",
    "AnimalKindBase",
    "BearBase",
    "BigBirdThingBase",
    "BigBirdKindBase",
    "BigCatThingBase",
    "BigCatKindBase",
    "BaseHare",
    "HareBase",
    "BaseInsect",
    "ThingBaseWolf",
    "ThingBaseFox",
    "AnimalKindBaseWolf",
    "AnimalKindBaseFox",
    "BaseMechanoid",
    "MechCentipede",
    "BaseMechanoidWalker",
    "MechCentipedeBase",
    "DeathMemory",
    "DeathMemoryFamily",
    "LostMemory",
    "LostMemoryFamily",
    "NotedOpportunisticBase",
    "DoctorTendToSelf",
    "ReleasePrisoner",
    "TakeToPen",
    "FeedAnimals",
  ],
  label: [
    "no beard",
    "anchor",
    "bushy",
    "norse",
    "boxed",
    "circle",
    "curly",
    "curtain",
    "bushy styled",
    "ducktail",
    "stache and chops",
    "fork",
    "french",
    "full",
    "goatee",
    "classy",
    "braided",
    "lincoln",
    "long dutch",
    "machete",
    "moustache",
    "mutton chops",
    "tri-braid",
    "old dutch",
    "seer",
    "side whiskers",
    "soul patch",
    "stubble",
    "urist",
    "VanDyke",
    "wizard",
    "boreal forest",
    "tundra",
    "cold bog",
    "ice sheet",
    "sea ice",
    "temperate forest",
    "temperate swamp",
    "tropical rainforest",
    "tropical swamp",
    "arid shrubland",
    "desert",
    "extreme desert",
    "ocean",
    "lake",
    "bird",
    "beetle-like",
    "beetle-like with claw",
    "quadruped animal",
    "turtle-like",
    "monkey",
    "snake",
    "human",
    "mechanical centipede",
    "lancer",
    "pikeman",
    "scyther",
    "mechanical termite",
    "first body ring",
    "second body ring",
    "third body ring",
    "torso",
    "upper head",
    "full head",
    "eyes",
    "teeth",
    "mouth",
    "neck",
    "arms",
    "shoulders",
    "hands",
    "left fist",
    "right fist",
    "middle finger",
    "utility slot",
    "legs",
    "feet",
    "front left paw",
    "front right paw",
    "head",
    "front left leg",
    "front right leg",
    "front left claws",
    "front right claws",
    "left blade",
    "right blade",
    "tusks",
    "horn",
    "claw",
    "beak",
    "body",
    "heart",
    "nostril",
    "jaw",
    "jowl",
    "tail",
    "antenna",
    "pronotum",
    "shell",
    "elytra",
    "tusk",
    "trunk",
    "head claw",
    "hump",
    "plastron",
    "leg",
    "paw",
    "hoof",
    "front claw",
    "rear claw",
    "skull",
    "brain",
    "eye",
    "ear",
    "nose",
    "ribcage",
    "spine",
    "foot",
    "tongue",
    "shoulder",
    "arm",
    "hand",
    "finger",
    "toe",
    "clavicle",
    "sternum",
    "humerus",
    "radius",
    "pelvis",
    "femur",
    "tibia",
    "artificial brain",
    "reactor",
    "fluid reprocessor",
    "visual sensor",
    "sound sensor",
    "chemical analyzer",
    "thorax",
    "blade",
    "fourth body ring",
    "fifth body ring",
    "sixth body ring",
    "lung",
    "kidney",
    "liver",
    "stomach",
    "red",
    "subtle red",
    "auburn",
    "scarlet",
    "burgundy",
    "plum",
    "dark mauve",
    "magenta",
    "subtle magenta",
    "purple",
    "subtle purple",
    "muted purple",
    "deep purple",
    "grape",
    "indigo",
    "light indigo",
    "blue",
    "subtle blue",
    "ice blue",
    "marine",
    "sky blue",
    "dusk",
    "moss",
    "bright moss",
    "teal",
    "green",
    "sage",
    "faded green",
    "forest green",
    "pine green",
    "swamp green",
    "muddy green",
    "marsh green",
    "viridian",
    "subtle viridian",
    "olive",
    "dark olive",
    "mustard",
    "pale lime",
    "faded brown",
    "subtle brown",
    "light brown",
    "dark brown",
    "dirt brown",
    "burnt umber",
    "wood brown",
    "orange",
    "pastel red",
    "pastel pink",
    "pastel blue",
    "pastel green",
    "pastel yellow",
    "pastel orange",
    "white",
    "cream",
    "light gray",
    "limestone",
    "marble",
    "sandstone",
    "granite",
    "dark grey",
    "slate",
    "black",
    "astropolitan",
    "corunan",
    "rustican",
    "kriminul",
    "flame",
    "burn",
    "frostbite",
    "scratch",
    "surgical cut",
    "execution cut",
    "cut",
    "crush",
    "blunt",
    "stab",
    "toxic scratch",
    "bite",
    "toxic bite",
    "deterioration",
    "mining",
    "rotting",
    "extinguish",
    "bomb",
    "smoke",
    "thump",
    "bullet",
    "arrow",
    "stun",
    "EMP",
    "actions/tools",
    "settings",
    "output",
    "social drugs",
    "no drugs",
    "unrestricted",
    "one drink per day",
    "beer",
    "bottle",
    "wort",
    "make wort",
    "alcohol",
    "warm",
    "tipsy",
    "drunk",
    "hammered",
    "blackout",
    "hangover",
    "slight",
    "strong",
    "pounding",
    "alcohol tolerance",
    "alcohol addiction",
    "withdrawal",
    "alcohol warmth",
    "quite inebriated",
    "mild hangover",
    "serious hangover",
    "pounding hangover",
    "alcohol withdrawal",
    "ambrosia",
    "ambrosia warmth",
    "ambrosia tolerance",
    "ambrosia addiction",
    "ambrosia withdrawal",
    "small",
    "large",
    "massive",
    "go-juice",
    "high on go-juice",
    "go-juice addiction",
    "go-juice tolerance",
    "go-juice withdrawal",
    "luciferium",
    "luciferium need",
    "unmet",
    "penoxycyline",
    "flake",
    "high on flake",
    "psychite tea",
    "high on psychite tea",
    "yayo",
    "high on yayo",
    "psychite tolerance",
    "psychite addiction",
    "psychite withdrawal",
    "psychite",
    "smokeleaf joint",
    "stoned on smokeleaf",
    "smokeleaf tolerance",
    "smokeleaf dependence",
    "high on smokeleaf",
    "smokeleaf withdrawal",
    "Smokeleaf",
    "smokeleaf",
    "wake-up",
    "high on wake-up",
    "wake-up addiction",
    "wake-up tolerance",
    "wake-up withdrawal",
    "party",
    "Mote",
    "neutral ancients",
    "hostile ancients",
    "mechanoid hive",
    "insect geneline",
    "civil outlander union",
    "rough outlander union",
    "gentle tribe",
    "fierce tribe",
    "savage tribe",
    "pirate gang",
    "New Arrivals",
    "New Tribe",
    "solar flare",
    "eclipse",
    "psychic drone",
    "psychic soothe",
    "toxic fallout",
    "volcanic winter",
    "heat wave",
    "cold snap",
    "flashstorm",
    "climate cycle",
    "planetkiller",
    "aurora",
    "marriage ceremony",
    "cosmetic",
    "cosmetic - skin",
    "cosmetic - hair",
    "miscellaneous",
    "hair color",
    "snow-white hair",
    "ink-black hair",
    "gray hair",
    "dark-black hair",
    "mid-black hair",
    "dark-reddish hair",
    "dark-brown hair",
    "brown hair",
    "reddish-brown hair",
    "sandy-blonde hair",
    "blonde hair",
    "pink hair",
    "purple hair",
    "blue hair",
    "teal hair",
    "green hair",
    "orange hair",
    "red hair",
    "skin color",
    "gave gift",
    "traded",
    "requested trader",
    "requested military aid",
    "peace talks disaster",
    "peace talks backfired",
    "peace talks success",
    "peace talks triumph",
    "attacked building",
    "shuttle destroyed",
    "laborers missed shuttle",
    "used harmful ability",
    "used forbidden thing",
    "tendency to move toward natural goodwill",
    "ritual done",
    "debug event",
    "harmed member",
    "attacked member",
    "member crushed",
    "member died",
    "member captured",
    "member killed",
    "member sold",
    "member exited map healthy",
    "harmful surgery on member",
    "member stripped",
    "innocent prisoner died",
    "guilty prisoner died",
    "prisoner died",
    "quest completed",
    "member lost at colony",
    "member arrested",
    "shuttle commander missed shuttle",
    "shuttle guards missed shuttle",
    "monument construction expired",
    "monument construction abandoned",
    "failed to keep guests happy",
    "recruited lent prisoner",
    "enslaved lent prisoner",
    "member missed shuttle",
    "destroyed monument",
    "accepted deserter",
    "settlement proximity",
    "destroyed enemy base",
    "attacked settlement",
    "attacked caravan",
    "permanently hostile",
    "natural enemy",
    "attacking settlement",
    "member's xenogerm absorbed",
    "archotech eye",
    "archotech arm",
    "archotech leg",
    "fist",
    "install archotech eye",
    "install archotech arm",
    "install archotech leg",
    "bionic eye",
    "bionic arm",
    "bionic leg",
    "bionic spine",
    "bionic heart",
    "bionic stomach",
    "death acidifier",
    "bionic ear",
    "bionic tongue",
    "install bionic eye",
    "install bionic arm",
    "install bionic leg",
    "install bionic spine",
    "install bionic heart",
    "install bionic stomach",
    "install death acidifier",
    "install bionic ear",
    "install bionic tongue",
    "install peg leg",
    "install wooden hand",
    "install wooden foot",
    "install denture",
    "peg leg",
    "wooden hand",
    "wooden foot",
    "denture",
    "install heart",
    "install lung",
    "install kidney",
    "install liver",
    "prosthetic leg",
    "prosthetic arm",
    "prosthetic heart",
    "cochlear implant",
    "power claw",
    "joywire",
    "painstopper",
    "install prosthetic leg",
    "install prosthetic arm",
    "install prosthetic heart",
    "install cochlear implant",
    "install power claw",
    "install joywire",
    "install painstopper",
    "remove painstopper",
    "unburnable",
    "blood loss",
    "minor",
    "moderate",
    "severe",
    "extreme",
    "anesthetic",
    "wearing off",
    "woozy",
    "sedated",
    "catatonic breakdown",
    "psychic shock",
    "psychic coma",
    "psychic hangover",
    "forming",
    "buzzing",
    "brain shock",
    "cryptosleep sickness",
    "food poisoning",
    "recovering",
    "major",
    "initial",
    "toxic buildup",
    "serious",
    "pregnant",
    "early-stage",
    "middle-stage",
    "late-stage",
    "heart attack",
    "painful",
    "debilitating",
    "fatal",
    "drug overdose",
    "resurrection sickness",
    "covered in firefoam",
    "malnutrition",
    "trivial",
    "heatstroke",
    "hypothermia",
    "shivering",
    "hypothermic slowdown",
    "bad back",
    "frail",
    "cataract",
    "blindness",
    "hearing loss",
    "dementia",
    "alzheimer's",
    "asthma",
    "artery blockage",
    "carcinoma",
    "excise carcinoma",
    "gut worms",
    "muscle parasites",
    "fibrous mechanites",
    "mild pain",
    "intense pain",
    "sensory mechanites",
    "infection",
    "flu",
    "plague",
    "malaria",
    "sleeping sickness",
    "rot stink exposure",
    "lung rot",
    "missing body part",
    "misc",
    "chemical burn",
    "crack",
    "gunshot",
    "shredded",
    "bruise",
    "trauma savant",
    "chemical damage",
    "cirrhosis",
    "resurrection psychosis",
    "early",
    "advanced",
    "total",
    "catatonic",
    "scaria",
    "sterilized",
    "cure scaria",
    "sterilize",
    "sand",
    "dirt",
    "mud",
    "gravel",
    "water",
    "psylink neuroformer",
    "psylink",
    "build building",
    "cut tree",
    "tree died",
    "mined",
    "destroyed natural wall",
    "sowed plant",
    "sowed food plant",
    "installed prosthetic",
    "researching",
    "ate human meat",
    "used drug",
    "used recreational drug",
    "used hard drug",
    "administered drug",
    "administered recreational drug",
    "administered hard drug",
    "joiner refused",
    "work frenzy",
    "go frenzy",
    "shoot frenzy",
    "inspired trade",
    "inspired recruitment",
    "inspired taming",
    "inspired surgery",
    "inspired creativity",
    "animal chat",
    "tame attempt",
    "train attempt",
    "nuzzle",
    "release to the wild",
    "try to get to know",
    "recruit attempt",
    "spark jailbreak",
    "romance attempt",
    "marriage proposal",
    "breakup",
    "chitchat",
    "deep talk",
    "insult",
    "kind words",
    "solitary relaxation",
    "social interaction",
    "dexterity play",
    "cerebral play",
    "television watching",
    "telescope study",
    "music",
    "chemical consumption",
    "food consumption",
    "dignified",
    "natural",
    "artistic",
    "morbid",
    "minimal",
    "berserk",
    "fire starting spree",
    "binging on drug",
    "inducing prisoner to escape",
    "slaughterer",
    "murderous rage",
    "giving up and leaving",
    "wandering in psychosis",
    "tantrum",
    "sadistic rage",
    "corpse obsession",
    "binging on food",
    "sad wandering",
    "sitting alone",
    "insulting spree",
    "run wild",
    "confused wandering",
    "panic fleeing",
    "manhunter",
    "social fighting",
    "roaming",
    "aggression judgement scramble",
    "skin",
    "middle",
    "outer",
    "utility",
    "headgear",
    "do X times",
    "do until you have X",
    "do forever",
    "drop on floor",
    "take to best stockpile",
    "take to {0}",
    "orders",
    "zone",
    "structure",
    "production",
    "furniture",
    "power",
    "security",
    "floors",
    "recreation",
    "ship",
    "temperature",
    "carpet",
    "fine carpet",
    "tile",
    "fine tile",
    "metal tile",
    "flagstone",
    "standing lamp",
    "peaceful",
    "community builder",
    "adventure story",
    "strive to survive",
    "blood and dust",
    "losing is fun",
    "Custom",
    "Core",
    "Royalty",
    "Ideology",
    "Biotech",
    "extremely low",
    "very low",
    "low",
    "high",
    "sky high",
    "noble",
    "royal",
    "sky-high expectations",
    "high expectations",
    "moderate expectations",
    "low expectations",
    "very low expectations",
    "extremely low expectations",
    "noble expectations",
    "royal expectations",
    "elite expectations",
    "supreme expectations",
    "brief ponytail",
    "princess",
    "scatman",
    "lackland",
    "revolt",
    "pigtails",
    "afro",
    "bob",
    "troubadour",
    "greasy swoop",
    "cleopatra",
    "cute",
    "decent",
    "fancy bun",
    "senorita",
    "flowy",
    "long",
    "mop",
    "wavy",
    "messy",
    "fringe",
    "frozen",
    "ponytails",
    "bowlcut",
    "bravo",
    "recruit",
    "rockstar",
    "snazzy",
    "firestarter",
    "junkie",
    "scrapper",
    "randy",
    "rookie",
    "spikes",
    "shave top braid",
    "braided knot",
    "keeper",
    "primal",
    "warden",
    "elder",
    "locks",
    "savage",
    "sticky",
    "bald",
    "shaved",
    "tuft",
    "scorpion tail",
    "topdog",
    "mohawk",
    "tribal",
    "cannibal",
    "punk",
    "urban",
    "rural",
    "soldier",
    "wealth",
    "population",
    "colonist mood",
    "debug",
    "wealth (total)",
    "wealth (items)",
    "wealth (buildings)",
    "wealth (creatures)",
    "free colonists",
    "prisoners",
    "mood",
    "recovery",
    "fun points /10",
    "pop recovery",
    "pop intent x10",
    "camera",
    "in-game global",
    "special",
    "architect",
    "main tabs",
    "modifiers",
    "developer tools",
    "debug menu",
    "dolly up",
    "dolly down",
    "dolly left",
    "dolly right",
    "zoom in",
    "zoom out",
    "accept",
    "cancel",
    "take screenshot",
    "toggle screenshot mode",
    "select next in cell",
    "pause/resume game",
    "game speed: Normal",
    "game speed: Fast",
    "game speed: Super fast",
    "game speed: Ultra fast (debug)",
    "game speed: Slower",
    "game speed: Faster",
    "previous colonist",
    "next colonist",
    "toggle room stats display",
    "toggle beauty display",
    "show cell inspector",
    "show eyedropper",
    "Misc 1",
    "Misc 2",
    "Misc 3",
    "Misc 4",
    "Misc 5",
    "Misc 6",
    "Misc 7",
    "Misc 8",
    "Misc 9",
    "Misc 10",
    "Misc 11",
    "Misc 12",
    "toggle power",
    "toggle forbidden",
    "draft",
    "deconstruct",
    "rotate left",
    "rotate right",
    "increment 10x",
    "increment 100x",
    "queue order",
    "tick once",
    "toggle god mode",
    "toggle debug log",
    "toggle debug actions menu",
    "toggle debug log menu",
    "toggle debug inspector",
    "toggle debug settings menu",
    "toggle dev palette",
    "change selected debug action",
    "fully-formed",
    "baby",
    "child",
    "teenager",
    "adult",
    "larva",
    "immature",
    "juvenile",
    "inspect",
    "work",
    "schedule",
    "assign",
    "animals",
    "wildlife",
    "research",
    "quests",
    "world",
    "history",
    "factions",
    "menu",
    "general",
    "graphics",
    "audio",
    "gameplay",
    "interface",
    "controls",
    "dev",
    "mod options",
    "medicine",
    "drug",
    "Life stage",
    "age",
    "master",
    "allowed area",
    "current outfit",
    "drug policy",
    "food restriction",
    "carry",
    "no interaction",
    "reduce resistance",
    "release",
    "execute",
    "kills",
    "kills (humanlikes)",
    "kills (animals)",
    "kills (mechanoids)",
    "enemies downed",
    "enemies downed (humanlikes)",
    "enemies downed (animals)",
    "enemies downed (mechanoids)",
    "shots fired",
    "headshots",
    "damage dealt",
    "damage taken",
    "times in mental state",
    "times on fire",
    "fires extinguished",
    "operations received",
    "operations performed",
    "tends received",
    "tends given",
    "people captured",
    "prisoners recruited",
    "prisoners chatted",
    "animals tamed",
    "animals slaughtered",
    "meals cooked",
    "things constructed",
    "things installed",
    "things repaired",
    "things crafted",
    "things hauled",
    "plants sown",
    "plants harvested",
    "cells mined",
    "messes cleaned",
    "research points researched",
    "corpses buried",
    "nutrition eaten",
    "bodies stripped",
    "things uninstalled",
    "things deconstructed",
    "artifacts activated",
    "containers opened",
    "switches flicked",
    "time as a colonist",
    "time hosted",
    "time as a prisoner",
    "time in a bed",
    "time in a bed for medical reasons",
    "time downed",
    "time finding food and eating",
    "time spent on entertainment",
    "time under a roof",
    "time drafted",
    "time on fire",
    "time in mental state",
    "time hauling",
    "time handling animals",
    "time firefighting",
    "time wardening",
    "time hunting",
    "time constructing",
    "time treating and feeding",
    "time researching",
    "time cleaning",
    "time repairing",
    "time mining",
    "time sowing and harvesting",
    "constructed roof",
    "rock roof (thin)",
    "overhead mountain",
    "allow colonist corpses",
    "allow stranger corpses",
    "allow large corpses",
    "allow rotten",
    "allow fresh",
    "allow plant food",
    "allow smeltable",
    "allow non-smeltable",
    "allow burnable",
    "allow non-burnable",
    "allow biocoded weapons",
    "allow non-biocoded weapons",
    "allow biocoded apparel",
    "allow non-biocoded apparel",
    "allow clean apparel",
    "allow tainted apparel",
    "allow females",
    "allow males",
    "metallic",
    "woody",
    "stony",
    "fabric",
    "leathery",
    "light",
    "medium",
    "heavy",
    "shallow water",
    "moving water",
    "bridgeable",
    "growable",
    "diggable",
    "smoothable",
    "anything",
    "sleep",
    "none",
    "name",
    "market value",
    "category",
    "quality",
    "mass",
    "hit points percentage",
    "intermediate",
    "food",
    "beauty",
    "comfort",
    "outdoors",
    "indoors",
    "chemical",
    "room size",
    "consciousness",
    "moving",
    "manipulation",
    "talking",
    "eating",
    "sight",
    "hearing",
    "breathing",
    "blood filtration",
    "blood pumping",
    "digestion",
    "grenadier",
    "EMP grenadier",
    "smoke grenadier",
    "mercenary gunner",
    "mercenary sniper",
    "mercenary slasher",
    "heavy mercenary",
    "boss",
    "elite mercenary",
    "villager",
    "town guard",
    "town trader",
    "town councilman",
    "drifter",
    "scavenger gunner",
    "scavenger thrasher",
    "pirate gunner",
    "colonist",
    "member",
    "space refugee",
    "ancient soldier",
    "slave",
    "wild man",
    "stranger in black",
    "penitent",
    "archer",
    "warrior",
    "hunter",
    "trader",
    "berserker",
    "heavy archer",
    "berserker chief",
    "archer chief",
    "breacher",
    "termite",
    "father",
    "son",
    "brother",
    "grandfather",
    "grandson",
    "nephew",
    "uncle",
    "cousin",
    "great grandfather",
    "great grandson",
    "granduncle",
    "grandnephew",
    "cousin once removed",
    "second cousin",
    "kin",
    "husband",
    "fiance",
    "lover",
    "stepfather",
    "stepson",
    "father-in-law",
    "son-in-law",
    "ex-husband",
    "ex-lover",
    "bonded",
    "bond",
    "ate nutrient paste",
    "eating nutrient paste",
    "disgusting",
    "ate nutrient paste meal",
    "cannibalism",
    "ate meal made from human meat",
    "butchered human",
    "observed corpse",
    "observed rotten corpse",
    "corpses",
    "ugly",
    "insect meat",
    "ate insect meat",
    "ate meal with insect meat",
    "despised",
    "physical love",
    "initiated lovin'",
    "got some lovin'",
    "lovin' with spouse",
    "lovin' outside marriage",
    "shared bed",
    "shared bed with spouse",
    "shared bed outside marriage",
    "free",
    "marriage name",
    "taking woman's name",
    "taking man's name",
    "keeping name",
    "usually man's",
    "organ use",
    "harvested colonist organ",
    "harvested guest organ",
    "execution",
    "executed prisoner",
    "executed guilty prisoner",
    "executed innocent prisoner",
    "executed colonist",
    "executed guest",
    "ritual",
    "slave trading",
    "sold slave",
    "Men's spouses",
    "Women's spouses",
    "married to one or fewer spouses",
    "married to two or more spouses",
    "one only",
    "butcher creature",
    "shred mechanoid",
    "smash mechanoid",
    "cremate corpse",
    "burn apparel",
    "burn weapon",
    "burn drugs",
    "make kibble",
    "make pemmican",
    "make pemmican x4",
    "cook simple meal",
    "cook simple meal x4",
    "cook fine meal",
    "cook vegetarian fine meal",
    "cook carnivore fine meal",
    "cook fine meal x4",
    "cook carnivore fine meal x4",
    "cook vegetarian fine meal x4",
    "cook lavish meal",
    "cook carnivore lavish meal",
    "cook vegetarian lavish meal",
    "cook lavish meal x4",
    "cook vegetarian lavish meal x4",
    "cook carnivore lavish meal x4",
    "cook packaged survival meal",
    "cook packaged survival meal x4",
    "make any stone blocks",
    "smelt metal from slag",
    "smelt weapon",
    "smelt apparel",
    "destroy weapon",
    "destroy apparel",
    "make chemfuel from wood",
    "make chemfuel from organics",
    "make component",
    "make advanced component",
    "make patchleather",
    "anesthetize",
    "euthanize by cut",
    "remove part",
    "psychoid brewing",
    "tree sowing",
    "beer brewing",
    "complex furniture",
    "passive cooler",
    "stonecutting",
    "complex clothing",
    "drug production",
    "cocoa",
    "devilstrand",
    "carpet making",
    "pemmican",
    "smithing",
    "recurve bow",
    "psychite refining",
    "wake-up production",
    "go-juice production",
    "penoxycyline production",
    "long blades",
    "plate armor",
    "greatbow",
    "electricity",
    "battery",
    "biofuel refining",
    "watermill generator",
    "nutrient paste",
    "solar panel",
    "air conditioning",
    "autodoor",
    "hydroponics",
    "tube television",
    "packaged survival meal",
    "firefoam",
    "IEDs",
    "geothermal power",
    "sterile materials",
    "advanced lights",
    "machining",
    "smokepop packs",
    "prosthetics",
    "gunsmithing",
    "flak armor",
    "mortars",
    "blowback operation",
    "gas operation",
    "gun turrets",
    "foam turret",
    "microelectronics",
    "flatscreen television",
    "moisture pump",
    "hospital bed",
    "deep drilling",
    "ground-penetrating scanner",
    "transport pod",
    "medicine production",
    "long-range mineral scanner",
    "shields",
    "precision rifling",
    "autocannon turret",
    "multibarrel weapons",
    "multi-analyzer",
    "vitals monitor",
    "fabrication",
    "advanced fabrication",
    "cryptosleep casket",
    "recon armor",
    "marine armor",
    "pulse-charged munitions",
    "bionic replacements",
    "uranium slug turret",
    "rocketswarm launcher",
    "starflight basics",
    "vacuum cryptosleep casket",
    "starship reactor",
    "Johnson-Tanaka drive",
    "machine persuasion",
    "starflight sensors",
    "Main",
    "{PAWN_labelShort}'s social impact",
    "participant count",
    "room impressiveness",
    "Terrible",
    "Uninspiring",
    "Encouraging",
    "Inspirational",
    "huge river",
    "large river",
    "river",
    "creek",
    "dirt path",
    "dirt road",
    "stone road",
    "ancient asphalt road",
    "ancient asphalt highway",
    "room",
    "bedroom",
    "prison cell",
    "dining room",
    "rec room",
    "hospital",
    "laboratory",
    "workshop",
    "storeroom",
    "barracks",
    "prison barracks",
    "kitchen",
    "tomb",
    "barn",
    "impressiveness",
    "awful",
    "dull",
    "mediocre",
    "slightly impressive",
    "somewhat impressive",
    "very impressive",
    "extremely impressive",
    "unbelievably impressive",
    "wondrously impressive",
    "impoverished",
    "somewhat poor",
    "somewhat rich",
    "rich",
    "luxurious",
    "very luxurious",
    "extremely luxurious",
    "unbelievably luxurious",
    "space",
    "cramped",
    "rather tight",
    "average-sized",
    "somewhat spacious",
    "quite spacious",
    "very spacious",
    "extremely spacious",
    "hideous",
    "neutral",
    "pretty",
    "beautiful",
    "very beautiful",
    "extremely beautiful",
    "unbelievably beautiful",
    "cleanliness",
    "very dirty",
    "dirty",
    "slightly dirty",
    "clean",
    "sterile",
    "infection chance factor",
    "surgery success chance cleanliness factor",
    "research speed factor",
    "grave visiting recreation factor",
    "food poison chance",
    "Crashlanded",
    "tutorial",
    "Lost Tribe",
    "The Rich Explorer",
    "Naked Brutality",
    "Player faction",
    "starting people",
    "arrival method",
    "game start dialog",
    "allowed age range",
    "characters explode on death",
    "forced trait",
    "forced health condition",
    "naked",
    "set need level",
    "start with research",
    "planetkiller weapon incoming",
    "cannot sow",
    "cannot mine",
    "cannot hunt",
    "cannot tame",
    "stat multiplier",
    "no possessions",
    "disable incident",
    "create incident",
    "disallow building",
    "permanent game condition",
    "start with animal(s)",
    "start with",
    "start near",
    "scattered randomly",
    "site",
    "ambush",
    "bandit camp",
    "incapacitated refugee",
    "item stash",
    "manhunter pack",
    "outpost",
    "possible unknown threat",
    "lump of precious resources",
    "prisoner camp",
    "sleeping mechanoids",
    "turrets",
    "Basics",
    "animal productivity",
    "content source",
    "Apparel",
    "Implant",
    "Weapon",
    "Weapon (ranged)",
    "Weapon (melee)",
    "Building",
    "Ability",
    "Drug",
    "drug addiction",
    "terrain",
    "Offsets when equipped",
    "Multipliers when made of this",
    "Offsets when made of this",
    "Multipliers when equipment made of this",
    "Surgical",
    "effects",
    "Combat",
    "Social",
    "Misc",
    "Work",
    "Meditation",
    "Genetics",
    "psylink level",
    "casting time",
    "neural heat gain",
    "psyfocus cost",
    "range",
    "duration",
    "effect radius",
    "goodwill impact",
    "detection chance",
    "Armor - Material effect multiplier",
    "Insulation - Cold - Material effect multiplier",
    "Insulation - Heat - Material effect multiplier",
    "Armor - Sharp",
    "Armor - Blunt",
    "Armor - Heat",
    "Insulation - Cold",
    "Insulation - Heat",
    "Shield max energy",
    "Shield recharge rate",
    "Smokepop pack radius",
    "equip delay",
    "max hit points",
    "market value ignoring hitpoints",
    "sell price multiplier",
    "honor value",
    "flammability",
    "work to make",
    "deterioration rate",
    "outdoor beauty",
    "nutrition",
    "shooting accuracy",
    "medical potency",
    "medical tend quality maximum",
    "construction speed",
    "meditation psyfocus bonus",
    "psychic sensitivity offset",
    "filth multiplier",
    "cleaning time multiplier",
    "work to build",
    "door opening speed",
    "rest effectiveness",
    "trap melee damage",
    "trap spring chance",
    "medical tend quality offset",
    "immunity gain speed factor",
    "work speed factor",
    "work efficiency factor",
    "recreation power",
    "surgery success chance factor",
    "melee DPS",
    "melee armor penetration",
    "melee hit chance",
    "melee dodge chance",
    "accuracy factor (close)",
    "accuracy factor (short)",
    "accuracy factor (medium)",
    "accuracy factor (long)",
    "aiming time",
    "Mortar miss radius multiplier",
    "incoming damage multiplier",
    "move speed",
    "mental break threshold",
    "psychic sensitivity",
    "toxic resistance",
    "global learning factor",
    "bed hunger rate multiplier",
    "rest rate multiplier",
    "eating speed",
    "Minimum comfortable temperature",
    "Maximum comfortable temperature",
    "immunity gain speed",
    "injury healing factor",
    "carrying capacity",
    "meat amount",
    "leather amount",
    "minimum handling skill",
    "pain shock threshold",
    "foraged food amount",
    "filth rate",
    "animals learning factor",
    "caravan riding speed",
    "max nutrition",
    "lifespan factor",
    "meditation psyfocus gain",
    "neural heat limit",
    "neural heat recovery rate",
    "toxic environment resistance",
    "sleep fall rate",
    "negotiation ability",
    "Arrest success chance",
    "trade price improvement",
    "drug sell price improvement",
    "social impact",
    "tame animal chance",
    "train animal chance",
    "bond chance factor",
    "global work speed",
    "Offset from mechanitor",
    "mining speed",
    "deep drilling speed",
    "mining yield",
    "smoothing speed",
    "research speed",
    "animal gather speed",
    "animal gather yield",
    "plant work speed",
    "plant harvest yield",
    "drug crop harvest yield",
    "hunting stealth",
    "construct success chance",
    "repair success chance",
    "cleaning speed multiplier",
    "medical tend speed",
    "medical tend quality",
    "medical operation speed",
    "medical surgery success chance",
    "smelting speed",
    "general labor speed",
    "drug synthesis speed",
    "cooking speed",
    "drug cooking speed",
    "butchery speed",
    "mechanoid shredding speed",
    "butchery efficiency",
    "mechanoid shredding efficiency",
    "melee damage per second",
    "melee damage multiplier",
    "melee cooldown",
    "sharp damage",
    "blunt damage",
    "Accuracy (close)",
    "Accuracy (short)",
    "Accuracy (medium)",
    "Accuracy (long)",
    "ranged cooldown",
    "damage multiplier",
    "manhunter ambush",
    "caravan meeting",
    "payment demand",
    "flu (animals)",
    "plague (animals)",
    "resource pod crash",
    "self-tame",
    "ambrosia sprout",
    "farm animals wander in",
    "wanderer join",
    "transport pod crash",
    "thrumbos pass",
    "ransom demand",
    "meteorite impact",
    "herd migration",
    "wild man wanders in",
    "short circuit",
    "crop blight",
    "alphabeavers",
    "ship chunk drop",
    "orbital trader arrival",
    "trader caravan arrival",
    "visitor group",
    "traveler group",
    "friendly raid",
    "man in black",
    "enemy raid",
    "infestation",
    "deep drill infestation",
    "ship part crash (defoliator)",
    "ship part crash (psychic)",
    "mass animal insanity",
    "mech cluster",
    "single animal insanity",
    "quest",
    "journey offer",
    "Cassandra Classic",
    "Phoebe Chillax",
    "Randy Random",
    "Tutor Hidden",
    "caravan formed",
    "caravan fled",
    "caravan ambush defeated",
    "caravan remote mining",
    "caravan assault successful",
    "person captured",
    "person recruited",
    "animal hunted",
    "surgery performed",
    "prisoner executed",
    "colonist kidnapped",
    "animal tamed",
    "death",
    "prisoner sold",
    "animal trained",
    "colonist killed",
    "colony animal killed",
    "defeated hostile leader",
    "traded with someone",
    "bond developed",
    "became lover",
    "marriage",
    "launched ship",
    "social fight",
    "collapse dodged",
    "wounded",
    "downed",
    "killed at distance",
    "killed in melee",
    "killed major threat",
    "killed",
    "killed with mortar",
    "exhausted",
    "illness revealed",
    "heatstroke revealed",
    "hypothermia revealed",
    "toxicity revealed",
    "gave birth",
    "caravan ambushed",
    "caravan ambushed by manhunter",
    "caravan demand",
    "raid",
    "ship part crash",
    "tornado",
    "mined valuable",
    "completed long construction project",
    "completed long crafting project",
    "attended party",
    "meditated",
    "prayed",
    "built snowman",
    "visited grave",
    "played game",
    "buried corpse",
    "entered cryptosleep",
    "put into cryptosleep",
    "stripped",
    "gained master skill with passion",
    "gained master skill",
    "increased menagerie",
    "landed in pod",
    "vomited",
    "on fire",
    "berserk rage",
    "gave up",
    "walked naked",
    "raw humanlike meat eaten",
    "art crafted",
    "struck mineable",
    "research project finished",
    "humanlike corpse butchered",
    "straw matting",
    "concrete",
    "paved tile",
    "wood floor",
    "steel tile",
    "silver tile",
    "gold tile",
    "sterile tile",
    "carpet ({0})",
    "burned wood floor",
    "burned carpet",
    "burned straw matting",
    "sandstone tile",
    "granite tile",
    "limestone tile",
    "slate tile",
    "marble tile",
    "sandstone flagstone",
    "granite flagstone",
    "limestone flagstone",
    "slate flagstone",
    "marble flagstone",
    "soil",
    "lichen-covered soil",
    "marshy soil",
    "rich soil",
    "stony soil",
    "soft sand",
    "Ice",
    "broken asphalt",
    "packed dirt",
    "underwall",
    "bridge",
    "deep water",
    "deep ocean water",
    "chest-deep moving water",
    "shallow ocean water",
    "shallow moving water",
    "marsh",
    "root",
    "foods",
    "meals",
    "raw food",
    "meat",
    "vegetarian",
    "animal products",
    "eggs (unfert.)",
    "eggs (fert.)",
    "manufactured",
    "textiles",
    "leathers",
    "wools",
    "drugs",
    "mortar shells",
    "raw resources",
    "plant matter",
    "stone blocks",
    "items",
    "unfinished",
    "artifacts",
    "inert relics",
    "neurotrainers",
    "psytrainers",
    "skilltrainers",
    "techprints",
    "body parts",
    "simple parts",
    "prosthetic",
    "bionic",
    "ultratech",
    "archotech",
    "mechtech",
    "weapons",
    "melee weapons",
    "persona weapons",
    "ranged weapons",
    "grenades",
    "apparel",
    "armor",
    "noble apparel",
    "buildings",
    "art",
    "chunks",
    "stone chunks",
    "plants",
    "stumps",
    "humanlike corpses",
    "animal corpses",
    "insect corpses",
    "mechanoid corpses",
    "ancient concrete barrier",
    "ancient lamppost",
    "urn",
    "ancient cryptosleep pod",
    "ancient lamp",
    "small sculpture",
    "large sculpture",
    "grand sculpture",
    "snowman",
    "ship part (psychic droner)",
    "ship part (defoliator)",
    "ship chunk",
    "shuttle",
    "crashed shuttle",
    "psychic droner",
    "sleeping spot",
    "double sleeping spot",
    "bed",
    "double bed",
    "royal bed",
    "bedroll",
    "double bedroll",
    "animal sleeping spot",
    "animal sleeping box",
    "animal bed",
    "stool",
    "dining chair",
    "armchair",
    "end table",
    "table (1x2)",
    "table (2x2)",
    "table (2x4)",
    "table (3x3)",
    "plant pot",
    "torch lamp",
    "sun lamp",
    "shelf",
    "small shelf",
    "dresser",
    "horseshoes pin",
    "hoopstone ring",
    "Game-of-Ur board",
    "chess table",
    "poker table",
    "billiards table",
    "megascreen television",
    "telescope",
    "burning power cell",
    "egg box",
    "orbital trade beacon",
    "comms console",
    "firefoam popper",
    "pod launcher",
    "tool cabinet",
    "grave",
    "sarcophagus",
    "ancient cryptosleep casket",
    "marriage spot",
    "party spot",
    "caravan hitching spot",
    "large stele",
    "grand stele",
    "pen marker",
    "unfinished musical instrument",
    "collapsed rocks",
    "compacted steel",
    "silver ore",
    "gold ore",
    "uranium ore",
    "compacted plasteel",
    "jade",
    "compacted machinery",
    "steam geyser",
    "hive",
    "glow pod",
    "raised rocks",
    "power conduit",
    "waterproof conduit",
    "power switch",
    "wood-fired generator",
    "chemfuel powered generator",
    "wind turbine",
    "solar generator",
    "geothermal generator",
    "crafting spot",
    "butcher spot",
    "art bench",
    "butcher table",
    "hand tailor bench",
    "electric tailor bench",
    "fueled smithy",
    "electric smithy",
    "machining table",
    "electric stove",
    "fueled stove",
    "stonecutter's table",
    "brewery",
    "drug lab",
    "electric smelter",
    "biofuel refinery",
    "fabrication bench",
    "simple research bench",
    "hi-tech research bench",
    "electric crematorium",
    "hydroponics basin",
    "fermenting barrel",
    "deep drill",
    "nutrient paste dispenser",
    "hopper",
    "sandbags",
    "barricade",
    "spike trap",
    "IED trap",
    "IED incendiary trap",
    "IED EMP trap",
    "IED Smoke trap",
    "IED firefoam trap",
    "IED antigrain warhead trap",
    "mini-turret",
    "mini-turret bullet",
    "mini-turret gun",
    "autocannon shell",
    "autocannon",
    "uranium slug",
    "uranium slug cannon",
    "mortar",
    "foam",
    "foam sprayer",
    "rocket",
    "rocketswarm tube",
    "ship structural beam",
    "ship cryptosleep casket",
    "ship computer core",
    "ship reactor",
    "ship engine",
    "sensor cluster",
    "psychic emanator",
    "vanometric power cell",
    "infinite chemreactor",
    "door",
    "animal flap",
    "wall",
    "fence",
    "fence gate",
    "column",
    "campfire",
    "heater",
    "cooler",
    "vent",
    "psychic animal pulser",
    "psychic soothe pulser",
    "persona core",
    "healer mech serum",
    "resurrector mech serum",
    "techprof subpersona core",
    "thrumbo horn",
    "point",
    "base",
    "elephant tusk",
    "administer healer mech serum",
    "nutrient paste meal",
    "simple meal",
    "fine meal",
    "vegetarian fine meal",
    "carnivore fine meal",
    "lavish meal",
    "vegetarian lavish meal",
    "carnivore lavish meal",
    "kibble",
    "chocolate",
    "milk",
    "insect jelly",
    "chicken egg (unfert.)",
    "chicken egg (fert.)",
    "cobra egg (fert.)",
    "iguana egg (fert.)",
    "tortoise egg (fert.)",
    "cassowary egg (fert.)",
    "emu egg (fert.)",
    "ostrich egg (fert.)",
    "turkey egg (fert.)",
    "duck egg (unfert.)",
    "duck egg (fert.)",
    "goose egg (unfert.)",
    "goose egg (fert.)",
    "herbal medicine",
    "glitterworld medicine",
    "component",
    "advanced component",
    "neutroamine",
    "chemfuel",
    "reinforced barrel",
    "potatoes",
    "raw fungus",
    "rice",
    "agave fruit",
    "corn",
    "berries",
    "hay",
    "hops",
    "psychoid leaves",
    "smokeleaf leaves",
    "high-explosive shell",
    "incendiary shell",
    "EMP shell",
    "smoke shell",
    "firefoam shell",
    "antigrain warhead",
    "silver",
    "gold",
    "steel",
    "plasteel",
    "wood",
    "log",
    "uranium",
    "cloth",
    "synthread",
    "hyperweave",
    "sheep wool",
    "alpaca wool",
    "megasloth wool",
    "muffalo wool",
    "bison wool",
    "plainleather",
    "dog leather",
    "wolfskin",
    "panthera fur",
    "camelhide",
    "bluefur",
    "bearskin",
    "guinea pig fur",
    "human leather",
    "pigskin",
    "lightleather",
    "birdskin",
    "chinchilla fur",
    "foxfur",
    "lizardskin",
    "elephant leather",
    "heavy fur",
    "rhinoceros leather",
    "thrumbofur",
    "patchleather",
    "unfinished thing",
    "unfinished sculpture",
    "unfinished gun",
    "unfinished weapon",
    "unfinished simple armor",
    "unfinished advanced armor",
    "unfinished metal armor",
    "unfinished apparel",
    "unfinished belt",
    "unfinished pack",
    "unfinished component",
    "unfinished prosthetic",
    "unfinished bionic",
    "unfinished mask",
    "minified thing",
    "minified tree",
    "shield belt",
    "cowboy hat",
    "bowler hat",
    "tribal headdress",
    "tuque",
    "war mask",
    "veil",
    "simple helmet",
    "flak helmet",
    "marine helmet",
    "recon helmet",
    "psychic foil helmet",
    "hood",
    "smokepop pack",
    "pop smoke",
    "firefoam pop pack",
    "pop firefoam",
    "psychic shock lance",
    "psychic insanity lance",
    "tribalwear",
    "parka",
    "pants",
    "T-shirt",
    "button-down shirt",
    "duster",
    "jacket",
    "flak vest",
    "flak pants",
    "flak jacket",
    "cape",
    "bombardment",
    "power beam",
    "drop pod (incoming)",
    "drop pod (leaving)",
    "ship chunk (incoming)",
    "crashed ship part (incoming)",
    "meteorite (incoming)",
    "shuttle (crashing)",
    "rect trigger",
    "trigger unfogged",
    "trigger container emptied",
    "explosion",
    "blight",
    "tunnel",
    "flying",
    "proximity trigger",
    "animal filth",
    "trash",
    "rock rubble",
    "building rubble",
    "scattered slag",
    "scattered sandbags",
    "blood",
    "bugblood",
    "machine bits",
    "amniotic fluid",
    "slime",
    "vomit",
    "chemfuel puddle",
    "corpse bile",
    "ash",
    "water puddle",
    "hair",
    "drop pod",
    "fire",
    "spark",
    "steel slag chunk",
    "smoothed sandstone",
    "sandstone chunk",
    "sandstone blocks",
    "smoothed granite",
    "granite chunk",
    "granite blocks",
    "smoothed limestone",
    "limestone chunk",
    "limestone blocks",
    "smoothed slate",
    "slate chunk",
    "slate blocks",
    "smoothed marble",
    "marble chunk",
    "marble blocks",
    "make sandstone blocks",
    "make granite blocks",
    "make limestone blocks",
    "make slate blocks",
    "make marble blocks",
    "breach axe",
    "handle",
    "mace",
    "gladius",
    "edge",
    "longsword",
    "club",
    "knife",
    "ikwa",
    "spear",
    "shaft",
    "revolver bullet",
    "revolver",
    "grip",
    "barrel",
    "autopistol",
    "autopistol bullet",
    "machine pistol",
    "machine pistol bullet",
    "incendiary launcher",
    "stock",
    "incendiary bolt",
    "smoke launcher",
    "smoke launcher shell",
    "EMP launcher",
    "EMP launcher shell",
    "bolt-action rifle",
    "bolt-action rifle bullet",
    "pump shotgun",
    "shotgun blast",
    "chain shotgun",
    "heavy SMG",
    "heavy SMG bullet",
    "LMG",
    "LMG bullet",
    "assault rifle",
    "assault rifle bullet",
    "sniper rifle",
    "sniper rifle bullet",
    "minigun",
    "barrels",
    "minigun bullet",
    "triple rocket launcher",
    "doomsday rocket launcher",
    "doomsday rocket",
    "projectile",
    "frag grenades",
    "throw frag grenade",
    "frag grenade",
    "molotov cocktails",
    "throw molotov",
    "molotov cocktail",
    "EMP grenades",
    "throw EMP grenade",
    "EMP grenade",
    "charge blaster shot",
    "heavy charge blaster",
    "inferno cannon shell",
    "inferno cannon",
    "needle gun",
    "needle shot",
    "short bow",
    "limb",
    "shortbow arrow",
    "pila",
    "pilum",
    "recurve bow arrow",
    "greatbow arrow",
    "charge rifle",
    "charge shot",
    "charge lance",
    "charge lance shot",
    "orbital bombardment targeter",
    "orbital power beam targeter",
    "tornado generator",
    "thump cannon",
    "thump bomb",
    "glowstool",
    "agarilux",
    "bryolux",
    "rose",
    "daylily",
    "rice plant",
    "potato plant",
    "corn plant",
    "strawberry plant",
    "haygrass",
    "cotton plant",
    "healroot",
    "hop plant",
    "smokeleaf plant",
    "psychoid plant",
    "cocoa tree",
    "burned stump",
    "chopped stump",
    "smashed stump",
    "ambrosia bush",
    "tinctoria",
    "dye",
    "agave",
    "pincushion cactus",
    "saguaro cactus",
    "drago tree",
    "grass",
    "tall grass",
    "bush",
    "brambles",
    "wild healroot",
    "willow tree",
    "cypress tree",
    "maple tree",
    "chokevine",
    "dandelions",
    "astragalus",
    "berry bush",
    "oak tree",
    "poplar tree",
    "pine tree",
    "birch tree",
    "low shrubs",
    "alocasia",
    "clivia",
    "giant rafflesia",
    "teak tree",
    "cecropia tree",
    "palm tree",
    "bamboo tree",
    "left claw",
    "right claw",
    "grizzly bear",
    "polar bear",
    "ostrich",
    "claws",
    "emu",
    "cassowary",
    "cougar",
    "panther",
    "lynx",
    "lynx kitten",
    "cat",
    "yorkshire terrier",
    "cute little teeth",
    "guinea pig",
    "labrador retriever",
    "husky",
    "kitten",
    "yorkshire terrier puppy",
    "labrador puppy",
    "husky puppy",
    "chicken",
    "duck",
    "turkey",
    "goose",
    "chick",
    "duckling",
    "cow",
    "left hoof",
    "right hoof",
    "boomalope",
    "muffalo",
    "bison",
    "dromedary",
    "goat",
    "elk",
    "yak",
    "caribou",
    "horse",
    "donkey",
    "elephant",
    "left foot",
    "right foot",
    "rhinoceros",
    "calf",
    "boomalope calf",
    "muffalo calf",
    "bison calf",
    "dromedary calf",
    "baby goat",
    "elk calf",
    "yak calf",
    "caribou calf",
    "foal",
    "donkey foal",
    "elephant calf",
    "hare",
    "snowhare",
    "megascarab",
    "mandibles",
    "spelopede",
    "megaspider",
    "thrumbo",
    "cobra",
    "venom-fangs",
    "tortoise",
    "alphabeaver",
    "thrumbo calf",
    "pig",
    "wild boar",
    "ibex",
    "deer",
    "gazelle",
    "chinchilla",
    "piglet",
    "sheep",
    "alpaca",
    "megasloth",
    "capybara",
    "lamb",
    "squirrel",
    "rat",
    "boomrat",
    "raccoon",
    "iguana",
    "warg",
    "razorfangs",
    "warg puppy",
    "timber wolf",
    "arctic wolf",
    "fennec fox",
    "red fox",
    "arctic fox",
    "timber wolf puppy",
    "arctic wolf puppy",
    "fennec fox puppy",
    "red fox puppy",
    "arctic fox puppy",
    "centipede blaster",
    "centipede gunner",
    "centipede burner",
    "anesthetic wooziness",
    "justified execution",
    "someone was euthanized",
    "someone was executed",
    "someone was organ-murdered",
    "someone was ripscanned",
    "justified execution of colonist",
    "colonist euthanized",
    "colonist executed",
    "colonist organ-harvested",
    "colonist ripscanned",
    "colonist died",
    "bonded animal {0} died",
    "my friend {0} died",
    "my rival {0} died",
    "my son {0} died",
    "my daughter {0} died",
    "my husband {0} died",
    "my wife {0} died",
    "my fiance {0} died",
    "my fiancée {0} died",
    "my lover {0} died",
    "my brother {0} died",
    "my sister {0} died",
    "my grandchild {0} died",
    "my father {0} died",
    "my mother {0} died",
    "my niece {0} died",
    "my nephew {0} died",
    "my half-sibling {0} died",
    "my aunt {0} died",
    "my uncle {0} died",
    "my grandparent {0} died",
    "my cousin {0} died",
    "my kin {0} died",
    "debug bad thought",
    "debug good thought",
    "ate lavish meal",
    "ate fine meal",
    "ate raw food",
    "ate kibble",
    "ate corpse",
    "raw cannibalism",
    "cooked cannibalism",
    "ate cooked insect meat",
    "ate rotten food",
    "got married to {0}",
    "attended wedding",
    "attended concert",
    "held concert",
    "terrible speech",
    "uninspiring speech",
    "encouraging speech",
    "inspirational speech",
    "colonist lost",
    "bonded animal {0} released",
    "bonded animal {0} lost",
    "my friend {0} lost",
    "my rival {0} lost",
    "my son {0} lost",
    "my daughter {0} lost",
    "my husband {0} lost",
    "my wife {0} lost",
    "my fiance {0} lost",
    "my fiancée {0} lost",
    "my lover {0} lost",
    "my brother {0} lost",
    "my sister {0} lost",
    "my grandchild {0} lost",
    "my father {0} lost",
    "my mother {0} lost",
    "my niece {0} lost",
    "my nephew {0} lost",
    "my half-sibling {0} lost",
    "my aunt {0} lost",
    "my uncle {0} lost",
    "my grandparent {0} lost",
    "my cousin {0} lost",
    "my kin {0} lost",
    "ate without table",
    "disturbed sleep",
    "initial optimism",
    "initial hope",
    "slept outside",
    "slept on ground",
    "slept in the cold",
    "slept in the heat",
    "freed from slavery",
    "prisoner released",
    "bloodlust organ harvested",
    "someone's organ harvested",
    "colonist's organ harvested",
    "my organ harvested",
    "was imprisoned",
    "catharsis",
    "nuzzled",
    "buried in sarcophagus",
    "soaking wet",
    "I butchered humanlike",
    "we butchered humanlike",
    "butchered humanlike corpse",
    "observed rotting corpse",
    "witnessed ally's death",
    "witnessed outsider's death",
    "witnessed family member's death",
    "witnessed death with bloodlust",
    "killed someone",
    "defeated hostile leader {0}",
    "defeated mech cluster",
    "defeated insect hive",
    "denied joining",
    "colonist banished",
    "colonist banished to death",
    "prisoner banished to death",
    "Colonist prisoner escaped",
    "bonded animal {0} banished",
    "failed to rescue {0}",
    "rescued {0}",
    "rescued",
    "eager to travel",
    "excited to travel",
    "on duty",
    "decent dining room",
    "slightly impressive dining room",
    "somewhat impressive dining room",
    "very impressive dining room",
    "extremely impressive dining room",
    "unbelievably impressive dining room",
    "wondrously impressive dining room",
    "decent rec room",
    "slightly impressive rec room",
    "somewhat impressive rec room",
    "very impressive rec room",
    "extremely impressive rec room",
    "unbelievably impressive rec room",
    "wondrously impressive rec room",
    "awful bedroom",
    "decent bedroom",
    "slightly impressive bedroom",
    "impressive bedroom",
    "very impressive bedroom",
    "extremely impressive bedroom",
    "unbelievably impressive bedroom",
    "wondrously impressive bedroom",
    "awful barracks",
    "dull barracks",
    "mediocre barracks",
    "decent barracks",
    "slightly impressive barracks",
    "impressive barracks",
    "very impressive barracks",
    "extremely impressive barracks",
    "unbelievably impressive barracks",
    "wondrously impressive barracks",
    "slighted",
    "insulted",
    "rapport built",
    "angering fight",
    "cathartic fight",
    "harmed me",
    "botched my surgery",
    "rescued me",
    "recruited me",
    "crashed together",
    "loved one sold",
    "bonded animal given away",
    "forced me to take drugs",
    "forced to take drugs",
    "forced me to take luciferium",
    "forced to take luciferium",
    "rebuffed me",
    "rebuffed by {0}",
    "failed to romance me",
    "had to rebuff {0}",
    "broke up with me",
    "broken up with by {0}",
    "cheated on me",
    "cheated on by {0}",
    "divorced me",
    "divorced by {0}",
    "rejected my proposal",
    "my proposal was rejected by {0}",
    "I rejected their proposal",
    "honeymoon phase",
    "killed my friend",
    "killed my rival",
    "killed my lover",
    "killed my fiance",
    "killed my spouse",
    "killed my father",
    "killed my mother",
    "killed my son",
    "killed my daughter",
    "killed my brother",
    "killed my sister",
    "killed my kin",
    "killed my bonded animal",
    "strange feeling",
    "darkness",
    "ratty apparel",
    "tattered apparel",
    "wearing {0} apparel",
    "tainted {0}",
    "tainted {0} (+1)",
    "tainted {0} (+2)",
    "tainted {0} etc",
    "human leather {0}",
    "human leather {0} (+1)",
    "human leather {0} (+2)",
    "human leather {0} etc",
    "sick",
    "chilly",
    "cold",
    "numbing cold",
    "absolutely freezing",
    "sweaty",
    "hot",
    "sweltering hot",
    "blistering hot",
    "hungry",
    "ravenously hungry",
    "malnourished",
    "badly malnourished",
    "starving",
    "advanced starvation",
    "extreme starvation",
    "drowsy",
    "tired",
    "recreation-starved",
    "recreation-deprived",
    "recreation unfulfilled",
    "recreation satisfied",
    "recreation fully satisfied",
    "uncomfortable",
    "comfortable",
    "quite comfortable",
    "extremely comfortable",
    "luxuriantly comfortable",
    "hideous environment",
    "ugly environment",
    "unsightly environment",
    "pretty environment",
    "beautiful environment",
    "gorgeous environment",
    "confined interior",
    "cramped interior",
    "spacious interior",
    "entombed underground",
    "trapped underground",
    "cabin fever",
    "trapped indoors",
    "stuck indoors",
    "just outdoors",
    "long outdoors",
    "very long outdoors",
    "brutal outdoors",
    "chemical want",
    "chemical hunger",
    "chemical starvation",
    "chemical comfort",
    "chemical satisfaction",
    "awful prison cell",
    "decent prison cell",
    "slightly impressive prison cell",
    "impressive prison cell",
    "very impressive prison cell",
    "extremely impressive prison cell",
    "unbelievably impressive prison cell",
    "wondrously impressive prison cell",
    "somewhat impressive barracks",
    "awful hospital",
    "dull hospital",
    "slightly impressive hospital",
    "somewhat impressive hospital",
    "very impressive hospital",
    "extremely impressive hospital",
    "unbelievably impressive hospital",
    "wondrously impressive hospital",
    "affair",
    "incestuous",
    "disfigured",
    "hard worker vs lazy",
    "teetotaler vs chemical interest",
    "teetotaler vs addict",
    "chemical interest vs teetotaler",
    "holding me prisoner",
    "physically appealing",
    "physically stunning",
    "physically unsightly",
    "physically hideous",
    "annoying voice",
    "creepy breathing",
    "man",
    "woman",
    "body modder appreciation",
    "body purist disgust",
    "ate raw humanlike meat",
    "sold prisoner to slavery",
    "killed colonist",
    "killed colony animal",
    "opinion of my {0} {1}",
    "{0}'s master",
    "master of {0}",
    "not {0}'s master",
    "not master of {0}",
    "sleeping alone",
    "sharing bed",
    "colonist left unburied",
    "minor pain",
    "serious pain",
    "mind-shattering pain",
    "psychic emanator soothe",
    "low psychic drone",
    "moderate psychic drone",
    "high psychic drone",
    "extreme psychic drone",
    "beautiful aurora",
    "minor passion for my work",
    "burning passion for my work",
    "missing tongue",
    "rot stink",
    "awful rot stink",
    "rot stink lingering",
    "masochist in minor pain",
    "masochist in serious pain",
    "masochist in intense pain",
    "masochist in mind-shattering pain",
    "body modder frustrated",
    "body modder pleased",
    "body modder quite pleased",
    "body modder delighted",
    "body modder enchanted",
    "body modder overjoyed",
    "machine body is complete",
    "body purist squeamish",
    "body purist disgusted",
    "body purist violated",
    "body purist horrified",
    "body purist nightmare",
    "I have become what I hate",
    "brawler has ranged weapon",
    "pyromaniac has incendiary weapon",
    "beautiful fire",
    "constraining clothes",
    "happily nude",
    "undergrounder indoors",
    "underground",
    "undergrounder outdoors",
    "night owl in daytime",
    "night owl at night",
    "greedy for impressive bedroom",
    "jealous of {0}'s bedroom",
    "ascetic has awful bedroom",
    "ascetic has dull bedroom",
    "ascetic has mediocre bedroom",
    "ascetic has impressive bedroom",
    "sanguine",
    "optimist",
    "pessimist",
    "depressive",
    "Tortured artist",
    "poke",
    "kick material in eyes",
    "demolish",
    "bulk goods trader",
    "war merchant",
    "slaver",
    "shaman merchant",
    "combat supplier",
    "exotic goods trader",
    "slave ship",
    "guard",
    "attack",
    "rescue",
    "haul",
    "tameness",
    "nudist",
    "bloodlust",
    "kind",
    "psychopath",
    "abrasive",
    "too smart",
    "brawler",
    "masochist",
    "night owl",
    "greedy",
    "jealous",
    "ascetic",
    "gay",
    "bisexual",
    "asexual",
    "pyromaniac",
    "wimp",
    "nimble",
    "fast learner",
    "slow learner",
    "undergrounder",
    "body modder",
    "body purist",
    "misandrist",
    "misogynist",
    "great memory",
    "tough",
    "tortured artist",
    "gourmand",
    "quick sleeper",
    "slowpoke",
    "fast walker",
    "jogger",
    "chemical fascination",
    "chemical interest",
    "teetotaler",
    "iron-willed",
    "steadfast",
    "nervous",
    "volatile",
    "neurotic",
    "very neurotic",
    "industrious",
    "hard worker",
    "lazy",
    "slothful",
    "psychically hypersensitive",
    "psychically sensitive",
    "psychically dull",
    "psychically deaf",
    "careful shooter",
    "trigger-happy",
    "staggeringly ugly",
    "super-immune",
    "sickly",
    "World view camera movement",
    "Reforming caravans",
    "Rescuing",
    "Capturing",
    "Shield belts",
    "Interacting with traders",
    "Drafting for combat",
    "Positioning fighters",
    "Build orbital trade beacon",
    "Animals will attack doors",
    "Bills tab",
    "Using the comms console",
    "Drug addiction",
    "Drug policies",
    "TV for sick people",
    "Prisoner tab",
    "Set what plant to grow",
    "Drug burning",
    "Door opening speeds",
    "Order queueing",
    "Shelves",
    "Camera dolly",
    "Camera zoom",
    "Time controls",
    "Pausing",
    "Stockpiles",
    "Forbid and allow",
    "Growing zones",
    "Equipping weapons",
    "Alerts",
    "Mining",
    "Work settings",
    "Forbidding doors",
    "Cover and shooting",
    "Forming caravans",
    "Animal taming",
    "Animal training",
    "Info card",
    "Storage tab",
    "Home area",
    "Spoilage and freezers",
    "Item deterioration",
    "Hostility response modes",
    "Allowed areas",
    "Medical operations",
    "Time assignments",
    "Manual work priorities",
    "Getting more traders",
    "Tile inspector",
    "Outfits",
    "Fire preparation",
    "History tab",
    "Clicking messages",
    "Shot accuracy tooltip",
    "Friendly fire safety",
    "Trade goods and trade beacons",
    "Arresting worsens faction relations",
    "Flick designations only designate",
    "Maximum number of player colonies",
    "Trading permit requirements",
    "Steam Deck controls",
    "melee",
    "ranged",
    "melee piercer",
    "melee blunt",
    "long shots",
    "short shots",
    "ranged heavy",
    "ranged light",
    "neolithic",
    "clear",
    "fog",
    "rain",
    "dry thunderstorm",
    "rainy thunderstorm",
    "foggy rain",
    "hard snow",
    "gentle snow",
    "fight fires",
    "go to bed for emergency treatment",
    "go to bed for treatment",
    "tend to patients with urgent needs",
    "tend to patients",
    "tend to self",
    "feed patients",
    "operate on humanlikes",
    "rescue downed allies to bed",
    "tend to animals",
    "feed animals",
    "operate on animals",
    "take patients to bed for operations",
    "visit sick people",
    "recuperate in bed",
    "flick switches",
    "open containers",
    "execute prisoners",
    "execute guilty colonists",
    "release prisoners",
    "take prisoners to bed",
    "feed prisoners",
    "deliver food to prisoners",
    "chat with prisoners",
    "rope roaming animals",
    "rope animals",
    "slaughter animals",
    "release to wild",
    "milk animals",
    "shear animals",
    "tame animals",
    "train animals",
    "rebalance penned animals",
    "cook meals at stove",
    "cook meals at campfire",
    "butcher creatures",
    "fill food hoppers",
    "brew liquors",
    "hunt",
    "fix broken-down buildings",
    "uninstall structures",
    "extract trees",
    "build roofs",
    "remove roofs",
    "construct placed frames",
    "deliver resources to frames",
    "deliver resources to blueprints",
    "replant tree",
    "deconstruct structures",
    "repair damaged things",
    "paint buildings",
    "paint floor",
    "remove paint",
    "remove floor paint",
    "remove floors",
    "smooth floors",
    "smooth walls",
    "harvest crops",
    "sow crops",
    "mine",
    "drill at deep drill",
    "cut plants",
    "make weapons",
    "make things at machining table",
    "fabricate things",
    "make apparel",
    "make things at art bench",
    "make things at crafting spot",
    "work at refinery",
    "synthesize drugs",
    "make stone blocks",
    "smelt items",
    "rearm turrets",
    "refuel fuelable buildings",
    "unload carriers",
    "load caravan",
    "load transporters",
    "strip corpses",
    "haul corpses",
    "do cremation bills",
    "do bills at campfire",
    "take beer out of fermenting barrels",
    "fill fermenting barrels",
    "haul general things",
    "merge things",
    "empty egg box",
    "clear snow",
    "clean filth",
    "do research",
    "operate long range scanner",
    "operate ground penetrating scanner",
    "study",
    "plant seeds",
    "caravan",
    "settlement",
    "abandoned settlement",
    "destroyed settlement",
    "landed ship",
    "transport pods",
    "waypoint",
    "peace talks",
  ],
  noGraphic: ["true"],
  texPath: [
    "Things/Pawn/Humanlike/Beards/BeardAnchor",
    "Things/Pawn/Humanlike/Beards/BeardBalin",
    "Things/Pawn/Humanlike/Beards/BeardBifur",
    "Things/Pawn/Humanlike/Beards/BeardBoxed",
    "Things/Pawn/Humanlike/Beards/BeardCircle",
    "Things/Pawn/Humanlike/Beards/BeardCurly",
    "Things/Pawn/Humanlike/Beards/BeardCurtain",
    "Things/Pawn/Humanlike/Beards/BeardDori",
    "Things/Pawn/Humanlike/Beards/BeardDucktail",
    "Things/Pawn/Humanlike/Beards/BeardDwalin",
    "Things/Pawn/Humanlike/Beards/BeardFork",
    "Things/Pawn/Humanlike/Beards/BeardFrench",
    "Things/Pawn/Humanlike/Beards/BeardFull",
    "Things/Pawn/Humanlike/Beards/BeardGoatee",
    "Things/Pawn/Humanlike/Beards/BeardImperial",
    "Things/Pawn/Humanlike/Beards/BeardKhal",
    "Things/Pawn/Humanlike/Beards/BeardLincoln",
    "Things/Pawn/Humanlike/Beards/BeardLongDutch",
    "Things/Pawn/Humanlike/Beards/BeardMachete",
    "Things/Pawn/Humanlike/Beards/BeardMoustache",
    "Things/Pawn/Humanlike/Beards/BeardMuttonChops",
    "Things/Pawn/Humanlike/Beards/BeardNori",
    "Things/Pawn/Humanlike/Beards/BeardOldDutch",
    "Things/Pawn/Humanlike/Beards/BeardSeer",
    "Things/Pawn/Humanlike/Beards/BeardSideWhiskers",
    "Things/Pawn/Humanlike/Beards/BeardSoulPatch",
    "Things/Pawn/Humanlike/Beards/BeardStubble",
    "Things/Pawn/Humanlike/Beards/BeardUrist",
    "Things/Pawn/Humanlike/Beards/BeardVanDyke",
    "Things/Pawn/Humanlike/Beards/BeardWizard",
    "Things/Item/Drug/Beer",
    "Things/Item/Resource/Wort",
    "Things/Item/Drug/Ambrosia",
    "Things/Item/Drug/GoJuice",
    "Things/Item/Drug/Luciferium",
    "Things/Item/Drug/Penoxycyline",
    "Things/Item/Drug/Yayo",
    "Things/Item/Drug/Tea",
    "Things/Item/Drug/Joint",
    "Things/Item/Drug/WakeUp",
    "Things/Mote/SparkThrown",
    "Things/Mote/SparkThrownBlue",
    "Things/Mote/LongSparkThrown",
    "Things/Mote/Splash",
    "Things/Mote/ToxicDamage",
    "Things/Mote/Smoke",
    "Things/Mote/FeedbackGoto",
    "Things/Mote/FeedbackShoot",
    "Things/Mote/FeedbackMelee",
    "Things/Mote/FeedbackEquip",
    "Things/Mote/FeedbackExtinguish",
    "Things/Mote/Meditate",
    "Things/Mote/Heart",
    "Things/Mote/HealingCross",
    "Things/Mote/SleepZ",
    "Things/Mote/IncapIcon",
    "Things/Mote/Footprint",
    "Things/Mote/Horseshoe",
    "Things/Mote/Stone",
    "Things/Mote/RitualEffects/SpeechLines",
    "Things/Mote/ExplosionFlash",
    "Things/Mote/AirPuff",
    "Things/Mote/DustPuff",
    "Things/Mote/MetaPuff",
    "Things/Mote/FireGlow",
    "Things/Mote/MicroSparks",
    "Things/Mote/HeatGlow",
    "Things/Mote/LightningGlow",
    "Things/Mote/ShotFlash",
    "Things/Mote/SparkFlash",
    "Things/Mote/YellowSparkFlash",
    "Things/Mote/BloodSplash",
    "Things/Mote/BodyImpact",
    "Things/Mote/PlainFlash",
    "Things/Mote/BrightFlash",
    "Things/Mote/Black",
    "Things/Mote/PsycastPsychicLine",
    "Things/Mote/ShotHit_Dirt",
    "Things/Mote/SandInEyes",
    "Things/Mote/WoodBit",
    "Things/Mote/MusicNote",
    "Things/Mote/SnowBit",
    "Things/Mote/ResearchPage",
    "Things/Mote/BlastDry",
    "Things/Mote/BlastEMP",
    "Things/Mote/LineEMP",
    "Things/Mote/BlastFlame",
    "Things/Mote/ElectricalSpark",
    "Things/Mote/BlastExtinguisher",
    "Things/Mote/AcidSpray",
    "Things/Mote/FoamSpray/Foam_A",
    "Things/Mote/FoamSpray/Foam_B",
    "Things/Mote/FoamSpray/Foam_C",
    "UI/Misc/Flash",
    "Things/Mote/HeatDiffusion",
    "Things/Mote/Sparks_Radial_A",
    "Things/Mote/VaporizeExplosionGlow",
    "Things/Mote/VaporizeExplosionRays_A",
    "Things/Mote/VaporizeExplosion_Center",
    "Things/Mote/Flash",
    "Things/Mote/Clean",
    "Things/Mote/Paint",
    "Things/Mote/Sow",
    "Things/Mote/Harvest",
    "Things/Mote/ClearSnow",
    "Things/Mote/Cards",
    "Things/Mote/Stun",
    "Things/Mote/ColonistFleeing",
    "Things/Mote/ColonistAttacking",
    "Things/Mote/DrunkBubble",
    "Things/Mote/BerserkBit",
    "Things/Mote/Speech",
    "Things/Mote/Thought",
    "Things/Mote/Transparent",
    "Things/Mote/TempRoof",
    "Things/Mote/FoodBitVegetarian",
    "Things/Mote/FoodBitMeat",
    "Things/Mote/StoneBit",
    "Things/Mote/CookBit",
    "Things/Mote/VomitBit",
    "Things/Mote/Bombardment",
    "Things/Mote/PowerBeam",
    "Things/Mote/PsychicConditionCauserMask",
    "Things/Mote/ShieldBubble_BrokenFlash",
    "Things/Mote/ShieldBubble_BrokenCracks",
    "Things/Mote/RadiationDistortion_A",
    "Things/Mote/PowerCellBurning",
    "Things/Item/Health/HealthItem",
    "Things/Pawn/Wounds/ArchotechEye_south",
    "Things/Pawn/Wounds/ArchotechEye_east",
    "Things/Pawn/Wounds/BionicEye_south",
    "Things/Pawn/Wounds/BionicEye_east",
    "Things/Item/Special/PsylinkNeuroformer",
    "Things/Pawn/Humanlike/Hairs/Gaston",
    "Things/Pawn/Humanlike/Hairs/Princess",
    "Things/Pawn/Humanlike/Hairs/Scat",
    "Things/Pawn/Humanlike/Hairs/Lackland",
    "Things/Pawn/Humanlike/Hairs/Revolt",
    "Things/Pawn/Humanlike/Hairs/Pigtails",
    "Things/Pawn/Humanlike/Hairs/Afro",
    "Things/Pawn/Humanlike/Hairs/Bob",
    "Things/Pawn/Humanlike/Hairs/Burgundy",
    "Things/Pawn/Humanlike/Hairs/Troubadour",
    "Things/Pawn/Humanlike/Hairs/GreasySwoop",
    "Things/Pawn/Humanlike/Hairs/Cleopatra",
    "Things/Pawn/Humanlike/Hairs/Cute",
    "Things/Pawn/Humanlike/Hairs/Decent",
    "Things/Pawn/Humanlike/Hairs/FancyBun",
    "Things/Pawn/Humanlike/Hairs/Senorita",
    "Things/Pawn/Humanlike/Hairs/Flowy",
    "Things/Pawn/Humanlike/Hairs/Long",
    "Things/Pawn/Humanlike/Hairs/Mop",
    "Things/Pawn/Humanlike/Hairs/Wavy",
    "Things/Pawn/Humanlike/Hairs/Mess",
    "Things/Pawn/Humanlike/Hairs/Curly",
    "Things/Pawn/Humanlike/Hairs/Fringe",
    "Things/Pawn/Humanlike/Hairs/Frozen",
    "Things/Pawn/Humanlike/Hairs/Ponytails",
    "Things/Pawn/Humanlike/Hairs/Bowlcut",
    "Things/Pawn/Humanlike/Hairs/Bravo",
    "Things/Pawn/Humanlike/Hairs/Recruit",
    "Things/Pawn/Humanlike/Hairs/Rockstar",
    "Things/Pawn/Humanlike/Hairs/Snazzy",
    "Things/Pawn/Humanlike/Hairs/Firestarter",
    "Things/Pawn/Humanlike/Hairs/Junkie",
    "Things/Pawn/Humanlike/Hairs/Scrapper",
    "Things/Pawn/Humanlike/Hairs/Randy",
    "Things/Pawn/Humanlike/Hairs/Rookie",
    "Things/Pawn/Humanlike/Hairs/Spikes",
    "Things/Pawn/Humanlike/Hairs/ShaveTopBraid",
    "Things/Pawn/Humanlike/Hairs/Braidbun",
    "Things/Pawn/Humanlike/Hairs/Keeper",
    "Things/Pawn/Humanlike/Hairs/Primal",
    "Things/Pawn/Humanlike/Hairs/Warden",
    "Things/Pawn/Humanlike/Hairs/Elder",
    "Things/Pawn/Humanlike/Hairs/Locks",
    "Things/Pawn/Humanlike/Hairs/Savage",
    "Things/Pawn/Humanlike/Hairs/Sticky",
    "Things/Pawn/Humanlike/Hairs/Shaved",
    "Things/Pawn/Humanlike/Hairs/Tuft",
    "Things/Pawn/Humanlike/Hairs/Scorpiontail",
    "Things/Pawn/Humanlike/Hairs/Topdog",
    "Things/Pawn/Humanlike/Hairs/Mohawk",
    "UI/Icons/Options/OptionsGeneral",
    "UI/Icons/Options/OptionsVideo",
    "UI/Icons/Options/OptionsAudio",
    "UI/Icons/Options/OptionsGameplay",
    "UI/Icons/Options/OptionsUI",
    "UI/Icons/Options/OptionsControls",
    "UI/Icons/Options/OptionsDev",
    "UI/Icons/Options/OptionsMod",
    "Things/Pawn/Mechanoid/Termite",
    "Things/Building/Ruins/AncientConcreteBarrier",
    "Things/Building/Ruins/AncientLamppost",
    "Things/Building/Misc/Urn",
    "Things/Building/Ruins/AncientCryptosleepPod",
    "Things/Building/Ruins/AncientLamp",
    "Things/Building/Art/SculptureSmall",
    "Things/Building/Art/SculptureLarge",
    "Things/Building/Art/SculptureGrand",
    "Things/Building/Art/Snowman",
    "Things/Building/Exotic/CrashedShipPart",
    "Things/Building/Exotic/CrashedPoisonShipPart",
    "Things/Building/Exotic/ShipChunk",
    "Things/Building/Misc/Shuttle",
    "Things/Building/Misc/CrashedShuttle",
    "Things/Building/Furniture/Bed/SleepSpot",
    "Things/Building/Furniture/Bed/DoubleSleepSpot",
    "Things/Building/Furniture/Bed/Bed",
    "Things/Building/Furniture/Bed/DoubleBed",
    "Things/Building/Furniture/Bed/RoyalBed",
    "Things/Building/Furniture/Bed/HospitalBed",
    "Things/Building/Furniture/Bed/Bedroll",
    "Things/Building/Furniture/Bed/BedrollDouble",
    "Things/Building/Misc/AnimalBed/AnimalSleepSpot",
    "Things/Building/Misc/AnimalBed/AnimalSleepBox",
    "Things/Building/Misc/AnimalBed/AnimalBed",
    "Things/Building/Furniture/Stool",
    "Things/Building/Furniture/DiningChair",
    "Things/Building/Furniture/Armchair",
    "Things/Building/Furniture/EndTable",
    "Things/Building/Furniture/Table1x2",
    "Things/Building/Furniture/Table2x2",
    "Things/Building/Furniture/Table2x4",
    "Things/Building/Furniture/Table3x3",
    "Things/Building/Furniture/PlantPot",
    "Things/Building/Misc/TorchLamp",
    "Things/Building/Furniture/LampStanding",
    "Things/Building/Production/LampSun",
    "Things/Building/Furniture/Shelf",
    "Things/Building/Furniture/ShelfSmall",
    "Things/Building/Furniture/Dresser",
    "Things/Building/Joy/HorseshoesPin",
    "Things/Building/Joy/HoopstoneRing",
    "Things/Building/Joy/GameOfUr",
    "Things/Building/Joy/ChessTable",
    "Things/Building/Joy/PokerTable",
    "Things/Building/Joy/BilliardsTable",
    "Things/Building/Joy/TubeTelevision",
    "Things/Building/Joy/FlatscreenTelevision",
    "Things/Building/Joy/MegascreenTelevision",
    "Things/Building/Joy/Telescope",
    "Things/Item/Special/BurningPowerCell",
    "Things/Building/Misc/EggBox",
    "Things/Building/Misc/DropBeacon",
    "Things/Building/Misc/CommsConsole",
    "Things/Building/Misc/FirefoamPopper",
    "Things/Building/Misc/MoisturePump",
    "Things/Building/Misc/GroundPenetratingScanner",
    "Things/Building/Misc/LongRangeMineralScanner",
    "Things/Building/Misc/PodLauncher",
    "Things/Special/DropPod",
    "Things/Building/Misc/MultiAnalyzer",
    "Things/Building/Misc/VitalsMonitor",
    "Things/Building/Misc/ToolCabinet",
    "Things/Building/Misc/GraveEmpty",
    "Things/Building/Misc/GraveFull",
    "Things/Building/Misc/Sarcophagus",
    "Things/Building/Misc/SarcophagusFull",
    "Things/Building/Ship/ShipCryptosleepCasket",
    "Things/Building/Ship/ShipCryptosleepCasketOpenDoor",
    "Things/Building/Misc/MarriageSpot",
    "Things/Building/Misc/PartySpot",
    "Things/Building/Misc/CaravanHitchingSpot",
    "Things/Building/Furniture/SteleLarge",
    "Things/Building/Furniture/GrandStele",
    "Things/Building/Furniture/PenMarker",
    "Things/Item/Unfinished/UnfinishedMusicalInstrument",
    "Things/Building/Linked/Rock_Atlas",
    "Things/Building/Natural/CollapsedRocks",
    "Things/Building/Linked/RockFlecked_Atlas",
    "Things/Building/Linked/CompactedMachinery_Atlas",
    "Things/Building/Natural/SteamGeyser",
    "Things/Building/Natural/Hive",
    "Things/Building/Natural/GlowPod",
    "Things/Building/Linked/PowerConduit_Atlas",
    "Things/Building/Linked/PowerConduit_Blueprint_Atlas",
    "Things/Building/Linked/WaterproofConduit_Atlas",
    "Things/Building/Power/PowerSwitch",
    "Things/Building/Power/WoodFiredGenerator",
    "Things/Building/Power/ChemfuelPoweredGenerator",
    "Things/Building/Power/WindTurbine/WindTurbineBody",
    "Things/Building/Power/Battery",
    "Things/Building/Power/SolarCollector",
    "Things/Building/Power/GeothermalPlant",
    "Things/Building/Power/WatermillGenerator/WatermillGeneratorBody",
    "Things/Building/Production/CraftingSpot",
    "Things/Building/Production/ButcherSpot",
    "Things/Building/Production/TableSculpting",
    "Things/Building/Production/TableButcher",
    "Things/Building/Production/TableTailorHand",
    "Things/Building/Production/TableTailorElectric",
    "Things/Building/Production/TableSmithingFueled",
    "Things/Building/Production/TableSmithingElectric",
    "Things/Building/Production/TableMachining",
    "Things/Building/Production/TableStoveElectric",
    "Things/Building/Production/TableStoveFueled",
    "Things/Building/Production/TableStonecutter",
    "Things/Building/Production/TableBrewery",
    "Things/Building/Production/TableDrugLab",
    "Things/Building/Production/ElectricSmelter",
    "Things/Building/Production/Refinery",
    "Things/Building/Production/FabricationBench",
    "Things/Building/Production/ResearchBenchSimple",
    "Things/Building/Production/ResearchBenchHiTech",
    "Things/Building/Production/Crematorium",
    "Things/Building/Production/HydroponicsBasin",
    "Things/Building/Production/FermentingBarrel",
    "Things/Building/Production/DeepDrill",
    "Things/Building/Production/NutrientDispenser",
    "Things/Building/Production/Hopper",
    "Things/Building/Linked/Sandbags_Atlas",
    "Things/Building/Linked/Sandbags_Blueprint_Atlas",
    "Things/Building/Linked/Barricade_Atlas",
    "Things/Building/Linked/Barricade_Blueprint_Atlas",
    "Things/Building/Security/TrapSpikeArmed",
    "Things/Building/Security/IEDHighExplosive",
    "Things/Building/Security/IEDIncendiary",
    "Things/Building/Security/IEDEMP",
    "Things/Building/Security/IEDSmoke",
    "Things/Building/Security/IEDFirefoam",
    "Things/Building/Security/IEDAntigrainWarhead",
    "Things/Building/Security/TurretMortar_Base",
    "Things/Building/Security/TurretMini_Base",
    "Things/Projectile/Bullet_Small",
    "Things/Building/Security/TurretMini_Top",
    "Things/Building/Security/TurretHeavy_Base",
    "Things/Projectile/Bullet_Big",
    "Things/Building/Security/TurretAutocannon_Top",
    "Things/Building/Security/TurretSniper_Top",
    "Things/Building/Security/TurretMortar_Top",
    "Things/Projectile/FoamLong/Foam",
    "Things/Item/Equipment/WeaponRanged/TurretFoam_Top",
    "Things/Projectile/Rocket_Swarm",
    "Things/Building/Security/TurretRocketEmpty_Top",
    "Things/Building/Security/TurretRocketFull_Top",
    "Things/Building/Ship/ShipBeam",
    "Things/Building/Ship/ShipComputerCore",
    "Things/Building/Ship/ShipReactor",
    "Things/Building/Ship/ShipEngine",
    "Things/Building/Ship/ShipSensorCluster",
    "Things/Building/Special/PsychicEmanator",
    "Things/Building/Special/VanometricPowerCell",
    "Things/Building/Special/InfiniteChemreactor",
    "Things/Building/Door/Door_Blueprint",
    "Things/Building/Door/DoorSimple_Mover",
    "Things/Building/Door/Autodoor_Mover",
    "Things/Building/Door/AnimalFlap_Mover",
    "Things/Building/Door/AnimalFlap_Blueprint",
    "Things/Building/Linked/Wall",
    "Things/Building/Linked/Wall_Blueprint_Atlas",
    "Things/Building/Linked/Fence",
    "Things/Building/Linked/Fence_Blueprint",
    "Things/Building/Door/FenceGate_Mover",
    "Things/Building/Door/FenceGate_Blueprint",
    "Things/Building/Furniture/Column",
    "Things/Building/Misc/Campfire",
    "Things/Building/Misc/PassiveCooler",
    "Things/Building/Misc/TempControl/Heater",
    "Things/Building/Misc/TempControl/Cooler",
    "Things/Building/Misc/TempControl/Vent",
    "Things/Item/Artifact/PsychicAnimalPulser",
    "Things/Item/Artifact/PsychicSoothePulser",
    "Things/Item/Special/AIPersonaCore",
    "Things/Item/Special/MechSerumHealer",
    "Things/Item/Special/MechSerumResurrector",
    "Things/Item/Special/SubpersonaCoreTechprof",
    "Things/Item/Special/ThrumboHorn",
    "Things/Item/Special/ElephantTusk",
    "Things/Item/Meal/SurvivalPack",
    "Things/Item/Meal/NutrientPaste",
    "Things/Item/Meal/Simple",
    "Things/Item/Meal/Fine",
    "Things/Item/Meal/FineVeg",
    "Things/Item/Meal/FineMeat",
    "Things/Item/Meal/Lavish",
    "Things/Item/Meal/LavishVeg",
    "Things/Item/Meal/LavishMeat",
    "Things/Item/Resource/Kibble",
    "Things/Item/Resource/Pemmican",
    "Things/Item/Resource/Chocolate",
    "Things/Item/Resource/Milk",
    "Things/Item/Resource/AnimalProductRaw/InsectJelly",
    "Things/Item/Resource/AnimalProductRaw/EggBirdSmall",
    "Things/Item/Resource/AnimalProductRaw/EggOval",
    "Things/Item/Resource/AnimalProductRaw/EggRound",
    "Things/Item/Resource/Medicine/MedicineHerbal",
    "Things/Item/Resource/Medicine/MedicineIndustrial",
    "Things/Item/Resource/Medicine/MedicineUltratech",
    "Things/Item/Resource/ComponentIndustrial",
    "Things/Item/Resource/ComponentSpacer",
    "Things/Item/Resource/Neutroamine",
    "Things/Item/Resource/Chemfuel",
    "Things/Item/Resource/ReinforcedBarrel/ReinforcedBarrel",
    "Things/Item/Resource/PlantFoodRaw/Potatoes",
    "Things/Item/Resource/PlantFoodRaw/RawFungus",
    "Things/Item/Resource/PlantFoodRaw/Rice",
    "Things/Item/Resource/PlantFoodRaw/AgaveFruit",
    "Things/Item/Resource/PlantFoodRaw/Corn",
    "Things/Item/Resource/PlantFoodRaw/Berries",
    "Things/Item/Resource/PlantFoodRaw/Hay",
    "Things/Item/Resource/PlantFoodRaw/Hops",
    "Things/Item/Resource/PlantFoodRaw/PsychoidLeaves",
    "Things/Item/Resource/PlantFoodRaw/SmokeleafLeaves",
    "Things/Item/Resource/Shell/Shell_HighExplosive",
    "Things/Projectile/ShellHighExplosive",
    "Things/Item/Resource/Shell/Shell_Incendiary",
    "Things/Projectile/ShellIncendiary",
    "Things/Item/Resource/Shell/Shell_EMP",
    "Things/Projectile/ShellEMP",
    "Things/Item/Resource/Shell/Shell_Smoke",
    "Things/Projectile/ShellSmoke",
    "Things/Item/Resource/Shell/Shell_Firefoam",
    "Things/Projectile/ShellFirefoam",
    "Things/Item/Resource/Shell/Shell_AntigrainWarhead",
    "Things/Projectile/ShellAntigrainWarhead",
    "Things/Item/Resource/Silver",
    "Things/Item/Resource/Gold",
    "Things/Item/Resource/Steel",
    "Things/Item/Resource/Plasteel",
    "Things/Item/Resource/WoodLog",
    "Things/Item/Resource/Uranium",
    "Things/Item/Resource/Jade",
    "Things/Item/Resource/Cloth",
    "Things/Item/Resource/Synthread",
    "Things/Item/Resource/Devilstrand",
    "Things/Item/Resource/Hyperweave",
    "Things/Item/Resource/Wool",
    "Things/Item/Resource/Leather",
    "Things/Item/Unfinished/UnfinishedSculpture",
    "Things/Item/Unfinished/UnfinishedGun",
    "Things/Item/Unfinished/UnfinishedWeapon",
    "Things/Item/Unfinished/UnfinishedTechArmor",
    "Things/Item/Unfinished/UnfinishedApparel",
    "Things/Item/Unfinished/UnfinishedBelt",
    "Things/Item/Unfinished/UnfinishedPack",
    "Things/Item/Unfinished/UnfinishedComponent",
    "Things/Item/Unfinished/UnfinishedHealthItem",
    "Things/Pawn/Humanlike/Apparel/ShieldBelt/ShieldBelt",
    "Things/Pawn/Humanlike/Apparel/CowboyHat/CowboyHat",
    "Things/Pawn/Humanlike/Apparel/BowlerHat/BowlerHat",
    "Things/Pawn/Humanlike/Apparel/TribalHeaddress/TribalHeaddress",
    "Things/Pawn/Humanlike/Apparel/Tuque/Tuque",
    "Things/Pawn/Humanlike/Apparel/WarMask/WarMask",
    "Things/Pawn/Humanlike/Apparel/Veil/Veil",
    "Things/Pawn/Humanlike/Apparel/SimpleHelmet/SimpleHelmet",
    "Things/Pawn/Humanlike/Apparel/AdvancedHelmet/AdvancedHelmet",
    "Things/Pawn/Humanlike/Apparel/PowerArmorHelmet/PowerArmorHelmet",
    "Things/Pawn/Humanlike/Apparel/ReconArmorHelmet/ReconHelmet",
    "Things/Pawn/Humanlike/Apparel/PsychicFoilHelmet/PsychicFoilHelmet",
    "Things/Pawn/Humanlike/Apparel/Hood/Hood",
    "Things/Pawn/Humanlike/Apparel/SmokepopPack/SmokepopPack",
    "Things/Pawn/Humanlike/Apparel/FirefoamPack/FirefoamPack",
    "Things/Item/Artifact/PsychicShockLance",
    "Things/Item/Artifact/PsychicInsanityLance",
    "Things/Pawn/Humanlike/Apparel/TribalA/TribalA",
    "Things/Pawn/Humanlike/Apparel/Parka/Parka",
    "Things/Pawn/Humanlike/Apparel/Pants/Pants",
    "Things/Pawn/Humanlike/Apparel/ShirtBasic/ShirtBasic",
    "Things/Pawn/Humanlike/Apparel/ShirtButton/ShirtButton",
    "Things/Pawn/Humanlike/Apparel/Duster/Duster",
    "Things/Pawn/Humanlike/Apparel/Jacket/Jacket",
    "Things/Pawn/Humanlike/Apparel/PlateArmor/PlateArmor",
    "Things/Pawn/Humanlike/Apparel/FlakVest/FlakVest",
    "Things/Pawn/Humanlike/Apparel/FlakPants/FlakPants",
    "Things/Pawn/Humanlike/Apparel/FlakJacket/FlakJacket",
    "Things/Pawn/Humanlike/Apparel/PowerArmor/PowerArmor",
    "Things/Pawn/Humanlike/Apparel/ReconArmor/ReconArmor",
    "Things/Pawn/Humanlike/Apparel/Cape/Cape",
    "Things/Special/DropPodMechanoid",
    "Things/Skyfaller/Meteorite",
    "Things/Plant/Blight",
    "Things/Filth/Grainy",
    "Things/Filth/Trash",
    "Things/Filth/RubbleRock",
    "Things/Filth/RubbleBuilding",
    "Things/Filth/RubbleSlag",
    "Things/Filth/RubbleSandbags",
    "Things/Filth/Spatter",
    "Things/Filth/MachineBits",
    "Things/Filth/PoolSoft",
    "Things/Filth/FireFoam",
    "Things/Filth/LiquidFuel",
    "Things/Filth/CorpseBile",
    "Things/Filth/Ash",
    "Things/Filth/Hair",
    "Things/Special/Fire",
    "Things/Projectile/Spark",
    "Things/Item/Chunk/ChunkStone",
    "Things/Item/Resource/StoneBlocks",
    "Things/Item/Chunk/ChunkSlag",
    "Things/Building/Linked/RockSmooth_Atlas",
    "Things/Item/Equipment/WeaponMelee/BreachAxe",
    "Things/Item/Equipment/WeaponMelee/Mace",
    "Things/Item/Equipment/WeaponMelee/Gladius",
    "Things/Item/Equipment/WeaponMelee/LongSword",
    "Things/Item/Equipment/WeaponMelee/Club",
    "Things/Item/Equipment/WeaponMelee/Knife",
    "Things/Item/Equipment/WeaponMelee/Ikwa",
    "Things/Item/Equipment/WeaponMelee/Spear",
    "Things/Item/Equipment/WeaponRanged/Revolver",
    "Things/Item/Equipment/WeaponRanged/Autopistol",
    "Things/Item/Equipment/WeaponRanged/MachinePistol",
    "Things/Item/Equipment/WeaponRanged/IncendiaryLauncher",
    "Things/Projectile/LauncherShot",
    "Things/Item/Equipment/WeaponRanged/SmokeLauncher",
    "Things/Item/Equipment/WeaponRanged/EMPLauncher",
    "Things/Item/Equipment/WeaponRanged/BoltActionRifle",
    "Things/Projectile/Bullet_big",
    "Things/Item/Equipment/WeaponRanged/Shotgun",
    "Things/Projectile/Bullet_Shotgun",
    "Things/Item/Equipment/WeaponRanged/ChainShotgun",
    "Things/Item/Equipment/WeaponRanged/HeavySMG",
    "Things/Item/Equipment/WeaponRanged/LMG",
    "Things/Item/Equipment/WeaponRanged/AssaultRifle",
    "Things/Item/Equipment/WeaponRanged/SniperRifle",
    "Things/Item/Equipment/WeaponRanged/Minigun",
    "Things/Item/Equipment/WeaponRanged/RocketLauncher",
    "Things/Projectile/Rocket_Big",
    "Things/Item/Equipment/WeaponRanged/DoomsdayLauncher",
    "Things/Item/Equipment/WeaponRanged/Grenades",
    "Things/Projectile/Grenade",
    "Things/Item/Equipment/WeaponRanged/Molotov",
    "Things/Projectile/Molotov",
    "Things/Item/Equipment/WeaponRanged/EMPGrenades",
    "Things/Projectile/GrenadeEMP",
    "Things/Projectile/Charge_Small",
    "Things/Item/Equipment/WeaponRanged/ChargeBlasterHeavy",
    "Things/Item/Equipment/WeaponRanged/InfernoCannon",
    "Things/Item/Equipment/WeaponRanged/NeedleGun",
    "Things/Projectile/Needle",
    "Things/Item/Equipment/WeaponRanged/BowShort",
    "Things/Projectile/Arrow_Small",
    "Things/Item/Equipment/WeaponRanged/Pilum",
    "Things/Projectile/Pilum",
    "Things/Item/Equipment/WeaponRanged/BowRecurve",
    "Things/Item/Equipment/WeaponRanged/BowGreat",
    "Things/Item/Equipment/WeaponRanged/ChargeRifle",
    "Things/Item/Equipment/WeaponRanged/ChargeLance",
    "Things/Projectile/ChargeLanceShot",
    "Things/Item/Equipment/WeaponSpecial/OrbitalTargeter",
    "Things/Item/Equipment/WeaponSpecial/OrbitalTargeterBombardment/OrbitalTargeterBombardment",
    "Things/Item/Equipment/WeaponSpecial/OrbitalTargeterPowerBeam/OrbitalTargeterPowerBeam",
    "Things/Item/Equipment/WeaponRanged/ThumpCannon",
    "Things/Projectile/Bullet_Thump",
    "Things/Plant/Glowstool",
    "Things/Plant/Agarilux",
    "Things/Plant/Bryolux",
    "Things/Plant/Rose",
    "Things/Plant/Daylily",
    "Things/Plant/RicePlant",
    "Things/Plant/PotatoPlant",
    "Things/Plant/CornPlant",
    "Things/Plant/StrawberryPlant",
    "Things/Plant/Haygrass",
    "Things/Plant/CottonPlant",
    "Things/Plant/Devilstrand",
    "Things/Plant/Healroot",
    "Things/Plant/HopsPlant",
    "Things/Plant/SmokeleafPlant",
    "Things/Plant/PsychoidPlant",
    "Things/Plant/TreeCocoa",
    "Things/Plant/BurnedTree",
    "Things/Plant/Stumps/Chopped",
    "Things/Plant/Stumps/Smashed",
    "Things/Plant/Ambrosia",
    "Things/Plant/Tinctoria",
    "Things/Item/Dye",
    "Things/Plant/Agave",
    "Things/Plant/PincushionCactus",
    "Things/Plant/SaguaroCactus",
    "Things/Plant/TreeDrago",
    "Things/Plant/Grass",
    "Things/Plant/Bush",
    "Things/Plant/Brambles",
    "Things/Plant/TreeWillow",
    "Things/Plant/TreeCypress",
    "Things/Plant/TreeMaple",
    "Things/Plant/Chokevine",
    "Things/Plant/Dandelion",
    "Things/Plant/Astragalus",
    "Things/Plant/Moss",
    "Things/Plant/BerryPlant",
    "Things/Plant/TreeOak",
    "Things/Plant/TreePoplar",
    "Things/Plant/TreePine",
    "Things/Plant/TreeBirch",
    "Things/Plant/ShrubLow",
    "Things/Plant/Alocasia",
    "Things/Plant/Clivia",
    "Things/Plant/Rafflesia",
    "Things/Plant/TreeTeak",
    "Things/Plant/TreeCecropia",
    "Things/Plant/TreePalm",
    "Things/Plant/TreeBamboo",
    "Things/Pawn/Animal/Bear/Bear",
    "Things/Pawn/Animal/Bear/Dessicated_Bear",
    "Things/Pawn/Animal/Ostrich/Ostrich",
    "Things/Pawn/Animal/Ostrich/Dessicated_Ostrich",
    "Things/Pawn/Animal/Emu/Emu",
    "Things/Pawn/Animal/Emu/Dessicated_Emu",
    "Things/Pawn/Animal/Cassowary/Cassowary",
    "Things/Pawn/Animal/Cassowary/Dessicated_Cassowary",
    "Things/Pawn/Animal/Cougar/Cougar",
    "Things/Pawn/Animal/Cougar/Dessicated_Cougar",
    "Things/Pawn/Animal/Lynx/Lynx",
    "Things/Pawn/Animal/Lynx/Dessicated_Lynx",
    "Things/Pawn/Animal/Cat/Cat",
    "Things/Pawn/Animal/Cat/Dessicated_Cat",
    "Things/Pawn/Animal/YorkshireTerrier/YorkshireTerrier",
    "Things/Pawn/Animal/YorkshireTerrier/Dessicated_YorkshireTerrier",
    "Things/Pawn/Animal/GuineaPig/GuineaPig1",
    "Things/Pawn/Animal/GuineaPig/GuineaPig2",
    "Things/Pawn/Animal/GuineaPig/GuineaPig3",
    "Things/Pawn/Animal/GuineaPig/GuineaPig",
    "Things/Pawn/Animal/GuineaPig/Dessicated_GuineaPig",
    "Things/Pawn/Animal/Labrador/Labrador",
    "Things/Pawn/Animal/Labrador/Dessicated_Labrador",
    "Things/Pawn/Animal/Husky/Husky",
    "Things/Pawn/Animal/Husky/Dessicated_Husky",
    "Things/Pawn/Animal/Monkey/Monkey",
    "Things/Pawn/Animal/Monkey/Dessicated_Monkey",
    "Things/Pawn/Animal/Chicken/Chicken",
    "Things/Pawn/Animal/Chicken/Dessicated_Chicken",
    "Things/Pawn/Animal/Duck/DuckFemale",
    "Things/Pawn/Animal/Duck/DuckMale",
    "Things/Pawn/Animal/Turkey/TurkeyHen",
    "Things/Pawn/Animal/Turkey/Dessicated_TurkeyHen",
    "Things/Pawn/Animal/Turkey/TurkeyTom",
    "Things/Pawn/Animal/Turkey/Dessicated_TurkeyTom",
    "Things/Pawn/Animal/Goose/Goose",
    "Things/Pawn/Animal/Goose/Dessicated_Goose",
    "Things/Pawn/Animal/Cow/Bull",
    "Things/Pawn/Animal/Cow/Cow",
    "Things/Pawn/Animal/Cow/Dessicated_Bull",
    "Things/Pawn/Animal/Cow/Dessicated_Cow",
    "Things/Pawn/Animal/Boomalope/Boomalope",
    "Things/Pawn/Animal/Boomalope/Dessicated_Boomalope",
    "Things/Pawn/Animal/Boomalope/Corpse_Boomalope",
    "Things/Pawn/Animal/Muffalo/Muffalo",
    "Things/Pawn/Animal/Muffalo/Dessicated_Muffalo",
    "Things/Pawn/Animal/Bison/Bison",
    "Things/Pawn/Animal/Bison/Dessicated_Bison",
    "Things/Pawn/Animal/Dromedary/Dromedary",
    "Things/Pawn/Animal/Dromedary/Dessicated_Dromedary",
    "Things/Pawn/Animal/Goat/GoatFemale",
    "Things/Pawn/Animal/Goat/Dessicated_GoatFemale",
    "Things/Pawn/Animal/Goat/GoatMale",
    "Things/Pawn/Animal/Goat/Dessicated_GoatMale",
    "Things/Pawn/Animal/Elk/ElkFemale",
    "Things/Pawn/Animal/Elk/Dessicated_ElkFemale",
    "Things/Pawn/Animal/Elk/ElkMale",
    "Things/Pawn/Animal/Elk/Dessicated_ElkMale",
    "Things/Pawn/Animal/Yak/YakMale",
    "Things/Pawn/Animal/Yak/YakFemale",
    "Things/Pawn/Animal/Yak/Dessicated_YakMale",
    "Things/Pawn/Animal/Yak/Dessicated_YakFemale",
    "Things/Pawn/Animal/Caribou/Caribou",
    "Things/Pawn/Animal/Caribou/Dessicated_Caribou",
    "Things/Pawn/Animal/Horse/Horse1",
    "Things/Pawn/Animal/Horse/Horse2",
    "Things/Pawn/Animal/Horse/Horse3",
    "Things/Pawn/Animal/Horse/Horse4",
    "Things/Pawn/Animal/Horse/Horse5",
    "Things/Pawn/Animal/Horse/Horse6",
    "Things/Pawn/Animal/Horse/Horse",
    "Things/Pawn/Animal/Horse/Dessicated_Horse",
    "Things/Pawn/Animal/Donkey/Donkey",
    "Things/Pawn/Animal/Donkey/Dessicated_Donkey",
    "Things/Pawn/Animal/Elephant/Elephant",
    "Things/Pawn/Animal/Elephant/Dessicated_Elephant",
    "Things/Pawn/Animal/Rhino/Rhino",
    "Things/Pawn/Animal/Rhino/Dessicated_Rhino",
    "Things/Pawn/Animal/Hare/Hare",
    "Things/Pawn/Animal/Hare/Dessicated_Hare",
    "Things/Pawn/Animal/Megascarab/Megascarab",
    "Things/Pawn/Animal/Megascarab/Dessicated_Megascarab",
    "Things/Pawn/Animal/Spelopede/Spelopede",
    "Things/Pawn/Animal/Spelopede/Dessicated_Spelopede",
    "Things/Pawn/Animal/Megaspider/Megaspider",
    "Things/Pawn/Animal/Megaspider/Dessicated_Megaspider",
    "Things/Pawn/Animal/Thrumbo/Thrumbo",
    "Things/Pawn/Animal/Thrumbo/Dessicated_Thrumbo",
    "Things/Pawn/Animal/Cobra/Cobra",
    "Things/Pawn/Animal/Cobra/Dessicated_Cobra",
    "Things/Pawn/Animal/Tortoise/Tortoise",
    "Things/Pawn/Animal/Tortoise/Dessicated_Tortoise",
    "Things/Pawn/Animal/Beaver/Beaver",
    "Things/Pawn/Animal/Beaver/Dessicated_Beaver",
    "Things/Pawn/Animal/Pig/Pig",
    "Things/Pawn/Animal/Pig/Dessicated_Pig",
    "Things/Pawn/Animal/WildBoar/WildBoar",
    "Things/Pawn/Animal/WildBoar/Dessicated_WildBoar",
    "Things/Pawn/Animal/Ibex/IbexFemale",
    "Things/Pawn/Animal/Ibex/Dessicated_IbexFemale",
    "Things/Pawn/Animal/Ibex/IbexMale",
    "Things/Pawn/Animal/Ibex/Dessicated_IbexMale",
    "Things/Pawn/Animal/Deer/DeerBaby",
    "Things/Pawn/Animal/Deer/Dessicated_DeerBaby",
    "Things/Pawn/Animal/Deer/DeerMale",
    "Things/Pawn/Animal/Deer/DeerFemale",
    "Things/Pawn/Animal/Deer/Dessicated_DeerMale",
    "Things/Pawn/Animal/Deer/Dessicated_DeerFemale",
    "Things/Pawn/Animal/Gazelle/Gazelle",
    "Things/Pawn/Animal/Gazelle/Dessicated_Gazelle",
    "Things/Pawn/Animal/Chinchilla/Chinchilla",
    "Things/Pawn/Animal/Chinchilla/Dessicated_Chinchilla",
    "Things/Pawn/Animal/Sheep/SheepFemale",
    "Things/Pawn/Animal/Sheep/Dessicated_SheepFemale",
    "Things/Pawn/Animal/Sheep/SheepMale",
    "Things/Pawn/Animal/Sheep/Dessicated_SheepMale",
    "Things/Pawn/Animal/Alpaca/Alpaca",
    "Things/Pawn/Animal/Alpaca/Dessicated_Alpaca",
    "Things/Pawn/Animal/Megasloth/Megasloth",
    "Things/Pawn/Animal/Megasloth/Dessicated_Megasloth",
    "Things/Pawn/Animal/Capybara/Capybara",
    "Things/Pawn/Animal/Capybara/Dessicated_Capybara",
    "Things/Pawn/Animal/Squirrel/Squirrel",
    "Things/Pawn/Animal/Squirrel/Dessicated_Squirrel",
    "Things/Pawn/Animal/Rat/Rat",
    "Things/Pawn/Animal/Rat/Dessicated_Rat",
    "Things/Pawn/Animal/Boomrat/Boomrat",
    "Things/Pawn/Animal/Boomrat/Dessicated_Boomrat",
    "Things/Pawn/Animal/Boomrat/Corpse_Boomrat",
    "Things/Pawn/Animal/Raccoon/Raccoon",
    "Things/Pawn/Animal/Raccoon/Dessicated_Raccoon",
    "Things/Pawn/Animal/Iguana/Iguana",
    "Things/Pawn/Animal/Iguana/Dessicated_Iguana",
    "Things/Pawn/Animal/Warg/Warg",
    "Things/Pawn/Animal/Warg/Dessicated_Warg",
    "Things/Pawn/Animal/Wolf_Timber/Wolf_Timber",
    "Things/Pawn/Animal/Wolf_Timber/Dessicated_Wolf_Timber",
    "Things/Pawn/Animal/Wolf_Arctic/Wolf_Arctic",
    "Things/Pawn/Animal/Wolf_Arctic/Dessicated_Wolf_Arctic",
    "Things/Pawn/Animal/Fox_Fennec/Fox_Fennec",
    "Things/Pawn/Animal/Fox_Fennec/Dessicated_Fox_Fennec",
    "Things/Pawn/Animal/Fox_Red/Fox_Red",
    "Things/Pawn/Animal/Fox_Red/Dessicated_Fox_Red",
    "Things/Pawn/Animal/Fox_Arctic/Fox_Arctic",
    "Things/Pawn/Animal/Fox_Arctic/Dessicated_Fox_Arctic",
    "Things/Pawn/Mechanoid/CentipedeClean",
    "Things/Pawn/Mechanoid/Centipede",
    "Things/Pawn/Mechanoid/CentipedeGunnerClean",
    "Things/Pawn/Mechanoid/CentipedeGunner",
    "Things/Pawn/Mechanoid/CentipedeBurnerClean",
    "Things/Pawn/Mechanoid/CentipedeBurner",
    "Things/Pawn/Mechanoid/LancerClean",
    "Things/Pawn/Mechanoid/Lancer",
    "Things/Pawn/Mechanoid/ScytherClean",
    "Things/Pawn/Mechanoid/Scyther",
    "Things/Pawn/Mechanoid/PikemanClean",
    "Things/Pawn/Mechanoid/Pikeman",
  ],
  styleGender: ["Male", "Female", "Any", "MaleUsually", "FemaleUsually"],
  offsetNarrowEast: ["(-0.01,0,0.03)", "(-0.05,0,0)", "(-0.04,0,0)"],
  offsetNarrowSouth: ["(0,0,0.05)", "(0,0,0.02)"],
  description: [
    "Forests of coniferous trees. Despite the harsh winters, boreal forests sustain a diverse population of small and large animals, and have warm summers.",
    "These mostly-frozen plains bear almost no trees and little vegetation. There are a few small animals interspersed with large herds of migratory grazers and their predators.",
    "A wetland packed with trees and vines. Much of the marshy land here can't support heavy structures, moving around is slow due to choking vegetation. Disease is endemic in this dense, wet ecosystem.",
    "Sheets of ice which can be kilometers thick. There is no soil for plants to grow in. The only animals here are migrating to somewhere else - or badly lost.",
    "Permanent ice sheets floating on water. There is no soil for plants to grow, no minerals to mine, and almost no animal life.",
    "Forests of deciduous trees interspersed with fertile clearings. Many species of animals move around among the trees and on the plains.",
    "Wetlands choked with vegetation and disease. Dense overgrowth makes it hard to move around, and clearing areas for building takes a long time. Much of the terrain is too marshy to support heavy structures.",
    'A thick, moist jungle, buzzing with animal life and infested with disease. Despite its visual beauty, this is a very dangerous biome. Choking overgrowth, aggressive animals, and constant sickness are why some explorers call this the "green hell".',
    "A plant-choked, steamy swamp seething with parasites and pathogens. Much of the land is too marshy to build on. Difficult movement, aggressive animals, and rampant disease make living here a nightmare.",
    "A dry region, but not dry enough to become a true desert. Open plains with grasses and bushes give way to scattered groves of trees. Plants are hardy and there is a moderate density of animals, but arable soil is hard to find.",
    "A very dry area which supports little life. There is very little arable land, and animal life is very sparse. Deserts can be hot, or quite cold.",
    "An extremely hot, dry area, devoid of almost all life. Searing heat and a near total lack of arable land make it very difficult to survive here.",
    "Open ocean. Great for fish. Not so great for you.",
    "A large lake. Beautiful to live next to. Not so beautiful to live in.",
    "A broad collection of cultures common among frequent space travelers.",
    "An ancient culture common among rimworld tribes.",
    "A hardy industrial culture common among rimworld outlanders.",
    "A broad category describing the styles and practices of many pirate groups.",
    "The first beverage besides water ever consumed by mankind. Beer can taste good, but its main effect is intoxication. Excessive consumption can lead to alcohol blackouts and, over time, addiction.",
    "Un-fermented beer. This substance needs to ferment in a fermenting barrel before it becomes drinkable beer.",
    "Make wort from hops.",
    "Alcohol in the bloodstream. It makes people happy, but reduces capacities.",
    "An unpleasant delayed after-effect of alcohol intoxication.",
    "A built-up tolerance to alcohol. The more severe this tolerance is, the more alcohol it takes to get the same effect.",
    "A chemical addiction to alcohol. Long-term presence of alcohol has caused neurological adaptations at the cellular level, so the brain can no longer function properly without the drug.\r\n\\nWithout regular doses of alcohol, withdrawal symptoms will begin. However, extended abstinence will force the brain to adapt back to its normal state, resolving the addiction.",
    "I just feel a bit more relaxed after that drink. That's good.",
    "I'm a bit wobbly! And this is quite enjoyable.",
    "I feel so uninhibited and unafraid! This is a great time!",
    "Wooo! What's going on?",
    "The headache is almost gone.",
    "My head hurts from all that liquor.",
    "It feels like a gaggle of geese are pecking at my skull.",
    "Feeling shaky. Everything pisses me off. I keep thinking of drinking.",
    "Because of an alcohol addiction, this person needs to regularly consume alcohol to avoid withdrawal symptoms.",
    "A soft, rare fruit. Ambrosia tastes wonderful and produces a subtle mood-increasing chemical high. However, if eaten too often, it can generate a mild addiction.",
    "Ambrosia chemicals in the bloodstream. It lifts the mood.",
    "A built-up tolerance to ambrosia. The more severe this tolerance is, the more ambrosia it takes to get the same effect.",
    "A chemical addiction to ambrosia. Long-term presence of ambrosia has caused neurological adaptations at the cellular level, so the brain can no longer function properly without the drug.\r\n\\nWithout regular doses of ambrosia, withdrawal symptoms will begin. However, extended abstinence will force the brain to adapt back to its normal state, resolving the addiction.",
    "That ambrosia makes me feel more relaxed, and gives me energy at the same time.",
    "I feel heavy and cold all the time. I never thought I'd want a piece of fruit so much.",
    "Because of an ambrosia addiction, this person needs to regularly consume ambrosia to avoid withdrawal symptoms.",
    "A synthetic performance-enhancing drug developed for space marines during the early days of interplanetary warfare. Go-juice blocks pain, increases movement speed, and improves the user's melee and shooting abilities.\\n\\nThe military chemists who created it were never able to remove its addictiveness. Some saw this as a downside; others saw it as a benefit.",
    "Go-juice in the bloodstream. It supercharges combat-related abilities, and instantly increases psyfocus when first injected.",
    "A chemical addiction to go-juice. Long-term presence of go-juice has caused neurological adaptations at the cellular level, so the brain can no longer function properly without the drug.\r\n\\nWithout regular doses of go-juice, withdrawal symptoms will begin. However, extended abstinence will force the brain to adapt back to its normal state, resolving the addiction.",
    "A built-up tolerance to go-juice. The more severe this tolerance is, the more go-juice it takes to get the same effect.",
    "I feel pumped but steady. I am the bullet in flight, ready to cut through you.",
    "I'm all fuzzy and can't think straight. My limbs feel heavy, I'm tired and hungry, everything hurts. And why won't my eyes focus properly?",
    "Because of a go-juice addiction, this person needs to regularly consume the drug to avoid withdrawal symptoms.",
    "A concoction of mechanites that dramatically improve the body's functioning in all respects. Over time, it can even heal old scarred-over wounds or brain damage, though it cannot regenerate lost limbs. Unfortunately, without the moderating effects of regular doses every five or six days, the mechanites lose cohesion, causing continuous berserk rages and, eventually, death.\\n\\nAfter the first dose, there is no way to get the mechanites out, ever.\\n\\nOn the urbworlds, they call Luciferium the 'Devil's Bargain'. Many have been forced to kill friends when no more of the seductive red pills could be found.",
    "Active luciferium mechanites in the body. They improve the body's functioning in all respects. However, if they are not regularly replenished with more doses of luciferium, they lose cohesion and drive the user insane.",
    "Luciferium mechanites in the body. Luciferium mechanites decohere over time; only regular doses of fresh luciferium can prevent this process.\r\n\\nWithout luciferium, the mechanite decoherence will reach a critical state, causing the victim to go insane and die.",
    "This person's body is enhanced by luciferium mechanites.\\n\\nWithout regular doses of luciferium, the mechanites will lose cohesion. If this happens, the user becomes continuously, violently insane and eventually dies.\\n\\nThis addiction never goes away.",
    "A drug for preventing infections before they take hold. Blocks malaria, sleeping sickness, plague. Must be taken every five days to remain effective.\\n\\nThis drug only prevents new infections. It does not cure existing infections - even those that are not yet discovered.",
    "Penoxycyline-induced immunity to certain illnesses. This only blocks new infections; it does nothing for those who are already infected, even if their infection is dormant.",
    "A flaky white preparation of psychite that can be smoked to induce a short but powerful euphoric state. While it is cheap to produce and extremely pleasurable to use, it is exceptionally addictive. Flake is known for destroying lives, communities, and entire societies.",
    "Active flake in the bloodstream. Generates a euphoric, debilitating high.",
    "So good, so good.",
    "A fragrant tea infused with leaves of the psychoid plant. Drinking it induces a subtle psychite euphoria. This tea is easy to produce at cooking facilities, but can produce psychite addiction if consumed too often.\\n\\nMany tribes use psychoid tea, both as a daily energizer and as part of social and religious rituals.",
    "Active psychite tea in the bloodstream. Generates a mild euphoric effect.",
    "Drinking that tea made me feel great. I love having this energy!",
    "A refined powdery preparation of the psychite drug. When snorted, it produces a rapid euphoric high, dramatically reduces the user's need for rest, and suppresses pain. Like all forms of psychite, it is addictive, though it is not as addictive as the cruder flake.\\n\\nBecause of its high cost and refined appearance, many cultures associate yayo with degenerate wealth. Whether in the throneroom or the boardroom, many hare-brained policy schemes have been developed during yayo-fueled binge parties.",
    "Active yayo in the bloodstream. Generates an intense euphoric high.",
    "A built-up tolerance to psychite. The more severe this tolerance is, the more psychite-based drugs like yayo or flake it takes to get the same effect.",
    "A chemical addiction to psychite. Long-term presence of psychite has caused neurological adaptations at the cellular level, so the brain can no longer function properly without the drug.\r\n\\nWithout regular doses of psychite from drugs like flake or yayo, withdrawal symptoms will begin. However, extended abstinence will force the brain to adapt back to its normal state, resolving the addiction.",
    "Feeling pumped! Let's do this!",
    "God I'm tired. Everything's so slow and boring. Especially me.",
    "Because of a psychite addiction, this person needs to regularly consume the drug to avoid withdrawal symptoms.",
    "Smokeleaf leaves prepared in small rolls for smoking. The drug improves mood, but also increases appetite, reduces focus and slows movement. Smokeleaf use can produce a dependency.\\n\\nJoints can be produced at a crafting spot without equipment, and are a fixture in many traditional low-industriousness cultures.",
    "Smokeleaf's active chemical in the bloodstream. Generates a soft feeling of fuzzy well-being.",
    "A built-up tolerance to smokeleaf. The more severe this tolerance is, the more smokeleaf it takes to get the same effect.",
    "A chemical addiction to smokeleaf. Long-term use of smokeleaf has caused neurological adaptations at the cellular level, so the brain can no longer function properly without the drug.\r\n\\nWithout regular doses of smokeleaf, withdrawal symptoms will begin. However, extended abstinence will force the brain to adapt back to its normal state, resolving the addiction.",
    "I'm, like, stoned, man.",
    "I really wish I could smoke. I feel jittery, and my gut has that anxious sensation all the time.",
    "Because of a smokeleaf dependence, this person needs to regularly consume the drug to avoid withdrawal symptoms.",
    "A synthetic stimulant. Wake-up fills the user's need for rest, allowing them to work for extended periods without getting tired. However, taking wake-up runs the risk of developing an addiction.\\n\\nIn the most competitive universities and companies of many worlds, high-achievers are sometimes called 'wake-ups' because of the association with this drug.",
    "Wake-up in the bloodstream. It fills the need for rest by stimulating the brain, and increases focus, allowing faster work. It also increases the psyfocus gains from meditation.",
    "A chemical addiction to wake-up. Long-term presence of wake-up has caused neurological adaptations at the cellular level, so the brain can no longer function properly without the drug.\r\n\\nWithout regular doses of wake-up, withdrawal symptoms will begin. However, extended abstinence will force the brain to adapt back to its normal state, resolving the addiction.",
    "A built-up tolerance to wake-up. The more severe this tolerance is, the more wake-up it takes to get the same effect.",
    "Because of a wake-up addiction, this person needs to regularly consume the drug to avoid withdrawal symptoms.",
    "I feel all fuzzy and unfocused. And I'm so tired.",
    "Killer machines of unknown origin. Hidden in ancient structures, under mounds of dust, or at the bottom of the ocean, mechanoids can self-maintain for thousands of years. This group of mechs seems to be unified in purpose, but not well-coordinated in action. While local scholars believe they're autonomous weapons left over from an ancient war, tribal legends describe them as the demonic servants of a sleeping god.",
    "These giant insect-like creatures live underground and burrow up to attack when attracted by noise or pheromone signals. Originally from the planet Sorne, interstellar entrepreneurs managed to capture, genetically-modify, and vat-grow the insect colonies for use as weapons. It's not clear who placed Sorne insects on this planet, but they are here and as dangerous as ever.",
    "These people have lived here for decades or centuries, and have lost most of the technology that brought them to this world. They usually work with simple machinery and defend themselves with advanced gunpowder weapons.\\n\\nThey are concerned with the practical matters of trade, trust, and survival.\\n\\nThis particular group holds civil behavior in high regard.",
    "These people have lived here for decades or centuries, and have lost most of the technology that brought them to this world. They usually work with simple machinery and defend themselves with advanced gunpowder weapons.\\n\\nThey are concerned with the practical matters of trade, trust, and survival.\\n\\nThis particular group has a streak of barbarity in them.",
    "These people have been here a very long time. Maybe their ancestors crashed here a thousand years ago. Maybe they survived some cataclysm that destroyed a technological civilization here. In any case, the tribals are mostly nomadic people who live off the land using primitive tools and weapons.\\n\\nDespite their apparent technological weakness, the tribals can be dangerous enemies and valuable friends because of their skill with low-tech warfare, their numbers, and their hardiness.\\n\\nThis particular tribe pursues a gentle way of life where they can. They are quite open to trade and alliances, even with strange peoples.",
    "These people have been here a very long time. Maybe their ancestors crashed here a thousand years ago. Maybe they survived some cataclysm that destroyed a technological civilization here. In any case, the tribals are mostly nomadic people who live off the land using primitive tools and weapons.\\n\\nDespite their apparent technological weakness, the tribals can be dangerous enemies and valuable friends because of their skill with low-tech warfare, their numbers, and their hardiness.\\n\\nThis particular tribe values warlike dominance; it may be difficult to turn them into an ally.",
    "These people have been here a very long time. Maybe their ancestors crashed here a thousand years ago. Maybe they survived some cataclysm that destroyed a technological civilization here. In any case, the tribals are mostly nomadic people who live off the land using primitive tools and weapons.\\n\\nDespite their apparent technological weakness, the tribals can be dangerous enemies because of their skill with low-tech warfare, their numbers, and their hardiness.\\n\\nThis particular tribe is driven by a blood-and-honor culture; you will not be able to ally with them!",
    "A loose confederation of pirate gangs who've agreed to mostly fight outsiders instead of fighting each other.\\n\\nPirates don't sow, they don't build, and they rarely trade. Driven by a blood-and-honor culture that values personal strength and ruthlessness, they enrich themselves by raiding and robbing their more productive neighbors.\\n\\nTheir technology level depends mostly on who they've managed to steal from recently. Mostly they carry gunpowder weapons, though some prefer to stab victims at close range.",
    "A colony of recently-arrived off-worlders.",
    "A small tribe.",
    "A solar flare is blasting the planet. The electromagnetic interference will prevent most electrical devices from working.",
    "An eclipse is shadowing the surface. It will be dark, even during the daytime.",
    "A distant archotech is emitting psychic signals through an orbital amplifier, driving people towards insanity.",
    "A distant archotech is emitting psychic signals through an orbital amplifier, calming people and stabilizing their minds.",
    "A plume of toxic dust from some distant source is slowly settling over this entire region. Any living thing not under a roof will be slowly poisoned, and items left outside will corrode.",
    "Some distant volcano or fire is choking the atmosphere with ash, significantly reducing the amount of light which reaches the surface. Temperatures will be colder and plants will grow slower.",
    "An extreme wave of heat is baking the area.",
    "An unusual cold snap is freezing the region.",
    "A freak localized storm is blasting a small area with repeated lightning strikes.",
    "A multi-year climate cycle due to an elliptical orbit.",
    "An interstellar planetkiller weapon is approaching this planet. It will smash the planet apart like a rifle bullet hitting an egg, annihilating all life.",
    "An aurora is lighting up the sky. The breathtaking display will boost the mood of anyone outside to see it.",
    "Carriers of this gene have a particular hair color. With multiple hair color genes, one is randomly selected.",
    "Carriers of this gene have a particular skin color. With multiple skin color genes, one is randomly selected.",
    "An artificial eye built by an archotech. It perceives every type of electromagnetic radiation, including radio waves, infrared, light, x-rays, and gamma rays. Its visual acuity is precise enough to read handwriting from twenty meters away. It can emit various wavelengths of radiation like a flashlight, and has an internal subpersona AI which helps highlight useful visual information. Its internal workings are a mystery to human minds.",
    "An artificial arm built by an archotech. It's strong enough to crush a thick hardwood branch in its hand, and precise enough to write a sonnet on a grain of rice. It looks and feels like natural flesh, but it's harder to damage than plasteel. Even if it is harmed, it repairs itself over time. Its internal workings are a mystery to all human minds.",
    "An artificial leg built by an archotech. It looks and feels like natural flesh, but a pair of these can move the user as fast as a decent car, and it's harder to damage than plasteel. Even if it is harmed, it repairs itself over time. Its internal workings are a mystery to all human minds.",
    "An installed archotech eye.",
    "An installed archotech arm.",
    "An installed archotech leg.",
    "Install an archotech eye.",
    "Install an archotech arm.",
    "Install an archotech leg.",
    "An advanced artificial eye. With its biogel nerve-link, internal signal pre-processor, and wide-spectrum sensors, it is better than a biological eye in almost every way. A lattice-dust healing system allows it to recover from damage.",
    "An advanced artificial arm. Silenced mini-servos give great strength, while the biogel nerve-link gives exquisite control. A lattice-dust healing system allows it to recover from damage. It is better than a biological arm in almost every way.",
    "An advanced artificial leg. With its biogel nerve-link, powerful mini-servos, and lattice-dust healing system, it is better than a biological leg in almost every way.",
    "An advanced artificial spine. A biogel nerve bundle runs down an articulated plasteel core, surrounded by a lattice-dust healing system. It matches the performance of a biological spine.",
    "An advanced artificial heart. It has synthetic muscle fibers for a realistic heartbeat, plus a high-flow pump for rapid circulation during high stress. It is better than a biological heart in almost every way.",
    "An advanced artificial stomach. A set of sensors and chemical synthesizers efficiently digest nearly any energy-bearing foodstuff. An integrated lattice-dust healing system automatically repairs any damage caused by the powerful acids. It is better than a biological stomach in almost every way.",
    "A chest implant for preventing enemy use of captured equipment. Upon the user's death, it releases powerful chemicals that dissolve gear in contact with the user's body. It doesn't damage others.",
    "An advanced artificial ear implant. A collection of invisible subdermal microphones capture sound and transmit it to a biogel nerve interface that links directly with the auditory nerve. It's sensitive enough to hear a cat before you see it, can't be damaged by loud noise, and automatically tunes itself to pick out meaningful sounds in noisy environments.",
    "An artificial tongue replacement. Made of synthetic smooth-fibers and connected through a neurogel interface, it can match the performance of a natural tongue in speaking, eating, and tasting.",
    "An installed bionic eye.",
    "An installed bionic arm.",
    "An installed bionic leg.",
    "An installed bionic spine.",
    "An installed bionic heart.",
    "An installed bionic stomach.",
    "An installed death acidifier.",
    "An installed bionic ear.",
    "An installed bionic tongue.",
    "Install a bionic eye.",
    "Install a bionic arm.",
    "Install a bionic leg.",
    "Install a bionic spine.",
    "Install a bionic heart.",
    "Install a bionic stomach.",
    "Install a death acidifier.",
    "Install a bionic ear.",
    "Install a bionic tongue.",
    "Install a peg leg.",
    "Install a wooden hand.",
    "Install a wooden foot.",
    "Install a denture.",
    "An installed peg leg.",
    "An installed wooden hand.",
    "An installed wooden foot.",
    "An installed denture.",
    "A biological human heart. Pumps blood around the body.",
    "A biological human lung. A pair of these form the core of the human respiratory system.",
    "A biological human kidney. Filters and removes waste products from the blood.",
    "A biological human liver. Plays an important role in metabolism.",
    "Install a biological heart.",
    "Install a lung.",
    "Install a biological kidney.",
    "Install a biological liver.",
    "A leg prosthesis. While it lacks a neural interface, its complex arrangement of internal joints allows it to mimic natural movement quite convincingly. Still, it is inferior to a real leg.",
    "An arm prosthesis. While it lacks a neural interface, its complex arrangement of internal joints allows it to mimic natural movement quite convincingly. Still, it is inferior to a real arm.",
    "A heart prosthesis. It contains an electric motor that pumps blood smoothly around the body. Users often report feeling tired, but it's better than the alternative.",
    "An implant which replaces normal hearing. An external microphone transmits a sound signal to electrodes wrapped around the inner ear's auditory sensing nerves. The electrodes stimulate the nerves according to the sound, creating a sensation of hearing. It's not as good as a natural ear, but it's a lot better than being deaf.",
    "A combat-oriented hand replacement consisting of a mechanical hand with a hooked claw on each finger. It cuts deep, and it is strong enough to crush a skull like a hand crushes an egg. The claws can be retracted, making it as useful as a natural hand for non-combat tasks, however its overall ungainliness slows down movement slightly.",
    "A brain implant that stimulates the brain's pleasure centers. While it dramatically improves a user's mood, the blanket of happiness makes it hard to concentrate on anything real. Joywires are illegal on many worlds, and are known for destroying whole cultures.",
    "A brain implant which inhibits nociception, or pain sensation. While it does allow the user to accomplish more, it turns out pain has a purpose. When you don't feel it, you can get hurt really bad really easily.",
    "Install a prosthetic leg.",
    "Install a prosthetic arm.",
    "Install a prosthetic heart.",
    "Install a cochlear implant.",
    "Install a power claw.",
    "Install a joywire.",
    "Install a painstopper.",
    "Remove the painstopper.",
    "An installed prosthetic leg.",
    "An installed prosthetic arm.",
    "An installed prosthetic heart.",
    "An installed cochlear implant.",
    "An installed power claw.",
    "An installed joywire implant.",
    "An installed painstopper implant.",
    "Cannot catch fire.",
    "A reduction in the normal blood volume. Minor blood loss has relatively mild effects, but when blood loss becomes severe, oxygen transport becomes badly impaired and the victim loses the ability to move. Extreme blood loss leads to death.\r\n\\nBlood loss naturally recovers over time as the body slowly regenerates its blood supply.",
    "Sleep drugs in the bloodstream. Anesthetic renders creatures unconscious.",
    "A state of mental shock which leads to a total inability to function. The victim collapses, effectively unconscious.",
    "A state of psychic chaos in the brain and mind. Caused by psychic attacks or critical level of neural heat, this effect is debilitating until it wears off.",
    "A form of benign coma during which the brain recovers from a psychic overload.",
    "An after-effect of neural heat. Psychic hangover is bothersome, but not dangerous.",
    "After-effects of an electrical shock to the brain. This is generally cause by feedback from brain implants hit by EMP pulses.",
    "After-effects of using a cryptosleep pod. Cryptosleep suspends and replaces many bodily functions in order to prevent aging and death. Upon exiting cryptosleep, the body takes time to restart and rebalance its natural metabolic processes. While this is ongoing, the patient suffers from nausea, dizziness, and a sense of fuzziness in the mind.",
    "Gastrointestinal illness caused by consuming decayed or unclean food. It can be caused by eating rotten food, by incompetent cooks accidentally poisoning meals, or by eating from unsafe wild sources. The patient will vomit and feel sick for some time.",
    "Poison in the bloodstream. This can come from various sources, including environmental toxins, venomous bites, or poisoned weapons.\r\n\\nAt high doses, toxic buildup is lethal. Even at low doses, it can generate cancers.\r\n\\nIf a creature dies with toxic buildup, there's a chance that they cannot be eaten. The higher the toxic buildup, the higher the chance.",
    "This creature is gestating offspring. It will give birth if the pregnancy comes to term. If starved or injured, there may be a miscarriage.",
    "A disruption in the heart's normal beating rhythm. Heart attacks can be debilitatingly painful. They can worsen and lead to death, or recover.",
    "Generalized toxic effects due to over-concentration of drugs in the bloodstream.",
    "After-effects of resurrection. Artificially-restarted body processes take time to rebalance themselves.",
    "Covered in a fire-retardant foam.",
    "Abnormally low body fat and weight, typically caused by lack of food. Malnutrition is always very unpleasant, but its initial effects are mild. Without food, though, a malnourished creature will waste away, losing muscle mass and capacities. Malnutrition ends with death. Upon re-feeding malnutrition naturally recovers over time. Malnourished creatures have larger appetites than normal.",
    "A generalized disruption to body functioning caused by excessive exposure to heat and sun. The victim becomes dizzy, weak, and confused. Recovery is quick once in a cool area, but if heat exposure continues, heat stroke gets worse until death.",
    "Dangerously low core body temperature. Unless re-warmed, hypothermia gets worse and ends in death. Recovery is quick once the victim is re-warmed. Avoid hypothermia by wearing warm clothes in cold environments.",
    "A special biological state used by some creatures to survive extreme cold. Instead of trying to stay warm, the creature's body chemistry adapts to prevent internal freezing despite very low temperature. Bodily functions are slowed and capacities are reduced, but the cold does no permanent damage. Some biologists call it a wakeful form of hibernation.",
    "Degradation in the spinal column and surrounding musculature. This makes it hard to move and bend smoothly.",
    "Generalized loss of muscle and bone density.",
    "Milky-looking opacity in the eye. Cataracts impair vision.",
    "Total inability to see.",
    "Inability to hear quiet sounds due to degradation of hair cells in the cochlea.",
    "Neural degradation which causes deficits in the ability to think and remember. Dementia has various causes including aging, specific illnesses, and toxins.",
    "A brain disease usually associated with aging. Alzheimer's disease causes progressive degradation in the ability to think and remember. Patients are known to forget close relatives and sometimes wander around in confusion.",
    "A long-term inflammatory disease of the airways in the lungs. It requires regular tending to prevent symptoms.",
    "A blockage in one of the critical arteries in the heart. Heart artery blockages randomly induce heart attacks.",
    "A lump of cancerous tissue. Without treatment, the carcinoma will grow over time, causing worsening symptoms and eventually killing the patient.\r\n\\nA skilled doctor can excise the carcinoma. An unskilled doctor may be able to simply amputate the body part which contains the carcinoma.",
    "Excise a carcinoma.",
    "Parasitic worms in the gut. They cause vomiting. They also consume the victim's food, which increases hunger.",
    "Parasitic creatures in the muscles. These cause weakness and a lack of coordination.",
    "Semi-coherent mechanites which develop fibrous links in muscle tissue. They enhance the victim's strength, but also cause intense pain. These are probably a mutated strain of strength-enhancing mechanites.",
    "Semi-coherent mechanites which reside in the nervous system. They enhance the victim's senses, but also cause intense pain. These are probably a mutated strain of sense-enhancing mechanites.",
    "Bacterial infection in a wound. Without treatment, the bacteria will multiply, killing local tissue, and eventually causing blood poisoning and death.\r\n\\nThrough aeons of human warfare, infections have often taken more lives than the wounds themselves.",
    "An infectious disease caused by the influenza virus.",
    "An infectious disease caused by the influenza virus. This strain is adapted for infecting non-human species.",
    "An infectious disease caused by bacteria.",
    "An infectious disease caused by bacteria. This strain is adapted to infecting non-human species.",
    "An infectious disease caused by a mosquito-borne parasite.",
    "An infectious disease caused by an insect-borne parasite. Sleeping sickness is not as deadly as some other diseases, but progresses slowly. The body takes a long time to clear the infection.",
    "Long-term exposure to rot stink gas. Rot stink exposure has no direct health effects. However, serious rot stink exposure has a chance to result in a painful bacterial infection known as lung rot. When not exposed to rot stink gas, rot stink exposure will slowly decrease.",
    "A bacterial disease that targets an individual's lungs. Minor cases are little more than an irritation, but if left unchecked the bacterial growth results in an increasing amount of fluid buildup in the victim's lungs, eventually resulting in death.\\n\\nIf treated properly, the body's immune system will eventually clear lung rot.",
    "A body part is entirely missing.",
    "Miscellanous injuries.",
    "A burn.",
    "A chemical burn.",
    "A crushing wound.",
    "A crack.",
    "A cut.",
    "A cut made during surgery.",
    "A cut made during execution.",
    "A scratch or tear.",
    "A bite wound.",
    "A stab wound.",
    "A gunshot wound.",
    "A part of the body has been shredded and torn.",
    "A bruise.",
    "Frozen tissue caused by exposure to cold without adequate protection. Frostbite is very painful, and frostbitten body parts are often lost.",
    "An exceptional condition caused by trauma to the brain. The brain, in the face of injury, has developed extreme abilities in some areas, while losing the ability to speak.",
    "Chemical damage at the cellular level.",
    "A degenerative liver disease caused by excessive alcohol consumption.",
    "Chaotic thought patterns caused by the decoherence of resurrection mechanites. Resurrection psychosis progresses and eventually causes total psychosis and death.\r\n\\nResurrected people require mechanites to rebuild their bodily functions at the cellular level. Mechanites always have a chance to lose coherence, and if they do, they wreak havoc in the central nervous system. The older the corpse, the more mechanite action is required to resurrect it, and the greater the chance of eventual decoherence.",
    "A disease which causes affected creatures to enter berserk rages. A creature with scaria can be cured through a special medical operation, but it must be downed first. If not treated, scaria kills its host about five days after infection. The disease poisons the flesh and rots the skin, so creatures killed with scaria have a chance of rotting upon death so they cannot be butchered for meat or leather.",
    "This creature's reproductive system has been permanently shut down.",
    "This special medical operation cures scaria.",
    "Sterilize a creature so it can no longer reproduce.",
    "Sand in the eyes. It impairs vision, but can be cleared within a few moments.",
    "Dirt in the eyes. It impairs vision, but can be cleared in a few moments.",
    "Mud in the eyes. It impairs vision, but can be cleared in a few moments.",
    "Gravel in the eyes. It impairs vision, but can be cleared in a few moments.",
    "Water in the eyes. It impairs vision, but can be cleared in a few moments.",
    "A consumable archotech-created device that forms or upgrades a psylink in the user's mind.\\n\\nThe user presses the device over the eyes, where it links to the brain directly and restructures part of it. Afterwards, the device disintegrates into worthless ash.",
    "An organic connection to a larger psychic field. This allows a person to psychically induce a distant archotech superintelligence to influence reality in ways that seem impossible.\\n\\nHigher levels of psylink permit the use of more powers. Regardless of psylink level, a person can only use specific powers that they have learned.\\n\\nPsylink comes from a variety of sources. Single-use psylink neuroformer devices can create a psylink. Tribal peoples also know how to develop it through ritual linking with the legendary anima tree.\\n\\nAs a physical phenomenon in the brain, psylink is poorly-understood by scientists, not least because it seems to actively conceal itself if studied too closely. One thing most agree on is that it somehow connects people to archotechs and harnesses their power, possibly through some sort of negotiation or sympathy mechanism.",
    "Build a community in a sandbox environment. Major direct threats are disabled, but challenges like disease, mental breaks, and mad animals can still occur.\r\n\r\n(*SectionTitle)Recommended for:(/SectionTitle)\r\n\r\n- Players who want to learn the game mechanics with minimal pressure.\r\n- Players who just want to build.\r\n- Players who just want to relax.",
    "Build a community with a taste of danger. Threats appear, but they're weakened.\r\n\r\n(*SectionTitle)Recommended for:(/SectionTitle)\r\n\r\n- Players who are new to this kind of game.\r\n- Players who want to build a perfect colony.\r\n- Players who want to relax.",
    "There's room to grow and thrive, but it's still a dangerous planet.\r\n\r\n(*SectionTitle)Recommended for:(/SectionTitle)\r\n\r\n- Experienced strategy gamers on their first game of RimWorld.\r\n- Experienced RimWorld players who want some breathing room to pursue funny or weird goals.",
    "Strive to survive on a rough, tough planet. There will be triumph and tragedy.\r\n\r\n(*SectionTitle)Recommended for:(/SectionTitle)\r\n\r\n- Experienced players who want a rough story requiring skill to survive.",
    "Face brutal survival challenges. Even if you play well, people will die. You will need to anticipate threats before they arrive, and seek out every advantage.\r\n\r\n(*SectionTitle)Recommended for:(/SectionTitle)\r\n\r\n- Experienced players who want to struggle to survive.",
    "This setting is designed to be unfair. Huge threats will crash upon you without mercy until your colony dies. Only choose this setting if you are happy with the drama of struggling and dying.\r\n\r\n(*SectionTitle)Recommended for:(/SectionTitle)\r\n\r\n- Experienced players who want to face a brutal, unfair challenge where even great skill may not prevent death.\r\n- Lovers of tragedy.\r\n- Digital masochists.",
    "This setting allows you to define your own playstyle in detail.\r\n\r\n(*SectionTitle)Recommended for:(/SectionTitle)\r\n\r\n- Players who are happy with one of the standard playstyles levels, but want to change a few things.\r\n- Players who want to experiment with something different.",
    "Core RimWorld content.",
    "Fight or ally with the new Shattered Empire faction.\r\n\r\nGain psychic powers through noble right, tribal nature communion, or artifact theft. Strengthen them through meditation, and use them to win battles and socially influence people. Strengthen your psychic power by meditating in grand thronerooms, in nature, before flames, the dead or blank walls.\r\n\r\nComplete quests to earn honor and titles, or riches and gear. Host rich nobles, poor refugees, animals, prisoners, and more. Defend crashed shuttles, serve as aerial shock troops, build monuments, defeat enemies, and recruit visitors.\r\n\r\nUse the special privileges of nobility to call Imperial troops, shuttles, and orbital strikes.\r\n\r\nNew mechanoid clusters may deploy on your map. Wear them down with artillery, do sneaky sabotage, or lure enemies into the danger.\r\n\r\nWield persona weapons with unique traits. Use jump packs for tactical flight and shield packs for emergency defense. Wear cataphract armor, locust armor, grenadier armor, and phoenix armor, each with different tools. Install new body implants to augment brains, stomachs, arms, and skin.\r\n\r\nEnjoy a new album of music by Alistair Lindsay.\r\n\r\nHost and protect the Stellarch and his guards complete the new royal endgame quest.",
    "Create your own belief system with fine control over behaviors, preferences, rituals, symbols, and more. Play as pirate nudist cannibals, blind undergrounder mole people, charitable ranching cowboys, machine-obsessed transhumanists, and more.\r\n\r\nAssign social roles like leader, moral guide, and specialist to your colonists.\r\n\r\nHold unforgettable rituals: Dance parties, cannibal feasts, burn and smoke circles, skylantern festivals, sacrifices, gladiator duels, blindings, scarifications, funerals, and more.\r\n\r\nConnect with Gauranlen trees and command the dryads that live inside them.\r\n\r\nHunt for ancient relics. Explore long-forgotten ruins, hack downed spacedrones, and infiltrate tribal villages. Attract wealthy pilgrims by presenting your relics in reliquaries. Plunder ancient complexes for treasure. Raid temporary encampments. Help beggars in need, or betray them.\r\n\r\nEnslave prisoners to perform work or fight for you.\r\n\r\nPlace many new buildings linked to belief systems, and see the many visual styles of different beliefs.\r\n\r\nUse new apparel, tattoos, and hairstyles desired by believers.\r\n\r\nSeek transcendence through a machine god in the new archonexus endgame.",
    "Raise a family, control mechanoids, and genetically-modify humans.\r\n\r\nBuild nurseries, play with babies, keep them happy and fed. Babies grow up into children who play, get into trouble, learn, and take lessons. Give the kids a rich childhood, or leave them in a growth vat until they're adults. \r\n\r\nBuild and control new kinds of mechanoids. Create combat and labor mechanoids and grow your swarm to a fearsome army and workforce. \r\n\r\nManage the pollution produced by your mechanoids. Freeze it, export it, destroy it with high-tech atomizers, or adapt to it.\r\n\r\nCall down three new hyper-deadly commander mechanoids and defeat them for their ancient technology.\r\n\r\nGenetically-modify your colonists or prisoners. Curate a collection of genes through trade, quest rewards, and surgical extractions. Recombine and implant genes to customize people to their purpose.\r\n\r\nInteract with new factions of brutish pig-people, toxin-immune human bioweapons, fur-covered animal-controlling arctic settlers, fire-breathing horned desert imps, psychic-bonding super-mates, and more.\r\n\r\nExplore the dark power of the secret blood-drinkers and use it to live forever.",
    "I should be made very comfortable here.",
    "There's no reason I shouldn't have the things I want.",
    "I can't expect to be totally pampered.",
    "I can't expect great comforts.",
    "I need to keep myself strong to survive.",
    "I'd better steel myself to survive.",
    "I am above the little people and should be made happy every moment.",
    "My majesty... I can hardly believe it myself. A moment's discomfort is below me.",
    "I shouldn't have to endure any inconveniences that distract me from my important role.",
    "My importance here is uncontested, so my comfort must be a critical priority for my people.",
    "Controls for the camera.",
    "Colony mode controls that apply in most situations.",
    "Generic controls that are re-used by many items and objects throughout the game.",
    "Special controls reserved for specific functions on specific objects.",
    "General-use controls for the architect mode menu.",
    "Controls for the main tabs.",
    "Controls used to modify other actions.",
    "Controls for developers and modders. Active in development mode only.",
    "Controls used in debug menus. Active in development mode only.",
    "Designate where to build, farm, store items, and so on.",
    "Choose which colonist does what kinds of work, and in what order.",
    "Schedule colonists' activities to certain times of day, and set their allowed areas.",
    "Assign behaviors to colonists like what they should wear, what drugs to take, or how to respond to enemies.",
    "Configure how the colony's tame animals should be treated.",
    "List wild animals in the area and designate them for hunting or taming.",
    "Examine and decide on research projects.",
    "View available, active, and historical quests.",
    "Examine the world map, form, and manage caravans.",
    "Review historical records.",
    "Review the other factions on this world and their relationships.",
    "Change options, save, load, or quit the game.",
    "Wardens will not interact with the prisoner.",
    "Wardens will attempt to recruit the prisoner. If the prisoner still has resistance, wardens will speak to them to reduce it.",
    "If the prisoner still has resistance, wardens will speak to them to reduce it. No recruit attempts will be made.",
    "A warden will release the prisoner.",
    "A warden will execute the prisoner on the spot by cutting. This can affect the mood of other prisoners and colonists.",
    "The number of creatures I have killed.",
    "The number of humanlike characters I have killed.",
    "The number of animals I have killed.",
    "The number of mechanoids I have killed.",
    "The number of creatures I have downed.",
    "The number of humanlike creatures I have downed.",
    "The number of animals I have downed, whether hunting or in combat.",
    "The number of mechanoids I have downed.",
    "The number of shots I have fired.",
    "The number of headshots I have made.",
    "The amount of damage I have dealt.",
    "The amount of damage I have taken.",
    "How many times I have suffered a mental break.",
    "How many times I have been on fire.",
    "The number of fires I have extinguished.",
    "How many times I have been medically operated on.",
    "How many medical operations I have performed.",
    "How many times I have had my medical conditions tended.",
    "How many times I have tended to others' medical conditions.",
    "The number of people I have captured.",
    "The number of prisoners I have recruited.",
    "How many times I have chatted with prisoners.",
    "The number of animals I have tamed.",
    "The number of animals I have slaughtered.",
    "The number of meals I have cooked.",
    "The number of things I have constructed.",
    "The number of things I have installed.",
    "The number of things I have repaired.",
    "The number of things I have crafted.",
    "The number of things I have hauled.",
    "The number of plants I have sown.",
    "The number of plants I have harvested.",
    "The number of cells I have mined out.",
    "The number of messes I have cleaned up.",
    "The number of research points I have researched.",
    "The number of corpses I have buried.",
    "The amount of nutrition I have eaten.",
    "The number of bodies I have stripped.",
    "The number of things I have uninstalled.",
    "The number of things I have deconstructed.",
    "The number of artifacts I have activated.",
    "The number of containers I have opened.",
    "The number of switches I have flicked.",
    "Total time spent loyal to your community.",
    "Total time spent hosted by your community through a quest.",
    "Total time spent as a prisoner.",
    "Total time spent in bed.",
    "Total time spent in bed for medical reasons: awaiting treatment, recovering from injuries or being operated on.",
    "Total time spent downed.",
    "Total time spent on finding food and eating.",
    "Total time spent on entertainment.",
    "Total time spent under a roof.",
    "Total time spent drafted.",
    "Total time spent on fire.",
    "Total time spent in an abnormal mental state.",
    "Total time spent hauling things.",
    "Total time spent handling animals.",
    "Total time spent firefighting.",
    "Total time spent wardening.",
    "Total time spent hunting.",
    "Total time spent constructing and deconstructing buildings.",
    "Total time spent treating and feeding patients.",
    "Total time spent researching.",
    "Total time spent cleaning.",
    "Total time spent repairing.",
    "Total time spent mining.",
    "Total time spent sowing, harvesting and cutting plants.",
    "Allow the dead bodies of colonists.",
    "Allow the dead bodies of strangers and enemies.",
    "Allow large, dead bodies.",
    "Allow organic things which have started to rot.",
    "Allow organic things which haven't started to rot yet.",
    "Allow foods that are of quality equivalent to unharvested plants, like hay.",
    "Allow clothing that was never worn by a corpse. Most humans find corpse-tainted clothing to be disturbing, and traders will not accept it.",
    "Allow clothing that was once worn by a corpse. Most humans find corpse-tainted clothing to be disturbing, and traders will not accept it.",
    "Allow female individuals.",
    "Allow male individuals.",
    "Mood represents how happy or stressed someone is. If mood gets too low, the person may suffer a mental break. Depending on how low their mood is, someone who has a mental break may have a minor breaks like hiding in their room for a day, or a major break like going on a murder spree.",
    "Food is the amount of nutrition a creature has consumed recently. If it is at zero, a creature will become increasingly malnourished and eventually die.",
    "Sleep is how much time a creature has spent sleeping recently. If it is at zero, a creature will eventually fall asleep on the spot.",
    "Recreation is the need to have fun. Repeating the same kind of activity makes it less fun, so variety is necessary.",
    "Beauty reflects how visually pleasing a person has found their surroundings recently. Beautiful things like art improve beauty when viewed, while ugly things like filth and rough stone surfaces reduce it.",
    "Comfort is gained by sitting in or sleeping on comfortable furniture. It is acquired while laying in bed, sitting in a chair while working, or other times.",
    "Outdoors expresses the need not to be cooped up inside. It is harmed by long periods inside, especially underground. It improves when someone spends time under the sky, especially outdoors. It's not about the size of the rooms, but the need to be outside from time to time. Lack of outdoors time is a significant challenge for people who dwell in underground bases.",
    "Indoors expresses the need to be within walls and under a roof. It is harmed by spending time in outdoor areas or not under roofs. To raise this need past 50%, a person must be under an overhead mountain, not just a normal roof.",
    "Chemical expresses the desire to ingest drugs. When above a certain level it will create good mood, but when below a certain level it will create increasingly bad mood.",
    "Nutrient paste is disgusting.",
    "I had to eat a disgusting, tasteless meal. I know it keeps you alive, but nobody wants to swallow that glop.",
    "Humanleather apparel",
    "The sight of a dead person is horrible.",
    "Insect meat is disgusting to even look at, much less eat. Slimy!",
    "Physical intimacy is a natural part of life, with any partner, married or not.",
    "Most couples share the man's name.",
    "Men may have one spouse only.",
    "Women may have one spouse only.",
    "Butcher a creature to obtain its meat, leather, and other body products.",
    "Shred a dead mechanoid to try to salvage usable material.",
    "Smash a dead mechanoid with simple hand tools to salvage usable material.",
    "Cremate a corpse to completely destroy it.",
    "Burn unwanted apparel to completely destroy it.",
    "Burn unwanted weapon to completely destroy it.",
    "Burn unwanted drugs to completely destroy them.",
    "Make animal kibble by combining raw meat and plants.",
    "Make pemmican, a preserved combination of meat and plant food. It doesn't taste amazing, but lasts a long time without refrigeration.",
    "Make bulk pemmican, a preserved combination of meat and plant food. It doesn't taste amazing, but lasts a long time without refrigeration.",
    "Cook a straightforward meal from one ingredient.",
    "Cook 4 straightforward meals from one ingredient.",
    "Cook a somewhat complex meal from a combination of meat and plant ingredients.",
    "Cook a somewhat complex meal from plant ingredients.",
    "Cook a somewhat complex meal from meat ingredients.",
    "Cook 4 somewhat complex meals from a combination of meat and plant ingredients. Some of the ingredients are wasted in order to create a good eating experience.",
    "Cook 4 somewhat complex meals from meat ingredients. Some of the ingredients are wasted in order to create a good eating experience. Producing varied flavors with meat alone introduces extra inefficiencies.",
    "Cook 4 somewhat complex meals from plant ingredients. Some of the ingredients are wasted in order to create a good eating experience. Producing varied flavors with plants alone introduces extra inefficiencies.",
    "Cook a very complex meal from a combination of meat and plant ingredients. Much of the ingredients are wasted in order to create the best eating experience.",
    "Cook a very complex meal from meat ingredients. Much of the ingredients are wasted in order to create the best eating experience. Producing varied flavors with meat alone introduces extra inefficiencies.",
    "Cook a very complex meal from plant ingredients. Much of the ingredients are wasted in order to create the best eating experience. Producing varied flavors with plants alone introduces extra inefficiencies.",
    "Cook 4 very complex meals from a combination of meat and plant ingredients. Much of the ingredients are wasted in order to create the best eating experience.",
    "Cook 4 very complex meals from plant ingredients. Much of the ingredients are wasted in order to create the best eating experience. Producing varied flavors with plants alone introduces extra inefficiencies.",
    "Cook 4 very complex meals from meat ingredients. Much of the ingredients are wasted in order to create the best eating experience. Producing varied flavors with meat alone introduces extra inefficiencies.",
    "Prepare a packaged survival meal from a combination of meat and plant ingredients. Much of the ingredients are wasted in the preservation process.",
    "Prepare 4 packaged survival meals from a combination of meat and plant ingredients. Much of the ingredients are wasted in the preservation process.",
    "Cut rock chunks into usable stone blocks.",
    "Use heat and strong electromagnets to extract useful metal from slag chunks.",
    "Use heat and strong electromagnets to break down weapons into useful resources.",
    "Use heat and strong electromagnets to break down metallic apparel like armor into useful resources.",
    "Use heat to destroy unwanted weapons. This process is faster than smelting, and works on non-smeltable items, but yields no resources.",
    "Use heat to destroy unwanted apparels. This process is faster than smelting, and works on non-smeltable items, but yields no resources.",
    "Make a batch of chemfuel by extracting and condensing wood gas from logs.",
    "Make a batch of chemfuel by extracting biofuel from organic feedstocks.",
    "Make a component.",
    "Make an advanced component.",
    "Combine various types of leather to create weak patchleather.",
    "Render a creature unconscious by administering general anesthetic.",
    "Euthanize a creature by cutting.",
    "Remove a body part.",
    "Prepare psychoid leaves into a mildly euphoria-inducing and addictive tea at the campfire or cooking stove.",
    "Sow the local biome's natural trees in your fields.",
    "Build a brewery and fermenting vats to transform hops into tasty, tasty beer.",
    "Build complex furniture like beds, end tables, dining chairs, armchairs, dressers, tool cabinets, billiard tables, and poker tables, vents, sarcophagi, and more.",
    "Make passive coolers, to cool indoor spaces without using electricity.",
    "Cut rock chunks into stone blocks for use in construction. Build beautiful stone tile floors or ugly concrete walkways.",
    "Tailor complicated garments like pants, dusters, and cowboy hats.",
    "Build a drug lab for basic drug synthesis. Further research is required to make specific drugs.",
    "Sow cocoa trees to create your own delicious chocolate. Eating chocolate fulfills the need for recreation, and it's valuable on the market too.",
    "Plant devilstrand, a slow-growing mushroom that yields an exceptionally tough, heat-resistant plant fiber.",
    "Weave beautiful carpets from cloth.",
    "Make pemmican, a preserved mixture of meat and plant matter that doesn't go bad for a long time. Great for traveling.",
    "Build smithies for crafting metal weapons like knives, gladii, and maces. Work metal into clean, beautiful floor tiles.",
    "Build the recurve bow, an effective and inexpensive ranged weapon.",
    "Refine psychoid leaves into flake and yayo, different forms of the euphoric psychite drug.",
    "Synthesize wake-up, a work performance-enhancing drug which replaces the need for sleep.",
    "Produce go-juice, a synthetic combat-performance-enhancing drug which improves shooting, melee, and movement ability, and dulls pain.",
    "Produce penoxycyline, a disease prevention drug which blocks plague, malaria, and more before they start.",
    "Craft longswords and spears.",
    "Smith suits of plate armor from metal or wood. This heavy armor noticeably slows movement, but protects very effectively.",
    "Craft greatbows for killing enemies at great range.",
    "Harness the power of electricity for a hundred different tasks.",
    "Build batteries for storing electricity.",
    "Build biofuel refineries to make chemfuel from biological matter like wood or foodstuffs.",
    "Build watermill generators on rivers to generate a steady supply of power.",
    "Build nutrient paste dispensers which efficiently produce edible meals from raw nutritive feedstocks, while requiring no labor at all.",
    "Build solar panels for electricity generation.",
    "Build coolers to make people comfortable in hot weather, or to construct freezers for storing perishable goods.",
    "Build autodoors which automatically open when someone approaches, without slowing anyone down.",
    "Build hydroponics basins to rapidly grow crops indoors regardless of the terrain or weather outside.",
    "Produce tube televisions for recreational watching.",
    "Produce packaged survival meals which never go bad. Great for traveling.",
    "Construct firefoam poppers, automatic fire-safety devices which spread fire-retardant foam in response to encroaching flames.",
    "Build improvised traps from any kind of mortar shell.",
    "Build geothermal power plants on top of steam geysers, for uninterrupted power.",
    "Construct sterile tiles to make cleanrooms for safer and more effective medical treatment, research, and cooking.",
    "Change the color of standard electric lamps, and reduce their power consumption by half. This does not affect sun lamps.",
    "Build machining tables to craft guns, grenades, flak armor, and to shred dead mechanoids for resources.",
    "Build smokepop packs which allow the wearer to deploy a defensive smokescreen.",
    "Build inexpensive prosthetic body parts to replace lost limbs. Requires a skilled doctor to attach.",
    "Craft simple manually-operated guns like revolvers, pump shotguns, bolt-action rifles, and incendiary launchers.",
    "Craft clothing with metal armor sewn in to resist bullets and explosions. This weighty armor slows movement slightly.",
    "Build mortars which can lob shells long distances - even over walls.",
    "Craft low-power blowback-operated guns like autopistols and machine pistols.",
    "Craft high-power guns like chain shotguns, LMGs, and heavy SMGs.",
    "Produce simple automated gun turrets.",
    "Produce a turret which can be activated to spray fire-extinguishing foam.",
    "Work with complex microelectronics. This unlocks the hi-tech research bench and comms console.",
    "Produce high-resolution flatscreen televisions for greater enjoyment.",
    "Construct moisture pumps, which very slowly normalize the moisture in the ground around them. They can turn wet ground dry and convert soft sand into normal sand.",
    "Construct hospital beds which improve medical outcomes.",
    "Build deep drills for extracting resources from underground. You'll need a ground-penetrating scanner to find the resources.",
    "Build ground-penetrating scanners that can detect drillable resources under the surface. Requires an advanced component to construct.",
    "Construct launchable transport pods that you can use to send people and supplies long distances across the planet's surface. Can be used for raiding, travel, sending gifts, and more.",
    "Produce standard industrial-tech medicine by combining herbal medicine, neutroamine, and cloth.",
    "Construct long-range mineral scanners your researchers can use to detect precious minerals across the planet. Can be tuned to find a specific mineral. Requires advanced components to construct.",
    "Build wearable shield gear. Shields use momentum-repulsion technology to prevent projectiles from traversing the field boundary.",
    "Craft precisely-machined guns like assault rifles and sniper rifles.",
    "Produce the heavy autocannon turret.",
    "Assemble miniguns.",
    "Build multi-analyzers which increase research speed and allow higher-level research projects.",
    "Build vitals monitors which improve medical outcomes when placed next to hospital beds.",
    "Build fabrication benches, capable of high-tech projects ranging from component assembly to power armor construction.",
    "Fabricate advanced components from standard components and other materials.",
    "Construct cryptosleep caskets, which can put living beings in a state of indefinite suspended animation.",
    "Craft recon armor, a light powered armor suit used by scout troops who need protection on the move. Note that these also require advanced components.",
    "Build marine armor, a general-use powered armor suit used by high-tech shock troops. Note that these also require advanced components.",
    "Build weapons which fire pulse-charged munitions for extra damage. Note that these also require advanced components.",
    "Build high-tech bionic body parts to replace lost limbs and eyes. Requires a skilled doctor to attach.",
    "Produce the armor-penetrating uranium slug turret. It fires uranium slugs which tear through plasteel like paper, but it's less effective at close range.",
    "Produce rocketswarm launchers, single-burst turrets which can devastate a wide area at a key moment in battle.",
    "Construct the structural and supportive elements of a starship. This is the first step in building a ship to leave this star system.",
    "Construct hardened cryptosleep caskets tough enough to be exposed to vacuum, for transporting people on the years-long journey between stars.",
    "Build a long-duration nuclear reactor to power a starship. Note that reactors have a long startup process that will attract raiders.",
    "Construct a Johnson-Tanaka drive for a ship. The JT drive can push you to other stars by leveraging quantum scale effects to beam momentum to distant stars. Of course, as with all starships, it still takes many years to get anywhere.",
    "Build a reward-signal system to persuade an existing persona core into serving as a ship's machine captain. Since people sleep during interstellar travel, a persona core is necessary to handle the complex decisions of a years-long starflight.",
    "Construct long-range sensors for a starship. These sensors are essential for navigation, communication, and threat avoidance.",
    "Depending on ritual quality, participants will get between {MINMOOD} and {MAXMOOD} mood for {MOODDAYS} days.",
    "The three of you awake in your cryptosleep sarcophagi to the sound of sirens and ripping metal. You barely get to the escape pods before the ship is torn apart. Some time later, you land on this unknown rimworld.",
    "Your tribe was destroyed by the great blood machines sent by the gods. Five of you managed to escape. Now, it's time to build up a new home.\\n\\nNote: Since you'll start poor and lack technology, this is a difficult scenario.",
    "People called you crazy for leaving your glitterworld home, but you always yearned to explore the stars - outside the neurosimulator. Now you're at the end of your long journey in cryptosleep, landing on an unknown rimworld to see what it's like.\\n\\nNote: Since your starting character will lack some skills, this is an especially difficult scenario in the early game.",
    "You went under anesthetic for a minor surgery. Now you've awoken in a drop pod crashing into a distant planet. You're naked, alone, and totally unprepared. Can you survive?\\n\\nWarning: There is nothing fair about this scenario - it is extremely difficult and death can happen for any reason.",
    "Cannot sow plants on the ground.",
    "Cannot mine.",
    "Cannot hunt.",
    "Cannot tame animals.",
    "A location in the world which contains nothing special.",
    "An ambush.",
    "A bandit camp.",
    "A stranded, incapacitated refugee begging for help.",
    "A stash of valuable items.",
    "A pack of manhunting animals.",
    "A small, guarded outpost.",
    "A possible, unknown threat.",
    "A mineable lump of precious resources.",
    "A prisoner being held by enemies. Rescue them and they will join you.",
    "A group of sleeping mechanoids.",
    "A group of turrets.",
    "Ranged combat, with both high-tech and low-tech weapons.",
    "Melee combat, both armed and unarmed.",
    "Constructing and deconstructing structures and furniture.",
    "Digging tunnels and extracting buried resources.",
    "Creating meals from raw ingredients quickly and without accidental food poisoning.",
    "Sowing, caring for and harvesting crops, and foraging for food while traveling.",
    "Taming, training, and controlling animals.",
    "Crafting general items including weapons, components, and refined resources.",
    "Crafting art.",
    "Tending wounds and diseases and performing surgery.",
    "Negotiating, convincing, manipulating, leading, and cheering up others.",
    "Researching and drug synthesis.",
    "The minimum psylink level required to use this ability.",
    "How long it takes to perform this ability.",
    "How much neural heat will be added as a result of performing this ability.",
    "How much psyfocus must be spent to perform this ability.",
    "The maximum distance to a target of this ability, or to the center of the target location.",
    "How long the effects of this ability last.",
    "The radius of the area of effect of this ability.",
    "How casting this ability on someone will impact relations with their faction.",
    "The likelihood of this psychic power being detected when it is used.\\n\\nSome factions try to enforce laws which restrict some powers to those holding specific titles. When you use a power, there is a chance that the psychic signature will be detected at a distance, which leads to diplomatic consequences.",
    "The protection given against sharp damage like bullets, knife stabs, explosions, and animal bites.\r\n\r\nUpon taking damage, first this armor rating is reduced by the attack's armor penetration value.\r\n\r\nThe remaining armor rating is then compared against a random number from 0 to 100.\r\n\r\n    - If the random number is under half the armor rating, the damage deflects harmlessly.\r\n    - If the random number is over half the armor rating, but not higher than the armor rating, the damage is reduced by half and changed to blunt.\r\n    - If the random number is greater than the armor rating, the armor has no effect.\r\n\r\nFor example, at 90% armor rating against an attack with 10% armor penetration, there is a 40% chance of deflecting the attack harmlessly, and a 40% chance of mitigating the damage.\r\n\r\nEach layer of armor is applied separately, from the outside in.",
    "The protection given against blunt damage like fists, club impacts and rock falls.\r\n\r\nUpon taking damage, first this armor rating is reduced by the attack's armor penetration value.\r\n\r\nThe remaining armor rating is then compared against a random number from 0 to 100.\r\n\r\n    - If the random number is under half the armor rating, the damage deflects harmlessly.\r\n    - If the random number is over half the armor rating, but not higher than the armor rating, the damage is reduced by half and changed to blunt.\r\n    - If the random number is greater than the armor rating, the armor has no effect.\r\n\r\nFor example, at 90% armor rating against an attack with 10% armor penetration, there is a 40% chance of deflecting the attack harmlessly, and a 40% chance of mitigating the damage.\r\n\r\nEach layer of armor is applied separately, from the outside in.",
    "The protection given against temperature-related damage like burns.\r\n\r\nUpon taking damage, first this armor rating is reduced by the attack's armor penetration value.\r\n\r\nThe remaining armor rating is then compared against a random number from 0 to 100.\r\n\r\n    - If the random number is under half the armor rating, the damage deflects harmlessly.\r\n    - If the random number is over half the armor rating, but not higher than the armor rating, the damage is reduced by half and changed to blunt.\r\n    - If the random number is greater than the armor rating, the armor has no effect.\r\n\r\nFor example, at 90% armor rating against an attack with 10% armor penetration, there is a 40% chance of deflecting the attack harmlessly, and a 40% chance of mitigating the damage.\r\n\r\nEach layer of armor is applied separately, from the outside in.",
    "How much this apparel improves a wearer's minimum comfortable temperature.\\n\\nGreater values allow surviving in colder temperatures.",
    "How much this apparel improves a wearer's maximum comfortable temperature.\\n\\nGreater values allow surviving in warmer temperatures.",
    "The maximum energy a shield can have at one time.\\n\\nMore energy absorbs more damage.",
    "The rate at which a shield gains energy as long as it is not broken.",
    "The area obscured when a smokepop pack detonates.",
    "The time it takes to equip and unequip this item.",
    "The maximum hit points of an object.\\n\\nThis represents how much damage it can take before being destroyed.",
    "The physical mass of an object.",
    "The market value of an object.\\n\\nThe actual trade price will be adjusted by negotiation skill, relationship status, and other contextual factors.",
    "A multiplier on the price at which you can sell items.",
    "The amount of honor your trader will earn for giving this to a tribute collector.",
    "How easily an object catches fire and how quickly a fire will grow as it burns.",
    "The base amount of work it takes to make an item, once all materials are gathered.",
    "The rate at which this item deteriorates when left outside, in average hit points per day.\\n\\nDeterioration rate is also affected by things like weather, roofs, toxic fallout, or being left in shallow water.",
    "How enjoyable an object is to look at.\\n\\nBeautiful objects fulfill characters' need for beauty.",
    "How enjoyable something is to look at if it's outside.\\n\\nBeautiful objects fulfill peoples' need for beauty.",
    "How much an object contributes to an area's cleanliness score.",
    "How comfortable an object is to sit or lay on.\\n\\nUsing comfortable objects fulfills a character's need for comfort.",
    "How nutritious this food is.",
    "The chance this food will cause food poisoning.",
    "Base chance to not miss per cell of shot distance.\\n\\nChance to hit is also affected by many other factors. A hit chance explanation for any shot can be seen by selecting a shooter and mousing over a target.",
    "How effective this is when used to tend wounds and diseases, or do surgery.\\n\\nHigher medical potency improves the quality of tending, and acts as a multiplier on the chance of success during surgery.\\nMedical potency is just one factor in medical outcomes, among many others, including doctor ability, equipment, cleanliness, and luck.",
    "The maximum quality of medical tending that can be achieved while using this.\\n\\nBetter tend quality allows skilled doctors to treat wounds better, as well as more reliably.",
    "The speed at which buildings made of this are constructed is multiplied by this value.\\n\\nSome materials, like stone, are slow to build from, while others, like wood, are fast.",
    "The amount of extra psyfocus someone gains by focusing on this object during meditation, in addition to their own base rate of meditation psyfocus gain.\\n\\nFor some objects, this number can change depending on the surroundings and the person doing the meditating.",
    "An offset applied to the user's psychic sensitivity.",
    "How susceptible this surface is to filth. If this is less than 100%, some of the filth deposited here will disappear on contact.",
    "A multiplier on how long it takes to clean filth from this surface.",
    "The base amount of work it takes to build a structure, once all materials are gathered.\\n\\nThe work required to deconstruct the structure is also based on this.",
    "The speed at which the door opens when unpowered.\\n\\nSlow doors will slow down everyone who uses them.",
    "How fast people sleeping on this gain rest.",
    "How much damage this trap does on average.\\n\\nThe actual damage in any instance will vary randomly.",
    "The likelihood that the trap will spring when an unaware creature passes over it.",
    "The speed at which people do research is multiplied by this value.",
    "Medical tend quality is offset by this value.",
    "Immunity gain speed is multiplied by this value.",
    "Work speed is multiplied by this value.",
    "Work efficiency is multiplied by this value.",
    "How effectively this item entertains people and fulfills the need for recreation.",
    "A multiplier to the chance that a surgery will succeed when performed here.\\n\\nSurgery success chances are also affected by many other factors, including the surgeon's ability and medicine used.",
    "Average damage per second in melee combat.\\n\\nThis stat ignores target defenses like dodging and armor.",
    "Average armor penetration of all attacks in melee combat.\\n\\nThis stat includes currently used weapon.",
    "Chance to hit a target in melee.\\n\\nThe target can still dodge even if we would've hit.",
    "Chance to dodge a melee attack that would've otherwise hit.\\n\\nCharacters will not dodge while aiming or firing a ranged weapon.",
    "Base chance to not miss per cell of shot distance.\\n\\nChance to hit is also affected by many other factors.\\n\\nA hit chance explanation for any shot can be seen by selecting a shooter and mousing over a target.",
    "A multiplier on accuracy at a distance of 3 cells or less.",
    "A multiplier on accuracy at a distance of 12 cells.",
    "A multiplier on accuracy at a distance of 25 cells.",
    "A multiplier on accuracy at a distance of 40 cells or more.",
    "How long it takes to shoot after choosing a target.",
    "A multiplier on the miss radius of a mortar used by this person. Smaller numbers means more accurate mortar shells.",
    "Chance to spring a trap the character is unaware of.",
    "A multiplier on all incoming damage.",
    "Speed of movement in cells per second.",
    "As long as someone's mood is below this level, they are in danger of having a mental break.\\n\\nThe severity of the mental break will depend on how far below the threshold they are.",
    "More sensitive people suffer more from negative psychic effects, and benefit more from positive ones. Higher psychic sensitivity also increases neural heat limit.",
    "How well this creature resists toxic buildup.",
    "A multiplier on the learning rate for all skills.",
    "A multiplier on how quickly a creature rests while sleeping.",
    "A multiplier on eating speed.",
    "Below this temperature, characters will be unhappy.\\n\\nSignificantly below this temperature, they will develop hypothermia and frostbite and eventually die.",
    "Above this temperature, characters will be unhappy.\\n\\nSignificantly above this temperature, they will develop heatstroke and eventually die.",
    "The speed at which this character gains immunity to diseases.\\n\\nIf this is too slow, the character will die from a disease before developing immunity.",
    "The multiplier applied to a person's injury healing rate.",
    "The amount of stuff this creature can carry in its hands, mouth, or other manipulators.\\n\\nThis is separate from the ability to carry cargo on long cross-world trips.",
    "The amount of meat yielded when butchering this creature. This value is reduced if the creature is not slaughtered cleanly, or if it is wounded when killed.",
    "The amount of leather yielded when butchering this creature. This value is reduced if the creature is not slaughtered cleanly, or if it is wounded when killed.",
    "This creature cannot be tamed, trained, or commanded by anyone with less than this skill in animals.",
    "The pain level at which this creature is downed from pain.",
    "The amount of nutrition this person will automatically forage per day while traveling by caravan.",
    "How much filth this creature produces.\\n\\nIt's best to keep filth-producing animals outdoors or on straw matting where their filth won't be a problem.",
    "A multiplier on the learning rate for animals skill.",
    "The multiplier applied to a person's movement speed when they ride this animal as part of a caravan. Animals can only be ridden in caravans.",
    "The amount of nutrition needed to completely fill this creature's stomach.",
    "Lifespan factor alters the effective lifespan of a creature by shortening or lengthening the time until they develop age-related diseases. A lifespan factor over 100% delays disease onset and increases overall lifespan, while a lifespan factor under 100% speeds up disease onset and reduces lifespan.",
    "The amount of psyfocus a person gains per day of meditation, ignoring bonuses from focus objects.",
    "The maximum amount of neural heat individual can tolerate safely.",
    "The rate at which this person reduces neural heat.",
    "How resistant this creature is to the effects of environmental toxins. This protects against toxic fallout and rot stink exposure, but not against direct attacks with venom or injected poison.",
    "A multiplier on the speed that a person's sleep need falls.",
    "How effective this person is as a negotiator.\\n\\nThis affects the speed of prisoner recruitment, impact on faction relations when giving gifts, and the outcome of peace talks.",
    "How physically attractive this person is. This affects social interactions.",
    "How effective this person is in arresting people. This affects chance that this person will be able to arrest someone without resistance.",
    "When this person acts as a trade negotiator, buy and sell prices are improved by this percentage.",
    "When this person sells non-medical drugs, prices are improved by this percentage.",
    "A multiplier on how much other people are affected by this person's social interactions.",
    "The base chance this person will successfully tame an animal on any given attempt.\\n\\nThe actual chance is also affected by the animal's wildness.\\nFailed tame attempt can induce animal attacks, especially for more vicious animals.",
    "The base chance this person will make progress training an animal on a given attempt.\\n\\nThe actual chance for a given attempt will also depend on the animal's wildness, whether it is bonded with the trainer, and so on.",
    "A multiplier on the chance to bond with an animal when interacting with it.",
    "A multiplier on a character's speed at doing any kind of work.",
    "A speed at which this person mines away walls.",
    "A speed at which this person uses a deep drill to extract underground resources.",
    "The percentage of mined resources a miner will produce.\\n\\nThis applies to both wall mining and deep drill mining.\\nThis doesn't affect the production rate of rock chunks from deep drills.",
    "A multiplier on the speed at which this person smooths rough stone floors and walls.",
    "How fast this person performs research and how quickly they can find things using scanning equipment.",
    "The speed at which this person milks, shears, and otherwise gathers resources from animals.",
    "The percentage yield someone receives when they shear, milk, or otherwise gather resources from a living animal.\\n\\nHigher percentages reduce the chance of wasting the product.",
    "The speed at which this person sows and harvests plants.",
    "The yield this person gets when harvesting plants.\\n\\nLow yields give a chance that this person will accidentally waste the harvest.",
    "The yield this person gets when harvesting drug crops.\\n\\nLow yields give a chance that this person will accidentally waste the harvest. High yields increase the yield from each plant.",
    "This stat reduces the chance of hunted animals attacking the hunter.\\n\\nA 0% score means no reduction.\\nA 100% score means animals never attack.",
    "The speed at which this person constructs and repairs buildings.",
    "The chance that this person will succeed in constructing something.\\nFailing means wasting time and resources.",
    "The chance that this person will successfully repair a broken down building using a component.\\n\\nFailing means wasting time and resources.\\nNote that this only applies to repairing breakdowns, which is different from repairing damage.",
    "A multiplier on how fast this cleans up filth from the ground.",
    "Speed at which the character tends to wounds and illnesses.",
    "The base quality of tending given when tending wounds and illnesses.\\n\\nThe actual tend quality will also be affected by factors like medicine used, facilities, luck, and so on.",
    "The speed at which the character performs medical operations.",
    "The base chance that a character will succeed when performing a medical operation.\\n\\nThe actual success chance is also affected by factors like facilities, room cleanliness, medicine used, the difficulty of the surgery, and inspirations.\\n\\nNo matter how high this stat is, there is always a small chance of failure on any operation.",
    "The speed at which this person smelts things.\\n\\nSince smelting is dumb labor, smelting speed is not affected by any skill.",
    "The speed at which this person carries out general labor like making stone blocks, making chemfuel at a refinery, burning items, tailoring clothes, creating art, smithing armor and weapons or smelting slag. This stat applies both to activities that involve no skill, as well as those where the skill affects the quality of the product instead of the speed of production.",
    "How fast this character synthesizes complex chemical drugs.",
    "The speed at which this person cooks meals.",
    "The probability that this character will inadvertently poison a meal they cook.\\n\\nAnyone who eats a food-poisoned meal will be temporarily debilitated with pain, weakness, and vomiting.",
    "The speed at which this person brews beer and tea, or makes simple drug products like smokeleaf joints.",
    "The speed at which this person butchers flesh creatures.",
    "The speed at which this person can shred a mechanoid for resources.",
    "The amount of meat produced when butchering flesh creatures.\\n\\nThe actual amount is also related to the creature's size.",
    "The amount of materials yielded when this person shreds a dead mechanoid for resources.\\n\\nThe actual amount is also related to the mechanoid's size.",
    "Armor against sharp damage like bullets, knife stabs, and animal bites.",
    "Armor against blunt damage like club impacts, rock falls, and explosions.",
    "Armor against temperature-related damage like burns.",
    "How much an apparel made of this material improves a wearer's minimum comfortable temperature when worn.",
    "How much an apparel made of this material improves a wearer's maximum comfortable temperature when worn.",
    "Average damage dealt per second in melee combat, if all attacks hit.",
    "Average armor penetration in melee combat.",
    "A damage multiplier applied to melee combat.",
    "A multiplier on attack delay for weapons made of this material.",
    "A multiplier on damage from sharp-type attacks for weapons made of this material.",
    "A multiplier on damage from blunt-type attacks for weapons made of this material.",
    "The weapon's accuracy at a distance of 3 cells or less.\\n\\nAn actual shot's chance to hit will also be affected by other factors.",
    "The weapon's accuracy at a distance of 12 cells.\\n\\nAn actual shot's chance to hit will also be affected by other factors.",
    "The weapon's accuracy at a distance of 25 cells.\\n\\nAn actual shot's chance to hit will also be affected by other factors.",
    "The weapon's accuracy at a distance of 40 cells or more.\\n\\nAn actual shot's chance to hit will also be affected by other factors.",
    "How long it takes to recover after firing this weapon.",
    "A damage multiplier applied to projectiles fired from this weapon.",
    "An ongoing ambush battle.",
    "Cassandra creates story events on a classic increasing curve of challenge and tension. She'll push you with dangerous events, then give breathing room, then come back to push once more.",
    "Phoebe gives lots of time between disasters to build your colony. But beware - at high difficulties, she'll hit as hard as anyone.",
    "Randy doesn't follow rules. He'll generate random events, and he doesn't care if they make a story of triumph or utter hopelessness. It's all drama to him.\\n\\nWarning: Since Randy is truly random, he will sometimes send extremely difficult or unfair groups of events at you. It makes for high drama - and unavoidable sacrifices.",
    "Rough straw matting for use in animal barns. It is cheap and accepts very little filth.",
    "Rough concrete. It is cheap and quick to build, but is also quite ugly.",
    "Concrete tiles. Cheap, but neutral in terms of looks and slow to build.",
    "Wood plank flooring for that warm, homey feeling. While it is quick to lay, it is also very flammable.",
    "Steel tiles, for that spaceship look. They are quick to clean and get a bonus to cleanliness for use in medical settings.",
    "For a futuristic but royal look, silver tiles fit perfectly into luxurious rooms. They are quick to clean and get a bonus to cleanliness.",
    "For overbearing extravagance, nothing beats gold tiles. They are exceptionally expensive, and exceptionally beautiful, and people will think you're exceptionally snobbish if you actually live on them.",
    "Sterile tiles with special cleanliness-enhancing properties. Extra-clean rooms improve outcomes in hospitals and research labs. This tile is very slow to build, but quick to clean.",
    "Soft carpet made from fibers dyed a single color. It's welcoming, cozy, and boosts the beauty of the room it's in. It's also quite flammable, and cleaning it is a laborious process.",
    "Burned-out wood plank flooring.",
    "Burned-out carpet.",
    "Straw matting that has been burned in a fire.",
    "Carefully-cut and fit stone tiles for a castle feeling. They are pretty to look at, but they take a long time to lay.",
    "Roughly-cut stone tiles. These are not beautiful, but they make good surfaces for roads and outdoor walkways. Deconstructing flagstone yields no resources.",
    "A flat wooden surface on supportive beams which can be built over water. You can build light structures on bridges, but be careful - bridges are fragile. If a bridge falls, buildings on top of it fall as well.",
    "A traffic management solution from long ago.",
    "Road lighting from long ago. No longer functional.",
    "An ancient-style decorative container.",
    "A single-use pod for preserving one person in a state of suspended animation. Unlike cryptosleep caskets, cryptosleep pods can only be used once.",
    "An ancient self-powered lamp. Its internal power supply is badly depleted, but it still emits a weak glow.",
    "A torso-sized piece of material sculpted into an artistic form.",
    "A person-sized piece of material sculpted into an artistic form.",
    "A huge sculpture sized to dominate a room.",
    "A set of large snowballs piled and shaped to resemble a person. People make these for the fun of it.",
    "An ancient ship part, torn off of a craft of unknown origin. It might be thousands of years old.\\n\\nThis one contains a psychic disturbance device. Using incomprehensible archotechnologies, it generates a psychic signal that drives people and animals mad within a wide radius around itself.",
    "An ancient ship part, torn off of a craft of unknown origin. It might be thousands of years old.\\n\\nThis one contains a device which annihilates plant life near itself without directly affecting flesh creatures. These kinds of weapons are sometimes scattered across farmlands or forests to remove the enemy's food supply and hiding places without permanently ruining the territory. They're usually associated with orbital-drop mechanoid armies.",
    "A chunk of a spacecraft. It seems to have been torn off either by uncontrolled re-entry forces or some kind of weapon.\\n\\nHaving landed not long ago, it still contains useful resources which you can acquire by deconstructing it.",
    "A spacer-tech shuttle designed for transit between surface and orbit, or between moons of a planetary system.",
    "A psychic droner tuned to the {0} gender is driving {0}s mad.",
    "Designates a spot on the ground where people should sleep. Not comfortable.",
    "Designates a spot on the ground where two people should sleep together. Not comfortable.",
    "A cozy mattress and sheets on a frame for resting.",
    "A simple double-wide bed that fits two people.",
    "A luxurious gold-inlaid bed fit for the highborn. Very comfy and beautiful, it is a work of art in itself. Fits two.",
    "A bed specially designed for use in hospitals. Adjustable for a patient and festooned with built-in equipment, it improves medical outcomes over normal beds.",
    "A simple bed that lays on the floor, usually made of cloth or leather, often lined with fur. It is lightweight and can be rolled up for easy transport, but it is not quite as comfortable as a typical bed. Caravans can use bedrolls while traveling for better sleep.",
    "A simple double-wide bed that lays on the floor, usually made of cloth or leather, often lined with fur. It is lightweight and can be rolled up for easy transport, but it is not quite as comfortable as a typical bed. Caravans can use bedrolls while traveling for better sleep.",
    "Designates a spot on the ground where animals should sleep.",
    "A small box for animals to sleep in. Fits smaller animals like chickens, cats, or small dogs.",
    "A soft bed for animals to sleep on. Fits any animal.",
    "A simple platform on which to sit. Not very comfortable, but much better than nothing. Can be used at tables, work stations, and elsewhere.",
    "A comfortable and attractive chair. Can be used at tables, work stations, and elsewhere.",
    "A large, soft, comfy seat. Great for relaxation. Can be used at tables, work stations, and elsewhere.",
    "People eat off tables when chairs are placed facing them.",
    "A small bedside table which makes nearby beds a little bit more comfortable. Must be placed directly adjacent to the head of the bed. Placing more than one end table near the same bed has no effect.",
    "Plant decorative flowers here to improve the mood of people nearby.",
    "A wooden torch for lighting an area. People need light to move and work at full speed. Can be automatically refueled with wood. Produces a small amount of heat.",
    "An electrical standing lamp that lights an area. People need light to move and work at full speed.",
    "An industrial lamp which lights an area brightly enough to grow crops, but consumes a huge amount of power. Automatically turns itself off at night.",
    "A triple-stack shelf that holds three times as much as empty ground. Items stored inside will never deteriorate and don't affect the beauty of their surroundings.\\n\\nSince shelf space is limited, shelves cannot hold chunks, buildings, plants and large corpses.",
    "A small triple-stack shelf that holds three times as much as empty ground. Items stored inside will never deteriorate and don't affect the beauty of their surroundings.\\n\\nSince shelf space is limited, shelves cannot hold chunks, buildings, plants and large corpses.",
    "A dresser. Gives a small comfort bonus to all nearby beds. Placing more than one dresser near the same bed has no effect.",
    "A simple ancient game played with a horseshoes and a large pin in the ground. Players toss horseshoes to try to get them to land on the pin. It's relaxing, and trains shooting skills.",
    "A simple ancient game played with stones and a large ring in the ground. Players try to toss stones through the ring from a distance. It's relaxing, and trains shooting skills.",
    "Dating from 2500BC, this exciting yet infuriating board game can be played by one or two people. It trains intellectual skills.",
    "The ancient game of kings. Fun for a few hours here and there, even playing alone. It trains intellectual skills.\\n\\nThis building requires adjacent chairs or stools to use.",
    "A table designed for playing gambling card games like poker. A great way to test your strategic skills and a bit of luck.\\n\\nThis building requires adjacent chairs or stools to use.",
    "A soft-topped bounded table for playing a variety of billiards-type games. It trains shooting ability.",
    "A cathode ray tube display for showing moving pictures with sound. Even on the rimworlds, there is often an old transmitter running something at least marginally interesting.",
    "A high-tech flat-screen television with crystal-clear image and rich color. Picks up transmissions from ancient satellites and ubiquitous data cards.",
    "A huge, high-tech television. Gigantic, hyper-vibrant images almost leap out of the screen. Very entertaining. Picks up transmissions from ancient satellites and ubiquitous data cards.",
    "A telescope for doing amateur astronomy. It's a relaxing hobby for a certain kind of person. Can only be used outdoors.",
    "A damaged mechanoid power generation unit. The cell has been destabilized by the death of the mechanoid, and is burning down in seconds. When critically damaged, this cell will explode.",
    "A box with soft material made to hold eggs. Egg-laying animals will lay eggs in egg boxes if they can. Your haulers will take all the eggs out only when the box is full, to save time. The box also protects eggs from deteriorating outdoors, though it does not protect from temperature damage.",
    "Required for orbital trading. You can only sell goods to orbital traders if they're near an orbital trade beacon. Can be placed indoors.",
    "Allows radio contact with other factions and orbital traders.",
    "When it detects fire, this safety device pops and sprays a fire-retardant foam in a circular field around itself. Can also be triggered manually.",
    "Very slowly equalizes moisture in nearby terrain, converting marshes or shallow water into dry ground, and soft sand into normal sand. Does not affect deep water.",
    "A sensor unit used by researchers to search for buried resources. The chance to find a resource depends on the operator's research ability. It consumes a lot of electricity. If you find a buried resource, you'll need to use deep drills to extract it. It doesn't work under a roof.",
    "A lateral sensor unit used by researchers to detect a specific type of mineral across the planet. The chance to find a resource depends on the operator's research ability. This sensor can be tuned to target a specific resource type. It consumes a lot of electricity. If you find a resource, you'll need to travel to collect it.",
    "A fueling port for launching one transport pod. Pod launchers can launch as a group - but the launchers must be placed adjacent to each other.",
    "A launchable sub-orbital cargo pod capable of carrying people, items, or animals. Can be used for sending gifts, transporting people or supplies, surprise attacks, or reinforcing battles.",
    "Increases research speed when placed near hi-tech research bench and unlocks new research projects. Each research bench can only use one multi-analyzer.",
    "Increases medical tend quality, surgery success chance, and immunity gain speed when placed directly adjacent to a hospital bed. Only works for hospital beds - normal beds will not benefit. Attaching more than one vitals monitor to the same bed will have no effect.",
    "Increases work speed when placed near a workbench. One workbench can use up to two tool cabinets.",
    "A decent final resting place. Colonists will visit full graves to gain meditative joy.",
    "An ornamented burial receptacle for the honored dead.",
    "A self-powered sarcophagus designed to keep a person in a state of suspended animation for many years.",
    "This cryptosleep casket looks like it has been here for a very long time. Who knows what it might contain?",
    "Designates a spot where marriage ceremonies will take place. Spectators can watch from either side.",
    "Designates a spot for throwing parties.",
    "Designates a spot for hitching animals and forming caravans. Colonists will hitch animals here while loading a caravan. You can also use these during encounters away from home to keep animals from wandering.",
    "A tall, thick slab with engravings on the sides. Steles have been used since ancient times to memorialize individuals, battles, and other important events.",
    "A towering slab with extensive engravings on the sides. Steles have been used since ancient times to memorialize individuals, battles, and other important events.",
    "A post with a sign designating an animal pen. It must be placed in an area enclosed by fences, barricades, walls, and doors. You can assign each pen marker a set of animals to accept, and handlers will bring animals to an appropriate pen.",
    "An unfinished musical instrument.",
    "Collapsed rocks, packed tightly enough to hold up a roof.",
    "The remains of some ancient, collapsed structure. Rich in steel.",
    "Rock containing bits of silver.",
    "Rock containing bits of gold.",
    "Rock containing bits of uranium.",
    "Ancient compacted rubble rich in plasteel.",
    "Rock containing bits of jade.",
    "Ancient machinery, compacted over time. Can be mined for useful components.",
    "A natural source of high-pressure steam. Geothermal generators can harness the steam power. Rooms built over this will rapidly cook.",
    "A hive of giant insects. If activated, it will spawn additional insects and hives over time, as well as valuable insect jelly.",
    "A bioluminescent pod produced by giant insects. Glows under its own light for a long time, then dies.",
    "A fragile wall made of rubble. It will collapse in time.",
    "A bundle of electrical cables for moving power around. Can be placed under walls and other buildings.",
    "Insulated electrical cables for transmitting power under shallow water.",
    "Switches power on/off.",
    "Produces power by consuming wood. Must be periodically loaded with wood fuel by hand.",
    "Produces power by consuming chemfuel. Must be periodically refueled by hand.",
    "A wind-powered electrical generator. Requires a large clear space in front and behind for optimal air flow.",
    "Stores electricity for later use. Charged batteries explode when exposed to rain or fire.",
    "Produces electricity from sunlight. Does not work in the dark or under artificial light.",
    "Produces electricity from geothermal steam geysers. Must be placed on a steam geyser.",
    "Produces electricity from a river. Must be placed with its wheel in moving water. If watermills are placed too close together, the turbulence they generate will interfere and reduce power generation.",
    "A place for crafting simple items like knives or bows. Production here is slow because of the lack of tools.",
    "A place for butchering animals. Due to the lack of equipment, butchering here yields only 70% of the meat and leather of each creature.",
    "A workbench equipped for creating art.",
    "A heavy table for butchering dead creatures into pieces of raw meat. Rotting or dessicated corpses cannot be butchered.",
    "A workbench for tailoring clothes by hand. Works at 50% of the speed of an electric tailoring bench.",
    "A workbench with a sewing machine for rapid tailoring of clothes. Can work without electricity at 50% of normal speed.",
    "A wood-fueled station for smithing non-mechanical weapons and tools.",
    "An electric-powered station for smithing non-mechanical weapons and tools.",
    "A work station for assembling machinery like guns and ammunition, or breaking down dead mechanoids.",
    "An electrically-powered stove with an attached countertop for preparing meals.",
    "A wood-fueled stove with an attached countertop for preparing meals.",
    "A work table with saws and chisels for cutting stone chunks into usable blocks.",
    "A work station with all the equipment needed to mix wort for beer production. Wort must be fermented to finally become beer.",
    "A work bench equipped with containers, heaters, and measurement devices for producing various drugs.",
    "Extracts usable metal from slag chunks and other mixed metal items. Consumes a lot of power.",
    "Refines biological matter like wood or plant matter into chemfuel.",
    "A workbench equipped with advanced tools for producing technological marvels from simpler materials.",
    "A simple bench with writing implements and simple measurement devices. Researchers work here to discover new things.",
    "A high-tech bench with computers and electronic measurement equipment. Allows more rapid research, and unlocks advanced research projects.",
    "A huge stone crematorium which vaporizes corpses with extremely high temperatures.",
    "An artificial nutrient bath for growing plants. The nutrients pumps must work continuously; the plants will die if power is cut.",
    "A barrel for fermenting raw wort into beer.",
    "A deep-crust drilling rig for extracting minerals from deep under the surface. Use a ground-penetrating scanner to detect the resources. This drill will yield stone chunks if no resources are present. Can be repositioned freely.",
    "A machine that synthesizes edible nutrient paste from organic feedstocks placed in adjacent hoppers. It consumes less ingredients and time than any other meal production method - but nobody likes eating nutrient paste. Accepts raw food, but not rough plant matter like hay.",
    "Holds resources for use by machines like nutrient paste dispensers.",
    "Bags of locally-sourced dirt or sand, stacked for use as cover. Sandbags are ugly, but provide better cover than other low objects.",
    "A waist-high barrier for use as cover from incoming shots. Barricades are ugly, but provide better cover than other low objects. Barricades will block certain kinds of animals the same way that fences do.",
    "Five spikes under tension, connected to a touch-activated trigger. When the victim disturbs the trigger, the spikes spring forth and strike the victim. Since it is hidden in the surrounding terrain, it cannot be placed adjacent to other traps. Animals can sense these when calm.",
    "A pair of high-explosive shells connected to a trigger which detonates on touch or bullet impact. Since it is hidden in the surrounding terrain, it cannot be placed adjacent to other traps. Animals can sense these when calm.",
    "A pair of incendiary shells connected to a trigger which detonates on touch or bullet impact. Since it is hidden in the surrounding terrain, it cannot be placed adjacent to other traps. Animals can sense these when calm.",
    "A pair of EMP shells connected to a trigger which detonates on touch or bullet impact. The explosion can paralyze mechanoids for a few seconds. Since it is hidden in the surrounding terrain, it cannot be placed adjacent to other traps. Animals can sense these when calm.",
    "A pair of smoke shells connected to a trigger which detonates on touch or bullet impact. Since it is hidden in the surrounding terrain, it cannot be placed adjacent to other traps. Animals can sense these when calm.",
    "A pair of firefoam shells connected to a trigger which detonates on touch or bullet impact. Since it is hidden in the surrounding terrain, it cannot be placed adjacent to other traps. Animals can sense these when calm.",
    "An antimatter-powered antigrain warhead connected to a trigger which detonates on touch or bullet impact. Since it is hidden in the surrounding terrain, it cannot be placed adjacent to other traps. Animals can sense these when calm.",
    "A portable automatic turret. Requires steel to refurbish its barrel after heavy use. May explode when damaged. Its dumb AI brain can't be directly controlled, so beware of friendly fire.",
    "A simple automatic gun made to be mounted on a turret.",
    "A heavy automatic turret. Its large-caliber shells do heavy damage over significant ranges, but its barrel must be refurbished after use. It cannot fire at close-up targets, and may explode when damaged.",
    "A self-loading large-bore cannon designed to attach to a turret.",
    "An armor-piercing turret. Its ultra-dense uranium shells can punch through heavy armor, but it requires new uranium slugs to be loaded after use. It's more accurate at longer ranges, and can't fire at all close up. May explode when damaged.",
    "A self-loading uranium slug cannon designed to attach to a turret.",
    "A manned mortar that launches all kinds of shells. While it can inflict devastating damage, the mortar's inherent inaccuracy makes it more useful for attacking large fortifications than groups of enemies in the field.",
    "Mortar launcher. Lobs bombs over walls. Very inaccurate but long-ranged.",
    "An activatable turret for extinguishing fires. The turret stands idle until someone approaches and activates it, after which it will automatically spray large amounts of firefoam on any flames in sight.",
    "A high-pressure firefoam sprayer usually mounted on a turret.",
    "An emergency-defense launcher that fires a single barrage of rockets covering a large area. The turret does not fire until someone activates it. It is very effective against large groups of weaker combatants, but less effective against small numbers of armored targets. Once fired, it must cool off for hours and be reloaded to fire again.",
    "A rocketswarm tube of the type usually mounted on a rocketswarm launcher turret.",
    "A structural beam around which a starship can be constructed. Includes all the necessary conduits and transit pipes for communications, power, and materials transport.",
    "A cryptosleep casket hardened against the dangers of space. Capable of maintaining a person in cryptosleep for centuries and surviving atmospheric re-entry.",
    "A computer core housing a machine persona who can guide a starship through any challenge during a multi-decade starflight.",
    "Powers a ship on its journey between stars. Takeoff requires a long powerup process that is likely to attract raiders.",
    "A reactionless Johnson-Tanaka drive capable of launching a ship into orbit, and crawling across the vast expanses between stars.",
    "A multi-function sensor module. Can scan and signal across the void for communications, threat detection, deception, jamming, and other purposes.",
    "An ancient device that projects a soothing psychic field around itself. This improves the mood of anyone nearby. Works through walls.",
    "Generates free energy, forever, without using fuel. This technology is developed by archotechs, and is beyond even most glitterworld societies. While nobody knows exactly how it works, scholars believe it somehow extracts energy directly from fluctuations in the quantum foam.",
    "Slowly generates chemfuel by a complex series of chemical reactions, using atoms extracted from the air.",
    "Divides rooms. Simple doors must be manually opened, which slows people down. The amount of slowdown depends on what the door is made of.",
    "Divides rooms. Powered operation allows people to move through the door without slowing down.",
    "A doorway hung with thick overlapping strips of fabric or leather. It allows animals to pass while insulating the temperature. Animal flaps are commonly used as barn doors to give penned animals a sheltered place to sleep.",
    "An impassable wall. Capable of holding up a roof.",
    "A fence made of posts joined by crossbars used for building pens for certain kinds of animals. Some kinds of animals can get past fences. Predators will not hunt creatures on the other side of a fence, but may still wander inside.",
    "A simple gate made of posts and crossbars. It blocks some animals like a fence. Handlers can lead animals in and out of the pen through these gates.",
    "A column capable of holding a roof. Does not block sight or movement and looks quite nice.",
    "Cooks meals and produces heat, and burns out after a few days. As with all heat sources, it must be placed indoors so it has a closed space to heat. Refuelable.",
    "A traditional unpowered cooler that works by water evaporation. Must be regularly replenished with wood. Not efficient enough to refrigerate food.",
    "A device that converts electricity into heat. It can automatically turn itself on or off to reach a specific target temperature.",
    "An air-cooling machine that fits into a wall. Cool air comes out one side, while hot exhaust comes out the other. Can be used to cool down rooms during summer, or to create a walk-in freezer.",
    "A vent for equalizing the temperature between two rooms without allowing people to walk between them.",
    "A one-use broad-wave psychic effector. The psychic pulse fills lower minds with terrifying imagery, driving all animals in the region into a manhunting rage. Animals currently under your control will not be affected.",
    "A one-use broad-wave psychic effector. The psychic pulse induces self-satisfying perceptual distortions, giving a temporary mood boost to everyone in the region.",
    "A hyper-advanced computer core that houses a peak-human-equivalent machine persona. In its isolated state, the core is dormant. Installed in a proper support structure, however, it can become a mind of great power.",
    "A one-use super-dose of mechanites tuned to heal health conditions. The mechanites will target and heal the single worst health condition affecting someone at any given time. Works even on health conditions that would otherwise be incurable. The mechanites can even transmute themselves into organic matter, forming new limbs or organs as needed.",
    "A one-use super-dose of mechanites tuned to resurrect the dead. Administered to a corpse, mechanites repair broken-down tissues and kickstart the body back to life. Unfortunately, the resurrected sometimes come back with brain damage, blindness, or progressive psychosis. Outcomes are better when the mechanites are administered to a fresher body. If a body is preserved, it can even be resurrected long after death.\\n\\nThe resurrected also experience limited retrograde amnesia, forgetting some recent memories and social interactions.",
    "A small AI core housing a low-grade subpersona specialized in teaching technology. When used, the AI will teach you the technology you're currently researching, instantly and for free. Can only be used once.",
    "A thrumbo's horn. It's razor-sharp, rock-hard, and priceless in most markets. This is a true trophy, as well as a deadly melee weapon.",
    "An elephant's tusk. It is very durable and valuable. While somewhat unwieldy as a melee weapon, it can still be deadly.",
    "Administer a healer mech serum.",
    "A high-quality packaged meal, manufactured for use in survival situations. While it never rots, it can still deteriorate if left outside. Great for traveling.",
    "A synthetic mixture of protein, carbohydrates, and vitamins, amino acids and minerals. Everything the body needs, and absolutely disgusting.",
    "A simple meal quickly cooked from one main ingredient.",
    "A complex dish assembled with care from a variety of ingredients.",
    "A complex dish assembled with care from vegetarian ingredients.",
    "A complex dish assembled with care from meat ingredients.",
    "A masterpiece of the culinary arts, this meal nourishes the body, mind, and soul.",
    "Animal feed made from mixed meat and plant sources. Humans can eat it, but they really, really don't like it.",
    "A preserved mashed mixture of fat and plant food. Tastes bland, but not offensive. It lasts a very long time without refrigeration. Great for traveling.",
    "A delicious preparation of cocoa seeds ground together with sugar and vanilla. It fulfills the need for recreation, but it is not very nutritious.",
    "Milk from an animal.",
    "Jelly stored and used as food by oversized insects. It is smooth, rich, and fulfills the recreation need of those who consume it. Because of its unique biological properties, it can nourish almost any creature and never rots.",
    "An unfertilized chicken egg. It can be eaten raw, but it's much, much better cooked.",
    "A fertilized chicken egg. If all goes well, it should hatch into a chick. It can be eaten raw, but it's much better cooked.",
    "A fertilized cobra egg. If all goes well, it should hatch into a baby cobra. It can be eaten raw, but it's much better cooked.",
    "A fertilized iguana egg. If all goes well, it should hatch into a baby iguana. It can be eaten raw, but it's much better cooked.",
    "A fertilized tortoise egg. If all goes well, it should hatch into a baby tortoise. It can be eaten raw, but it's much better cooked.",
    "A fertilized cassowary egg. If all goes well, it should hatch into a baby cassowary. It can be eaten raw, but it's much better cooked.",
    "A fertilized emu egg. If all goes well, it should hatch into a baby emu. It can be eaten raw, but it's much better cooked.",
    "A fertilized ostrich egg. If all goes well, it should hatch into a baby ostrich. It can be eaten raw, but it's much better cooked.",
    "A fertilized turkey egg. If all goes well, it should hatch into a baby turkey. It can be eaten raw, but it's much better cooked.",
    "An unfertilized duck egg. It can be eaten raw, but it's much, much better cooked.",
    "A fertilized duck egg. If all goes well, it should hatch into a duckling. It can be eaten raw, but it's much better cooked.",
    "An unfertilized goose egg. It can be eaten raw, but it's much, much better cooked.",
    "A fertilized goose egg. If all goes well, it should hatch into a baby goose. It can be eaten raw, but it's much better cooked.",
    "A pack of herbal concoctions extracted from the healroot plant. It is less potent than industrial pharmaceuticals, but much better than nothing.",
    "A kit of industrial-era medical equipment. It contains basic drugs, tools for suturing and bone setting, diagnostic devices, and various pads and fluids.",
    "A kit of advanced ultra-tech medical supplies, probably manufactured on a distant glitterworld. It contains advanced polymorphic drugs, nanite diagnostic and healing assisters, a mini-imager, and various multi-use tools.",
    "Miscellaneous gears, capacitors, circuit boards, tubes, wheels, sensors, wires, chips, processors, and other electronic and industrial parts. Necessary for assembling complex machines or electronics.",
    "Advanced computing and energy-directing machinery, miniaturized and hardened for the most demanding applications.",
    "A synthetic precursor chemical. While it is useless on its own, many drugs require neutroamine as an ingredient.",
    "A volatile liquid chemical. Used to fuel engines and rockets, or to transmute into propellant for projectiles, or as an incendiary weapon.",
    "A large barrel for projectile-based weapons like mortars. In order to hold the high launch pressures, it is specially reinforced and cannot be manufactured at a small scale.",
    "Raw potatoes.",
    "Raw fungus.",
    "Raw rice.",
    "Raw agave fruit.",
    "Raw corn.",
    "Assorted berries. Nice to eat, even when raw.",
    "Nutrient-rich grasses and shoots, harvested and compacted for storage. Hay is good animal feed, but inedible for humans.",
    "Raw hops. A flavoring and preserving agent that is necessary for making beer.",
    "Raw cut leaves of a psychoid plant. Can be refined into various form of the stimulant drug psychite.",
    "Raw cut leaves of a smokeleaf plant. Can be rolled into smokeable joints at a crafting spot.",
    "A shell filled with high explosives. Can be fired from mortars or installed as a trap. Explodes when damaged.",
    "A shell filled with flammable gel and a small explosive charge. Starts fires when detonated. Can be fired from mortars or installed as a trap. Explodes when damaged.",
    "A shell filled with batteries and antennas, for generating an electromagnetic pulse when detonated. Electromagnetic pulses temporarily disable electrical devices and mechanoids. Can be fired from mortars or installed as a trap. Explodes when damaged.",
    "A shell that generates a cloud of smoke when detonated, obscuring incoming shots and preventing turrets from locking on. Can be fired from mortars or installed as a trap. Explodes when damaged.",
    "A pressurized shell filled with fire-retardant foam. Can be fired from mortars or installed as a trap. Explodes when damaged.",
    "An ultra-tech warhead powered by a grain of antimatter. Usually used by spacecraft or glitterworld war machines, it creates a huge explosion and starts fires around the target. Can be fired from mortars or installed as a trap. Explodes when damaged.",
    "This metal is mostly used as a commodity currency. It can also be used for making decorations.",
    "The most seductive metal of them all. While it is too soft to be of much practical use, it is strikingly beautiful and never tarnishes. Millions have died in attempting to feed the endless human thirst for gold.",
    "An iron-carbon metal alloy used for building a huge variety of structures, weapons, and machines.",
    "Advanced spacer tech structural material. Plasteel is extremely strong due to its unique molecular structure.",
    "Wood from trees or other fibrous plants. Useful for building structures and weapons. It is a good fuel for campfires and generators, and can be refined into chemfuel. In a pinch, a piece of wood can be used as a weapon or a leg.",
    "A dark, heavy metal. While it is best known as a fuel for nuclear devices, its extreme density and hardness also make it good for making certain weapons, armor, and ammunition.",
    "A hard, green stone. Because of its beauty and rarity, jade is often used for ornaments and decorations. Its hardness and density also makes it a good material for blunt weapons.",
    "Cloth woven from organic fibers.",
    "Spacer-tech synthetic fabric designed for making ordinary clothes. It is soft, light, strong, and insulates well.",
    "Fabric spun from microfibers extracted from devilstrand mushrooms. It is very tough, good at insulating, and protects exceptionally well against flame.",
    "Nano-fibers woven into sheets molecule-by-molecule using specialized production mechanites. While it flexes freely most of the time, it stiffens to absorb blows as they land, and is incredibly difficult to break. The secrets of its production are known only to the most advanced glitterworld cultures.",
    "Sheep's wool. It provides good insulation.",
    "The remarkably soft wool of an alpaca. It is warm, protects well from heat, and fetches a high price.",
    "While somewhat coarse, megasloth wool's long fibers make it very strong. It is exceptionally warm.",
    "Soft, light and provides very good insulation. Muffalo wool clothes can keep the body warm even in very cold conditions.",
    "Thick and coarse wool of a bison. Quite warm.",
    "Tanned, dried, scraped skin. A good traditional material for making clothes and bags.",
    "A soft furry pelt harvested from a wolf-like creature. It is difficult to pierce and insulates well against cold.",
    "A soft furry pelt harvested from a big cat. It is difficult to pierce and insulates well against heat.",
    "Tanned, dried, scraped camel skin. Good at temperature regulation in hot climates.",
    "The furry pelt of muffalo. Recognizable by its distinctive blue tint. Good at temperature regulation in cold climates.",
    "The strong furry leather of a bear. Compared to most leather, it is quite a bit tougher and a bit better at all kinds of temperature regulation.",
    "Sheets of guinea pig fur. It is delicate, but luxurious.",
    "Tanned, dried, scraped human skin. Most people find this material horrifying. Some find it fascinating. While a decent leather, it neither protects nor insulates particularly well.",
    "Tanned, dried, scraped pig skin. While a decent leather, it neither protects nor insulates particularly well.",
    "Lightweight, thin leather. Probably harvested from a small animal. Not as protective as thicker leathers.",
    "Tanned, dried, scraped bird skin. It is quite delicate. Without its feathers, it provides little protection from heat or cold.",
    "Tanned, dried, scraped chinchilla skin. Known as an extremely luxurious and insulating fur, it is exceptionally valuable.",
    "The pelt of a fox. It protects well from the cold and is quite luxurious, fetching a high price.",
    "The tanned skin of a cold-blooded reptile. Lizardskin is reasonably tough, but does not insulate well at all.",
    "Tanned, dried, scraped elephant skin. While quite tough, it is a poor insulator.",
    "Thick leather covered in a long, rugged mat of fur. Harvested from a large, hardy animal. This thick skin insulates and protects very well.",
    "Tanned, dried, scraped rhinocerous skin. It is exceptionally durable in combat, but provides little protection from weather.",
    "Furry pelt of a thrumbo. Luxurious and extraordinarily durable. Used for the highest-quality crafts for its insulation and strength.",
    "A weak textile created by cutting up and sewing together various types of leathers. Regardless of what kind of leather is used to create it, patchleather's irregular seams make it less tough and less insulating than any intact leather.",
    "An unfinished sculpture.",
    "An unfinished gun of some kind.",
    "An unfinished weapon.",
    "An unfinished piece of simple armor.",
    "An unfinished piece of high-tech armor.",
    "An unfinished piece of metal armor.",
    "An unfinished piece of an apparel.",
    "An unfinished piece of a belt.",
    "An unfinished piece of a pack.",
    "An unfinished component.",
    "An unfinished prosthetic.",
    "An unfinished bionic.",
    "An unfinished mask.",
    "A projectile-repulsion device. It will attempt to stop incoming projectiles or shrapnel, but does nothing against melee attacks or heat. It prevents the wearer from firing out, and shuts down instantly if hit by EMP.",
    "Stylish yet rugged, this hat keeps the sun and rain off - and it gives anyone who wears it a bit of extra charm. It is the most important part of traditional western attire.",
    "A good-looking hat which projects a slightly urban, money-loving style. Improves social impact.",
    "Elegant traditional garb, often with religious significance. Improves social impact.",
    "A soft, thick cap. Great for keeping warm in winter.",
    "An artistically terrifying war mask. It hides the wearer's face and makes them more confident.",
    "A piece of fabric which covers the wearer's face.",
    "A simple helmet which gives moderate protection against sharp attacks. Not effective against blunt weapons.",
    "A lightweight combat helmet with a complex design, reinforced with plasteel. Not effective against blunt weapons.",
    "A marine armor helmet, with a built-in status computer and layered plasteel-weave plates.\\n\\nArmor like this is often used by rapid-incursion space marines.",
    "A high-tech armored helmet with a built-in status computer and a protective plasteel-weave plate.\\n\\nArmor like this is often used by imperial scout troops or glitterworld police forces.",
    "A thin helmet containing finely-tuned sheets of psychically-absorptive foil. Reduces the impact of psychic waves.",
    "A draped hood which covers the head and ears.",
    "A defensive smokescreen. When activated, it will release a cloud of smoke, obscuring incoming shots and preventing turrets from locking on.",
    "A utility pack made for firefighters. When triggered, a burst of fire-retardant foam is released, covering a wide circle around its wearer.",
    "A limited-use psychic effector. It shocks the target's mind with chaotic images, blocking coherent perception and dropping them into a state of psychic shock. There is a risk of brain damage. It has a long range, but requires line of sight.",
    "A limited-use psychic effector. It overwhelms the target's mind with terrifying perceptual distortions, driving them into a berserk state. There is a risk of brain damage. It has a long range, but requires line of sight.",
    "A full-body garment crafted using neolithic tools. While it may look primitive, it is effective at insulating the wearer.",
    "A parka for staying warm in even the coldest of temperatures.",
    "A simple set of pants.",
    "A simple T-shirt.",
    "A nice-looking collared shirt with buttons.",
    "A long duster coat for blocking the sun and grit of the outdoors.",
    "A tough jacket to stop scrapes and bruises, and to keep one warm in chilly weather.",
    "Overlapping solid plates of armor covering the entire body from neck to feet.",
    "A vest with armor plates inserted on the chest and back. While quite effective at deflecting gunshots and stabbing attacks against the chest, it does nothing to protect the limbs.",
    "A pair of pants with armor plates sewn in. While it's not as good as solid armor, it offers effective protection against all manner of attacks while remaining quite comfortable.",
    "A tough fabric jacket with armor plates sewn in. While it's not as good as solid armor, it offers effective protection against all manner of attacks while remaining quite comfortable.",
    "A suit of powered armor. Layered plasteel-weave plates are very effective at stopping attacks, with few vulnerable joint sections. Neuro-memetic assistors allow a human to wear the armor and still move easily.\\n\\nArmor like this is often used by rapid-incursion space marines.",
    "A suit of light partially-powered armor, designed to permit quick movement. Lightweight plasteel-weave plates block attacks without compromising mobility, and neuro-memetic assistors in the lower body allow a human to wear the armor and still move easily.\\n\\nArmor like this is often used by imperial scout troops and glitterworld police forces.",
    "A long cape of elegant design. It hangs over one side of the torso.",
    "A puddle of flammable chemfuel.",
    "A chunk of rock. Can be cut into usable stone blocks.",
    "Blocks of stone. Mostly useful for building long-lasting, simple structures.",
    "A chunk of steel slag. While it's useless in its current form, it can be smelted to recover steel.",
    "A sedimentary rock composed of sand particles compressed together.",
    "A sedimentary rock composed of sand particles compressed together. The sand layers have been polished to a flat, smooth surface.",
    "Blocks of solid sandstone. Sandstone is a relatively soft rock and chips easily.",
    "A very hard igneous rock.",
    "A very hard igneous rock. The shining surface is filled with a mosaic of black, white, and pink speckles.",
    "Blocks of solid granite. Granite is a very hard stone.",
    "A sedimentary rock formed from the compacted remains of ancient seashells.",
    "A sedimentary rock formed from the compacted remains of ancient seashells. It glows a smooth white, with light patterns of impurities suspended within.",
    "Blocks of solid limestone.",
    "A dark-colored metamorphic rock. Its fine layers are emblematic of slaty cleavage.",
    "A dark-colored metamorphic rock. Its fine layers are emblematic of slaty cleavage. Interior strata are clearly visible through the polished surface.",
    "Blocks of solid slate. A dull-looking rock that chips easily.",
    "A soft metamorphic rock.",
    "A soft metamorphic rock. This semi-transparent rock almost appears to glow with its own inner light.",
    "Blocks of solid marble. Marble is a soft, beautiful stone, known for being easy to sculpt.",
    "Cuts sandstone chunks into usable blocks.",
    "Cuts granite chunks into usable blocks.",
    "Cuts limestone chunks into usable blocks.",
    "Cuts slate chunks into usable blocks.",
    "Cuts marble chunks into usable blocks.",
    "A combined blade and tool-head attached to a sturdy haft. While slightly less effective than other weapons against human enemies, it excels at tearing down walls, doors, and other structures thanks to its integrated tool-head.",
    "A refined club, engineered for efficient swinging and deadly impacts.",
    "A short sword of ancient design. Good for stabbing or slashing. It's light and nimble, which sometimes lets it beat bigger, heavier weapons.",
    "The ancient weapon of kings, the longsword can be used for slashing or stabbing.",
    "A shaped stick, heavy at one end, for bashing enemies to death. This weapon is so old it's part of human biology. Evolutionary biologists say that a major reason humans can tilt our wrists side-to-side (instead of just forward-and-back like other primates) is to be able to better swing a club.",
    "One of mankind's oldest manufactured objects. The knife has taken many forms, but the concept has always remained the same: A handle for holding and a sharp edge for cutting.",
    "A short spearhandle attached to a long bladed point, designed to be driven into vital organs with a quick thrust.",
    "A polearm tipped with a sharp point for stabbing opponents.",
    "An ancient pattern double-action revolver. It's not very powerful, but has a decent range for a pistol and is quick on the draw.",
    "An ancient pattern blowback-operated self-loading pistol. It lacks stopping power and range, but is quick to fire.",
    "A micro-submachine gun. It is short-ranged, but very light in the hands. Its rate of fire tends to make up for its weakness.",
    "A wide-barreled incendiary bolt launcher. The bolts create small incendiary explosions on impact, starting fires.",
    "A wide-barreled smoke shell launcher. The shell will upon impact release a cloud of smoke, obscuring incoming shots and preventing turrets from locking on.",
    "A wide-barreled EMP shell launcher. The shell will upon impact release a burst of electromagnetic energy, stunning mechanical targets (mechanoids, turrets, mortars) and depleting shields in the area of effect.",
    "An ancient pattern bolt-action rifle. With its long range, and low fire rate, it is unlikely to drive animals to revenge, which makes it a favorite weapon for hunting.",
    "An ancient design of shotgun that emits a tight-packed spray of pellets. Deadly, but short range.",
    "A magazine-fed fully automatic shotgun. It is even shorter-ranged than a typical shotgun, but is extraordinarily dangerous due to burst fire.",
    "A compact, wide-caliber slug-thrower. It's got a very short range, but it packs a punch and handles quite well.",
    "A gas-operated light machine gun. While it is somewhat unwieldy and inaccurate, its long bursts of fire are effective against groups of enemies.",
    "A general-purpose gas-operated assault rifle for field or urban combat. It has good range, decent power, and good accuracy.",
    "An ancient design of precision sniper rifle. Bolt action. It has an exceptionally long range, great accuracy and good power. Because it's so unwieldy, other weapons outclass it at close range.",
    "A multi-barrel machine gun. It's unwieldy, but once it starts firing it fires very fast. Where most self-loading guns are powered by the energy from the gunpowder, the minigun uses an electric motor to rapidly cycle cartridges through the weapon.",
    "A single-use rocket launcher that fires three large-bore explosive rockets. Good against small groups of tough targets.\\n\\nBecause of its unwieldiness, single-use limitation, and the massive destruction it causes, it's said that one must be slightly crazy to use this weapon.",
    "A single-use rocket launcher that fires a massive explosive projectile. Good against large groups of soft targets. Starts fires.\\n\\nBecause of its unwieldiness, single-use limitation, and the massive destruction it causes, it's said that one must be slightly crazy to use this weapon.",
    "Old-school fragmentation grenades. They can be thrown a short distance, where they'll explode, damaging anything and anyone nearby.",
    "Glass bottles filled with flammable liquid, with a burning cloth in the neck. A favorite weapon of hooligans and desperate warriors from rim to rim.",
    "Electromagnetic pulse grenades damaging to electronic equipment.",
    "A pulse-charged rapid-fire blaster for area suppressive fire. Heavy cooling allows long, deadly bursts.",
    "An incendiary-shot mini-artillery device. It fires a large incendiary warhead.",
    "A long-range weapon used by mechanoids. Named after its needle-like projectiles, it fires single shots with great accuracy. While it does less damage than charge weapons, it can reach over very long distances.",
    "A simple short selfbow made from a single piece of wood.",
    "Pila are spears for throwing. They take a long time to throw, but one hit can do heavy damage. This weapon represents a bundle of pila and can be thrown over and over. The singular of pila is pilum.",
    "A recurve bow. Its construction behaves like a tuned spring, storing energy more efficiently and delivering a faster shot.",
    "A powerful greatbow. Fires a heavy arrow long distances.",
    "A charged-shot assault rifle. Pulse-charge technology charges each shot with unstable energy as it leaves the barrel. Released on impact, the charged energy greatly increases the damage done.",
    "A pulse-charged rail-assisted lance weapon. It fires a single shot at high velocity, charging it with unstable energy as it leaves the acceleration rail.",
    "An ancient targeting apparatus for an orbital bombardment system. This unit designates a target and transmits the coordinates to a network of satellites, which then bombard the target area with kinetic impactors. This unit has been reprogrammed to accept unauthorized users, but once it is used, the network will detect the incursion and cut off the link permanently.",
    "An ancient targeting unit for a network of power-collection satellites. Once aimed at a target, it directs ancient satellites to begin beaming power down in a massive column of electromagnetic energy. This power can safely be collected in a giant absorption dish. Since you have no absorption dish, you'll be aiming it at enemies, at which point the power column will turn the area into a thousand-degree inferno. This will last until the satellites detect the unsafe targeting, shut themselves down, and permanently deactivate the targeter.",
    "An ancient control unit for a network of weather-control satellites. This device has had certain failsafes bypassed; it is capable of causing a massive air current disturbance, which will generate a tornado at a chosen location. The weather network will detect this unauthorized intrusion and lock out the device after use, but the tornado will be left to spend its energy normally.",
    "A breaching explosive launcher used by mechanoids. It fires a concussion bomb that is extremely effective against walls and structures, but does much less damage to small targets.",
    "A small brown mushroom typically found in caves. It smells like an old, dirty rag pulled from the stomach of a rotting muffalo - but it tastes surprisingly good when cooked. Dies when exposed to light.",
    "An enormous purple mushroom. Its size and glowing protrusions make this fungus beautiful to look at. It dies when exposed to light.",
    "A blue moss typically found in deep, dark caves. It is sticky, with tangled fibers, which slows anyone walking over it. Dies when exposed to light.",
    "A beautiful cultivated flower, the rose has been a symbol of love since Earth's ancient era.",
    "A cultivated flower with wide petals and a short lifespan. Daylilies are very beautiful, but must be replanted often.",
    "A short, fast-growing crop that yields small edible grains. Its great nutritional output and ease of cultivation has made it the economic core of many great civilizations. While rice grows quickly, it is sensitive to soil fertility and will not fare well in poor soil.",
    "A highly nutritious tuber. Potatoes grow well even in somewhat poor soil, and form a delicious crispy outer coating when fried in oil.",
    "A tall grain plant which produces ears of soft, edible seeds. While corn takes a long time to grow, it yields lots of food compared to other crops. Harvested corn takes a long time to spoil.",
    "A low bush-like plant that yields fragile but delicious strawberries. While it isn't quite as productive calorie-for-calorie as other crops, strawberries are delicious even when raw.",
    "A mixture of nutrient-rich grasses which yield large amounts of hay. Hay is edible for animals, but not humans.",
    "A mid-size crop that yields fine white cotton fibers. These are used to make cloth.",
    "This fragile mushroom was genetically engineered to produce a silk net that is both difficult to tear and soft to the touch. While the mushroom takes a very long time to grow, only exotic ultra-tech fabrics outperform its devilstrand fibers.\\n\\nSome say it's called devilstrand because of its red color. Others think it owes its name to the greed it inspires in people.",
    'A slow-growing plant which yields herbal medicine when harvested. Sowing and harvesting healroot are both very labor-intensive tasks because of its delicate shoots.\\n\\nHealroot was selectively bred for centuries by settlers. It is sometimes also called "healer\'s hand" by tribespeople - a nickname it owes to its five major medicinal virtues.',
    "A flowering crop that yields hops, an essential ingredient in beer.",
    "A leafy crop grown for the psychological effects of chemicals in its leaves. Smokeleaf leaves can be prepared into joints at the crafting spot. Smokeleaf makes a user feel relaxed, but reduces motivation, and can be addictive.",
    "A leafy plant which generates the chemical compound psychite. Originally evolved as a defense mechanism to ward off plant-eating animals by overstimulating and sickening them, the psychite drug can be extracted and refined into various forms for recreational use. It is addictive.",
    "A tropical tree that produces chocolate, genetically engineered to sweeten its own product, and survive in slightly less-warm climates.",
    "A burned tree stump. It's ugly and yields very little usable wood.",
    "A stump left behind after a tree has been felled. The stump can be extracted but yields very little usable wood. Left outdoors, the stump will deteriorate in time.",
    "The remnants of a tree destroyed by damage. It's ugly. The stump can be extracted but yields very little usable wood. Left outdoors, the stump will deteriorate in time.",
    "A rare wild bush which yields the ambrosia fruit. Ambrosia fruit is delicious and produces a drug-like mood boost. Ambrosia cannot be farmed, which makes wild ambrosia groves very valuable.\\n\\nIts rarity, beauty, and desirability are why ambrosia was named after the food of the ancient Greek gods.",
    "A genetically-engineered flower-like crop which secretes a self-altering dye. Tinctoria dye can be coaxed into different colors and used to change the color of walls, buildings, and more.",
    "Dye extracted from a tinctoria plant. It can be used to change the color of walls, buildings, and more.",
    "A large-leafed desert plant with edible flowers and stalks.",
    "A short cactus. It is so named because it resembles a pincushion.",
    "A large cactus native to arid Earth environments. Though it is not a tree, it yields a small amount of fibrous material that can be used like wood.",
    "A hardy desert tree topped with thick, pointed leaves.",
    "Wild grass. Grows anywhere there is a little light and minimally fertile ground.",
    "Wild tall grass. Slows down anyone moving over it.",
    "A short shrub. Does not typically talk.",
    "Tangled, thorny, woody shoots covered with leaves. Brambles grow in clusters, and slow down anyone moving over them.",
    "A slow-growing plant which yields herbal medicine when harvested.\\n\\nThis wild breed of healroot is hardier than domesticated healroot, but too difficult to cultivate. It is prized by tribespeople in colder climates.",
    "One of the fastest growing shade trees, willows provide a beautiful, leafy canopy. It doesn't yield much usable wood.",
    "A tall coniferous tree often found in swamps. Despite its slow growth, planting these trees can be profitable as a low-effort, long-term investment because they yield so much usable wood.",
    "A common medium-sized tree, easily identifiable by its distinct three-pointed leaf.",
    "Tangled masses of cord-like, spiky vines which coil in great masses along the ground. Chokevine greatly slows down anyone who moves over it. Multiple tribes have independently generated stories of chokevine strangling children to death in the night, as a way to scare kids into coming home before dark.",
    "A tiny yellow flower which grows in large clusters. Though it is often considered a weed, dandelions in bloom are quite beautiful.",
    "A small perennial wildflower that grows in alpine climates.",
    "Wild moss that grows in clumps in areas of low light and cool temperatures. Moss takes a long time to grow, but is very frost-resistant.",
    "A bushy wild plant which yields delicious berries. Berries can be cooked, but they're also good to eat even when raw.",
    "A hardwood tree. Oaks take a long time to grow, but their wood is so strong that 'oak' is used as a metaphor for strength across many cultures.",
    "A softwood tree that grows very fast. Unfortunately, its wood is weak and so it yields less useful material than hardwood trees.",
    "A large conifer covered with prickly pine cones. It grows in a distinctive conical shape.",
    "A temperate-biome tree known for its thin, white, paper-like bark.",
    "Various low broadleaf shrubs. These grow in clusters and slow down movement.",
    "A tropical plant. Its extremely broad leaves are a commonly-recognized signifier of tropical forests.",
    "An unusual plant with tall, pretty flowers. Some call it the 'bush lily'.",
    "A rare, giant flower which can be found deep in steaming jungles. You would think a giant flower would be beautiful, but this one looks and smells like rotting flesh.",
    "An exceptionally strong hardwood tree that grows in warm climates. Because teak wood is so durable and water-resistant, it was used to form the keel of wooden sailing ships in ancient times.",
    "One of the most common rainforest trees. Cecropia grows very fast, but yields little usable wood.",
    "A tropical tree with a tall, naked trunk topped by a cluster of very broad leaves. Unfortunately, this variety doesn't produce any edible coconuts.",
    "A fast-growing tree-like plant that grows in dense groves. Bamboo can be harvested for a wood-like material. The plant itself is not beautiful.",
    "A huge omnivorous mammal adapted for cold climates. Bears' thick blubber and fur keeps them warm in winter.\\n\\nWhile their usual diet consists of fish, berries, honey, and scavenged meat, the grizzly is capable of using its massive strength and deadly claws to kill live prey. They are startlingly quick for such lumbering creatures.",
    "A great white bear adapted for frozen climates. Their thick blubber and fur keep them warm in winter.\\n\\nWhile their usual diet consists of fish and scavenged meat, the polar bear can also use its massive strength and deadly claws to kill live prey. They are startlingly quick for such lumbering creatures.",
    "The largest unmodified bird species, ostriches are known for their fast run, huge eggs, and powerful kick. It is easily angered.",
    "A large flightless bird with beady eyes on its ugly face. With its bad attitude, it is the jerk of the natural world. Bother it, and it is guaranteed to seek revenge.",
    "A large flightless bird with brightly-colored feathers. While it looks beautiful, its kick is vicious. It's known for being quick to aggression when harmed by violence or confronted by incompetent animal tamers.",
    "One of the most dangerous big cats, cougars are solitary hunters with long, sharp teeth and claws. They stalk prey from hidden positions before pouncing.\\n\\nWhile humans are not their normal diet, they won't turn down a meal of vulnerable human meat.",
    "An agile and powerful big cat native to the jungles of old Earth. As solitary ambush predators, panthers are masters of taking down both large and small prey. Onlookers tend to focus on their graceful movements, while those in closer contact usually notice their skull-crushing strength.",
    "A wildcat larger than a housecat, but smaller than a cougar. Lynxes survive on a diet of small birds and animals. Their very warm fur keeps them safe from the brutally cold temperatures of their frozen territories.",
    "One of mankind's first pets, the cat is a small mammal which hunts vermin. Known for their aloofness, cats are nevertheless popular companions because of their independence, calm disposition, and fine, pettable fur.",
    "A small, even-tempered dog. Originally bred to hunt rats, it later became a show and companionship animal. Some consider it useless, but the mood boost it gives by nuzzling can outweigh the cost of feeding it.",
    "Neither a pig or a creature from Guinea, these little rodents are bred to be a household pet and a delicious dinner.",
    "A very versatile, medium-sized dog. Originally bred to retrieve birds shot on the hunt, the lab is also an excellent guard dog, play pal, and family friend.",
    "A large, energetic dog with a thick fur coat for remaining comfortable in arctic environments.",
    "A small primate, the monkey can use its curly tail to grab on to branches, leaving its hands free to do other things. Monkeys are selfish but clever, and can be trained to carry out fairly complex tasks.",
    "The most traditional farm bird, the chicken is raised for its eggs and meat. It grows very quickly and lays eggs very often.",
    "A very common type of farm bird, also appearing in the wild, the duck is raised for its delicious meat. It grows quick but lays eggs quite rarely.",
    "A short, fat, flightless bird known for its hilarious 'gobbling' call. It has been long domesticated, but also lives in the wild.",
    "A domesticated bird kept by humans as poultry for it's eggs and meat. Lays eggs very often, however they take a long time to hatch.",
    "A large domesticated ungulate, cows have been bred for millennia to produce huge amounts of milk, meat, and leather. They are exceptionally gentle creatures and will never seek revenge, no matter how many times they are harmed. Most of them are so adapted to farm life that they cannot survive in the wild.",
    "Engineered for chemicals production, the boomalope grows a large sac of volatile chemicals on its back. Though it is weak and fragile for its size, other animals have learned to avoid it because of the huge explosion it produces when it dies. It can be milked to produce chemfuel - very carefully.",
    "A large herding herbivore descended from buffalo and adapted for both cold and warm environments. While enraged muffalo are deadly, tamed muffalo are quite docile and can be used as pack animals.\\n\\nNobody is quite sure why they're blue - it might even be some early genetic modification test that just never got changed.",
    "A large plant eating mammal appearing in the savannah wilderness. Tamed are quite docile, but enraged are fast and dangerous.",
    "A large land mammal adapted to arid environments. Domesticated since ancient times, its leather is exceptionally good at insulating against the desert heat, and its milk is quite nourishing. It can be used as a pack animal and mount, but its bouncing gait makes it slower to ride than a horse.\\n\\nBy storing water in its large humps and reclaiming moisture from its breath as it exhales, it can go weeks without drinking.\\n\\nWhen in a caravan, people can ride dromedaries to increase the caravan's speed.",
    "Naturally curious about the world, goats are among the friendliest domesticated creature bred by mankind.",
    "A large member of the deer family, well-adapted to life in cold climates. Domesticated elk can be milked, but refuse to carry packs.",
    "Yaks are robust cattle with a bulky frame, short but thick legs, and rounded cloven hooves that are splayed to help them walk in snow.",
    "A large member of the deer family, well-adapted to life in cold climates. Caribou can be milked, but refuse to carry packs.",
    "A large hoofed mammal with a short coat, a long mane, and a long tail. Horses have been domesticated since ancient times.\\n\\nWhen in a caravan, people can ride horses to increase the caravan's speed.",
    "A small relative of the horse, domesticated in ancient times for farm work. Its goofy call is simultaneously annoying and endearing.\\n\\nWhen in a caravan, people can ride donkeys to increase the caravan's speed.",
    "The largest unmodified land animal. Elephants has a long trunk they use to manipulate objects, and sharp tusks they use to gore attackers. A dead elephant's valuable tusks can be recovered by butchering it.\\n\\nIntelligent creatures with complex social relationships, elephants can be used as pack animals or trained to carry out the most complex of tasks. They live a long time, and are known to remember events and relationships from many decades before.",
    "Despite being herbivorous, this large mammal is very easy to enrage. Once angered, its massive strength and sharp horn make it a brutal opponent. It has more muscle in one leg than most humans do in their whole body.",
    "This small, solitary herbivore can swiftly hop away from danger.",
    "This hardy animal survives the brutal winters of its homelands by burrowing through snow to find edible plants.",
    "A large, genetically-engineered beetle. Once the worker caste of an artificial ecosystem of insectoids designed to fight mechanoid invasions, it is now often seen without its deadlier insectoid cousins. Still, its size and hard shell make it dangerous when it attacks. A eusocial creature, it cannot reproduce individually.",
    "A medium-sized bioengineered insectoid the size of a sheep. The spelopede is the middle caste of a hive, taking care of most work tasks as well as fighting with its digging claws. It's dangerous in combat, but slow on open ground.",
    "Not actually a spider, the megaspider is a genetically-engineered giant insectoid the size of a bear. Designed for heavy work and combat, its thick chitinous armor makes it hard to kill, while its long ripper-blades make it deadly at close quarters. It is, however, quite slow in open terrain.",
    "A gigantic, graceful creature of unknown origin. The thrumbo is gentle by nature, but extremely dangerous when enraged. While its long fur is exceptionally beautiful, its hide is also incredibly resistant to damage. Its razor-sharp horn fetches a huge price.\\n\\nLegends say that an old thrumbo is the wisest creature in the universe - it simply chooses not to speak.",
    "A large predatory snake. Cobras can be highly aggressive if provoked, and their bite injects toxic venom into the victim.",
    "This heavily armored land-dwelling reptile is known for its slow moving speed and surprisingly vicious bite. Because of its natural armor, it is tough to kill and can do serious damage during drawn-out melee fights.",
    "A large beaver-like creature genetically engineered to harvest wood with machine-like efficiency. In the absence of specialized feed, these animals will enter a manic state that compels them to eat trees whole, and are likely to attack if disturbed.",
    "Pigs were one of the first animals domesticated by humans. They are an efficient source of meat, and are easy to feed because they will eat almost anything.",
    "This hairy omnivore is descended from escaped pigs and evolved for living in the wild.\\n\\nIts tusks make it a better fighter than its domesticated pig cousins. Unfortunately, it is too unruly to be trained in the most complex tasks.",
    "The wild ancestor of the domesticated goat. Ibexes live on marginal territory where most antelopes couldn't survive, eating lichens and sparse mountain plants. They're famous for dextrously hopping across bare cliff faces - and for their violent ramming attack.",
    "A medium-sized herding herbivore which prefers to live in mixed forests and plains. Deer are very quick.",
    "A small, extremely quick antelope known for its amazingly long leap.",
    "A small, nimble rodent. Its fur is softer than just about anything in the universe, making it very valuable as a trade good.",
    "Sheep husbandry is practised throughout the majority of the inhabited worlds, however only recently it has been introduced to the rimworlds. Domestic sheep are relatively small herbivores, usually with yellowish wool and medium sized horns.",
    "A medium-sized ungulate closely related to the llama, the alpaca is usually raised for its remarkably soft and insulating wool. Alpacas have also been used as pack animals since they hauled cargo on the rugged mountain trails of ancient South America.",
    "A giant, solitary herbivore with two giant claws for warding off threats. Long extinct after being wiped out by the natives of Earth's American continent, the megasloth was later brought back using advanced cloning and artificial gestators. Its thick hide is exceptionally strong and insulating, and makes a great leather for cold-weather clothing. It is peaceful if left alone, but will shred anyone who disturbs it with its giant claws.",
    "The largest natural rodent, the capybara is well-adapted for steaming jungle environments.",
    "One of the many hardy rodent species that follows humankind everywhere it spreads. Squirrels are distinguished by their bushy tails, which they use as umbrellas in bad weather.",
    "A widely-hated rodent known for soiling kitchens and spreading disease, rats have a way of following humans everywhere they go. It eats almost anything and lives almost anywhere.",
    "Either by deliberate genetic weaponization, or as an unusual defense mechanism, these rodent-like creatures create a powerful fire-starting explosion when killed.",
    "A small, hardy animal that ranges wide across forests and shrubland. It is happy to break into your garbage container, or your kitchen, to eat almost anything.",
    "These large lizards normally feed on plant matter. However, when angered, their tough hide and sharp claws make them quite dangerous.\\n\\nResting iguanas hold their heads high, giving them an amusing 'proud' look. But they're not proud; they're just trying to see predators so they don't get eaten.",
    "Heavily-muscled wolf-like creatures with vicious unnatural claws and an absurdly powerful bite. They will only eat meat or corpses. If disturbed in the wild, they are very likely to attack.\\n\\nScientists say wargs are the descendants of weaponized military animals created for population suppression. The superstitious see them as the tools of an angry god.",
    "A rugged predator long feared by many ancient Earth cultures. As pack hunters, wolves have complex social lives and are fiercely intelligent.",
    "An arctic variant of the old Earth wolf. As pack hunters, wolves have a complex social life and are fiercely intelligent.",
    "A small fox originally from the northern part of Earth's Africa continent. It hunts small creatures and has very large ears for cooling itself in the heat.",
    "A small solitary canine evolved for hunting small prey in temperate climates. Chicken farmers hate foxes because of their ability to destroy a whole coop in minutes.",
    "A small predator adapted for cold climates. It usually hunts small game like mice and voles, sometimes burrowing through a meter of snow to reach its prey.",
    "A baseline human, mostly unmodified by gene engineering and mostly unchanged by evolutionary pressures on non-Earth planets.",
    "Heavy combat mechanoids that glide on dozens of tiny legs. Their thick carapace and firepower makes them very effective against bunched-up static defenders. They are somewhat vulnerable to mobile hit-and-run tactics.",
    "Fast human-sized combat mechanoids built for medium and long-range combat. Their bodies are light, making them vulnerable targets at close range - especially in melee combat.",
    "Fast, spindly, human-sized combat mechanoids specializing in rapid approach and close-range combat. Their bodies are covered in points and blades, but they mostly use their two arm blades to lop off limbs or gut their victims alive.",
    "A clunky multi-legged combat mechanoid specialized as a long-range weapons platform. While effective at distance, it is weak in close-range fights and in melee combat.\\n\\nVeterans of mechanoid wars know that often, the safest place to be around a pikeman is touching it.",
    "A medium-sized mechanoid. Termites specialize in burrowing, digging, and breaking through defensive structures. Defenders need to decide whether to try to eliminate the termite before it can dig through their defenses, or take it where it emerges.",
    "I feel so heavy... and so relaxed...",
    "A guilty prisoner or guest was executed. It was justified, but still sad.",
    "A prisoner or guest was euthanized. It was humane, but still sad.",
    "A prisoner or guest was killed in cold blood. It seemed a bit evil.",
    "A prisoner or guest died because the colony took body parts from them. It's horrible.",
    "A prisoner died in our ripscanner. Their brain was burned up to feed the machine. It's horrible.",
    "A guilty colonist was executed. It was justified, but still sad.",
    "A colonist was euthanized. It was humane, but still sad.",
    "A colonist was killed in cold blood. It seemed a bit evil.",
    "A colonist died because someone took body parts from them. It's horrible.",
    "A colonist died in our ripscanner. Their brain was burned up to feed the machine. It's horrible.",
    "One of our prisoners died despite being harmless. We should be able to take care of our prisoners. If we wanted them dead, we could have at least conducted an orderly execution rather than permit that barbarism.",
    "One of our people died. We should be able to take care of our people.",
    "Such a tender, unique animal. This universe is evil!",
    "Such a wonderful person, gone forever. The universe gets darker every day.",
    "Serves them right. At least there's some justice in this world.",
    "My son is dead. My own flesh and blood...",
    "My daughter is dead. My own flesh and blood...",
    "My husband is dead. I am alone.",
    "My wife is dead. I am alone.",
    "My fiance died. Such a man... my future is gone.",
    "My fiancée died. Such a woman... my future is gone.",
    "My lover died. I am so alone.",
    "My brother died. My own flesh and blood...",
    "My sister died. My own flesh and blood...",
    "My grandchild died. My own flesh and blood...",
    "My father died. He's gone forever.",
    "My mother died. She's gone forever.",
    "My niece died. Such a wonderful child.",
    "My nephew died. Such a wonderful child.",
    "My half-sibling died. My own flesh and blood...",
    "My aunt died.",
    "My uncle died.",
    "My grandparent died.",
    "My cousin died. My own flesh and blood...",
    "My kin died.",
    "Test thought for debugging.",
    "That lavish meal was amazing. It nourished my body and my soul.",
    "I ate a really tasty fine meal. Yum!",
    "I had to eat raw food. We should be cooking that kind of food before eating it. We're not animals.",
    "I had to eat animal kibble. It's like I don't get to be human any more.",
    "I had to eat the flesh of a dead creature without even butchering or cooking it.",
    "I ate the meat of another human, raw, like an animal. This is a nightmare.",
    "I ate the meat of another human, raw, like an animal. It was so... succulent.",
    "I ate a meal made from the meat of another human. This is horrible.",
    "I ate a meal made from the meat of another human. So pleasurable. If only I had some fava beans and a nice chianti.",
    "I ate some gray, slimy insect meat. It was, possibly, the most disgusting thing I've ever tasted.",
    "I ate a meal cooked from gray, slimy insect meat. The seasoning partly covered the taste, but there were glands and fluid pockets in there that I can't identify.",
    "I ate some disgusting, putrid food. It was melting in my mouth - but not in a good way.",
    "I got married! It's so wonderful to be starting a new life together!",
    "It was great to see two people come together to build a future like that.",
    "I had a good time at that party.",
    "I enjoyed listening to that performance.",
    "They loved me. They really loved me.",
    "That speech was atrocious. It made me realize how little hope we really have.",
    "That speech was more awkward than inspiring. If that's who we're listening to, I'm worried.",
    "That speech made me feel like we have a solid path forward.",
    "That speech was moving emotionally and intellectually. I am filled with purpose.",
    "We just lost someone of our colony in a tragic way.",
    "Such a tender, unique animal. Why did it have to go?",
    "Such a wonderful person, lost. The universe gets darker every day.",
    "My son has gone lost. I hope he will get back to us someday.",
    "My daughter has gone lost. I hope she will get back to us someday.",
    "My husband has gone lost. I hope he will get back to us someday.",
    "My wife has gone lost. I hope she will get back to us someday.",
    "My fiance has gone lost. I hope he will get back to us someday.",
    "My fiancée has gone lost. I hope she will get back to us someday.",
    "My lover has gone lost. I hope he will get back to us someday.",
    "My brother has gone lost. I hope he will get back to us someday.",
    "My sister has gone lost. I hope she will get back to us someday.",
    "My grandchild has gone lost. I hope they will get back to us someday.",
    "My father has gone lost. I hope he will get back to us someday.",
    "My mother has gone lost. I hope she will get back to us someday.",
    "My niece has gone lost. I hope she will get back to us someday.",
    "My nephew has gone lost. I hope he will get back to us someday.",
    "My half-sibling has gone lost.",
    "My aunt has gone lost. I hope she will get back to us someday.",
    "My uncle has gone lost. I hope he will get back to us someday.",
    "My grandparent has gone lost.",
    "My cousin has gone lost.",
    "My kin has gone lost.",
    "I had to eat a meal off the ground. Can't we get a table around here?",
    "I was disturbed during sleep by people moving around nearby. A private room would solve this.",
    "It's a tough situation, but I'm excited to be founding a new settlement.",
    "I'm getting used to this, but it's still an exciting new situation. I hope this works out...",
    "I had to sleep outdoors without any protection from the elements.",
    "I had to sleep on the ground like an animal.",
    "I had to sleep in the cold. We really need some heaters.",
    "I had to sleep in unbearable heat. Can't we have air conditioning?",
    "This colony sold a prisoner into slavery. That's a worrying thought.",
    "I have been freed from slavery. I'm so thankful!",
    "We released a healthy prisoner. It feels good to know we even treat prisoners well.",
    "Extracting the flesh from their bodies is so bloody and satisfying.",
    "The colony took body parts from a guest or prisoner. It's horrible, breaking someone down for parts when they have no choice.",
    "Someone took body parts from a colonist. It's horrible, breaking someone down for parts when they have no choice.",
    "The colony harvested body parts from me! They're breaking me down like an old engine!",
    "The colony had me in jail for a while, like a caged animal.",
    "It felt good to finally unbottle my feelings.",
    "A cute animal nuzzled me.",
    "This colony buried someone in an ornamented sarcophagus. May their soul rest in peace.",
    "I'm soaking wet.",
    "I butchered someone up like an animal.",
    "We butchered someone up like an animal.",
    "I saw a dead body laying on the ground. It was disturbing.",
    "I saw a rotting corpse laying on the ground. It was disgusting.",
    "I saw one of my people die. They were alive one moment, and dead the next.",
    "I saw someone die. They were alive one moment, and dead the next.",
    "I saw a member of my family die. My own flesh and blood...",
    "I saw someone die! That was intense!",
    "I killed someone! What a rush!",
    "They were leading efforts to destroy us, and I took them down!",
    "Blood beats metal, you damn machines!",
    "The only good bug is a dead bug!",
    "We just denied someone's request to join us. I hope they make it.",
    "We just banished someone. I hope they make it, but I'm worried.",
    "We banished someone in such a way that there's almost no way they'll survive.",
    "We banished a prisoner in such a way that there's almost no way they'll survive.",
    "Can't we keep control of our own people? I feel like anything could happen to me here.",
    "My bonded animal was banished!",
    "We had a chance to rescue my relative, and failed. I could have helped!",
    "We rescued one of my relatives. Finally, I can breathe a sigh of relief.",
    "I was rescued! I almost thought I was done for back there. I'm so thankful.",
    "I've been preparing this caravan for a while. I'm looking forward to the upcoming journey.",
    "So much thought and preparation have gone into this adventure. I can't wait to set off!",
    "I have a job to do.",
    "I ate my meal in a decent dining room.",
    "I ate my meal in a slightly impressive dining room.",
    "I ate my meal in an impressive dining room.",
    "I ate my meal in a very impressive dining room.",
    "I ate my meal in an extremely impressive dining room. I could stay there forever.",
    "I ate my meal in an unbelievably impressive dining room. I could stay there forever.",
    "I ate my meal in a wonderful dining room. I could stay there forever.",
    "I had fun in a decent rec room.",
    "I had fun in a nice rec room.",
    "I had a great time in an impressive rec room.",
    "I had a great time in a very impressive rec room.",
    "I had a great time in an extremely impressive rec room. I could stay there forever.",
    "I had a great time in an unbelievably impressive rec room. I could stay there forever.",
    "I had a great time in a wonderful rec room. I could stay there forever.",
    "I had to sleep in an awful room.",
    "I got to sleep in a pretty decent bedroom.",
    "I got to sleep in a slightly impressive bedroom. I like it.",
    "I slept in an impressive bedroom. It was great.",
    "I slept in a very impressive bedroom. I love it.",
    "I slept in an extremely impressive bedroom. It was marvelous.",
    "I slept in an unbelievably impressive bedroom. It was truly astounding.",
    "I slept in a heavenly bedroom. It was wondrous.",
    "I had to sleep in an awful barracks. Not only was it a horrible room, but I also had to share it!",
    "I had to sleep in a dull barracks. Not only that, but I also had to share it with other people.",
    "I had to sleep in a mediocre barracks with other people around. I really don't like this.",
    "I slept in a decent barracks, but I really dislike sharing a sleeping space.",
    "I got to sleep in a pretty nice barracks. But I really don't like sharing a room with others.",
    "I got to sleep in an impressive barracks. It sucks that I had to share it, though.",
    "I slept in a very impressive barracks. I don't even mind sharing it.",
    "I slept in an extremely impressive barracks. I don't even mind sharing it.",
    "The barracks I slept in was so impressive that I don't even mind sharing it.",
    "I slept in a barracks that was simply wondrous. Even sharing such a space makes me happy.",
    "I've been directly insulted! What an awful person!",
    "I've been bestowed with kind words! What a nice person!",
    "I was rescued by someone! I almost thought I was done for back there. I'm so thankful.",
    "Someone I love was sold to a trader like a piece of meat!",
    "My special bonded animal was given away!",
    "I'm a teetotaler; I would never take drugs by choice. But I was forced! I feel unclean.",
    "I'm a body purist; I would never take luciferium by choice. But I was forced! I feel unclean.",
    "I attempted to create a romance, but I got the cold shoulder. Feels bad man.",
    "Someone I don't like tried to romance me.",
    "I was just dumped like a load of garbage.",
    "How could someone cheat on me!",
    "We made a commitment, and they just tore it apart.",
    "I thought we were meant to marry. But I was just shot down.",
    "There's nothing like a tumble between the sheets to lift the mood.",
    "I feel strange, but also very relaxed.",
    "I've been in the dark for a while. I don't like it.",
    "The holes in my outfit are annoyingly large. Can't I get something new to wear?",
    "This thing looks like it's about to fall apart. Can't I wear something that doesn't belong in a trash heap?",
    "I'm wearing apparel that was clearly made for {0}s! This is embarrassing.",
    "I am wearing a piece of apparel that someone died in. It creeps me out and feels dirty.",
    "I am wearing two pieces of apparel that someone died in. It creeps me out and feels dirty.",
    "I am wearing three pieces of apparel that someone died in. It creeps me out and feels dirty.",
    "I am wearing four or more pieces of apparel that someone died in. It creeps me out and feels dirty.",
    "Wearing parts of someone's body is... disturbing.",
    "I'm dressed like an insane person.",
    "I think there may be a face on my clothes. Oh no... my clothes *are* a face.",
    "I look like a freak from a horror show, and I feel like I'm living in a horror show.",
    "I enjoy wearing the suffering of others.",
    "This will scare them. All will know my power.",
    "The faces on my clothes aren't smiling, but they make *me* happy.",
    "The flesh! The flesh signals my triumph!",
    "I don't feel very well.",
    "I'm uncomfortably cold.",
    "I'm so cold, I'm shivering.",
    "I can't stop shivering. My teeth are chattering. All I can think of is getting warm.",
    "My teeth are chattering so hard I can barely speak. My toes are numb. I need to get warm.",
    "It's too hot here. I'm sweating.",
    "It's way too hot here. If I could just have a breath of cool air...",
    "I feel like I'm in an oven! I'm not sure how long I can handle this.",
    "This place is searing hot. I think I could die from this heat!",
    "I'm really hungry.",
    "These hunger pangs are hard to ignore.",
    "It's been so long since I ate. I'm all fuzzy and it's hard to focus. My body is starting to waste away.",
    "I can feel my body wasting away. My stomach hurts like never before.",
    "I can barely think about anything but food. My skin is stretching over my bones. Am I going to die?",
    "I can barely move or think about anything but food. My stomach hurts like never before. I feel like I'm going to pass out.",
    "Food... food... anything... please...",
    "I haven't slept in a while. It's hard to keep focus.",
    "I'm so tired. I just want to lay down and rest for a few minutes...",
    "I'm so exhausted I can barely stand. My eyelids have lead weights on them. Let me sleep...",
    "It's been so long since I did anything for fun on my own time.",
    "We need more variation in recreation activities, and I need time to enjoy them. This place is really dull.",
    "We need more variation in the recreation activities, and I need time to enjoy them.",
    "I've been having a great time doing various things I like to do.",
    "I've been enjoying myself so much, I love it!",
    "I've been kind of uncomfortable recently. We need to get something soft to sit on around here.",
    "I've been comfortable recently.",
    "I've been very comfortable recently.",
    "I've been extremely comfortable recently. This place is so cushy!",
    "I am resting on clouds of heaven.",
    "This place is unbearably grotesque. I can't look at this any more.",
    "This place is really ugly. I wish I didn't have to look at this any more.",
    "This place is kind of unsightly. I wish I didn't have to look at all this.",
    "This place looks nice.",
    "I really like this place. It's beautiful.",
    "This place is beautiful. It lifts me up and makes me love life.",
    "This space is so tiny. I feel like a rat in a cage.",
    "This room is too small. I wish I had more space to move around and breathe.",
    "This room is so expansive, I feel free.",
    "I've been underground too long. I feel like the weight of this mountain is crushing me. I need to see the sky and feel the wind.",
    "How long have I been underground? I need to get out in the fresh air and spend some time under the sky.",
    "I've spent so long indoors I feel like the roof is pressing in. I need to get out and see the sky.",
    "It's been too long since I've seen the sky.",
    "I'd like to go outside and get some fresh air.",
    "I shouldn't be outdoors.",
    "I've been outside too much recently.",
    "Being outside so much is wrong for me.",
    "I've been outside way too much recently. This open space is so disturbing.",
    "These open spaces are driving me insane!",
    "I'm fascinated by drugs. I want to experience them more.",
    "I'm fascinated by drugs. I want to experience them a lot harder.",
    "I'm fascinated by drugs. I want them! More intensity!",
    "I'm fascinated by drugs, and I love satisfying my desires.",
    "I'm fascinated by drugs, and I am fully satisfied with my drug consumption.",
    "I'm interested in drugs. I want to try more.",
    "I'm interested in drugs. I want to experience a lot more.",
    "I'm interested in drugs. I want to consume drugs really badly.",
    "I'm interested in drugs. I enjoyed satisfying my desire.",
    "I'm interested in drugs. I am really satisfied with all the drugs I've gotten recently.",
    "My prison cell is an awful place.",
    "My prison cell is pretty decent.",
    "My prison cell seems to be a nice place.",
    "My prison cell is impressive. I can't believe they are keeping me in a room like this.",
    "My prison cell is very impressive. I can't believe they are keeping me in a room like this. I love it!",
    "My prison cell is extremely impressive. I can't believe they are keeping me in a room like this. I love it!",
    "My prison cell is unbelievably impressive. This is the best place ever!",
    "My prison cell is the best place one can ever imagine. I can stay here forever.",
    "My prison barracks is an awful place.",
    "I'm living in a dull barracks.",
    "My prison barracks is slightly impressive.",
    "My prison barracks is impressive. I like it.",
    "My prison barracks is very impressive. I like it.",
    "My prison barracks is extremely impressive. I can't believe they are keeping me in a place like this.",
    "My prison barracks is unbelievably impressive. I can't believe they are keeping me in a place like this.",
    "My prison barracks is wonderful! I can't believe they are keeping me in a place like this.",
    "This hospital is awful.",
    "I'm stuck in a dull hospital.",
    "My hospital is slightly impressive. It makes me feel a bit better.",
    "My hospital is impressive. It makes me feel better.",
    "My hospital is very impressive. It makes me feel better.",
    "My hospital is extremely impressive. It makes me feel better already.",
    "My hospital is unbelievably impressive. It makes me feel better already.",
    "My hospital is wonderful! It makes me feel better already.",
    "Being with them makes me feel this way.",
    "Being together with my bonded animal makes me feel better.",
    "Being together with my bonded animals makes me feel better.",
    "I should be together with my bonded animal.",
    "I should be together with my bonded animals.",
    "I should be sleeping with a lover or spouse.",
    "I have to share a bed with someone who I don't particularly want to.",
    "One of us died and we're just leaving them lying in the open. Nobody should be left like that. People deserve a decent burial.",
    "I'm naked. This is humiliating.",
    "Ow... That hurts.",
    "Ughhh... When will it end?",
    "Make it stop... make it stop... make it stop...",
    "AAAAAHHH!",
    "The psychic emanator makes me feel strange, but also very relaxed.",
    "It's like a calming voice at the back of my mind, soothing me, settling my nerves.",
    "It's like a scratching at the back of my mind. A voice, whispering. I can only make out a few words, and I don't like them.",
    "I feel like someone is always just out of sight, speaking to me. The voice changes but the message doesn't. I'm supposed to hurt people. Make it go away!",
    "The voice is unbearably loud. It's hard to concentrate. I find myself talking back to it, yelling at it. But it just keeps shouting!",
    "My heart pounds and I'm sweating. All I can think of is hurting and suffering and all these enemies around me. They're my nightmare, my nightmare, my nightmare...",
    "It feels amazing.",
    "The view is amazing.",
    "I enjoy my work.",
    "I love my work. I could do this all day, every day.",
    "I am missing my tongue. It is so frustrating not being able to speak!",
    "A rotten stink invades my nostrils and sticks to my skin. It makes me sick.",
    "The stench of rot is so thick I almost feel like I'm swimming in it. I can hardly breathe in this filth!",
    "That rot stink was horrible - and it feels like it's still stuck to me.",
    "Sickly yellow toxic flakes drift around me like snow. The air burns my skin, throat, and lungs everywhere it touches.",
    "Ow... Heh heh heh... I could get used to this!",
    "Ughhh... It hurts, but I love it! Keep it coming!",
    "Ouch... I think something's broken... But what an exquisite feeling!",
    "Ahhh... Am I in heaven?",
    "Flesh is so limiting. I wish I had some kind of artificial body part.",
    "This artificial enhancement is cool. I want more.",
    "Two artificial enhancements are better than one. I wish I had more.",
    "Three artificial enhancements, and my weak human flesh is receding. But I still want more machine power.",
    "Four artificial enhancements and I am becoming more than human. But there's still some flesh that needs replacing.",
    "Five artificial enhancements! How could an enhanced being like me ever feel sad?",
    "I asked for this.",
    "I hate having this unnatural enhancement. I feel filthy!",
    "Two artificial enhancements are sullying my natural, pure body. It makes me sick to think of it.",
    "Three artificial enhancements violate my body's pure flesh. I shudder when I think of it... and these objects shudder with me.",
    "I have four artificial enhancements; it's like I'm becoming a robot. What a horrifying sensation.",
    "Five artificial enhancements... Is there anything left of me? Or am I just a robot that thinks it's human?",
    "I asked for the exact opposite of this!",
    "I hate shooting from a distance. I want to get up close and personal!",
    "It makes me think of flame and fire. I'm so happy.",
    "The sinuous flame dances, warm like love, bright like freedom, all-consuming.",
    "I'm a nudist but I have to wear these clothes. It's not unbearable - but I still feel constrained and uncomfortable.",
    "I'm nude and loving it! I feel so free and unconstrained and in touch with my surroundings!",
    "I like working or simply being indoors.",
    "I love working or simply being in the underground.",
    "I don't like being outside. I want to get back to the underground.",
    "I don't like working during the day.",
    "I feel much better at night.",
    "I'm greedy. I want a really impressive bedroom.",
    "I'm greedy. My room is pathetic! I want a really impressive bedroom.",
    "I'm greedy. My room isn't nearly good enough. I want a really impressive bedroom.",
    "I'm greedy. My room isn't good enough. I want a really impressive bedroom.",
    "I'm greedy. My room isn't quite good enough. I want a really impressive bedroom.",
    "I need to have the best one!",
    "My bedroom is just how I want it to be. Very humble and simple.",
    "My bedroom is very humble and simple. I like it.",
    "I don't like having an impressive bedroom.",
    "Natural bonus from 'sanguine' trait.",
    "Natural bonus from 'optimist' trait.",
    "Natural penalty from 'pessimist' trait.",
    "Natural penalty from 'depressive' trait.",
    "Natural penalty from 'tortured artist' trait.",
    "The animal can be assigned a master whom it will follow and defend.",
    "The animal can be released to attack distant targets instead of just guarding its master.",
    "The animal will rescue wounded allies and drag them to safety.",
    "The animal will randomly haul items from time to time (though it can't be directed to haul specific items).",
    "The animal can learn to consider itself a member of your colony.",
    "{PAWN_nameDef} enjoys the feeling of freedom that comes from being nude. {PAWN_pronoun} can handle clothing, but will be happier without it.",
    "{PAWN_nameDef} gets a rush from hurting people, and never minds the sight of blood or death. {PAWN_pronoun} is four times as likely to start a social fight as others.",
    "{PAWN_nameDef} is an exceptionally agreeable and giving person. {PAWN_pronoun} rarely insults others or starts fights, and will sometimes offer kind words to brighten the moods of those around {PAWN_objective}. {PAWN_pronoun} also never judges people by their appearance.",
    "{PAWN_nameDef} has no empathy. The suffering of others doesn't bother {PAWN_objective} at all. {PAWN_pronoun} doesn't mind if others are butchered, left unburied, imprisoned, or sold to slavery - unless it affects {PAWN_objective}. {PAWN_pronoun} also feels no mood boost from socializing.",
    "{PAWN_nameDef} was taught that eating human meat is wrong and horrible. But one time, long ago, {PAWN_pronoun} tried it... and {PAWN_pronoun} liked it.",
    "{PAWN_nameDef} always says exactly what's on {PAWN_possessive} mind, especially if it's bugging {PAWN_objective}. That tends to rub people the wrong way.",
    "{PAWN_nameDef} is too smart for {PAWN_possessive} own good. {PAWN_pronoun} learns everything much faster than everyone, but can be quite eccentric.",
    "{PAWN_nameDef} likes to fight up close and personal. {PAWN_possessive} accuracy is greatly increased in melee combat, but {PAWN_pronoun}'ll be very unhappy if asked to carry a ranged weapon.",
    "For {PAWN_nameDef}, there's something exciting about getting hurt. {PAWN_pronoun} doesn't know why, {PAWN_pronoun}'s just wired differently.",
    "{PAWN_nameDef} likes to be up during the night, and sleep during the day.\\n\\n{PAWN_pronoun} gets a mood bonus if awake at night (23h-6h) and mood loss if awake during the day (11h-18h).\\n\\n{PAWN_pronoun} doesn't get a mood penalty for being in the dark.",
    "{PAWN_nameDef} needs a really impressive bedroom. {PAWN_pronoun} gets a mood loss if {PAWN_pronoun} doesn't get what {PAWN_pronoun} wants.",
    "For {PAWN_nameDef}, it's degrading to have a less impressive bedroom than someone else. {PAWN_pronoun} gets a mood loss if any colonist has a more impressive bedroom.",
    "{PAWN_nameDef} has forsaken physical comforts and enjoyments in favor of a simple, pure lifestyle. {PAWN_pronoun} will become unhappy if {PAWN_pronoun} has a bedroom that's too impressive. {PAWN_pronoun} also dislikes fancy food and prefers to eat raw. {PAWN_pronoun} never judges others by their appearance.",
    "{PAWN_nameDef} is romantically attracted to people of {PAWN_possessive} own gender.",
    "{PAWN_nameDef} is romantically attracted to both men and women.",
    "{PAWN_nameDef} has no sexual attraction to anyone at all.",
    "{PAWN_nameDef}'s voice has a particularly grating, nasal quality to it, and {PAWN_pronoun} tends to talk in barked, garbled phrases. This predisposes others to dislike {PAWN_objective}.",
    "{PAWN_nameDef} breathes heavily all the time, and sweats constantly. People find it creepy.",
    "{PAWN_nameDef} loves fire. {PAWN_pronoun} will never extinguish fires, and will occasionally go on random fire starting sprees. {PAWN_pronoun} will be happy around flames, and happier when wielding an incendiary weapon.",
    "{PAWN_nameDef} is weak and cowardly. Even a little pain will immobilize {PAWN_objective}.",
    "{PAWN_nameDef} has remarkable kinesthetic intelligence. {PAWN_pronoun} seems to dance around danger with preternatural grace.",
    "{PAWN_nameDef} has a knack for learning. {PAWN_pronoun} picks things up much faster than others.",
    "{PAWN_nameDef} is slow on the uptake. {PAWN_pronoun} learns much slower than others.",
    "{PAWN_nameDef} has no need to experience the outdoors or light. {PAWN_pronoun} will never feel cooped up or get cabin fever, no matter how long {PAWN_pronoun} stays inside, and is not bothered by darkness.",
    "{PAWN_nameDef} feels limited in {PAWN_possessive} feeble human body. {PAWN_pronoun} often dreams of being enhanced with artificial body parts or xenogenetics.",
    "{PAWN_nameDef} believes the human body is limited for a reason. To {PAWN_objective}, artificial body parts and xenogenes are unethical and disgusting.",
    "{PAWN_nameDef} really dislikes and distrusts men.",
    "{PAWN_nameDef} really dislikes and distrusts women.",
    "{PAWN_nameDef} has a fantastic memory for detail. {PAWN_pronoun} will lose unused skills at half the rate of other people.",
    "{PAWN_nameDef} has thick skin, dense flesh, and durable bones. {PAWN_pronoun} takes much less damage than other people from the same blows. {PAWN_pronoun} is extremely hard to kill.",
    "{PAWN_nameDef} feels alienated and misunderstood by other human beings. {PAWN_pronoun} will have a constant mood debuff, but gain a chance (50%) to get a creativity inspiration after a mental break.",
    "{PAWN_nameDef}'s life revolves around food. {PAWN_pronoun} gets hungry quickly, and will occasionally be overcome with the urge to eat ravenously, even when not hungry.",
    "{PAWN_nameDef} doesn't need as much sleep as the average person. Whether {PAWN_pronoun}'s sleeping on a bed or on the ground, {PAWN_pronoun} will be fully rested in about two thirds the usual time.",
    "[PAWN_nameDef] is always falling behind the group whenever [PAWN_pronoun] goes anywhere.",
    "[PAWN_nameDef] likes to be where [PAWN_pronoun]'s going. [PAWN_pronoun] walks quicker than most people.",
    "[PAWN_nameDef] always moves with a sense of urgency - so much so that others often fail to keep up.",
    "[PAWN_nameDef] is utterly fascinated with chemical sources of enjoyment. Consuming recreational drugs will create a good mood, while abstaining will lead to increasing frustration over time and possibly drug binges. [PAWN_pronoun] will ignore directives to not use recreational drugs, and will consume more than a normal person.",
    "[PAWN_nameDef] has an unusual interest in chemical sources of enjoyment. Consuming recreational drugs will create a good mood, while abstaining will lead to increasing frustration over time and possible drug binges. [PAWN_pronoun] will ignore directives to not use recreational drugs, and will consume more than a normal person.",
    "[PAWN_nameDef] abhors the idea of gaining pleasure from chemicals. [PAWN_pronoun] strictly avoids alcohol and recreational drugs.",
    "[PAWN_nameDef] is just naturally upbeat about [PAWN_possessive] situation, pretty much all the time, no matter what it is.",
    "[PAWN_nameDef] is naturally optimistic about life. It's hard to get [PAWN_objective] down.",
    "[PAWN_nameDef] tends to look on the bad side of life.",
    "[PAWN_nameDef] is perenially unhappy. [PAWN_pronoun] has trouble sustaining a good mood even when everything is fine.",
    "[PAWN_nameDef]'s will is an iron shield. [PAWN_pronoun] keeps going through thick and thin, when others broke down long before.",
    "[PAWN_nameDef] is mentally tough and won't break down under stresses that would crack most people.",
    "[PAWN_nameDef] tends to crack under pressure.",
    "[PAWN_nameDef] is on a hair-trigger all the time. [PAWN_pronoun] is the first to break in any tough situation.",
    "[PAWN_nameDef] likes to have things squared away. [PAWN_pronoun] will work harder than most to attain this state of affairs, but [PAWN_possessive] nerves can get the better of [PAWN_objective].",
    "[PAWN_nameDef] feels constantly nervous about everything that has to get done. [PAWN_pronoun] will work extremely hard to attain this state of affairs, but [PAWN_possessive] nerves can easily get the better of [PAWN_objective].",
    "[PAWN_nameDef] has an easy time staying on-task and focused, and gets things done much faster than the average person.",
    "[PAWN_nameDef] is a natural hard worker and will finish tasks faster than most.",
    "[PAWN_nameDef] is a little bit lazy.",
    "[PAWN_nameDef] loves idleness and hates anything productive. [PAWN_pronoun] moves slowly and rarely stays focused on a task.",
    "[PAWN_nameDef]'s mind is like a psychic tuning fork. [PAWN_pronoun] is extremely sensitive to psychic phenomena.",
    "[PAWN_nameDef]'s mind is unusually sensitive to psychic phenomena.",
    "[PAWN_nameDef]'s mind is psychically out of tune with others. [PAWN_pronoun] isn't as affected by psychic phenomena.",
    "[PAWN_nameDef]'s mind works on a psychic frequency different from everyone else. [PAWN_pronoun] just isn't affected by psychic phenomena.",
    "[PAWN_nameDef] takes more time to aim when shooting. [PAWN_pronoun] shoots less often than others, but with more accuracy.",
    "Pew! Pew! Pew! [PAWN_nameDef] just likes pulling the trigger. [PAWN_pronoun] shoots faster than others, but less accurately.",
    "[PAWN_nameDef] is exceptionally beautiful, with an exotic-yet-familiar facial structure and an arresting gaze. People are attracted to [PAWN_objective] before [PAWN_pronoun] even opens [PAWN_possessive] mouth.",
    "[PAWN_nameDef] has a pretty face, which predisposes people to like [PAWN_objective].",
    "[PAWN_nameDef] is somewhat ugly. This subtly repels others during social interactions.",
    "[PAWN_nameDef] is staggeringly ugly. [PAWN_possessive] face looks like a cross between a drawing by an untalented child, a malformed fetus in a jar of formaldehyde, and a piece of modern art. Others must exert conscious effort to look at [PAWN_objective] while conversing.",
    "[PAWN_nameDef] has a naturally powerful immune system. [PAWN_pronoun] will gain immunity much faster than a normal person would, and can survive illnesses that would kill others.",
    "[PAWN_nameDef] has an awful immune system. [PAWN_pronoun] gets sick more often than usual, frequently with illnesses that nobody in the colony has been afflicted by.",
    "A clear day. No penalties or modifiers.",
    "Fog reduces the accuracy of ranged weapons.",
    "Rain reduces the accuracy of ranged weapons, extinguishes fire, and slows people down.",
    "Dry thunderstorms are dangerous because the lightning can start fires and there is no rain to put them out.",
    "The lightning will start fires, but the rain will put it out. The rain also reduces movement speed and shooting accuracy.",
    "Reduces accuracy and movement speed.",
    "Snow reduces the accuracy of ranged weapons, extinguishes fire, and slows people down.",
    "Extinguish fires in the colony.",
    "Go to a medical bed for treatment if you have an immediately life-threatening health condition.",
    "Treat the sick, bring them food, cheer them up, and perform assigned surgeries. Doctors will care for both colonists and prisoners.",
    "Rest in bed to recuperate from not-immediately-life-threatening medical problems.",
    "Unskilled and easy tasks. Release prisoners and flick switches on machines.",
    "Manage, feed, chat with, and recruit prisoners.",
    "Tame, train, harvest resources from and slaughter animals.",
    "Prepare meals and butcher meat.",
    "Kill animals which are designated to be hunted.",
    "Build things that you've designated, and fix damaged or broken-down buildings.",
    "Plant seeds, harvest crops, and forage for wild plants.",
    "Digging and drilling.",
    "Cut or harvest plants as designated.",
    "Create weapons and tools from raw materials, either as a blacksmith or by machining.",
    "Create apparel from raw materials.",
    "Create beautiful works of art from raw materials.",
    "Do general low-skilled labor at work stations. This includes stonecutting, smelting, and more.",
    "Carry things to where they need to be.",
    "Clear snow and clean the floor in the home area.",
    "Perform research work.",
    "A group of traveling people.",
    "A base of one of the factions.",
    "An abandoned settlement.",
    "A destroyed settlement.",
    "The location of a hidden ship which can help you escape the planet.",
    "A caravan under attack.",
    "Transport pods in flight.",
    "A temporary waypoint.",
    "A site designated for peace talks.",
  ],
  workerClass: [
    "BiomeWorker_BorealForest",
    "BiomeWorker_Tundra",
    "BiomeWorker_ColdBog",
    "BiomeWorker_IceSheet",
    "BiomeWorker_SeaIce",
    "BiomeWorker_TemperateForest",
    "BiomeWorker_TemperateSwamp",
    "BiomeWorker_TropicalRainforest",
    "BiomeWorker_TropicalSwamp",
    "BiomeWorker_AridShrubland",
    "BiomeWorker_Desert",
    "BiomeWorker_ExtremeDesert",
    "BiomeWorker_Ocean",
    "ComplexThreatWorker_SleepingMechanoids",
    "ComplexThreatWorker_Ambush",
    "DamageWorker_Flame",
    "DamageWorker_AddInjury",
    "DamageWorker_Frostbite",
    "DamageWorker_Cut",
    "DamageWorker_Blunt",
    "DamageWorker_Stab",
    "DamageWorker_Scratch",
    "DamageWorker_Bite",
    "DamageWorker_Extinguish",
    "DamageWorker_Stun",
    "ThoughtWorker_Hediff",
    "GatheringWorker_Party",
    "GatheringWorker_MarriageCeremony",
    "GoodwillSituationWorker_PermanentEnemy",
    "GoodwillSituationWorker_NaturalEnemy",
    "GoodwillSituationWorker_AttackingSettlement",
    "Recipe_InstallImplant",
    "Recipe_InstallArtificialBodyPart",
    "Recipe_InstallNaturalBodyPart",
    "Recipe_RemoveImplant",
    "Recipe_RemoveHediff",
    "Recipe_AddHediff",
    "InteractionWorker_RecruitAttempt",
    "InteractionWorker_Nuzzle",
    "InteractionWorker_SparkJailbreak",
    "InteractionWorker_RomanceAttempt",
    "InteractionWorker_MarriageProposal",
    "InteractionWorker_Breakup",
    "InteractionWorker_Chitchat",
    "InteractionWorker_DeepTalk",
    "InteractionWorker_Slight",
    "InteractionWorker_Insult",
    "InteractionWorker_KindWords",
    "MentalStateWorker_BingingDrug",
    "MentalStateWorker_Jailbreaker",
    "MentalStateWorker_Slaughterer",
    "MentalStateWorker_MurderousRage",
    "MentalStateWorker_TantrumAll",
    "MentalStateWorker_TargetedTantrum",
    "MentalStateWorker_BedroomTantrum",
    "MentalStateWorker_SadisticRageTantrum",
    "MentalStateWorker_CorpseObsession",
    "MentalStateWorker_BingingFood",
    "MentalStateWorker_WanderOwnRoom",
    "MentalStateWorker_InsultingSpreeAll",
    "MentalStateWorker_TargetedInsultingSpree",
    "MentalBreakWorker_BingingDrug",
    "MentalBreakWorker_Catatonic",
    "MentalBreakWorker_RunWild",
    "MentalStateWorker_Roaming",
    "ThoughtWorker_Expectations",
    "FeatureWorker_Island",
    "FeatureWorker_Archipelago",
    "FeatureWorker_Peninsula",
    "FeatureWorker_Bay",
    "FeatureWorker_Biome",
    "FeatureWorker_OuterOcean",
    "FeatureWorker_MountainRange",
    "HistoryAutoRecorderWorker_WealthTotal",
    "HistoryAutoRecorderWorker_WealthItems",
    "HistoryAutoRecorderWorker_WealthBuildings",
    "HistoryAutoRecorderWorker_WealthPawns",
    "HistoryAutoRecorderWorker_FreeColonists",
    "HistoryAutoRecorderWorker_Prisoners",
    "HistoryAutoRecorderWorker_ColonistMood",
    "HistoryAutoRecorderWorker_Adaptation",
    "HistoryAutoRecorderWorker_ThreatPoints",
    "HistoryAutoRecorderWorker_PopAdaptation",
    "HistoryAutoRecorderWorker_PopIntent",
    "MainButtonWorker_ToggleResearchTab",
    "MainButtonWorker_ToggleWorld",
    "PawnColumnWorker_Slaughter",
    "PawnColumnWorker_Sterilize",
    "PawnColumnWorker_ReleaseAnimalToWild",
    "PawnColumnWorker_FollowDrafted",
    "PawnColumnWorker_FollowFieldwork",
    "PawnColumnWorker_Hunt",
    "PawnColumnWorker_Tame",
    "PawnColumnWorker_CopyPasteWorkPriorities",
    "PawnColumnWorker_CopyPasteTimetable",
    "PawnColumnWorker_Gender",
    "PawnColumnWorker_LifeStage",
    "PawnColumnWorker_Pregnant",
    "PawnColumnWorker_Bond",
    "PawnColumnWorker_Info",
    "PawnColumnWorker_Predator",
    "PawnColumnWorker_MentalState",
    "PawnColumnWorker_Faction",
    "PawnColumnWorker_Gap",
    "PawnColumnWorker_RemainingSpace",
    "PawnColumnWorker_Label",
    "PawnColumnWorker_Age",
    "PawnColumnWorker_Master",
    "PawnColumnWorker_MedicalCare",
    "PawnColumnWorker_AllowedArea",
    "PawnColumnWorker_AllowedAreaWide",
    "PawnColumnWorker_HostilityResponse",
    "PawnColumnWorker_Outfit",
    "PawnColumnWorker_DrugPolicy",
    "PawnColumnWorker_FoodRestriction",
    "PawnColumnWorker_Timetable",
    "PawnColumnWorker_Carry",
    "PawnColumnWorker_ManhunterOnDamageChance",
    "PawnColumnWorker_ManhunterOnTameFailChance",
    "PawnGroupKindWorker_Normal",
    "PawnGroupKindWorker_Trader",
    "PawnsArrivalModeWorker_EdgeWalkIn",
    "PawnsArrivalModeWorker_EdgeDrop",
    "PawnsArrivalModeWorker_EdgeWalkInGroups",
    "PawnsArrivalModeWorker_EdgeDropGroups",
    "PawnsArrivalModeWorker_CenterDrop",
    "PawnsArrivalModeWorker_RandomDrop",
    "PawnsArrivalModeWorker_ClusterDrop",
    "PawnTable_PlayerPawns",
    "PawnTable_PlayerPawnsTimetable",
    "PawnTable_Animals",
    "PawnTable_Wildlife",
    "RecordWorker_TimeAsColonistOrColonyAnimal",
    "RecordWorker_TimeAsQuestLodger",
    "RecordWorker_TimeAsPrisoner",
    "RecordWorker_TimeInBed",
    "RecordWorker_TimeInBedForMedicalReasons",
    "RecordWorker_TimeDowned",
    "RecordWorker_TimeGettingJoy",
    "RecordWorker_TimeUnderRoof",
    "RecordWorker_TimeDrafted",
    "RecordWorker_TimeOnFire",
    "RecordWorker_TimeInMentalState",
    "RecordWorker_TimeHauling",
    "SpecialThingFilterWorker_CorpsesColonist",
    "SpecialThingFilterWorker_CorpsesStranger",
    "SpecialThingFilterWorker_CorpsesLarge",
    "SpecialThingFilterWorker_Rotten",
    "SpecialThingFilterWorker_Fresh",
    "SpecialThingFilterWorker_PlantFood",
    "SpecialThingFilterWorker_Smeltable",
    "SpecialThingFilterWorker_NonSmeltable",
    "SpecialThingFilterWorker_Burnable",
    "SpecialThingFilterWorker_NonBurnable",
    "SpecialThingFilterWorker_NonSmeltableWeapons",
    "SpecialThingFilterWorker_NonBurnableWeapons",
    "SpecialThingFilterWorker_BiocodedWeapons",
    "SpecialThingFilterWorker_NonBiocodedWeapons",
    "SpecialThingFilterWorker_BiocodedApparel",
    "SpecialThingFilterWorker_NonBiocodedApparel",
    "SpecialThingFilterWorker_NonDeadmansApparel",
    "SpecialThingFilterWorker_DeadmansApparel",
    "SpecialThingFilterWorker_AllowFemales",
    "SpecialThingFilterWorker_AllowMales",
    "PawnCapacityWorker_Consciousness",
    "PawnCapacityWorker_Moving",
    "PawnCapacityWorker_Manipulation",
    "PawnCapacityWorker_Talking",
    "PawnCapacityWorker_Eating",
    "PawnCapacityWorker_Sight",
    "PawnCapacityWorker_Hearing",
    "PawnCapacityWorker_Breathing",
    "PawnCapacityWorker_BloodFiltration",
    "PawnCapacityWorker_BloodPumping",
    "PawnCapacityWorker_Metabolism",
    "PawnRelationWorker_Parent",
    "PawnRelationWorker_Child",
    "PawnRelationWorker_Sibling",
    "PawnRelationWorker_HalfSibling",
    "PawnRelationWorker_Grandparent",
    "PawnRelationWorker_Grandchild",
    "PawnRelationWorker_NephewOrNiece",
    "PawnRelationWorker_UncleOrAunt",
    "PawnRelationWorker_Cousin",
    "PawnRelationWorker_GreatGrandparent",
    "PawnRelationWorker_GreatGrandchild",
    "PawnRelationWorker_GranduncleOrGrandaunt",
    "PawnRelationWorker_GrandnephewOrGrandniece",
    "PawnRelationWorker_CousinOnceRemoved",
    "PawnRelationWorker_SecondCousin",
    "PawnRelationWorker_Kin",
    "PawnRelationWorker_Spouse",
    "PawnRelationWorker_Fiance",
    "PawnRelationWorker_Lover",
    "PawnRelationWorker_Stepparent",
    "PawnRelationWorker_Stepchild",
    "PawnRelationWorker_ParentInLaw",
    "PawnRelationWorker_ChildInLaw",
    "PawnRelationWorker_ExSpouse",
    "PawnRelationWorker_ExLover",
    "Recipe_Surgery",
    "Recipe_ExecuteByCut",
    "Recipe_RemoveBodyPart",
    "RitualOutcomeEffectWorker_Speech",
    "RoomRoleWorker_None",
    "RoomRoleWorker_Room",
    "RoomRoleWorker_Bedroom",
    "RoomRoleWorker_PrisonCell",
    "RoomRoleWorker_DiningRoom",
    "RoomRoleWorker_RecRoom",
    "RoomRoleWorker_Hospital",
    "RoomRoleWorker_Laboratory",
    "RoomRoleWorker_Workshop",
    "RoomRoleWorker_StoreRoom",
    "RoomRoleWorker_Barracks",
    "RoomRoleWorker_PrisonBarracks",
    "RoomRoleWorker_Kitchen",
    "RoomRoleWorker_Tomb",
    "RoomRoleWorker_Barn",
    "RoomStatWorker_Impressiveness",
    "RoomStatWorker_Wealth",
    "RoomStatWorker_Space",
    "RoomStatWorker_Beauty",
    "RoomStatWorker_Cleanliness",
    "RoomStatWorker_FromStatByCurve",
    "SitePartWorker_Ambush",
    "SitePartWorker_DownedRefugee",
    "SitePartWorker_ItemStash",
    "SitePartWorker_Manhunters",
    "SitePartWorker_Outpost",
    "SitePartWorker_UnknownThreatMarker",
    "SitePartWorker_PreciousLump",
    "SitePartWorker_PrisonerWillingToJoin",
    "SitePartWorker_SleepingMechanoids",
    "SitePartWorker_Turrets",
    "StatWorker_PsyfocusCost",
    "StatWorker_MarketValue",
    "StatWorker_ShootingAccuracy",
    "StatWorker_PossibleCompOffsets",
    "StatWorker_MeleeDamageAmountTrap",
    "StatWorker_SurgerySuccessChanceFactor",
    "StatWorker_MeleeDPS",
    "StatWorker_MeleeArmorPenetration",
    "StatWorker_MeatAmount",
    "StatWorker_LeatherAmount",
    "StatWorker_MinimumHandlingSkill",
    "StatWorker_CaravanRidingSpeedFactor",
    "StatWorker_MeleeAverageDPS",
    "StatWorker_MeleeAverageArmorPenetration",
    "IncidentWorker_Ambush_EnemyFaction",
    "IncidentWorker_Ambush_ManhunterPack",
    "IncidentWorker_CaravanMeeting",
    "IncidentWorker_CaravanDemand",
    "IncidentWorker_DiseaseHuman",
    "IncidentWorker_DiseaseAnimal",
    "IncidentWorker_ResourcePodCrash",
    "IncidentWorker_PsychicSoothe",
    "IncidentWorker_SelfTame",
    "IncidentWorker_AmbrosiaSprout",
    "IncidentWorker_FarmAnimalsWanderIn",
    "IncidentWorker_GiveQuest",
    "IncidentWorker_ThrumboPasses",
    "IncidentWorker_RansomDemand",
    "IncidentWorker_MeteoriteImpact",
    "IncidentWorker_HerdMigration",
    "IncidentWorker_WildManWandersIn",
    "IncidentWorker_PsychicDrone",
    "IncidentWorker_MakeGameCondition",
    "IncidentWorker_HeatWave",
    "IncidentWorker_ColdSnap",
    "IncidentWorker_Flashstorm",
    "IncidentWorker_ShortCircuit",
    "IncidentWorker_CropBlight",
    "IncidentWorker_Alphabeavers",
    "IncidentWorker_ShipChunkDrop",
    "IncidentWorker_OrbitalTraderArrival",
    "IncidentWorker_TraderCaravanArrival",
    "IncidentWorker_VisitorGroup",
    "IncidentWorker_TravelerGroup",
    "IncidentWorker_RaidFriendly",
    "IncidentWorker_WandererJoin",
    "IncidentWorker_RaidEnemy",
    "IncidentWorker_Infestation",
    "IncidentWorker_DeepDrillInfestation",
    "IncidentWorker_ManhunterPack",
    "IncidentWorker_CrashedShipPart",
    "IncidentWorker_AnimalInsanityMass",
    "IncidentWorker_MechCluster",
    "IncidentWorker_AnimalInsanitySingle",
    "IncidentWorker_Aurora",
    "RaidStrategyWorker_ImmediateAttack",
    "RaidStrategyWorker_ImmediateAttackFriendly",
    "RaidStrategyWorker_ImmediateAttackSmart",
    "RaidStrategyWorker_StageThenAttack",
    "RaidStrategyWorker_ImmediateAttackBreaching",
    "RaidStrategyWorker_ImmediateAttackBreachingSmart",
    "RaidStrategyWorker_ImmediateAttackSappers",
    "RaidStrategyWorker_Siege",
    "Recipe_AdministerUsableItem",
    "ThoughtWorker_Tale",
    "ThoughtWorker_TravelAnticipation",
    "ThoughtWorker_Dark",
    "ThoughtWorker_ApparelDamaged",
    "ThoughtWorker_WrongApparelGender",
    "ThoughtWorker_DeadMansApparel",
    "ThoughtWorker_Precept_HumanLeatherApparel",
    "ThoughtWorker_HumanLeatherApparel",
    "ThoughtWorker_Sick",
    "ThoughtWorker_Cold",
    "ThoughtWorker_Hot",
    "ThoughtWorker_NeedFood",
    "ThoughtWorker_NeedRest",
    "ThoughtWorker_NeedJoy",
    "ThoughtWorker_NeedComfort",
    "ThoughtWorker_NeedBeauty",
    "ThoughtWorker_NeedRoomSize",
    "ThoughtWorker_NeedOutdoors",
    "ThoughtWorker_NeedIndoors",
    "ThoughtWorker_DrugDesireUnsatisfied",
    "ThoughtWorker_DrugDesireSatisfied",
    "ThoughtWorker_PrisonCellImpressiveness",
    "ThoughtWorker_PrisonBarracksImpressiveness",
    "ThoughtWorker_HospitalPatientRoomStats",
    "ThoughtWorker_Affair",
    "ThoughtWorker_Incestuous",
    "ThoughtWorker_Disfigured",
    "ThoughtWorker_HardWorkerVsLazy",
    "ThoughtWorker_TeetotalerVsChemicalInterest",
    "ThoughtWorker_TeetotalerVsAddict",
    "ThoughtWorker_ChemicalInterestVsTeetotaler",
    "ThoughtWorker_ImprisonedByFaction",
    "ThoughtWorker_Drunk",
    "ThoughtWorker_Pretty",
    "ThoughtWorker_Ugly",
    "ThoughtWorker_AnnoyingVoice",
    "ThoughtWorker_CreepyBreathing",
    "ThoughtWorker_Man",
    "ThoughtWorker_Woman",
    "ThoughtWorker_TranshumanistAppreciation",
    "ThoughtWorker_BodyPuristDisgust",
    "ThoughtWorker_OpinionOfMyLover",
    "ThoughtWorker_BondedAnimalMaster",
    "ThoughtWorker_NotBondedAnimalMaster",
    "ThoughtWorker_WantToSleepWithSpouseOrLover",
    "ThoughtWorker_SharedBed",
    "ThoughtWorker_ColonistLeftUnburied",
    "ThoughtWorker_PsychologicallyNude",
    "ThoughtWorker_Pain",
    "ThoughtWorker_PsychicEmanatorSoothe",
    "ThoughtWorker_PsychicDrone",
    "ThoughtWorker_Aurora",
    "ThoughtWorker_PassionateWork",
    "ThoughtWorker_MissingTongue",
    "ThoughtWorker_RotStink",
    "ThoughtWorker_RotStinkLingering",
    "ThoughtWorker_ToxicFallout",
    "ThoughtWorker_HasAddedBodyPart",
    "ThoughtWorker_IsCarryingRangedWeapon",
    "ThoughtWorker_IsCarryingIncendiaryWeapon",
    "ThoughtWorker_PyromaniacNearFlames",
    "ThoughtWorker_NudistNude",
    "ThoughtWorker_IsIndoorsForUndergrounder",
    "ThoughtWorker_IsUndergroundForUndergrounder",
    "ThoughtWorker_IsOutdoorsForUndergrounder",
    "ThoughtWorker_IsDayForNightOwl",
    "ThoughtWorker_IsNightForNightOwl",
    "ThoughtWorker_Greedy",
    "ThoughtWorker_BedroomJealous",
    "ThoughtWorker_Ascetic",
    "ThoughtWorker_AlwaysActive",
  ],
  allowFarmingCamps: ["false"],
  animalDensity: [
    "2.8",
    "1.1",
    "3.3",
    "0.2",
    "0.1",
    "3.7",
    "4.3",
    "5.4",
    "6.5",
    "1.8",
    "0.4",
  ],
  plantDensity: [
    "0.40",
    "0.19",
    "0.60",
    "0",
    "0.65",
    "0.80",
    "0.90",
    "0.99",
    "0.24",
    "0.05",
    "0.002",
  ],
  settlementSelectionWeight: [
    "0.9",
    "0.32",
    "0.17",
    "0.15",
    "0.01",
    "1",
    "0.6",
    "0.7",
    "0.4",
    "0.95",
    "0.65",
    "0.42",
  ],
  movementDifficulty: ["1", "4", "1.5", "2"],
  forageability: ["0.75", "0.5", "0", "1", "0.25"],
  foragedFood: ["RawBerries", "RawAgave"],
  wildPlantRegrowDays: ["25", "28", "20", "15", "13", "27", "35"],
  texture: [
    "World/Biomes/BorealForest",
    "World/Biomes/Tundra",
    "World/Biomes/ColdBog",
    "World/Biomes/IceSheet",
    "World/Biomes/IceSheetOcean",
    "World/Biomes/TemperateForest",
    "World/Biomes/TemperateSwamp",
    "World/Biomes/TropicalRainforest",
    "World/Biomes/TropicalSwamp",
    "World/Biomes/AridShrubland",
    "World/Biomes/Desert",
    "World/Biomes/ExtremeDesert",
    "World/Biomes/Ocean",
    "Things/Pawn/Wounds/WoundFleshA",
    "Things/Pawn/Wounds/WoundFleshB",
    "Things/Pawn/Wounds/WoundFleshC",
    "Things/Pawn/Wounds/BandagedA",
    "Things/Pawn/Wounds/BandagedB",
    "Things/Pawn/Wounds/BandagedC",
    "Things/Pawn/Wounds/ScarificationA",
    "Things/Pawn/Wounds/ScarificationB",
    "Things/Pawn/Wounds/ScarificationC",
    "Things/Pawn/Wounds/WoundMechA",
    "Things/Pawn/Wounds/WoundMechB",
    "Things/Pawn/Wounds/WoundMechC",
    "Things/Pawn/Wounds/WoundA",
    "Things/Pawn/Wounds/WoundB",
    "Things/Pawn/Wounds/WoundC",
    "World/WorldObjects/Ambush",
    "World/WorldObjects/Caravan",
    "World/WorldObjects/TribalSettlement",
    "World/WorldObjects/JourneyDestination",
    "World/WorldObjects/TravelingTransportPods",
    "World/WorldObjects/RoutePlannerWaypoint",
    "World/WorldObjects/PeaceTalks",
  ],
  diseaseMtbDays: ["60", "80", "45", "90", "50", "40", "35", "30", "65"],
  diseaseInc: [
    "Disease_Flu",
    "Disease_Plague",
    "Disease_GutWorms",
    "Disease_FibrousMechanites",
    "Disease_SensoryMechanites",
    "Disease_MuscleParasites",
    "Disease_AnimalFlu",
    "Disease_AnimalPlague",
    "Disease_Malaria",
    "Disease_SleepingSickness",
  ],
  commonality: [
    "100",
    "50",
    "30",
    "80",
    "40",
    "160",
    "140",
    "60",
    "70",
    "1",
    "0.95",
    "0.05",
    "5",
    "20",
    "15",
    "10",
    "2.5",
    "2.0",
    "0.02",
    "1.00",
    "1.4",
    "0.15",
    "0.20",
    "0.10",
    "0.12",
    "0.24",
    "0.025",
    "0.2",
    "0.075",
    "0.0025",
    "0.25",
    "0.1",
    "0.7",
    "0.8",
    "2",
    "0.6",
    "0.5",
    "1.3",
    "0.3",
    "0.9",
    "1.7",
    "1.1",
    "1.0",
    "3",
  ],
  terrain: [
    "Soil",
    "SoilRich",
    "MossyTerrain",
    "Marsh",
    "WaterShallow",
    "WaterDeep",
    "MarshyTerrain",
    "Mud",
    "Ice",
    "Sand",
    "SoftSand",
  ],
  min: [
    "-999",
    "0.87",
    "0.0",
    "0.32",
    "0.76",
    "0.98",
    "0.64",
    "0.83",
    "0.4",
    "-0.03",
    "0.22",
    "0.6",
    "0.73",
    "0.80",
    "0.93",
    "1.06",
    "-0.12",
    "0.7",
    "0.35",
    "-0.1",
    "0.24",
    "0.48",
    "0.45",
    "0.90",
    "0.65",
    "750",
    "60000",
    "0.12",
    "3500",
    "3",
    "1",
    "100",
    "600000",
    "(0.3,0.3,0.3,1)",
    "(0.3,0.3,0.3)",
    "(0.5,0.5,0.5)",
    "-40",
    "6",
    "300",
    "0.5",
    "min",
  ],
  max: [
    "0.87",
    "999",
    "0.32",
    "0.76",
    "0.98",
    "0.83",
    "0.22",
    "0.6",
    "0.80",
    "0.93",
    "1.06",
    "0.48",
    "0.45",
    "0.90",
    "4300",
    "60000",
    "0.25",
    "5000",
    "4",
    "1",
    "200",
    "1.5",
    "1.4",
    "2",
    "1.1",
    "1.3",
    "600000",
    "(0.9,0.9,0.9,1)",
    "(0.5,0.5,0.5,1)",
    "(0.5,0.5,0.5)",
    "(1,1,1)",
    "-15",
    "10",
    "400",
    "max",
  ],
  perlinFrequency: ["0.015", "0.028", "0.027", "0.04", "0.035", "0.05"],
  Clear: ["18", "12"],
  Fog: ["1", "0"],
  Rain: ["2", "0", "1"],
  DryThunderstorm: ["1", "2", "0.3"],
  RainyThunderstorm: ["1", "0", "1.7"],
  FoggyRain: ["1", "0", "0.5"],
  SnowGentle: ["4", "20", "8", "1.5"],
  SnowHard: ["4", "40", "8", "1"],
  Plant_Grass: ["9.0", "3.6", "5.0", "3.0", "7.0", "6"],
  Plant_TreePine: ["5.0", "0.08"],
  Plant_Moss: ["4.0", "0.5"],
  Plant_Bush: ["3.0", "0.3", "0.6", "0.2", "0.15", "0.7", "0.25"],
  Plant_Brambles: ["2.0", "1.0"],
  _: [
    "4",
    "9.0",
    "1",
    "3",
    "0.08",
    "2",
    "0.8",
    "0.5",
    "0.4",
    "0.1",
    "1.0",
    "0.3",
    "1.5",
    "5",
    "0.6",
    "NamerIdeoAstropolitan",
    "NamerDeityAstropolitan",
    "DeityTypeMakerAstropolitan",
    "LeaderTitleMaker_Astropolitan",
    "NamerFestivalAstropolitan",
    "NamerIdeoCorunan",
    "NamerDeityCorunan",
    "DeityTypeMakerCorunan",
    "NamerFestivalCorunan",
    "LeaderTitleMaker_Corunan",
    "NamerIdeoRustican",
    "NamerDeityRustican",
    "DeityTypeMakerRustican",
    "LeaderTitleMaker_Rustican",
    "NamerFestivalRustican",
    "NamerIdeoKriminul",
    "NamerDeityKriminul",
    "DeityTypeMakerKriminul",
    "LeaderTitleMaker_Kriminul",
    "NamerFestivalKriminul",
    "0.2",
    "Structure_Archist",
    "Transhumanist",
    "HumanPrimacy",
    "Loyalist",
    "20",
    "Structure_Animist",
    "Nudism",
    "Blindsight",
    "0.05",
    "0.025",
    "10",
    "Supremacist",
    "Structure_Ideological",
    "Nudity_Male_CoveringAnythingButGroinDisapproved",
    "Nudity_Female_CoveringAnythingButGroinDisapproved",
    "PainIsVirtue",
    "Raider",
    "FleshPurity",
    "0",
    "AnimaTrees",
    "AncientExostriderRemains",
    "PoluxTrees",
    "ScatterRoadDebris",
    "ScatterCaveDebris",
    "AncientUtilityBuilding",
    "MechanoidRemains",
    "AncientTurret",
    "AncientMechs",
    "AncientLandingPad",
    "AncientFences",
    "AncientPipelineSection",
    "AncientJunkClusters",
    "Pollution",
    "AncientPollutionJunk",
    "Designator_AreaPollutionClearExpand",
    "Designator_AreaPollutionClearClear",
    "HumanlikeBaby",
    "HumanlikeBabyConstant",
    "LifeStageWorker_HumanlikeChild",
    "LifeStageWorker_HumanlikeAdult",
    "Guest",
    "Ideo",
    "Xenotype",
    "You can dismiss letters by right-clicking on them.",
    "You can hold the shift key to queue orders on your colonists.",
    "You can right-click and drag to reorder colonists on the colonist bar.",
    "You can select previous/next colonist with the , and . keys.",
    "Many menus allow you to click and drag a setting to 'paint' it over many entries. This even works for things like outfits or food restrictions.",
    "In the work tab's manual priorities mode, 1 is first priority, while 4 is last priority.",
    "Each colonists' mood is displayed in the background of their icon in the colonist bar at the top of the screen.",
    "Shift-clicking the name of a work type in the Work tab changes settings for all colonists at once.",
    "Right-clicking a number in the Work tab using manual priorities will reduce the priority instead of increasing it.",
    "You can hold the alt key to show detailed information about a specific tile.",
    "In a gunfight, always be behind cover! Right-click and drag to have your drafted fighters form a line.",
    "Right-click and drag to have your drafted fighters form a line. Bunched-up targets are easy to hit!",
    "Smoke totally prevents turrets from detecting targets, but people can still shoot with reduced accuracy.",
    "When designing defences, assume enemies will get inside using drop pods or tunnels. Build internal defensive positions.",
    "Foggy or rainy weather reduces the accuracy of ranged weapons.",
    "You can analyze the chance a shot will hit by selecting the shooter and placing the mouse over the target.",
    "Turrets explode when they take a lot of damage. Don't put them too close together, and don't put your people too close to them.",
    "Some animals explode upon death. You can use transport pods to drop animals on enemies. Think about it.",
    "If you need help in a fight, call your allies using the comms console.",
    "Maddened animals will attack any human, including your enemies. You can use this.",
    "EMP bursts will temporarily disable turrets and shields.",
    "EMP bursts instantly break personal shields.",
    "The hunter stealth stat reduces the chance of animal attacks. It is affected by the hunter's animals and shooting skills.",
    "Animals are more likely to attack when harmed from close range. Long-range, slow-firing weapons are safest for hunting.",
    "Entire herds of animals may attack you when you try to hunt them. Accept the risk before hunting, or choose weaker prey.",
    "If you hunt boomrats and boomalopes when it's raining, their deaths won't cause forest fires.",
    "Carefully-slaughtered animals yield more meat and leather than those who were killed violently.",
    "Place the caravan hitching spot where you want your caravans to form up. It's usually best to place it near your storage areas.",
    "During encounters away from home, you can place a caravan hitching spot to keep your animals from wandering.",
    "Caravans move faster if they include rideable animals like horses, donkeys and dromedaries.",
    "Smaller caravans get attacked less often because they're less visible.",
    "Before forming a caravan, collect the items you want to send in a stockpile near your caravan hitching spot. This will make packing much faster.",
    "If you have untrained animals in your caravan, you can split them into a separate caravan before attacking an enemy, to keep them out of the fight.",
    "Don't forget to pack medicine on your caravans.",
    "RimWorld is a story generator, not a skill test. A ruined colony is a dramatic tragedy, not a failure.",
    "Some colonists are worse than useless. Bad allies are part of the challenge.",
    "If you can't defend against a threat, make a caravan and run. You may lose your home, but your story can continue.",
    "When you have more wealth, more powerful enemies attack. If you want the challenge to scale with time instead, select 'Wealth-independent progress mode' in the storyteller settings.",
    "Avoid using stone for doors. They open very slowly, which wastes your colonists' time.",
    "Put chairs in front of workbenches so workers can sit comfortably while working.",
    "Mechanical structures break down and require replacement components. Don't build things you don't need.",
    "Be careful what you construct on bridges. Bridges collapse easily under explosions, and your buildings will go with them.",
    "Clean rooms increase research speed, improve medical outcomes, and reduce food poisoning. Sterile tiles make rooms extra-clean.",
    "Building your whole colony in one structure saves resources, but also makes it difficult to contain fires.",
    "Terrain affects movement speed. Build floors to help your colonists get around quicker.",
    "Different terrain has different inherent cleanliness levels. Tiles are inherently clean; dirt is inherently dirty.",
    "Some floor types are faster to clean than others. It takes much longer to clean carpet compared to metal tile.",
    "You can give prisoners as gifts. Giving a prisoner back to their own faction will be highly appreciated.",
    "You can request specific types of trade caravans using the comms console.",
    "You can use transport pods to send gifts directly to other factions' bases - even your enemies. This improves faction relations.",
    "Keeping prisoners together saves space. However, prisoners kept together will try to break out together.",
    "Enemy faction bases are very well-defended. You don't need to attack them - but be well-prepared if you choose to try.",
    "Cute tame animals will nuzzle your colonists, improving their mood.",
    "Assign your herbivorous animals to areas with lots of grass. They'll eat the grass and spare you the need to feed them.",
    "If someone has a serious infection in a limb, you can remove the limb to save their life.",
    "Sloshing through water makes people unhappy. Build a bridge when you can.",
    "Luciferium can heal scars - even those on the eye or brain. It is, however, a permanent commitment.",
    "Work and movement speed are affected by lighting. Everything is slower in the dark.",
    "Deep underground caverns have a naturally stable temperature, even if it's very hot or cold outside.",
    "Mountain bases are easy to defend. The downside is that people go crazy spending too long underground. And giant insects.",
    "Prisoners will join much quicker and attempt fewer breakouts when they're in a good mood.",
    "You can have multiple researchers working simultaneously at multiple research tables.",
    "Geysers heat up rooms if enclosed. This can be dangerous, or useful.",
    "Explosions extinguish fires in their blast radius. This makes artillery shells useful for stopping fires when there is no other choice.",
    "Even serious setbacks don't mean the game has to end. Try playing out a lost battle - often the best stories come from the darkest situations.",
    "Keep weapon stockpiles away from your prisons. Prison breaks are much more dangerous with guns and explosives.",
    "When taming animals, make sure you have enough food of the correct type to feed them.",
    "Dropping a stone or slag chunk in a doorway will force it open, leaving you vulnerable to hostile wildlife and raiders.",
    "Clean labs with sterile tile give research speed bonuses.",
    "You can change storyteller and playstyle at any time through the options menu.",
    "The more factions you are allied with, the more random traders and military aid you will receive.",
    "You can use drug policies to have your fighters carry combat drugs like go-juice. A quick dose at the start of combat can win the battle.",
    "Set schedules with long stretches of one activity to minimize travel time.",
    "Straw matting ignores filth. Use it as the floor for your barn.",
    "Some animals produce a lot of filth. Keep your elephants and cattle outside.",
    "Predators won't hunt animals which are on the other side of fences or barricades.",
    "Comfort_Ignored",
    "0.04",
    "true",
    "0.03",
    "UI/Issues/Corpses",
    "Individualist",
    "CharityFulfilled_ThreatReward_Joiner",
    "CharityRefused_ThreatReward_Joiner",
    "{BASELABEL} chasing [../joiner_nameDef]",
    "{BASETEXT}\r\n              \\nThe [enemyFaction_pawnsPlural] have come to get [../joiner_nameDef].",
    "Raided_BanditCamp",
    "Quest expired: [resolvedQuestName]",
    "The bandit camp has packed up and moved on. The quest [resolvedQuestName] has expired.",
    "Quest failed: [resolvedQuestName]",
    "After being discovered, the bandit camp has dispersed. The quest [resolvedQuestName] has ended.",
    "Payment arrived",
    "You have defeated the bandit camp!\\n\\nThe payment from [asker_faction_name] has arrived.",
    "[asker_faction_royalFavorLabel]",
    "These colonists participated in the victory for the quest [resolvedQuestName]. [asker_definite] wants to know who should receive the [royalFavorReward_amount] [asker_faction_royalFavorLabel] for this service.",
    "[refugee_nameDef]'s signal has been lost, and [refugee_pronoun] can no longer be rescued. The quest [resolvedQuestName] has expired.",
    "Intercepted communications indicate the item stash has been claimed by others. The quest [resolvedQuestName] has expired.",
    "Others have mined the lump of [targetMineable_label]. The quest [resolvedQuestName] has expired.",
    "extraLeaderPart(priority=1)->\\n\\n[leaderRoleEffect].[leaderPawnInfo]",
    "The offer of peace talks with [faction_name] has expired. You have failed the quest [resolvedQuestName].",
    "[faction_name] became hostile to you.",
    "Who should be credited with [asker_faction_royalFavorLabel] for fulfilling the trade request?",
    "CharityFulfilled_RefugeePodCrash",
    "CharityRefused_RefugeePodCrash",
    "CharityFulfilled_WandererJoins",
    "CharityRefused_WandererJoins",
    "AllowCorpsesMechFriendly",
    "AllowCorpsesMechEnemy",
    "AllowCorpsesSlave",
    "HemogenPack",
    "BabyFood",
    "ImplantIUD",
    "RemoveIUD",
    "Vasectomy",
    "ReverseVasectomy",
    "LessonShooting",
    "LessonMelee",
    "LessonConstruction",
    "LessonMining",
    "LessonCooking",
    "LessonPlants",
    "LessonAnimals",
    "LessonCrafting",
    "LessonArtistic",
    "LessonMedicine",
    "LessonSocial",
    "LessonIntellectual",
    "ShootingAccuracyChildFactor",
    "Mech_Agrihand",
    "Mech_Constructoid",
    "Mech_Cleansweeper",
    "GiveQuest_EndGame_ArchonexusVictory",
    "GiveQuest_EndGame_RoyalAscent",
    "GiveQuest_WorkSite",
    "GiveQuest_Intro_Wimp",
    "Yeoman",
    "GiveQuest_Intro_Deserter",
    "CaravanArrivalTributeCollector",
    "AnimaTreeSpawn",
    "GauranlenPodSpawn",
    "GiveQuest_Beggars",
    "GiveQuest_ReliquaryPilgrims",
    "GiveQuest_AncientComplex_Mechanitor",
    "PoluxTreeSpawn",
    "TerrainFadeRoughLinearBurn",
    "TerrainFadeRoughSoftLight",
    "TerrainFadeRoughLinearAdd",
    "TerrainWaterPolluted",
    "NamerIdeoSculpture",
    "40",
    "SleepAccelerator",
    "Brazier",
    "DarklightBrazier",
    "Darktorch",
    "DarktorchFungus",
    "Wastepack",
    "2.5",
    "Normal",
    "Make_BabyFood",
    "Make_BabyFoodBulk",
    "Fungus",
    "-0.05",
    "-0.1",
    "0.35",
    "-0.3",
    "ITab_Pawn_Slave",
    "ITab_Pawn_Feeding",
    "ITab_Genes",
    "ITab_GenesPregnancy",
    "CureBloodRot",
    "TerminatePregnancy",
    "0.9",
    "InsectMeat",
    "Plant_TreeAnima",
    "Plant_TreeGauranlen",
    "0.95",
    "(0,0)",
    "(0.001,43)",
    "(8,86)",
    "(12.5,118)",
    "(12.51,0)",
    "(13,0)",
    "(13.001,122)",
    "(13.999,130)",
    "(14.001,130)",
    "TubalLigation",
    "ExtractOvum",
    "CureAbasia",
    "ExtractHemogenPack",
    "BloodTransfusion",
    "ImplantXenogerm",
    "12",
    "0.33",
    "NamerMech",
    "MechConstant",
    "200",
    "Empire",
    "Sanguophage",
    "Sanguophages",
    "DeathrestCapacitySerum",
    "AnimusStone",
    "Patrolling.",
    "RobustDigestion",
    "RoughLiving_Welcomed",
    "Temperature_Tough",
    "Cannibalism_Acceptable",
    "Cannibalism_Preferred",
    "Cannibalism_RequiredStrong",
    "Cannibalism_RequiredRavenous",
    "Recluse",
    "DarkVision",
    "Execution_Abhorrent",
    "Execution_Horrible",
    "Execution_HorribleIfInnocent",
    "Execution_DontCare",
    "Execution_RespectedIfGuilty",
    "Execution_Required",
    "Furskin",
    "Pain_Idealized",
    "ToxResist_Total",
    "ToxicEnvironmentResistance_Total",
    "0.25",
  ],
  Plant_TreeBirch: ["1.5", "0.08"],
  Plant_TreePoplar: ["1.2", "0.5"],
  Plant_Berry: ["0.16", "0.07", "0.05", "0.10"],
  Plant_HealrootWild: ["0.16", "0.05"],
  Yak: ["0.12", "0.2", "0.06", "0.04"],
  Horse: ["0.15", "0.20", "0.1"],
  Squirrel: ["1", "1.0"],
  Hare: ["1", "2", "1.0", "1.3"],
  Rat: ["1", "0.5", "1.0", "1.3", "0.6"],
  Elk: ["0.5", "2"],
  Caribou: ["0.5", "2"],
  Muffalo: ["0.5", "2", "0.1", "6"],
  WildBoar: ["0.5"],
  Ibex: ["0.5", "2"],
  Raccoon: ["0.5", "0.25"],
  Turkey: ["0.5"],
  Deer: ["0.5"],
  Megasloth: ["0.1", "0.2"],
  Fox_Red: ["0.07"],
  Fox_Arctic: ["0.07", "0.1"],
  Bear_Grizzly: ["0.07"],
  Wolf_Timber: ["0.07"],
  Wolf_Arctic: ["0.07", "0.1"],
  Cougar: ["0.07", "0.15"],
  Lynx: ["0.07", "0.1"],
  Warg: ["0.07", "0.05"],
  campSelectionWeight: ["0.1", "0.9"],
  Plant_Astragalus: ["0.1"],
  Plant_Dandelion: ["0.1", "0.5", "0.8"],
  Snowhare: ["2"],
  Bear_Polar: ["0.07", "0.1"],
  Plant_Chokevine: ["3.0", "0.8"],
  Plant_TallGrass: ["2.4", "2.0", "3.2", "4.8"],
  Plant_TreeWillow: ["0.6", "1.0", "1.72"],
  Plant_TreeCypress: ["0.6", "1.0", "1.72"],
  Plant_TreeMaple: ["0.6", "1.0", "1.72"],
  GuineaPig: ["0.07", "0.45", "0.15", "0.25", "0.18", "0.017", "0.01", "0.002"],
  allowRoads: ["false"],
  allowRivers: ["false"],
  hasVirtualPlants: ["false"],
  isExtremeBiome: ["true"],
  canAutoChoose: ["false"],
  hasBedrock: ["false"],
  Plant_TreeOak: ["0.5"],
  Donkey: ["0.20", "0.2", "0.15"],
  Bison: ["0.07", "0.1"],
  Alpaca: ["0.5", "2", "2.5"],
  Boomalope: ["0.4", "0.1", "0.5", "0.6"],
  Boomrat: ["0.4", "0.5"],
  Tortoise: ["0.3", "0.6", "0.5"],
  Gazelle: ["0.3", "0.7", "0.6"],
  Rhinoceros: ["0.1", "0.5"],
  Plant_ShrubLow: ["2.0"],
  Plant_Alocasia: ["0.8"],
  Plant_TreeCecropia: ["0.3"],
  Plant_TreePalm: ["0.3"],
  Plant_TreeBamboo: ["0.3"],
  Plant_TreeTeak: ["0.2"],
  Plant_Clivia: ["0.07"],
  Plant_Rafflesia: ["0.0008"],
  Monkey: ["1"],
  Capybara: ["0.5"],
  Cassowary: ["0.5"],
  Chinchilla: ["0.5"],
  Elephant: ["0.5", "1", "2"],
  Cobra: ["0.15"],
  Panther: ["0.15"],
  Plant_PincushionCactus: ["0.6", "1"],
  Plant_Agave: ["0.2", "0.25"],
  Plant_SaguaroCactus: ["0.26", "1.0", "1"],
  Plant_TreeDrago: ["0.20", "0.45"],
  Iguana: ["0.7", "1", "1.2", "1.5"],
  Ostrich: ["0.7", "0.6"],
  Emu: ["0.7", "0.6"],
  Dromedary: ["0.7", "0.2", "5"],
  Fox_Fennec: ["0.15", "0.07", "0.1"],
  Megascarab: ["0.2", "1"],
  wildPlantsCareAboutLocalFertility: ["false"],
  maxFertility: ["0.8"],
  minSize: ["13", "15", "30", "3", "8000", "1500", "150", "0.4", "1.5"],
  canBuildBase: ["false"],
  impassable: ["true"],
  def: [
    "Body",
    "Tail",
    "Spine",
    "Stomach",
    "Heart",
    "Lung",
    "Kidney",
    "Liver",
    "Neck",
    "Head",
    "Skull",
    "Brain",
    "Eye",
    "Beak",
    "Leg",
    "Foot",
    "Shell",
    "Elytra",
    "InsectHeart",
    "Pronotum",
    "InsectHead",
    "Antenna",
    "InsectNostril",
    "InsectMouth",
    "InsectLeg",
    "HeadClaw",
    "Ear",
    "Nose",
    "AnimalJaw",
    "Paw",
    "Hoof",
    "Hump",
    "Tusk",
    "Trunk",
    "Horn",
    "Jowl",
    "FrontClaw",
    "RearClaw",
    "TurtleShell",
    "Plastron",
    "TurtleBeak",
    "Torso",
    "Clavicle",
    "Ribcage",
    "Sternum",
    "Pelvis",
    "Shoulder",
    "Arm",
    "Humerus",
    "Radius",
    "Hand",
    "Finger",
    "Femur",
    "Tibia",
    "Toe",
    "SnakeBody",
    "SnakeHead",
    "SnakeMouth",
    "Jaw",
    "Tongue",
    "Waist",
    "MechanicalCentipedeBodyFirstRing",
    "MechanicalHead",
    "ArtificialBrain",
    "SightSensor",
    "HearingSensor",
    "SmellSensor",
    "MechanicalCentipedeBodySecondRing",
    "Reactor",
    "MechanicalCentipedeBodyThirdRing",
    "FluidReprocessor",
    "MechanicalCentipedeBodyFourthRing",
    "MechanicalCentipedeBodyFifthRing",
    "MechanicalCentipedeBodySixthRing",
    "MechanicalThorax",
    "MechanicalNeck",
    "MechanicalShoulder",
    "MechanicalArm",
    "MechanicalHand",
    "MechanicalFinger",
    "MechanicalLeg",
    "MechanicalFoot",
    "MechanicalThoraxCanManipulate",
    "Blade",
    "MechanicalTermiteBodyFirstRing",
    "MechanicalTermiteBodySecondRing",
    "MechanicalTermiteBodyThirdRing",
    "Util_JoinerWalkIn",
    "Util_RandomizePointsChallengeRating",
    "Util_JoinerThreat_Joiner",
    "Util_Raid",
    "Util_AdjustPointsForDistantFight",
    "Util_GetDefaultRewardValueFromPoints",
    "Util_GenerateSite",
    "EscapeShip",
    "PeaceTalks",
    "PlayerFaction",
    "ConfigPage_ConfigureStartingPawns",
    "PlayerPawnsArriveMethod",
    "ForcedHediff",
    "StartingThing_Defined",
    "StartingAnimal",
    "ScatterThingsNearPlayerStart",
    "ScatterThingsAnywhere",
    "GameStartDialog",
    "SetNeedLevel",
    "StartingResearch",
    "Naked",
    "NoPossessions",
    "Stun",
    "AnimalBaby",
    "AnimalJuvenile",
    "AnimalAdult",
    "AnimalBabyTiny",
    "EusocialInsectLarva",
    "EusocialInsectJuvenile",
    "EusocialInsectAdult",
    "HumanlikeBaby",
    "HumanlikeChild",
    "HumanlikePreTeenager",
    "HumanlikeTeenager",
    "HumanlikeAdult",
    "MechanoidFullyFormed",
  ],
  height: ["Middle", "Top", "Bottom"],
  depth: ["Outside", "Inside", "100"],
  coverage: [
    "0.10",
    "0.05",
    "0.04",
    "0.03",
    "0.2",
    "0.75",
    "0.30",
    "0.60",
    "0.12",
    "0.25",
    "0.5",
    "0.18",
    "0.65",
    "0.15",
    "0.07",
    "0.06",
    "0.08",
    "0.22",
    "0.70",
    "0.20",
    "0.7",
    "0.1",
    "0.065",
    "0.26",
    "0.80",
    "0.09",
    "0.3",
    "0.4",
    "0.32",
    "0.28",
    "0.35",
    "0.85",
    "0.24",
    "0.17",
    "0.02",
    "0.01",
    "0.045",
    "0.005",
    "0.72",
    "0.11",
    "0.13",
    "0.14",
    "0.16",
    "0.50",
    "0.036",
    "0.015",
    "0.025",
    "0.020",
    "0.017",
    "0.075",
    "0.8",
    "0",
    "0.77",
    "0.71",
    "0.66",
  ],
  customLabel: [
    "left lung",
    "right lung",
    "left kidney",
    "right kidney",
    "left eye",
    "right eye",
    "left leg",
    "left foot",
    "right leg",
    "right foot",
    "left elytra",
    "right elytra",
    "left antenna",
    "right antenna",
    "front left leg",
    "front right leg",
    "middle left leg",
    "middle right leg",
    "rear left leg",
    "rear right leg",
    "left ear",
    "right ear",
    "front left paw",
    "front right paw",
    "rear left paw",
    "rear right paw",
    "front left hoof",
    "front right hoof",
    "rear left hoof",
    "rear right hoof",
    "left tusk",
    "right tusk",
    "front left leg first claw",
    "front left leg second claw",
    "front left leg third claw",
    "front left leg fourth claw",
    "front left leg fifth claw",
    "front right leg first claw",
    "front right leg second claw",
    "front right leg third claw",
    "front right leg fourth claw",
    "front right leg fifth claw",
    "rear left leg first claw",
    "rear left leg second claw",
    "rear left leg third claw",
    "rear left leg fourth claw",
    "rear left leg fifth claw",
    "rear right leg first claw",
    "rear right leg second claw",
    "rear right leg third claw",
    "rear right leg fourth claw",
    "rear right leg fifth claw",
    "left clavicle",
    "right clavicle",
    "left shoulder",
    "left arm",
    "left humerus",
    "left radius",
    "left hand",
    "left pinky",
    "left ring finger",
    "left middle finger",
    "left index finger",
    "left thumb",
    "right shoulder",
    "right arm",
    "right humerus",
    "right radius",
    "right hand",
    "right pinky",
    "right ring finger",
    "right middle finger",
    "right index finger",
    "right thumb",
    "left femur",
    "left tibia",
    "left little toe",
    "left fourth toe",
    "left middle toe",
    "left second toe",
    "left big toe",
    "right femur",
    "right tibia",
    "right little toe",
    "right fourth toe",
    "right middle toe",
    "right second toe",
    "right big toe",
    "left sight sensor",
    "right sight sensor",
    "left hearing sensor",
    "right hearing sensor",
    "left mechanical shoulder",
    "right mechanical shoulder",
    "front left foot",
    "front right foot",
    "rear left foot",
    "rear right foot",
    "left blade",
    "right blade",
    "Room cleanliness",
  ],
  woundAnchorTag: [
    "LeftEye",
    "RightEye",
    "LeftShoulder",
    "RightShoulder",
    "LeftLeg",
    "RightLeg",
  ],
  labelShort: [
    "body ring",
    "fist",
    "finger",
    "paw",
    "leg",
    "claws",
    "blade",
    "claw",
    "firefight",
    "patient",
    "doctor",
    "bed rest",
    "basic",
    "warden",
    "handle",
    "cook",
    "hunt",
    "construct",
    "grow",
    "mine",
    "plant cut",
    "smith",
    "tailor",
    "art",
    "craft",
    "haul",
    "clean",
    "research",
  ],
  permanentInjuryChanceFactor: ["0", "9999999", "15", "6"],
  skinCovered: ["false", "true"],
  solid: ["true", "false"],
  alive: ["false"],
  bleedRate: ["0", "5", "0.3", "2", "4", "0.12", "0.06", "0.01"],
  hitPoints: [
    "50",
    "40",
    "35",
    "20",
    "30",
    "10",
    "15",
    "7",
    "25",
    "12",
    "8",
    "45",
  ],
  listOrder: [
    "100",
    "200",
    "199",
    "198",
    "197",
    "196",
    "180",
    "90",
    "85",
    "80",
    "79",
    "78",
    "77",
    "50",
    "10",
    "9",
    "30",
    "1010",
    "1000",
    "110",
    "20",
    "210",
    "0",
    "40",
    "60",
    "70",
    "120",
  ],
  frostbiteVulnerability: ["1.5", "8", "10", "0.5", "5", "0.1", "6", "2"],
  pawnGeneratorCanAmputate: ["true"],
  canScarify: ["true"],
  canSuggestAmputation: ["false"],
  destroyableByDamage: ["false"],
  delicate: ["true"],
  socketed: ["true"],
  beautyRelated: ["true"],
  forceAlwaysRemovable: ["true"],
  removeRecipeLabelOverride: ["remove"],
  conceptual: ["true"],
  spawnThingOnRemoved: [
    "Heart",
    "Lung",
    "Kidney",
    "Liver",
    "ArchotechEye",
    "ArchotechArm",
    "ArchotechLeg",
    "BionicEye",
    "BionicArm",
    "BionicLeg",
    "BionicSpine",
    "BionicHeart",
    "BionicStomach",
    "DeathAcidifier",
    "BionicEar",
    "BionicTongue",
    "WoodLog",
    "SimpleProstheticLeg",
    "SimpleProstheticArm",
    "SimpleProstheticHeart",
    "CochlearImplant",
    "PowerClaw",
    "Joywire",
    "Painstopper",
  ],
  colorType: ["Structure"],
  color: [
    "(118, 49, 57)",
    "(132, 84, 72)",
    "(138, 51, 36)",
    "(163, 41, 42)",
    "(91, 41, 45)",
    "(90, 38, 60)",
    "(131, 78, 101)",
    "(119, 50, 80)",
    "(101, 67, 82)",
    "(99, 50, 119)",
    "(90, 72, 97)",
    "(116, 78, 131)",
    "(75, 38, 90)",
    "(108, 52, 97)",
    "(125, 73, 125)",
    "(144, 86, 139)",
    "(24, 65, 121)",
    "(67, 81, 101)",
    "(140, 148, 174)",
    "(38, 59, 90)",
    "(95, 133, 191)",
    "(78, 100, 131)",
    "(38, 89, 90)",
    "(78, 130, 131)",
    "(50, 118, 119)",
    "(89, 105, 62)",
    "(74, 110, 80)",
    "(86, 93, 76)",
    "(78, 131, 105)",
    "(38, 90, 64)",
    "(112, 131, 78)",
    "(96, 97, 72)",
    "(130, 131, 78)",
    "(50, 119, 84)",
    "(74, 94, 84)",
    "(118, 119, 50)",
    "(69, 88, 36)",
    "(163, 131, 49)",
    "(166, 166, 90)",
    "(86, 76, 57)",
    "(101, 88, 67)",
    "(131, 110, 78)",
    "(90, 69, 38)",
    "(119, 91, 50)",
    "(90, 58, 32)",
    "(108, 78, 55)",
    "(167, 96, 39)",
    "(201, 112, 112)",
    "(241, 192, 218)",
    "(126, 164, 204)",
    "(161, 213, 180)",
    "(204, 204, 100)",
    "(191, 137, 33)",
    "(184, 184, 184)",
    "(195, 192, 176)",
    "(166, 166, 166)",
    "(158, 153, 135)",
    "(132, 135, 132)",
    "(126, 104, 94)",
    "(105, 95, 97)",
    "(81, 81, 81)",
    "(70, 70, 70)",
    "(60, 60, 60)",
    "(150,170,150)",
    "(120, 18, 0)",
    "(210, 50, 0)",
    "(255, 120, 30, 60)",
    "(200, 180, 30)",
    "(236, 228, 20)",
    "(200, 200, 10, 60)",
    "(0.7, 0.8, 1, 0.7)",
    "(0.7, 0.8, 1.0, 0.6)",
    "(0.1,1,0.1,1)",
    "(200, 225, 255)",
    "(1,1,1,0.1)",
    "(0.9,0,0,0.8)",
    "(135, 215, 40, 200)",
    "(0.9, 0.2, 0.2)",
    "(0.85, 0.3, 0.14, 1.0)",
    "(255, 150, 140, 70)",
    "(255, 150, 140, 140)",
    "(100,200,100)",
    "(155,70,70)",
    "(135, 215, 40, 140)",
    "(235, 75, 40, 150)",
    "(0.45, 0.85, 0.52, 1.0)",
    "(155,165,148)",
    "(189,169,118)",
    "(0.56, 1, 0.03)",
    "(190,190,190)",
    "(154,124,104)",
    "0.23,0.20,0.17",
    "(95, 151, 191)",
    "(120, 176, 216)",
    "(204, 196, 135)",
    "(175, 176, 185)",
    "(204, 115, 115)",
    "(204, 155, 125)",
    "(114,114,114)",
    "(107, 107, 52)",
    "(115, 90, 130)",
    "(51,51,127)",
    "(0.1, 0.1, 0.1)",
    "(0.5, 0.4, 0.3)",
    "(0.4, 0.4, 0.4)",
    "(0.5, 0.5, 0.5)",
    "(0.3, 0.3, 0.3)",
    "(140,140,140)",
    "(108,78,55)",
    "(0.369, 0.369, 0.369)",
    "(0.45, 0.45, 0.45)",
    "(0.65, 0.65, 0.35)",
    "(0.71, 0.71, 0.71)",
    "(126,104,94)",
    "(105,95,97)",
    "(158,153,135)",
    "(100,100,100)",
    "(132,135,132)",
    "(105,105,105)",
    "(231,216,206)",
    "(162,164,149)",
    "(96,114,95)",
    "(114,92,83)",
    "(89,83,68)",
    "(110,118,118)",
    "(68,83,68)",
    "(138,118,113)",
    "(232,255,191)",
    "(139,122,87)",
    "(0,0,0)",
    "(228,185,135)",
    "(245,245,245)",
    "(125,138,97)",
    "(48,104,100)",
    "(230,230,230)",
    "(236,217,184)",
    "(145,165,96)",
    "(214,231,186)",
    "(180,173,150)",
    "(255,235,122)",
    "(160,178,181)",
    "(133,97,67)",
    "(85,118,69)",
    "(162,157,152)",
    "(174,219,228)",
    "(180,60,60)",
    "(0,106,126)",
    "(219,214,209)",
    "(237,216,174)",
    "(180,148,109)",
    "(189,161,116)",
    "(179,192,186)",
    "(104,69,45)",
    "(162,106,57)",
    "(209,168,39)",
    "(115,110,100)",
    "(60,60,60)",
    "(204,180,150)",
    "(152,170,174)",
    "(112,82,65)",
    "(179,125,55)",
    "(211,194,143)",
    "(174,150,126)",
    "(140,85,36)",
    "(76,83,99)",
    "(178,170,158)",
    "(178,100,34)",
    "(101,116,58)",
    "(130,126,119)",
    "(150,150,150)",
    "(233,233,233)",
    "(90,75,60)",
    "(255, 20, 20, 242)",
    "(255,255,255,255)",
    "(255, 245, 214, 242)",
    "(91,75,65,97)",
    "(97,65,48,97)",
    "(141,115,98,97)",
    "(131, 34, 34, 180)",
    "(132, 138, 114, 180)",
    "(200, 200, 140, 50)",
    "(130, 142, 120, 170)",
    "(179, 185, 73, 180)",
    "(255, 255, 255, 220)",
    "(120, 146, 185, 180)",
    "(115, 84, 32, 220)",
    "(70,70,70)",
    "(90,90,90)",
    "(254,189,58)",
    "(140,135,156)",
    "(68,150,215)",
    "(180,180,180)",
    "(133,107,96)",
    "(62,58,66)",
    "(177,136,112)",
    "(173,155,138)",
    "(189,171,159)",
    "(0.494,0.356,0.164,1)",
    "(0.333,0.333,0.333,1)",
    "(220,198,160)",
    "(137,133,133)",
    "(223,219,108)",
    "(200,150,85)",
    "(170,170,170)",
    "(200,200,200)",
    "(176,150,106)",
    "(130,127,106)",
    "(114,107,84)",
    "(156,148,125)",
    "(154,125,94)",
    "(211,190,174)",
    "(167,145,128)",
    "(153,129,113)",
    "(136,100,75)",
    "(140,74,41)",
    "(156,112,62)",
    "(188,146,110)",
    "(109,84,49)",
    "(161,95,38)",
    "(110,95,82)",
    "(174,172,174)",
    "(123,104,89)",
  ],
  displayOrder: [
    "0",
    "10",
    "20",
    "30",
    "40",
    "50",
    "60",
    "70",
    "80",
    "90",
    "100",
    "110",
    "120",
    "130",
    "140",
    "150",
    "160",
    "170",
    "180",
    "190",
    "200",
    "210",
    "220",
    "230",
    "240",
    "250",
    "260",
    "270",
    "280",
    "290",
    "300",
    "310",
    "320",
    "330",
    "340",
    "350",
    "360",
    "370",
    "380",
    "390",
    "400",
    "410",
    "420",
    "430",
    "440",
    "450",
    "460",
    "470",
    "480",
    "490",
    "500",
    "510",
    "520",
    "530",
    "540",
    "550",
    "560",
    "570",
    "580",
    "590",
    "600",
    "610",
    "620",
    "1",
    "2",
    "11",
    "12",
    "13",
    "999",
    "44",
    "48",
    "74",
    "77",
  ],
  displayInStylingStationUI: ["false"],
  delayChance: ["0.25"],
  postSpawnPassiveThreatFactor: ["0.5"],
  spawnInOtherRoomChance: ["0.5"],
  faction: ["Mechanoid", "$siteFaction", "$faction"],
  signalActionAmbushType: ["Mechanoids"],
  spawnAroundComplex: ["true"],
  useDropPods: ["true"],
  tag: [
    "Urban",
    "NoBeard",
    "BeardRural",
    "BeardUrban",
    "NoTattoo",
    "Furskin",
    "Tribal",
    "BeardTribal",
    "TattooFaceTribal",
    "TattooBodyTribal",
    "Rural",
    "Punk",
    "BeardPunk",
    "TattooFacePunk",
    "TattooBodyPunk",
    "LeftLeg",
    "RightLeg",
    "LeftShoulder",
    "RightShoulder",
    "RightEye",
    "LeftEye",
    "$tag",
    "lord",
    "BanditCamp",
    "DownedRefugee",
    "DownedRefugeeQuestThreat",
    "EndGame_ShipEscape",
    "ItemStash",
    "ItemStashQuestThreat",
    "PreciousLump",
    "MineralScannerPreciousLumpThreat",
    "PeaceTalks",
    "PrisonerWillingToJoin",
    "PrisonerRescueQuestThreat",
    "Art",
    "MusicalInstrument",
    "ImplantEmpireCommon",
    "ImplantEmpireRoyal",
    "HiTechArmor",
    "Drugs",
    "PsylinkNeuroformer",
    "ExoticBuilding",
  ],
  baseWeight: ["1", "10", "0.1", "0.2", "0.3", "0.4", "0.25"],
  weightFactor: ["1"],
  pawnNameMaker: ["NamerPersonCorunan"],
  noble: ["Neolithic"],
  despised: ["Ultratech"],
  priority: [
    "2",
    "10",
    "20",
    "30",
    "40",
    "50",
    "100",
    "Preferred",
    "Important",
    "95",
    "94",
    "93",
    "92",
    "37",
    "27",
    "25",
    "15",
    "13",
    "11",
    "10.1",
    "9",
    "7",
    "6.5",
    "6",
    "5",
    "4.5",
    "4",
    "3",
    "2.75",
    "2.5",
    "1",
    "-1000",
  ],
  hasForcefulImpact: ["false"],
  makesBlood: ["false"],
  canInterruptJobs: ["false"],
  externalViolence: ["true", "false"],
  deathMessage: [
    "{0} has burned to death.",
    "{0} has succumbed to frostbite.",
    "{0} has been killed by a tornado.",
    "{0} has died during surgery.",
    "{0} has been executed by cutting.",
    "{0} has been cut to death.",
    "{0} has been crushed to death.",
    "{0} has been beaten to death.",
    "{0} has been stabbed to death.",
    "{0} has been torn to death.",
    "{0} has been bitten to death.",
    "{0} has died in an explosion.",
    "{0} has been shot to death.",
    "{0} has been shot to death by an arrow.",
    "{0} has been stunned to death.",
    "{0} has been EMPed to death.",
  ],
  hediff: [
    "Burn",
    "Frostbite",
    "Scratch",
    "SurgicalCut",
    "ExecutionCut",
    "Cut",
    "Crush",
    "Stab",
    "ToxicBuildup",
    "Bite",
    "CoveredInFirefoam",
    "Shredded",
    "Gunshot",
    "ChemicalDamageModerate",
    "Cirrhosis",
    "Carcinoma",
    "AlcoholHigh",
    "Hangover",
    "AlcoholAddiction",
    "AmbrosiaHigh",
    "AmbrosiaAddiction",
    "GoJuiceHigh",
    "GoJuiceAddiction",
    "FlakeHigh",
    "PsychiteTeaHigh",
    "ChemicalDamageSevere",
    "YayoHigh",
    "PsychiteAddiction",
    "Asthma",
    "SmokeleafHigh",
    "SmokeleafAddiction",
    "HeartAttack",
    "WakeUpAddiction",
    "Dementia",
    "BloodLoss",
    "Hypothermia",
    "Heatstroke",
    "BadBack",
    "Frail",
    "Cataract",
    "HearingLoss",
    "Alzheimers",
    "HeartArteryBlockage",
    "TraumaSavant",
    "Scarification",
    "MissingBodyPart",
    "CryptosleepSickness",
    "Malnutrition",
    "DirtInEyes",
    "MudInEyes",
    "GravelInEyes",
    "SandInEyes",
    "WaterInEyes",
    "Anesthetic",
    "Joywire",
  ],
  armorCategory: ["Heat", "Sharp", "", "Blunt"],
  minDamageToFragment: ["15"],
  defaultDamage: ["10", "999999", "50", "550", "0", "5", "20"],
  defaultArmorPenetration: ["0", "0.10", "1.30"],
  explosionHeatEnergyPerCell: ["15", "5"],
  explosionCellFleck: [
    "BlastFlame",
    "BlastExtinguisher",
    "BlastDry",
    "BlastEMP",
  ],
  explosionColorCenter: [
    "(1, 0.7, 0.7)",
    "(1, 0.5, 0.3)",
    "(0.73, 0.93, 0.96)",
  ],
  explosionColorEdge: [
    "(1, 1, 0.7)",
    "(1, 1, 1, 0.05)",
    "(0.6, 0.5, 0.4)",
    "(0.71, 0.82, 0.90)",
    "(0.8, 0.8, 0.8, 0.8)",
  ],
  soundExplosion: [
    "Explosion_Flame",
    "Explosion_Stun",
    "Explosion_Bomb",
    "Explosion_Smoke",
    "Explosion_Thump",
    "Explosion_EMP",
  ],
  combatLogRules: [
    "Damage_Flame",
    "Damage_Extinguish",
    "Damage_Bomb",
    "Damage_Smoke",
    "Damage_Stun",
    "Damage_EMP",
  ],
  canUseDeflectMetalEffect: ["false"],
  harmAllLayersUntilOutside: ["true", "false"],
  hediffSolid: ["Crack"],
  impactSoundType: [
    "Tornado",
    "",
    "Slice",
    "Blunt",
    "Toxic",
    "Bullet",
    "Electric",
  ],
  overkillPctToDestroyPart: ["0~0.7", "0~0.1", "0.4~1.0"],
  execution: ["true"],
  hediffSkin: ["ExecutionCut", "Cut", "Bruise"],
  cutCleaveBonus: ["1.4"],
  buildingDamageFactor: ["1.5", "10"],
  bluntStunDuration: ["2.0"],
  bluntInnerHitChance: ["0.4"],
  bluntInnerHitDamageFractionToConvert: ["0.1~0.2"],
  bluntInnerHitDamageFractionToAdd: ["0.2~0.35"],
  stabChanceOfForcedInternal: ["0.4", "0.6"],
  buildingDamageFactorImpassable: ["0.75", "4", "15"],
  scratchSplitPercentage: ["0.67"],
  severityPerDamageDealt: ["0.015"],
  victimSeverityScaling: ["ToxicResistance"],
  inverseStatScaling: ["true"],
  victimSeverityScalingByInvBodySize: ["true"],
  applyAdditionalHediffsIfHuntingForFood: ["false"],
  damageEffecter: [
    "Impact_Toxic",
    "Damage_HitFlesh",
    "Damage_HitMechanoid",
    "Damage_HitInsect",
  ],
  harmsHealth: ["false"],
  consideredHelpful: ["true"],
  isExplosive: ["true"],
  defaultStoppingPower: ["0.5", "2.0"],
  buildingDamageFactorPassable: ["2", "7.5"],
  plantDamageFactor: ["4"],
  corpseDamageFactor: ["0.5"],
  explosionAffectOutsidePartsOnly: ["false"],
  isRanged: ["true"],
  makesAnimalsFlee: ["true"],
  externalViolenceForMechanoids: ["true"],
  explosionSnowMeltAmount: ["0"],
  explosionInteriorFleck: ["ElectricalSpark"],
  menuClass: [
    "DebugTabMenu_Actions",
    "DebugTabMenu_Settings",
    "DebugTabMenu_Output",
  ],
  drug: ["Beer", "SmokeleafJoint"],
  allowedForJoy: ["true"],
  allowPleasureDrugs: ["true"],
  allowScheduled: ["true"],
  takeToInventory: ["1"],
  daysFrequency: ["1"],
  HediffDef: [
    "AlcoholHigh",
    "AlcoholTolerance",
    "Hangover",
    "AlcoholAddiction",
    "Cirrhosis",
    "ChemicalDamageModerate",
    "AmbrosiaHigh",
    "AmbrosiaTolerance",
    "AmbrosiaAddiction",
    "GoJuiceHigh",
    "GoJuiceAddiction",
    "LuciferiumHigh",
    "LuciferiumAddiction",
    "PenoxycylineHigh",
    "FlakeHigh",
    "PsychiteTolerance",
    "PsychiteAddiction",
    "ChemicalDamageSevere",
    "PsychiteTeaHigh",
    "YayoHigh",
    "SmokeleafHigh",
    "SmokeleafTolerance",
    "SmokeleafAddiction",
    "Carcinoma",
    "Asthma",
    "WakeUpHigh",
    "WakeUpAddiction",
    "HeartAttack",
    "ArchotechEye",
    "ArchotechArm",
    "ArchotechLeg",
    "BionicEye",
    "BionicArm",
    "BionicLeg",
    "BionicSpine",
    "BionicHeart",
    "BionicStomach",
    "DeathAcidifier",
    "BionicEar",
    "BionicTongue",
    "SimpleProstheticLeg",
    "SimpleProstheticArm",
    "SimpleProstheticHeart",
    "CochlearImplant",
    "PowerClaw",
    "Joywire",
    "Painstopper",
    "PsychicAmplifier",
  ],
  possessionCount: ["6", "10", "5", "1", "2", "4", "3", "20", "40", "30", "25"],
  graphicClass: [
    "Graphic_StackCount",
    "Graphic_Single",
    "Graphic_Fleck",
    "Graphic_FleckPulse",
    "Graphic_FleckSplash",
    "Graphic_Mote",
    "Graphic_MoteWithAgeSecs",
    "Graphic_PawnBodySilhouette",
    "Graphic_Multi",
    "Graphic_Random",
    "Graphic_Appearances",
    "Graphic_MealVariants",
    "Graphic_Cluster",
    "Graphic_Flicker",
  ],
  equippedAngleOffset: ["-150", "-20", "-65", "-25"],
  rotatable: ["false", "true"],
  stackLimit: [
    "25",
    "150",
    "1",
    "10",
    "75",
    "50",
    "200",
    "500",
    "100",
    "5",
    "3",
    "4",
    "300",
    "2",
  ],
  DeteriorationRate: [
    "0.5",
    "1.0",
    "4",
    "2",
    "6",
    "0",
    "2.0",
    "4.0",
    "10",
    "0.25",
    "8",
    "1.5",
    "3",
    "3.4",
    "20",
    "1",
  ],
  MarketValue: [
    "12",
    "2.5",
    "15",
    "53",
    "70",
    "18",
    "14",
    "10",
    "21",
    "11",
    "35",
    "2800",
    "400",
    "1200",
    "1000",
    "900",
    "2600",
    "0",
    "350",
    "50",
    "1300",
    "1500",
    "700",
    "600",
    "4000",
    "1700",
    "800",
    "80",
    "24",
    "20",
    "40",
    "1.1",
    "1.4",
    "3",
    "1.9",
    "8.0",
    "7.0",
    "20.0",
    "25.0",
    "23.0",
    "19.0",
    "18.0",
    "11.0",
    "9.0",
    "32",
    "200",
    "6",
    "2.3",
    "1.2",
    "0.6",
    "1.3",
    "1.6",
    "55",
    "1",
    "9",
    "5",
    "1.5",
    "4",
    "5.5",
    "2.7",
    "3.8",
    "2.1",
    "2.0",
    "3.0",
    "3.4",
    "4.2",
    "1.8",
    "6.5",
    "3.5",
    "3.3",
    "14.0",
    "250",
    "550",
    "650",
    "0.9",
    "0.4",
    "25",
    "1400",
    "2.65",
    "100",
    "150",
    "60",
    "90",
    "300",
    "320",
    "500",
    "210",
    "450",
    "1750",
    "Base price",
  ],
  Mass: [
    "0.3",
    "0.8",
    "0.1",
    "0.01",
    "0.005",
    "0.05",
    "4",
    "7",
    "1",
    "5",
    "8",
    "2",
    "3",
    "28",
    "30",
    "50",
    "60",
    "35",
    "2.5",
    "4.5",
    "10",
    "20",
    "22",
    "15",
    "14",
    "7.5",
    "100",
    "40",
    "6",
    "0.5",
    "0.2",
    "2.0",
    "1.8",
    "0.44",
    "0.015",
    "0.018",
    "0.075",
    "0.045",
    "0.025",
    "0.15",
    "0.35",
    "0.50",
    "0.6",
    "0.02",
    "0.03",
    "0.027",
    "0.014",
    "1.25",
    "0.008",
    "0.25",
    "0.4",
    "0.026",
    "0.032",
    "0.038",
    "0.028",
    "0.14",
    "0.11",
    "0.07",
    "1.4",
    "0.08",
    "1.2",
    "1.5",
    "1.0",
    "1.7",
    "12",
    "9",
    "25",
    "1.1",
    "18",
    "0.9",
    "0.85",
    "3.4",
    "3.5",
    "8.5",
    "2.6",
    "1.3",
    "3.0",
    "4.6",
    "150",
    "75",
    "Mass",
  ],
  Flammability: [
    "0.5",
    "0.2",
    "1.0",
    "0.7",
    "1.3",
    "0",
    "1.5",
    "0.22",
    "0.32",
    "0.8",
    "1",
    "0.6",
    "0.4",
    "0.9",
    "2.0",
    "0.1",
    "0.0",
    "1.2",
    "1.7",
  ],
  Nutrition: [
    "0.08",
    "0.2",
    "0.9",
    "1",
    "0.05",
    "0.1",
    "0.25",
    "0.5",
    "0.6",
    "2.0",
    "0.75",
    "0.3",
    "0.175",
    "0.4",
    "1.5",
    "0.50",
    "Nutrition",
  ],
  foodType: [
    "Fluid, Processed, Liquor",
    "VegetableOrFruit",
    "Processed",
    "Processed, Fluid",
    "Fluid, Processed",
    "Plant, Processed",
    "Meal",
    "Kibble",
    "AnimalProduct, Fluid",
    "AnimalProduct",
    "Fungus",
    "Seed",
    "Plant",
    "Tree",
    "OmnivoreAnimal, OvivoreAnimal",
    "VegetarianRoughAnimal",
    "CarnivoreAnimal, OvivoreAnimal",
    "OmnivoreRoughAnimal",
    "OmnivoreAnimal, AnimalProduct",
    "VegetarianRoughAnimal, DendrovoreAnimal",
    "DendrovoreAnimal",
    "CarnivoreAnimalStrict",
    "CarnivoreAnimal",
    "OmnivoreHuman",
    "None",
  ],
  joyKind: [
    "Chemical",
    "Meditative",
    "Social",
    "Gaming_Dexterity",
    "Gaming_Cerebral",
    "Television",
    "Telescope",
    "HighCulture",
    "Gluttonous",
  ],
  joy: ["0.17", "0.5", "0.40", "0.70", "0.80", "0.10", "0.08"],
  nurseable: ["true"],
  drugCategory: ["Social", "Hard", "Medical"],
  ingestSound: [
    "Ingest_Beer",
    "Ingest_Pill",
    "Ingest_Inject",
    "Ingest_Smoke",
    "Ingest_Drink",
    "Ingest_Snort",
    "Meal_Eat",
    "RawVegetable_Eat",
    "RawMeat_Eat",
  ],
  offset: [
    "(0.18,0,0)",
    "-0.02",
    "-0.05",
    "-0.10",
    "-0.03",
    "-0.08",
    "-0.18",
    "-0.20",
    "-0.30",
    "0.4",
    "0.15",
    "0.20",
    "0.35",
    "0.50",
    "-0.50",
    "0.10",
    "0.05",
    "0.70",
    "(0.23,0,0.065)",
    "0.2",
    "0.1",
    "(0.21,0,0.05)",
    "(0.27,0,0.08)",
    "(0.45,0,0.08)",
    "(-0.50,0,0.08)",
    "-0.1",
    "-0.3",
    "-0.15",
    "1.0",
    "-0.25",
    "-0.2",
    "-0.4",
    "-0.5",
    "0.5",
    "0.3",
    "-0.12",
    "-0.22",
    "-0.04",
    "-0.06",
    "-0.40",
    "(0,0,-0.1)",
    "(-0.12,0,-0.325)",
    "(0.12,0,-0.325)",
    "(-0.12,0,0.05)",
    "(0.12,0,0.05)",
    "(0, 0, 0.3)",
    "(-0.095, 0, 0.18)",
    "(0.095, 0, 0.18)",
    "(-0.17, 0, 0.32)",
    "(0,0,-0.13)",
    "(-0.05,0,0.1)",
    "(-0.05,0,-0.3)",
    "(0.05,0,0.1)",
    "(0.05,0,-0.3)",
    "(0.1, 0, 0.18)",
    "(-0.1, 0, 0.18)",
    "(0.15, 0, 0.16)",
    "(-0.15, 0, 0.16)",
    "(0,0,-0.06)",
    "(-0.12,0,-0.34)",
    "(0.12,0,-0.34)",
    "(-0.12,0,0.01)",
    "(0.12,0,0.01)",
    "(-0.05,0,-0.35)",
    "(0.05,0,-0.35)",
    "(0.135, 0, 0.18)",
    "(-0.135, 0, 0.18)",
    "(0,0,-0.15)",
    "(-0.075,0,-0.375)",
    "(0.075,0,-0.375)",
    "(-0.1,0,0.05)",
    "(0.1,0,0.05)",
    "(0, 0, 0.28)",
    "(-0.092, 0, 0.18)",
    "(0.092, 0, 0.18)",
    "(-0.17, 0, 0.27)",
    "(0,0,-0.12)",
    "(-0.2,0,-0.45)",
    "(0.2,0,-0.45)",
    "(-0.2,0,0.125)",
    "(0.2,0,0.125)",
    "(0, 0, 0.34)",
    "(-0.15, 0, 0.32)",
    "(-0.075,0,0.125)",
    "(-0.15,0,-0.475)",
    "(0.075,0,0.125)",
    "(0.15,0,-0.475)",
    "(0.175, 0, 0.18)",
    "(-0.175, 0, 0.18)",
    "(-0.19,0,-0.27)",
    "(0.19,0,-0.27)",
    "(-0.15,0,0.1)",
    "(0.15,0,0.1)",
    "(0, 0, 0.31)",
    "(0,0,0.15)",
    "(0,0,-0.4)",
    "(0.18, 0, 0.18)",
    "(-0.18, 0, 0.18)",
    "7",
    "0.02",
    "(0,0,-0.39)",
    "(0, 0, -0.28)",
    "(0, 0, -0.1)",
    "(0,0,0.2)",
    "(0, 0, -0.47)",
    "(0, 0, -0.15)",
    "(0, 0, 0.35)",
    "(0, 0, 0.2)",
    "(-0.03,0,-0.35)",
    "(0,0,-0.23)",
    "(-0.03,0,-0.1)",
    "(-0.1,0,-0.08)",
    "(0,0,0)",
    "(0,0,-0.25)",
    "(-0.20,0,0)",
    "(0, 0, 0)",
    "(0, 0, 0.08)",
    "(0, 0, 0.20)",
    "(0, 0, -0.18)",
    "(0, 0, -0.13)",
    "(0,0,-0.43)",
    "(0,0,0.38)",
    "(-0.13,-0.87,-0.1)",
    "(0,0,-0.05)",
    "(0.0, 0.0, -0.1)",
    "(0.0, 0.0, -0.4)",
    "(0.5, 0, -0.08)",
    "(-0.5, 0, -0.08)",
    "0.12",
    "(0,-0.15)",
    "(-0.35,-0.05)",
    "(0.05,0)",
    "(-0.1,0)",
    "(-0.15,0)",
    "(0.35,-0.05)",
    "(-0.05,0)",
    "(0.1,0)",
    "(0.15,0)",
    "(0,0.1)",
    "(0.25, -0.25)",
    "(0.25,-0.25)",
    "(0.15,-0.25)",
    "(0.25,-0.3)",
    "(0.45,-0.25)",
    "(-0.3, -0.25)",
    "(-0.3,-0.25)",
    "(-0.2,-0.25)",
    "(-0.3,-0.3)",
    "(-0.5,-0.25)",
    "(-0.05,-0.3)",
    "(0,0,-0.42)",
    "(-0.03,0,-0.44)",
    "(0,0,-0.38)",
    "(0,0,-0.2)",
    "(0,0,-0.44)",
    "(0.03,0,-0.44)",
    "(0,0,-0.47)",
    "(0,0,-0.3)",
    "(0,0,-0.08)",
    "(0,0,-0.5)",
  ],
  ingestCommandString: [
    "Drink {0}",
    "Take {0}",
    "Inject {0}",
    "Smoke {0}",
    "Snort {0}",
  ],
  ingestReportString: [
    "Drinking {0}.",
    "Taking {0}.",
    "Injecting {0}.",
    "Smoking {0}.",
    "Snorting {0}.",
  ],
  chairSearchRadius: ["25", "4", "8", "0"],
  canAutoSelectAsFoodForCaravan: ["false"],
  tableDesired: ["false"],
  hediffDef: [
    "AlcoholHigh",
    "AlcoholTolerance",
    "AmbrosiaHigh",
    "AmbrosiaTolerance",
    "GoJuiceHigh",
    "LuciferiumHigh",
    "PenoxycylineHigh",
    "FlakeHigh",
    "PsychiteTolerance",
    "PsychiteTeaHigh",
    "YayoHigh",
    "SmokeleafHigh",
    "SmokeleafTolerance",
    "WakeUpHigh",
    "LungRot",
    "PsychicAmplifier",
  ],
  severity: [
    "0.15",
    "0.016",
    "0.50",
    "0.032",
    "0.5",
    "1.00",
    "1.0",
    "0.75",
    "0.04",
    "0.03",
    "0.040",
    "0.030",
  ],
  toleranceChemical: [
    "Alcohol",
    "Ambrosia",
    "GoJuice",
    "Psychite",
    "Smokeleaf",
    "WakeUp",
  ],
  divideByBodySize: ["true"],
  multiplyByGeneToleranceFactors: ["true"],
  equipmentType: ["Primary"],
  techLevel: [
    "Neolithic",
    "Industrial",
    "Ultra",
    "Spacer",
    "Animal",
    "Archotech",
    "Medieval",
  ],
  chemical: [
    "Alcohol",
    "Ambrosia",
    "GoJuice",
    "Luciferium",
    "Psychite",
    "Smokeleaf",
    "WakeUp",
  ],
  addictiveness: ["0.010", "0.026", "1.00", "0.05", "0.02", "0.01", "0.020"],
  minToleranceToAddict: ["0.25", "0.15", "0.10"],
  existingAddictionSeverityOffset: ["0.20", "0.1", "0.30", "0.15", "0.06"],
  needLevelOffset: ["0.9"],
  compClass: [
    "CompEquippable",
    "HediffComp_ImmunizableToxic",
    "CompUsableImplant",
    "CompRitualEffect_SpawnOnOrganizer",
    "CompQuality",
    "CompMelter",
    "CompCauseGameCondition_PsychicEmanation",
    "CompAssignableToPawn_Bed",
    "CompGatherSpot",
    "CompHeatPusherPowered",
    "CompPowerTrader",
    "CompEggContainer",
    "CompUseEffect_StartWick",
    "CompAssignableToPawn_Grave",
    "CompPowerTransmitter",
    "CompPowerPlant",
    "CompPowerPlantWind",
    "CompAutoCutWindTurbine",
    "CompPowerPlantSolar",
    "CompPowerPlantSteam",
    "CompPowerPlantWater",
    "CompReportWorkSpeed",
    "CompActivable_FoamTurret",
    "CompActivable_RocketswarmLauncher",
    "CompTargetable_AllAnimalsOnTheMap",
    "CompTargetEffect_Manhunter",
    "CompTargetable_AllPawnsOnTheMap",
    "CompTargetEffect_MoodBoost",
    "CompUseEffect_FixWorstHealthCondition",
    "CompTargetable_SingleCorpse",
    "CompUseEffect_FinishRandomResearchProject",
    "CompColorable",
    "CompFirefoamPack",
    "CompTargetEffect_PsychicShock",
    "CompTargetEffect_Berserk",
    "CompAttachBase",
  ],
  power: [
    "9",
    "14",
    "12",
    "8.2",
    "22",
    "28",
    "18.2",
    "10",
    "7.5",
    "15.7",
    "16",
    "23",
    "13",
    "15",
    "11.7",
    "17",
    "23.6",
    "11",
    "6",
    "8",
    "7",
    "3",
    "3.6",
    "4.8",
    "2",
    "5.8",
    "8.5",
    "14.2",
    "5",
    "9.7",
    "4",
    "1",
    "5.6",
    "8.8",
    "7.3",
    "25",
    "16.9",
    "19",
    "3.4",
    "1.5",
    "7.2",
    "5.5",
    "21",
    "8.4",
    "5.4",
    "4.9",
    "10.9",
    "12.0",
    "20",
  ],
  cooldownTime: ["2", "1.5", "2.6", "1", "2.9"],
  allowedArchonexusCount: [
    "50",
    "20",
    "-1",
    "200",
    "1",
    "0",
    "40",
    "80",
    "150",
    "10",
    "5",
    "100",
    "400",
    "1000",
  ],
  healthAffectsPrice: ["false"],
  MaxHitPoints: [
    "60",
    "50",
    "100",
    "500",
    "300",
    "40",
    "200",
    "90",
    "150",
    "1200",
    "1000",
    "140",
    "75",
    "120",
    "175",
    "250",
    "80",
    "85",
    "30",
    "400",
    "1500",
    "4000",
    "8000",
    "2000",
    "130",
    "180",
    "350",
    "380",
    "160",
    "20",
    "70",
    "0.7",
    "0.6",
    "1",
    "2.8",
    "0.65",
    "2.5",
    "0.5",
    "1.3",
    "2.4",
    "1.0",
    "1.5",
    "2.0",
    "290",
    "340",
    "280",
    "1.8",
    "1.4",
    "900",
    "1.7",
    "700",
    "1.55",
    "450",
    "1.2",
  ],
  tickerType: ["Rare", "Normal", "Never", "Long"],
  daysToRotStart: [
    "5",
    "30",
    "0.75",
    "4",
    "70",
    "14",
    "15",
    "150",
    "40",
    "25",
    "60",
  ],
  rotDestroys: ["true"],
  jobString: [
    "Making wort.",
    "Installing archotech eye.",
    "Installing archotech arm.",
    "Installing archotech leg.",
    "Installing bionic eye.",
    "Installing bionic arm.",
    "Installing bionic leg.",
    "Installing bionic spine.",
    "Installing bionic heart.",
    "Installing bionic stomach.",
    "Installing death acidifier.",
    "Installing bionic ear.",
    "Installing bionic tongue.",
    "Installing peg leg.",
    "Installing wooden hand.",
    "Installing wooden foot.",
    "Installing denture.",
    "Installing heart.",
    "Installing lung.",
    "Installing kidney.",
    "Installing liver.",
    "Installing prosthetic leg.",
    "Installing prosthetic arm.",
    "Installing prosthetic heart.",
    "Installing cochlear implant.",
    "Installing power claw.",
    "Installing joywire.",
    "Installing painstopper.",
    "Removing painstopper.",
    "Excising carcinoma.",
    "Curing scaria.",
    "sterilizing TargetA.",
    "Butchering.",
    "Shredding mechanoid.",
    "Smashing mechanoid.",
    "Cremating.",
    "Burning apparel.",
    "Burning weapon.",
    "Burning drugs.",
    "Making kibble.",
    "Making pemmican.",
    "Making bulk pemmican.",
    "Cooking simple meal.",
    "Cooking 4 simple meals.",
    "Cooking fine meal.",
    "Cooking vegetarian fine meal.",
    "Cooking carnivore fine meal.",
    "Cooking 4 fine meals.",
    "Cooking 4 carnivore fine meals.",
    "Cooking 4 vegetarian fine meals.",
    "Cooking lavish meal.",
    "Cooking carnivore lavish meal.",
    "Cooking vegetarian lavish meal.",
    "Cooking 4 lavish meals.",
    "Cooking 4 vegetarian lavish meals.",
    "Cooking 4 carnivore lavish meals.",
    "Cooking survival meal.",
    "Cooking 4 survival meals.",
    "Cutting stone blocks from chunk.",
    "Smelting metal from slag.",
    "Smelting weapon.",
    "Smelting apparel.",
    "Destroying weapon.",
    "Destroying apparel.",
    "Refining chemfuel from wood.",
    "Refining chemfuel from organics.",
    "Making component.",
    "Making advanced component.",
    "Making patchleather.",
    "Anesthetizing.",
    "Euthanizing by cutting.",
    "Removing body part.",
    "activate",
    "Administering healer mech serum.",
  ],
  workSpeedStat: [
    "DrugCookingSpeed",
    "DrugSynthesisSpeed",
    "GeneralLaborSpeed",
    "ButcheryFleshSpeed",
    "ButcheryMechanoidSpeed",
    "CookSpeed",
    "SmeltingSpeed",
    "MedicalOperationSpeed",
  ],
  workSkill: ["Cooking", "Intellectual", "Crafting", "Medicine", "Artistic"],
  effectWorking: [
    "Cook",
    "Smith",
    "ButcherFlesh",
    "ButcherMechanoid",
    "Cremate",
    "BurnDrug",
    "CutStone",
    "Smelt",
    "Tailor",
    "Surgery",
    "Sculpt",
  ],
  soundWorking: [
    "Recipe_Brewing",
    "Recipe_CookMeal",
    "Recipe_Drug",
    "Recipe_Smith",
    "Recipe_ButcherCorpseFlesh",
    "Recipe_ButcherCorpseMechanoid",
    "Recipe_SmashCorpseMechanoid",
    "Recipe_Cremate",
    "Recipe_MakeStoneBlocks",
    "Recipe_Smelt",
    "Recipe_Machining",
    "Recipe_Tailor",
    "Recipe_Surgery",
    "Recipe_Sculpt",
    "MoisturePump_Ambience",
    "ScannerGroundPenetrating_Ambience",
    "ScannerLongRangeMineral_Ambience",
    "Recipe_MakeBow",
  ],
  allowMixingIngredients: ["true"],
  workAmount: [
    "1000",
    "2500",
    "1500",
    "4500",
    "500",
    "450",
    "300",
    "180",
    "60",
    "700",
    "2800",
    "1200",
    "1800",
    "3200",
    "1440",
    "1600",
    "400",
    "2000",
    "5000",
    "10000",
    "900",
    "0",
    "600",
    "800",
  ],
  targetCountAdjustment: ["1", "20", "50", "5"],
  count: [
    "25",
    "1",
    "2",
    "4",
    "3",
    "0.25",
    "1.0",
    "0.5",
    "2.0",
    "0.75",
    "3.0",
    "1.25",
    "5.0",
    "0.30",
    "1.20",
    "70",
    "3.5",
    "12",
    "20",
    "10",
    "0.3",
    "50",
    "800",
    "30",
    "450",
    "300",
    "720",
    "7",
    "200",
    "400",
    "500",
    "2000",
    "40",
  ],
  Wort: ["5"],
  labelNoun: [
    "drunkenness",
    "a hangover",
    "a go-juice high",
    "a flake high",
    "a psychite tea high",
    "a yayo high",
    "a smokeleaf high",
    "a wake-up high",
    "an archotech eye",
    "an archotech arm",
    "an archotech leg",
    "a bionic eye",
    "a bionic arm",
    "a bionic leg",
    "a bionic spine",
    "a bionic heart",
    "a bionic stomach",
    "a death acidifier",
    "a bionic ear",
    "a bionic tongue",
    "a peg leg",
    "a wooden hand",
    "a wooden foot",
    "a denture",
    "a prosthetic leg",
    "a prosthetic arm",
    "a prosthetic heart",
    "a cochlear implant",
    "a power claw",
    "a joywire",
    "a painstopper",
    "a catatonic breakdown",
    "a psychic shock",
    "a psychic coma",
    "a psychic hangover",
    "a brain shock",
    "pregnancy",
    "a heart attack",
    "a drug overdose",
    "a bad back",
    "frailty",
    "a cataract",
    "an artery blockage",
    "a carcinoma",
    "an infection",
    "a missing body part",
    "an injury",
    "a burn",
    "a chemical burn",
    "a crush wound",
    "a crack wound",
    "a cut",
    "a surgical cut",
    "a scratch",
    "a bite wound",
    "a stab wound",
    "a gunshot wound",
    "a shredded wound",
    "a bruise",
    "trauma",
    "sand",
    "dirt",
    "mud",
    "gravel",
    "water",
  ],
  hediffClass: [
    "Hediff_Alcohol",
    "Hediff_Hangover",
    "Hediff_Addiction",
    "Hediff_High",
    "HediffWithComps",
    "Hediff_Implant",
    "Hediff_AddedPart",
    "Hediff_Pregnant",
    "Hediff_HeartAttack",
    "Hediff_CoveredInFirefoam",
    "Hediff_RotStinkExposure",
    "Hediff_MissingPart",
    "Hediff_Injury",
    "Hediff",
    "Hediff_Psylink",
  ],
  defaultLabelColor: [
    "(1,0,0.5)",
    "(1,1,0.5)",
    "(0.6, 0.6, 1.0)",
    "(0.9, 1.0, 0.35)",
    "(0.7, 1.0, 0.7)",
    "(1, 0.2, 0.2)",
    "(0.8, 0.8, 0.35)",
    "(0.8, 0.8, 1)",
    "(214, 90, 24)",
    "(0.5, 0.5, 0.5)",
  ],
  scenarioCanAdd: ["true"],
  isBad: ["false", "true"],
  stateEffecter: ["Drunk", "Berserk"],
  severityIndices: ["3~5"],
  severityPerDay: [
    "-0.75",
    "-1",
    "-0.016",
    "-0.0333",
    "-0.020",
    "-0.1",
    "-0.045",
    "-0.015",
    "-0.18",
    "-3.0",
    "-1.5",
    "-1.0",
    "-0.8",
    "1.0",
    "0.3",
    "0.01",
  ],
  showHoursToRecover: ["true"],
  painFactor: ["0.9", "0.8", "0.5", "0.3", "0.1", "3", "0", "0.95"],
  socialFightChanceFactor: [
    "1.5",
    "2.5",
    "4.0",
    "5.0",
    "2.0",
    "3.0",
    "2",
    "3",
    "4",
  ],
  minSeverity: [
    "0.25",
    "0.4",
    "0.7",
    "0.9",
    "0",
    "0.15",
    "0.40",
    "0.50",
    "0.80",
    "0.30",
    "0.45",
    "0.60",
    "0.6",
    "0.8",
    "0.0",
    "0.0625",
    "0.2",
    "0.04",
    "0.333",
    "0.666",
    "1",
    "0.75",
    "0.35",
    "0.62",
    "0.5",
    "0.001",
    "0.3",
    "0.33",
    "0.78",
    "0.87",
    "0.833",
    "0.91",
    "0.4375",
    "0.625",
    "0.875",
    "0.9375",
    "0.85",
    "0.10",
    "0.55",
    "2",
    "3",
    "4",
    "5",
    "6",
  ],
  postFactor: [
    "0.9",
    "0.65",
    "0.5",
    "0.8",
    "0.6",
    "0.95",
    "0.85",
    "0.3",
    "0.1",
  ],
  vomitMtbDays: [
    "0.75",
    "0.2",
    "0.4",
    "4",
    "0.25",
    "0.125",
    "0.3",
    "5",
    "1",
    "0.5",
    "2.5",
    "2",
    "0.30",
    "1.0",
    "1.5",
    "3.5",
    "1.75",
  ],
  tale: [
    "Drunk",
    "MentalStateBerserk",
    "MentalStateGaveUp",
    "MajorThreat",
    "CaravanAmbushedByHumanlike",
    "CaravanAmbushedByManhunter",
    "CaravanMeeting",
    "CaravanDemand",
    "MeteoriteImpact",
    "ToxicFallout",
    "VolcanicWinter",
    "Flashstorm",
    "Raid",
    "Infestation",
    "ManhunterPack",
    "ShipPartCrash",
    "Eclipse",
    "Aurora",
  ],
  painOffset: [
    "0.05",
    "0.4",
    "-0.2",
    "0.2",
    "0.6",
    "0.15",
    "0.30",
    "0.1",
    "0.35",
    "0.5",
    "0.7",
    "0.08",
    "0.12",
    "0.85",
    "0.3",
    "0.02",
    "0.03",
  ],
  setMax: ["0.1", "0.8", "0.9", "0.7", "0.01", "0.10", "0.5", "0"],
  mtbDays: [
    "10",
    "40",
    "0.4",
    "30",
    "50",
    "120",
    "5",
    "146",
    "438",
    "37",
    "111",
    "13",
    "39",
    "2.5",
    "12",
    "9",
    "7",
    "4",
    "300",
    "200",
    "100",
    "60",
    "4.8",
    "15",
    "1.35",
  ],
  initialSeverity: ["1", "0.5", "0.001", "0.4", "0.3"],
  causesNeed: [
    "Chemical_Alcohol",
    "Chemical_Ambrosia",
    "Chemical_GoJuice",
    "Chemical_Luciferium",
    "Chemical_Psychite",
    "Chemical_Smokeleaf",
    "Chemical_WakeUp",
  ],
  showDaysToRecover: ["true"],
  mentalState: [
    "Binging_DrugMajor",
    "Binging_DrugExtreme",
    "Wander_Psychotic",
    "Berserk",
    "Binging_Food",
    "WanderConfused",
    "FireStartingSpree",
    "Jailbreaker",
    "Slaughterer",
    "MurderousRage",
    "GiveUpExit",
    "Tantrum",
    "TargetedTantrum",
    "BedroomTantrum",
    "SadisticRage",
    "CorpseObsession",
    "Wander_Sad",
    "Wander_OwnRoom",
    "InsultingSpree",
    "TargetedInsultingSpree",
  ],
  validWhileDespawned: ["true"],
  developmentalStageFilter: ["Baby, Child, Adult", "Child, Adult", "Adult"],
  baseMoodEffect: [
    "10",
    "14",
    "20",
    "26",
    "-3",
    "-6",
    "-12",
    "-35",
    "5",
    "-10",
    "-22",
    "35",
    "12",
    "13",
    "-20",
    "0",
    "6",
    "18",
    "24",
    "30",
    "-4",
    "-2",
    "-5",
    "-8",
    "-18",
    "-16",
    "-14",
    "-7",
    "-15",
    "15",
    "40",
    "8",
    "-1",
    "2",
    "4",
    "-30",
    "3",
    "7",
    "1",
    "-11",
    "-26",
    "-32",
    "-38",
    "-44",
    "-9",
    "16",
    "-40",
    "9",
    "11",
    "-25",
  ],
  visible: ["false"],
  addictionHediff: [
    "AlcoholAddiction",
    "AmbrosiaAddiction",
    "GoJuiceAddiction",
    "LuciferiumAddiction",
    "PsychiteAddiction",
    "SmokeleafAddiction",
    "WakeUpAddiction",
  ],
  toleranceHediff: [
    "AlcoholTolerance",
    "AmbrosiaTolerance",
    "PsychiteTolerance",
    "SmokeleafTolerance",
  ],
  onGeneratedAddictedToleranceChance: ["0.8"],
  chance: [
    "0.15",
    "0.05",
    "0.35",
    "0.1",
    "0.95",
    "0.75",
    "$siteThreatChance",
    "0.45",
    "0.03",
    "1",
    "0.6",
    "0.2",
    "0.3",
    "0.5",
    "1.0",
    "0.7",
    "chance",
  ],
  geneToleranceBuildupFactorResist: ["0.5"],
  geneToleranceBuildupFactorImmune: ["0"],
  needClass: [
    "Need_Chemical",
    "Need_Mood",
    "Need_Food",
    "Need_Rest",
    "Need_Joy",
    "Need_Beauty",
    "Need_Comfort",
    "Need_Outdoors",
    "Need_Indoors",
    "Need_Chemical_Any",
    "Need_RoomSize",
  ],
  listPriority: [
    "35",
    "20",
    "45",
    "50",
    "25",
    "40",
    "1000",
    "800",
    "700",
    "500",
    "300",
    "200",
    "100",
    "150",
    "600",
    "400",
    "2000",
  ],
  tradeability: ["Sellable", "None", "Buyable"],
  socialPropernessMatters: ["true", "false"],
  baseIngestTicks: ["80", "100", "650", "210", "150", "720"],
  preferability: [
    "DesperateOnly",
    "NeverForNutrition",
    "MealSimple",
    "MealAwful",
    "MealFine",
    "MealLavish",
    "RawBad",
    "RawTasty",
    "DesperateOnlyForHumanlikes",
  ],
  tasteThought: ["", "AteFineMeal", "AteLavishMeal", "AteKibble", "AteRawFood"],
  maxSeverity: ["1.0", "1", "0.5", "6"],
  generateAddictionGenes: ["false"],
  thingClass: [
    "ThingWithComps",
    "MoteThrown",
    "MoteDualAttached",
    "MoteThrownAttached",
    "MoteBubble",
    "MoteText",
    "MoteProgressBar",
    "MoteProgressBarAlwaysVisible",
    "MoteLeaf",
    "MoteAttached",
    "Building",
    "Building_AncientCryptosleepPod",
    "Building_Art",
    "Building_Bed",
    "Building_PlantGrower",
    "Building_SunLamp",
    "Building_Storage",
    "Building_BurningPowerCell",
    "Building_OrbitalTradeBeacon",
    "Building_CommsConsole",
    "Building_PodLauncher",
    "Building_Grave",
    "Building_Sarcophagus",
    "Building_CryptosleepCasket",
    "Building_AncientCryptosleepCasket",
    "Building_MarriageSpot",
    "Building_MusicalInstrument",
    "Mineable",
    "Building_SteamGeyser",
    "Hive",
    "Building_PowerSwitch",
    "Building_Battery",
    "Building_WorkTable",
    "Building_WorkTable_HeatPush",
    "Building_ResearchBench",
    "Building_FermentingBarrel",
    "Building_NutrientPasteDispenser",
    "Building_TrapDamager",
    "Building_TrapExplosive",
    "Building_TurretGun",
    "Building_TurretFoam",
    "Projectile_Liquid",
    "Building_TurretRocket",
    "Projectile_Explosive",
    "Building_ShipComputerCore",
    "Building_ShipReactor",
    "Building_Door",
    "Building_Heater",
    "Building_Cooler",
    "Building_Vent",
    "Medicine",
    "UnfinishedThing",
    "MinifiedThing",
    "MinifiedTree",
    "Apparel",
    "SmokepopBelt",
    "OrbitalStrike",
    "Bombardment",
    "PowerBeam",
    "SignalAction_Letter",
    "SignalAction_Ambush",
    "SignalAction_Message",
    "SignalAction_SoundOneShot",
    "SignalAction_OpenDoor",
    "SignalAction_Incident",
    "SignalAction_OpenCasket",
    "SignalAction_Infestation",
    "SignalAction_DormancyWakeUp",
    "SignalAction_StartWick",
    "SignalAction_Delay",
    "Skyfaller",
    "DropPodIncoming",
    "FlyShipLeaving",
    "ShuttleIncoming",
    "RectTrigger",
    "TriggerUnfogged",
    "TriggerContainerEmptied",
    "Explosion",
    "Blight",
    "Tornado",
    "TunnelHiveSpawner",
    "PawnFlyer",
    "RadialTrigger",
    "PawnJumper",
    "Filth",
    "LiquidFuel",
    "ActiveDropPod",
    "Fire",
    "Spark",
    "Thing",
    "Bullet",
    "Projectile_DoomsdayRocket",
    "Plant",
    "DeadPlant",
    "Pawn",
  ],
  drawerType: ["MapMeshOnly", "RealtimeOnly", "MapMeshAndRealTime", "None"],
  useHitPoints: ["true", "false", "False", "True"],
  selectable: ["true", "True", "False"],
  altitudeLayer: [
    "Item",
    "Projectile",
    "MoteOverhead",
    "MetaOverlays",
    "MoteLow",
    "MoteOverheadLow",
    "Building",
    "FloorEmplacement",
    "ItemImportant",
    "BuildingOnTop",
    "Floor",
    "Conduits",
    "LowPlant",
    "DoorMoveable",
    "Skyfaller",
    "Filth",
    "PawnState",
    "Pawn",
  ],
  alwaysHaulable: ["true", "True"],
  pathCost: [
    "14",
    "1",
    "2",
    "3",
    "4",
    "0",
    "300",
    "42",
    "30",
    "50",
    "10",
    "80",
  ],
  burnableByRecipe: ["true", "false"],
  resourceReadoutPriority: ["Last", "Middle", "First"],
  drawGUIOverlay: ["true", "True", "false"],
  maxNumToIngestAtOnce: ["1", "4"],
  storedConceptLearnOpportunity: ["DrugPolicies"],
  orderedTakeGroup: ["Drug", "Medicine"],
  bulkRecipeCount: ["4"],
  ingestHoldUsesTable: ["false"],
  onlyIfCausedByHediff: ["true"],
  tutorHighlightTag: ["NeedAddiction"],
  showForCaravanMembers: ["true"],
  WorkToMake: [
    "600",
    "250",
    "400",
    "350",
    "450",
    "900",
    "26000",
    "15000",
    "18000",
    "30000",
    "105000",
    "300",
    "800",
    "700",
    "0.9",
    "2.2",
    "0.7",
    "1.9",
    "1.4",
    "14000",
    "1800",
    "6000",
    "1200",
    "3000",
    "1400",
    "3200",
    "8000",
    "21000",
    "15750",
    "1600",
    "2700",
    "10000",
    "7000",
    "38000",
    "9000",
    "60000",
    "45000",
    "16000",
    "1.3",
    "1.1",
    "1.15",
    "5000",
    "12000",
    "4000",
    "11000",
    "20000",
    "31000",
    "24000",
    "34000",
    "40000",
    "2400",
  ],
  useEatingSpeedStat: ["false"],
  need: ["Rest", "Food", "Joy"],
  researchPrerequisite: [
    "GoJuiceProduction",
    "PenoxycylineProduction",
    "PsychiteRefining",
    "PsychoidBrewing",
    "WakeUpProduction",
    "Bionics",
    "Prosthetics",
    "Pemmican",
    "PackagedSurvivalMeal",
    "AdvancedFabrication",
    "MedicineProduction",
    "Mortars",
    "MicroelectronicsBasics",
    "Firefoam",
    "ShieldBelt",
    "ComplexClothing",
    "",
    "Smithing",
    "FlakArmor",
    "PoweredArmor",
    "ReconArmor",
    "SmokepopBelt",
    "PlateArmor",
    "Gunsmithing",
    "LongBlades",
    "BlowbackOperation",
    "GasOperation",
    "PrecisionRifling",
    "MultibarrelWeapons",
    "Machining",
    "RecurveBow",
    "Greatbow",
    "ChargedShot",
  ],
  Neutroamine: ["2", "1"],
  Yayo: ["1"],
  isCombatEnhancingDrug: ["true"],
  overdoseSeverityOffset: ["0.18~0.35", "0.08~0.14"],
  largeOverdoseChance: ["0.005", "0.015", "0.01"],
  hungerRateFactorOffset: ["0.5", "0.3", "0.6", "-0.1", "-0.4", "-0.95", "1"],
  RestFallRateFactor: ["0.3", "0.33", "0.8", "1.5", "1", "0.7"],
  geneOverdoseChanceFactorResist: ["0.5"],
  geneOverdoseChanceFactorImmune: ["0"],
  fallPerDay: ["0.333", "0.15", "0.071"],
  minRewardCount: ["10", "30"],
  doToGeneratedPawnIfAddicted: ["true"],
  everCurableByItem: ["false"],
  lifeThreatening: ["true"],
  deathMtbDays: ["10", "3.0"],
  mtbDeathDestroysBrain: ["true"],
  canBinge: ["false"],
  drawSize: [
    "0.75",
    "0.88",
    "1.25",
    "0.5",
    "(0.7, 0.7)",
    "0.32",
    "2.3",
    "2.5",
    "(2,2)",
    "(9, 9)",
    "(3, 3)",
    "(8, 8)",
    "(4.5, 4.5)",
    "(14, 14)",
    "(7, 7)",
    "(1.33, 1.33)",
    "1.0",
    "1.3",
    "1.1",
    "0.40",
    "30",
    "8",
    "(1.4, 1.4)",
    "0.80",
    "(2.5,2.5)",
    "3",
    "(1,2)",
    "(3,3)",
    "(4,4)",
    "(6,3)",
    "(3,4)",
    "(2.05,2.05)",
    "1.2",
    "(1,1)",
    "(4,6)",
    "(5, 5)",
    "(3,2)",
    "(2,1)",
    "(3,1)",
    "(5,4)",
    "2.65",
    "(4, 4)",
    "(2,3)",
    "2.46875",
    "(1, 2)",
    "(5,5)",
    "1.6",
    "(5,2)",
    "(6,6)",
    "(5,6)",
    "(3.5,1.5)",
    "(7,4)",
    "(1,4)",
    "(1.5, 1.5)",
    "1.4",
    "0.85",
    "(2,8)",
    "(8,8)",
    "(4.25,4.25)",
    "(2, 2)",
    "(2, 3)",
    "(1,1.25)",
    "0.8",
    "0.90",
    "(0.9, 0.9)",
    "0.9",
    "1.05",
    "1.00",
    "1.9",
    "(10, 10)",
    "1.75",
    "2",
    "1.5",
    "(0.7,0.7)",
    "1.15",
    "1.7",
    "2.25",
    "2.7",
    "1.8",
    "2.18",
    "1.35",
    "2.12",
    "0.6",
    "0.48",
    "0.73",
    "0.89",
    "1",
    "0.95",
    "0.45",
    "0.87",
    "1.23",
    "2.15",
    "2.0",
    "2.6",
    "2.2",
    "1.42",
    "1.30",
    "2.30",
    "2.20",
    "3.1",
    "2.95",
    "2.8",
    "3.5",
    "2.1",
    "3.8",
    "1.65",
    "4.0",
    "4.8",
    "1.375",
    "1.875",
    "3.6",
    "1.70",
    "1.95",
    "1.45",
    "1.68",
    "2.4",
  ],
  ingestEffect: ["Smoke_Flake", "Smoke_Joint", "EatVegetarian", "EatMeat"],
  ingestEffectEat: ["EatVegetarian"],
  PsychoidLeaves: ["4", "8"],
  Cooking: ["2", "6", "8", "7"],
  requiredGiverWorkType: ["Cooking", "Hauling"],
  displayPriority: [
    "1460",
    "300",
    "600",
    "0",
    "1440",
    "1450",
    "100",
    "400",
    "200",
    "700",
    "1100",
    "500",
    "1300",
    "900",
    "1200",
    "800",
    "1000",
    "1400",
    "1410",
    "1420",
    "10",
    "110",
    "105",
    "160",
    "205",
    "125",
    "310",
    "320",
    "220",
    "265",
    "208",
    "215",
    "210",
    "250",
    "230",
    "225",
    "115",
    "235",
    "450",
    "410",
    "420",
    "330",
    "405",
    "455",
    "465",
    "460",
    "415",
    "430",
    "435",
    "440",
    "445",
    "425",
    "510",
    "520",
    "530",
  ],
  behind: ["true"],
  flip: ["true"],
  ingestReportStringEat: ["Consuming {0}."],
  SmokeleafLeaves: ["4"],
  countToAffect: ["2", "1"],
  WorkSpeedGlobal: ["0.5", "1.8", "0.20", "0.40", "0.35", "-0.20", "-0.35"],
  minCategory: ["Hungry", "VeryTired", "Starving", "UrgentlyHungry", "Tired"],
  tagToGive: [
    "WaitingForOthersToFinishGatheringItems",
    "Escaping",
    "SatisfyingNeeds",
    "Misc",
    "TrainedAnimalBehavior",
    "RestingForMedicalReasons",
    "Idle",
    "DraftedOrder",
    "ChangingApparel",
    "TakeForInventoryStock",
    "UnloadingOwnInventory",
    "MiscWork",
    "UnspecifiedLordDuty",
    "InMentalState",
    "JoiningCaravan",
    "Fieldwork",
  ],
  treeDef: [
    "SatisfyVeryUrgentNeeds",
    "MainColonistBehaviorCore",
    "SatisfyBasicNeedsAndWork",
    "Abilities_Aggressive",
    "SatisfyBasicNeeds",
    "Downed",
    "BurningResponse",
    "MentalStateCritical",
    "DigOutIfCannotReachMapEdge",
    "MentalStateNonCritical",
    "RopedPawn",
    "LordDuty",
    "LeaveIfWrongSeason",
    "LeaveIfStarving",
    "Despawned",
    "JoinAutoJoinableCaravan",
    "LordDutyConstant",
    "Abilities_Escape",
    "MainWildManBehaviorCore",
  ],
  wanderRadius: ["5", "8", "3", "12"],
  expiryInterval: ["120", "500", "560"],
  locomotionUrgency: ["Jog", "Amble"],
  destinationFocusIndex: ["2", "3"],
  invert: ["true"],
  socialModeMax: ["Off"],
  exactCell: ["true"],
  ticks: ["50", "60", "600"],
  hook: ["HighPriority", "MediumPriority"],
  ticksRange: ["350~750"],
  ticksBetweenWandersRange: ["50~250", "120~240", "125~200"],
  ritualTagOnArrival: ["Arrived"],
  soundDefMale: ["Speech_Throne_Male"],
  soundDefFemale: ["Speech_Throne_Female"],
  defaultLocomotion: ["Walk", "Jog", "Amble", "Sprint"],
  alwaysShowWeapon: ["true"],
  onlyIfInDanger: ["true"],
  targetAcquireRadius: ["65", "35", "12", "15", "14", "30", "50", "20", "25"],
  targetKeepRadius: ["72", "40", "15", "18", "17", "23", "30"],
  maxDistToSquadFlag: ["16", "8"],
  locomotionUrgencyOutsideRadius: ["Sprint"],
  maxDistFromPoint: ["25", "50"],
  attackAllInert: ["true"],
  canMineNonMineables: ["false"],
  needLOSToAcquireNonPawnTargets: ["true"],
  jobMaxDuration: ["200", "500", "120", "1200"],
  forceCanDig: ["true"],
  forceCanDigIfAnyHostileActiveThreat: ["true"],
  forceCanDigIfCantReachMapEdge: ["true"],
  pickUpUtilityItems: ["true"],
  preferBuildingDestroyers: ["true"],
  chaseTarget: ["false"],
  mtbHours: ["2.5", "1.5", "10"],
  onlyIfDamagingState: ["true"],
  maxDanger: ["Deadly", "None", "Some"],
  thresholdTicks: ["600"],
  maxDistToDutyTarget: ["12"],
  useBed: ["true"],
  jobDef: [
    "LayDown",
    "Meditate",
    "Pray",
    "Skygaze",
    "GoForWalk",
    "VisitGrave",
    "ViewArt",
    "BuildSnowman",
    "SocialRelax",
    "VisitSickPawn",
    "Play_Horseshoes",
    "Play_Hoopstone",
    "Play_Billiards",
    "Play_GameOfUr",
    "Play_Chess",
    "Play_Poker",
    "WatchTelevision",
    "UseTelescope",
  ],
  subEffecterClass: [
    "SubEffecter_Sustainer",
    "SubEffecter_SprayerChance",
    "SubEffecter_SoundTriggered",
    "SubEffecter_SprayerTriggered",
    "SubEffecter_SprayerContinuous",
    "SubEffecter_InteractSymbol",
    "SubEffecter_SoundIntermittent",
    "SubEffecter_DrifterEmoteChance",
    "SubEffecter_ProgressBar",
  ],
  soundDef: [
    "Interact_ConstructMetal",
    "Interact_ConstructWood",
    "Interact_ConstructDirt",
    "Deflect_Metal",
    "Deflect_General",
    "Bridge_Collapse",
    "Bridge_CollapseWater",
    "Interceptor_BlockProjectile",
    "PokerChips",
    "EmpDisabled",
    "Television_Ambience",
    "BulletShieldGenerator_Reactivate",
    "EnergyShield_Broken",
    "BurningPowerCell_Start",
    "BurningPowerCell_Loop",
    "BurningPowerCell_End",
    "Interact_Research",
    "Interact_Repair",
    "PickHit",
    "Interact_Drill",
    "Interact_Paint",
    "Interact_GraveDig",
    "ToxicBuildupGained",
  ],
  fleckDef: [
    "DustPuff",
    "SparkFlash",
    "DirtBits",
    "AirPuff",
    "MicroSparksFast",
    "YellowSparkFlash",
    "BloodSplash",
    "BodyImpact",
    "PlainFlash",
    "ElectricalSpark",
    "ExplosionFlash",
    "GrowingFlash",
    "BlastEMP",
    "Smoke",
    "AcidSpray",
    "FoamSpray",
    "Fleck_HeatWaveDistortion",
    "Fleck_HeatDiffusion",
    "Fleck_RadialSparks",
    "Fleck_VaporizeGlow",
    "Fleck_VaporizeRays_A",
    "Fleck_VaporizeRays_B",
    "Fleck_VaporizeCenterFlash",
    "SmokeGrowing",
    "FlashPowerCell",
    "FlashPowerCellIntense",
    "ResearchPage",
    "DustSlow",
    "HarvestWood",
    "DustPuffThick",
    "SnowBits",
    "SpeechLines",
    "PsycastPsychicEffect",
    "PsycastPsychicLine",
  ],
  chancePerTick: [
    "0.035",
    "0.2",
    "0.05",
    "0.07",
    "0.052",
    "0.7",
    "0.03",
    "0.02",
    "0.06",
  ],
  scale: [
    "0.9~1.3",
    "2.5~3.5",
    "0.24~0.34",
    "0.9~1.2",
    "0.5~0.6",
    "2.5~4.5",
    "0.5~0.8",
    "0.1~0.2",
    "0.3~0.5",
    "0.38~0.6",
    "1.0~1.1",
    "1.1~1.4",
    "0.4",
    "1.0~1.3",
    "1.6~2.1",
    "0.55",
    "0.8~1.1",
    "0.2~0.3",
    "2.5~3.25",
    "0.83",
    "2~2.5",
    "1.3~1.6",
    "1.5~2.3",
    "3.0~3.0",
    "1~1.4",
    "0.5~0.7",
    "0.25~0.4",
    "0.35~0.45",
    "0.40~0.50",
    "4~5",
    "1~1",
    "5~5",
    "0.6~1",
    "0.6~1.1",
    "1.5~3",
    "0~0",
    "0.5~1.2",
    "0.8~1.25",
    "2",
    "0.9~1.1",
    "1.1~1.5",
    "4~6",
    "0.2~0.25",
    "0.3~0.7",
    "0.5",
    "1.6~2.0",
    "1.0~1.6",
    "0.7",
    "12",
    "18",
    "8",
    "-1",
    "-0.5",
    "4",
    "16",
    "0.6~0.9",
    "(0.75,0.75)",
    "(0.7,0.7)",
    "(0.9,0.9)",
    "(1.3,1)",
    "(0.8,0.8)",
    "(1.2,1.2)",
    "(1.1,1.1)",
    "(0.4,0.4)",
  ],
  rotationRate: [
    "-60~60",
    "-240~240",
    "5~10",
    "30",
    "-20",
    "15~30",
    "-5~5",
    "-15~25",
    "-15~15",
  ],
  speed: [
    "0.6~1.8",
    "7.2~24",
    "5",
    "0.4~0.8",
    "3.3~5",
    "0.3~0.4",
    "7~14",
    "0.3~0.7",
    "2~4",
    "0.8~1.4",
    "4.3~5.9",
    "0.6~0.75",
    "0.18~0.3",
    "4.8~8.4",
    "0.8~1.5",
    "0.2~0.35",
    "0.6~3.0",
    "0.6~3.3",
    "9~15",
    "0.18~0.18",
    "0.4~0.9",
    "3~5",
    "0.1~0.3",
    "70",
    "88",
    "120",
    "27",
    "38",
    "41",
    "1.2",
    "0.8",
    "1.5",
    "55",
    "40",
    "48",
    "46",
    "100",
    "50",
    "12",
    "90",
    "45",
    "44",
    "26",
    "56",
    "49",
  ],
  spawnLocType: [
    "BetweenTouchingCells",
    "BetweenPositions",
    "OnSource",
    "RandomCellOnTarget",
    "OnTarget",
  ],
  positionLerpFactor: ["0.49", "0.6", "0.35", "0.8", "0.85", "1"],
  moteDef: [
    "Mote_SparkThrown",
    "Mote_SparkThrownFast",
    "Mote_LongSparkThrown",
    "Mote_SparkThrownFastBlue",
    "Mote_Splash",
    "Mote_ToxicDamage",
    "Mote_FoodBitVegetarian",
    "Mote_FoodBitMeat",
    "Mote_SmokeJoint",
    "Mote_SmokeFlake",
    "Mote_VomitBit",
    "Mote_ExtinguisherPuff",
    "Mote_Cards",
    "Mote_GiantExplosion",
    "Mote_GiantExplosionInner",
    "FlashShieldBreak",
    "CracksShieldBreak",
    "Mote_PowerCellBurning",
    "Mote_SparkThrownFastBright",
    "Mote_DrunkBubble",
    "Mote_BerserkBit",
    "Mote_StoneBit",
    "Mote_CookBit",
    "Mote_ProgressBar",
    "Mote_ProgressBarAlwaysVisible",
    "Mote_Harvest",
    "Mote_Sow",
    "Mote_Clean",
    "Mote_Paint",
    "Mote_ClearSnow",
    "Mote_ResurrectFlash",
  ],
  airTime: ["0.08~0.16", "0.08~0.1"],
  angle: [
    "135~225",
    "0~360",
    "30~70",
    "-15~15",
    "-24~24",
    "0",
    "32~40",
    "-30~30",
    "10~80",
    "30~60",
    "-25~25",
  ],
  positionRadius: [
    "0.02",
    "0.2",
    "0.1",
    "0.01",
    "0.4",
    "0.0",
    "0.05",
    "0.25",
    "0.15",
    "0.3",
    "0.6",
    "0.5",
  ],
  fleckUsesAngleForVelocity: ["true"],
  fadeInTime: [
    "0.08",
    "0.03",
    "0.02",
    "0.04",
    "0.25",
    "0.1",
    "0.50",
    "0.40",
    "0.75",
    "0.15",
    "2.6",
    "0.2",
    "0",
    "0.01",
    "0.075",
    "0.05",
    "1",
    "0.5",
    "0.06",
    "0.35",
    "0.0",
  ],
  solidTime: [
    "0.33",
    "0.04",
    "0.05",
    "0.03",
    "2.75",
    "0.55",
    "0.25",
    "1.4",
    "2.2",
    "10",
    "0.2",
    "0.6",
    "6",
    "2",
    "1.08",
    "0.5",
    "0.3",
    "1.5",
    "0.08",
    "0.07",
    "0.15",
    "0.12",
    "0.0",
    "1",
    "0",
    "0.8",
    "0.4",
    "0.1",
    "0.09",
    "500",
    "600",
    "9999",
    "2.0",
    "0.65",
    "999",
    "1.2",
    "999999999",
    "4",
    "6.8",
    "9.3",
    "0.62",
    "0.7",
    "999999",
    "3",
  ],
  fadeOutTime: [
    "0.85",
    "0.13",
    "0.2",
    "0.5",
    "1",
    "4.7",
    "1.65",
    "0.15",
    "1.5",
    "2.6",
    "4",
    "0.02",
    "0.1",
    "1.4",
    "3.2",
    "2",
    "0.8",
    "0.65",
    "0.45",
    "3.3",
    "0.35",
    "0.05",
    "0.08",
    "0.3",
    "0.6",
    "0.4",
    "0.01",
    "0.55",
    "0.25",
    "0",
    "1.2",
    "1.0",
    "0.03",
    "0.0",
    "3",
  ],
  collide: ["true"],
  burstCount: [
    "4~5",
    "1~1",
    "2~3",
    "1",
    "7~10",
    "3~4",
    "1~2",
    "3~3",
    "4~7",
    "2~2",
    "6~8",
    "3~5",
    "3",
    "10~15",
    "5~10",
    "2~4",
    "5~7",
    "5",
  ],
  offsetTowardsTarget: ["0.25~0.25", "0.31~0.31"],
  shaderType: [
    "MoteGlow",
    "Mote",
    "MoteGlowDistortBackground",
    "Transparent",
    "TransparentPostLight",
    "MoteHeatDiffusion",
    "MoteCircularSparks",
    "MoteWater",
    "Cutout",
    "MoteGlowDistorted",
    "MotePsychicConditionCauser",
    "MoteMultiplyAddScroll",
    "MoteMultiplyAddCircularGrayscale",
    "GlowAnimated",
    "CutoutComplex",
    "CutoutFlying",
    "TransparentPlant",
    "CutoutPlant",
    "CutoutSkin",
    "CutoutWithOverlay",
  ],
  rotateTowardsMoveDirection: ["true"],
  growthRate: [
    "-0.7",
    "0.47",
    "0.54",
    "0.07",
    "-0.3",
    "0.005",
    "0.04",
    "57",
    "20",
    "37",
    "1.5",
    "0.9",
    "0.6",
    "3",
    "1.2",
    "1.25",
    "11",
    "0.33",
    "2",
    "325",
    "200",
    "2.5",
    "0.025",
  ],
  speedPerTime: ["-22", "-0.12", "-40"],
  ticksBetweenMotes: [
    "20",
    "30",
    "50",
    "15",
    "13",
    "5",
    "500",
    "40",
    "60",
    "14",
    "17",
  ],
  absoluteAngle: ["true"],
  acceleration: ["(0,0,0.0014)"],
  attachToSpawnThing: ["true"],
  rotation: ["-15~15", "0~360", "South", "West", "East"],
  positionOffset: ["(0, 0, 0.4)", "(0, 0, 0.35)"],
  ticksBeforeSustainerStart: ["35"],
  sustain: ["True", "False", "true"],
  context: ["MapOnly", "PlayerStarter", "WorldOnly", "context"],
  maxSimultaneous: ["1", "3", "2", "5", "4"],
  priorityMode: ["PrioritizeNearest"],
  muteWhenPaused: ["True", "true"],
  clipPath: [
    "Interact/Work/Drill/Drill_loop",
    "Misc/Psycasts/PsyampInstalled_01a",
    "Songs/Entry/Entry_Ambience_Full",
    "Songs/Relax/Noodles_Planetfall/Noodle_Planetfall_a",
    "Songs/Relax/Noodles_Planetfall/Noodle_Planetfall_b",
    "Songs/Relax/Noodles_Planetfall/Noodle_Planetfall_c",
    "Songs/Relax/Noodles_Planetfall/Noodle_Planetfall_d",
    "Songs/Relax/Noodles_Planetfall/Noodle_Planetfall_e",
    "Songs/Relax/A_New_Day",
    "Songs/Relax/Noodles_Starscape/Noodle_Starscape_a",
    "Songs/Relax/Noodles_Starscape/Noodle_Starscape_b",
    "Songs/Relax/Noodles_Starscape/Noodle_Starscape_c",
    "Songs/Relax/Noodles_Starscape/Noodle_Starscape_d",
    "Songs/Relax/Noodles_Starscape/Noodle_Starscape_e",
    "Songs/Relax/Noodles_Starscape/Noodle_Starscape_f",
    "Songs/Relax/Noodles_Mirage/Noodle_Mirage_b",
    "Songs/Relax/Noodles_Mirage/Noodle_Mirage_c",
    "Songs/Relax/Noodles_Mirage/Noodle_Mirage_d",
    "Songs/Relax/Noodles_Mirage/Noodle_Mirage_e",
    "Songs/Relax/I_Like_It_Here",
    "Songs/Relax/Cruel_Sunrise",
    "Songs/Relax/Terraformer",
    "Songs/Relax/Moving_On",
    "Songs/Relax/Night_And_Day",
    "Songs/Relax/Tribal_Assembly",
    "Songs/Relax/Ice_Shaman",
    "Songs/Relax/Barnstar",
    "Songs/Relax/Ceta",
    "Songs/Relax/Alpaca",
    "Songs/Relax/Jovian_Cycle",
    "Songs/Relax/Rough_Trail",
    "Songs/Relax/Moon_Harvest",
    "Songs/Relax/Space_Junk",
    "Songs/Relax/These_Lands",
    "Songs/Relax/Gathering_In",
    "Songs/Relax/Seasons_Turn",
    "Songs/Relax/What_Gravity",
    "Songs/Relax/Traces",
    "Songs/Misc/End_Credits_Song",
    "Songs/Tension/Here_It_Comes",
    "Songs/Tension/Close_The_Gates",
    "Songs/Tension/Riding_Out",
    "Songs/Tension/Dont_Freeze_Up",
    "Songs/Tension/Chaos_Bringer",
    "Buildings/Exotic/BulletShield_Ambience_Loop_01a",
    "Misc/CryptosleepCasket/CryptosleepCasketEject",
    "Misc/CryptosleepCasket/CryptosleepCasketAccept",
    "Misc/Hive/Spawn",
    "Exotic/Ship_Reactor/ShipReactor_Startup_01a",
    "Misc/Shuttle/Shuttle_Idle_Ambience_Loop_01a",
    "Misc/Steam_Geyser/SteamGeyser_Venting",
    "Exotic/Crashed_Ship_Part/Drone/EvilShip_Loop_1b",
    "Electricity/GeothermalPlant/Start/GeothermalPlantStart_1a",
    "Electricity/GeothermalPlant/Stop/GeothermalPlantStop_1a",
    "Electricity/GeothermalPlant/Run/GeothermalPlantRun_Loop1a",
    "Electricity/Watermill_Loop_01a",
    "Interact/Joy/WatchTelevision/Television_Ambience_Loop1",
    "Exotic/Ship_Reactor/ShipReactor_Ambience_Loop_01a",
    "Interact/Work/Scanner/GroundPenetrating/ScannerGroundPenetrating_Ambience_Start",
    "Interact/Work/Scanner/GroundPenetrating/ScannerGroundPenetrating_Ambience_Stop",
    "Interact/Work/Scanner/GroundPenetrating/ScannerGroundPenetrating_Ambience_Loop",
    "Interact/Work/Scanner/LongRangeMineral/ScannerLongRangeMineral_Ambience_Start",
    "Interact/Work/Scanner/LongRangeMineral/ScannerLongRangeMineral_Ambience_Stop",
    "Interact/Work/Scanner/LongRangeMineral/ScannerLongRangeMineral_Ambience_Loop",
    "Electricity/WoodFiredGenerator_Ambience",
    "Electricity/ChemfuelFiredGenerator_Ambience",
    "Electricity/WindTurbine_Ambience_Loop_01",
    "Misc/Ship_Takeoff_1",
    "Misc/Artifacts/MechSerumApplying_01c",
    "Interact/Drugs/Smoke/Smoke_start",
    "Interact/BuildingComplete",
    "Interact/FlickSwitch",
    "Interact/Work/Doctor/TechMedicineUsed",
    "Interact/Execute/Cut",
    "Interact/Haul/Drop/GrainDrop",
    "Interact/Haul/Drop/MetalDrop",
    "Interact/Haul/Drop/CorpseDrop",
    "Interact/Work/Repair/WeldStart",
    "Interact/Work/Repair/WeldLoop",
    "Interact/Work/Construct/Circular_Saw/Saw_Circular_Off/Wood_Saw_Circular_Off",
    "Interact/Work/Construct/Stone/StoneBlock_Drop/StoneBlock_Drop_1a",
    "Interact/Work/Cremate/Crematorium/Crematorium_Stop_1a",
    "Interact/Work/Cremate/Crematorium/Crematorium_Loop",
    "Interact/Work/Smelt/ElectricSmelter/Start/ElectricSmelterStart_1a",
    "Interact/Work/Smelt/ElectricSmelter/Stop/ElectricSmelterStop_1a",
    "Interact/Work/Smelt/ElectricSmelter/Loop/ElectricSmelterLoop_1a",
    "Interact/Work/Sculpt/SculptingStart_1a",
    "Interact/Work/Sculpt/SculptingStop_1a",
    "Interact/Work/Produce/Producing_Drug/Recipe_ProduceDrug_Loop",
    "Interact/Work/Produce/Producing_Drug/Recipe_ProduceDrug_Start",
    "Interact/Work/Produce/Producing_Drug/Recipe_ProduceDrug_Stop",
    "UI/WeaponHandling/HandleWeaponB",
    "UI/Clock/ClockStops",
    "UI/Clock/ClockTickingNormal",
    "UI/Clock/ClockTickingFast",
    "UI/Clock/ClockTickingSuperfast",
    "UI/Designate/DragStandard2",
    "UI/Designate/DragBuildingStart",
    "UI/Designate/CreateZone_Start2",
    "UI/Designate/Cancel5",
    "UI/Designate/DesignateFailed",
    "UI/Designate/CreateZone_End2",
    "UI/Designate/AddZone/PlaceZone_Dumping_A01",
    "UI/Designate/DeleteZone",
    "UI/Designate/Hunt2",
    "UI/Designate/Slaughter",
    "UI/Designate/ReleaseToWild",
    "UI/Designate/Harvest",
    "UI/Designate/PlanAdd",
    "UI/Designate/PlanRemove1",
    "UI/Designate/Claim",
    "UI/Stings/Game_Start_Sting_1a",
    "UI/TinyBell",
    "UI/TabOpen",
    "UI/TabClose",
    "UI/PageChange",
    "UI/TickTiny",
    "UI/TickLow",
    "UI/TickHigh",
    "UI/Crunch",
    "UI/Click",
    "UI/ClickReject",
    "UI/ToggleButton_Mouseover",
    "UI/GentleBeep",
    "UI/SubmenuSelect",
    "UI/BuyThing",
    "UI/FloatMenuOpen",
    "UI/FloatMenuCancel",
    "UI/LetterArrive",
    "UI/LetterArriveBadUrgent",
    "UI/LetterArriveBadUrgentBig",
    "UI/LetterArriveBadUrgentSmall",
    "UI/LetterArriveGood",
    "UI/DraftOff",
    "UI/ResearchStart",
    "UI/SelectThing",
    "UI/SelectMap",
    "UI/Radio/RadioFuzzOpen",
    "UI/Radio/RadioFuzzClose",
    "UI/Alerts/AlertBasic",
    "UI/Alerts/HappyPop",
    "UI/Alerts/AlertNegative",
    "UI/Alerts/AlertRed",
    "UI/Alerts/AlertYellow",
    "UI/Alerts/PawnDeath",
    "UI/Alerts/NegativeHealthEvent",
    "UI/Alerts/TaskCompletion",
    "UI/FlickWhoosh",
    "UI/CommsWindow_Open",
    "UI/CommsWindow_Close",
    "UI/InfoCard_Close",
    "UI/Tutor/LessonActivated",
    "UI/Tutor/LessonDeactivated",
    "Misc/PlanetkillerImpact",
    "UI/Quests/Quest_Accepted_01a",
    "UI/Quests/Quest_Succeeded_01a",
    "UI/Quests/Quest_Concluded_01a",
    "UI/Quests/Quest_Failed_01a",
    "UI/Designate/DragBuilding",
    "UI/Designate/CreateZone_Drag2",
    "UI/CommsWindow_DroneLoop_1a",
    "Explosion/FireFoam/Firefoam_Pop_Pack_Explode_02a",
    "Explosion/FireFoam/Firefoam_Popper_Explode_02a",
    "Weapon/GunTurret/Status/Target_Acquired",
    "Weapon/GunTurret/Status/FoamTurret_Activate",
    "Misc/RockCollapse",
    "Interact/Food/Dispense/DispensePaste",
    "Misc/DropPodLeaving",
    "Misc/Trap/TrapArm",
    "Misc/Trap/TrapSpring",
    "Misc/BridgeCollapse",
    "Misc/BridgeCollapseWater",
    "Misc/Hiss/MetalHit",
    "Misc/EnergyShield/Reset/Shield_Reset",
    "Weapon/GrenadePin",
    "UI/WeaponHandling/HandleWeapon_SmallA",
    "Weapon/GunShotA",
    "UI/WeaponHandling/HandleWeapon_BigALow",
    "UI/WeaponHandling/HandleWeaponA",
    "Weapon/BowA",
    "Weapon/BowB",
    "Weapon/ChargeShotA",
    "Weapon/OrbitalTargeter/OrbitalTargeter_Fire",
    "Ambience/Amb_Night_Insects1a_Loop",
    "Ambience/JungleInsects_Night_1a",
    "Ambience/JungleInsects_Day_1a",
    "Ambience/Wind/Amb_Wind_Altitude1_Loop",
    "Ambience/Wind/Amb_Wind_Clear1_Loop",
    "Ambience/Wind/Amb_Wind_Fog2_Loop",
    "Ambience/Amb_Raining2_Loop",
    "Ambience/Wind/Amb_Wind_Stormy_Loop",
    "Ambience/Amb_Space",
    "Misc/Fire/BurningLoop",
    "Misc/Tornado/TornadoLoop",
    "Misc/Tunnel/TunnelLoop",
    "Misc/Tunnel/TunnelEnd",
    "Misc/Hiss/HissSmall",
    "Misc/Hiss/HissJet",
    "Misc/OrbitalBeam/OrbitalBeam",
    "Misc/OrbitalBeam/OrbitalBeamSubtle",
    "Weapon/OrbitalTargeter/OrbitalTargeter_Aiming",
  ],
  volumeRange: [
    "6~6",
    "6",
    "5",
    "40.384~40.384",
    "20",
    "10",
    "8",
    "40~40",
    "42",
    "30",
    "17",
    "40",
    "14",
    "75",
    "90",
    "5~6",
    "16",
    "16~16",
    "15~15",
    "18",
    "12~16",
    "60",
    "19",
    "13",
    "9.705886~9.705877",
    "42~42",
    "30~30",
    "50~50",
    "35",
    "10~10",
    "17~13",
    "30~15",
    "20~20",
    "17~17",
    "30.51151~42.93479",
    "19.56522~31.52174",
    "25.80563~31.16368",
    "12~12",
    "22.58824~21.41176",
    "25.81395~25.81395",
    "16.51163~20",
    "15.34884~15.34884",
    "22",
    "15",
    "12",
    "25",
    "18.70844~20.70332",
    "7~11",
    "5~7",
    "13.46512~15.4651",
    "7~7",
    "25~25",
    "9.5~9.5",
    "17~25",
    "14~14",
    "13~13",
    "9~9",
    "40~47.05882",
    "17.05883~19.41177",
    "12~50",
    "20~30",
    "9~10",
    "9.304348~12.56522",
    "17.17392~17.17392",
    "3~6",
    "10.2504~11.1252",
    "11~11",
    "5~5",
    "4",
    "1.079137~10.56115",
    "3.578174~12",
    "2~4",
    "3~5",
    "2.3",
    "7.162788~7.162788",
    "11.68263~11.68263",
    "10.70588~10.70588",
    "8~8",
    "8.380299~8.380299",
    "8~10",
    "20~25",
    "12~14",
    "20~28",
    "25~35",
    "16~25",
    "32~32",
    "22~22",
    "8.5~8.5",
    "21~21",
    "15.42672~14.7734",
    "10~12",
    "12.19512~12.19512",
    "26.82927~26.82927",
    "28.04878~28.04878",
    "19.5122~19.5122",
    "25.60976~25.60976",
    "23.17073~23.17073",
    "24.39024~24.39024",
    "29.26829~29.26829",
    "32.92683~32.92683",
    "48.78049~48.78049",
    "18.29268~18.29268",
    "18~18",
    "17~24",
    "23~23",
    "21.5122~21.5122",
    "23.5122~23.5122",
    "17~23",
    "25.04878~25.04878",
    "20.5122~20.5122",
    "18~23",
    "18.04878~18.04878",
    "13.5122~13.5122",
    "18.3~21.4",
    "16.36~16.36",
    "15.5~15.5",
    "16.5122~16.5122",
    "18~25",
    "14~17",
    "24.04878~24.04878",
    "10.4",
    "3.3",
    "7",
    "2",
    "15.88235~15.88235",
    "4~4",
    "41~41",
    "45~45",
    "70~70",
    "80~80",
    "10.58823~10.58823",
    "19~19",
    "50",
    "14.17647~8.294118",
    "3.617487~3.617487",
    "3",
    "1",
    "88.23529~90.58823",
    "90~90",
    "100~100",
    "80",
    "15~25",
    "15~20.43478",
    "10~18",
    "8~16",
    "50~80",
    "8~14",
    "45~50",
    "13.17392~13.17392",
    "39.41176~38.23529",
    "28.82353~37.05883",
    "67.05882~72.94118",
    "64.70588~67.05882",
    "37~37",
    "6.956522~22.17392",
    "6.956522~22.82609",
    "7~23",
    "25~50",
    "40.58823~40.58823",
    "24.11765~24.11765",
    "33~38",
    "65~75",
    "60~70",
    "25~30",
    "18.23529~20.58824",
    "24.11765~30",
    "38.23529~37.05882",
    "23.91304~23.91304",
    "34.7826~34.7826",
    "56.09319~53.58423",
    "45.70111~55.30627",
    "60.70111~77.30627",
    "35~35",
    "61.76471~61.76471",
    "45.2941~45.2941",
    "77~77",
    "94.70588~94.70588",
    "33.52942~33.52942",
    "1.408217~1.408217",
    "2.6~2.6",
    "3~19",
    "20.25788~30.18052",
    "2.5~2.5",
    "3.5~3.5",
    "61~61",
    "11.86047~11.86047",
  ],
  pitchRange: [
    "0.93~1.07",
    "0.9~1.1",
    "0.5~0.9",
    "0.9088235~1",
    "1~1.015",
    "1~1.15",
    "0.8529412~1.321177",
    "0.8852941~1.022941",
    "0.862353~0.9541182",
    "0.8~1.2",
    "1~1.14837",
    "0.8516304~1.190761",
    "1.446356~2",
    "0.9541177~1.068824",
    "0.8852941~1.114706",
    "0.9311765~1.137647",
    "0.9082353~1.022941",
    "0.9311765~1.045882",
    "0.9082353~1.229412",
    "0.9541175~1.068824",
    "1~1.18353",
    "0.9543775~1.193992",
    "0.7~0.9",
    "1.1~1.3",
    "0.97~1.03",
    "0.88~1.12",
    "1.0~1.2",
    "0.936413~1.275543",
    "0.9311765~1.091765",
    "0.9770588~1.114706",
    "0.9905882~1.068824",
    "0.9770588~1.068824",
    "0.9541177~1.045882",
    "0.9311765~1.183529",
    "0.8236416~1.14837",
    "0.8304347~1.169566",
    "0.9408336~1.207082",
    "0.9541177~1.091765",
    "0.8986984~1.279892",
    "0.9311764~1.137647",
    "0.9311765~1.160588",
    "1~1.114706",
    "1~1.1",
    "0.9719425~1.022941",
    "1~1.185696",
    "0.8529411~1",
    "1",
    "1~1.013529",
    "0.9541177~1.137647",
    "0.95~1.1",
    "0.9770588~1.137647",
    "0.9541176~1.137647",
    "0.9311764~1.068824",
    "0.9082353~1.114706",
    "1.206471~1",
    "1.504706~1.596471",
    "1.4~1.6",
    "0.90~1.1",
    "0.95~1.05",
    "1.2~1.3",
    "0.8852941~1.275294",
    "0.9311765~1.128235",
    "1.298236~1.61",
    "1.39~1.573529",
    "0.7~0.75",
    "1.2~1.2",
    "0.8~1",
    "0.7082353~1.114706",
    "0.7082353~1.414706",
    "0.7082353~1.214706",
    "0.6~0.65",
    "0.954~1.068",
    "0.931~1.045",
    "0.9",
    "0.93~1",
    "0.85~1.15",
    "2~2",
    "1.045882~1",
    "1~1.091764",
    "1.114706~1",
    "0.7973334~0.7973334",
    "0.8973334~0.8973334",
    "0.8516304~1.254348",
    "1.6516304~1.954348",
    "0.7456522~1.084783",
    "0.8~1.15",
    "0.98~1.02",
    "0.4~0.5",
    "0.936413~1",
    "0.9152174~1.158843",
    "0.9152174~1.042391",
    "0.8940217~1.296739",
    "0.8940217~1.084783",
    "1~1.5",
    "0.89~1.05",
    "1.2~1.5",
    "0.38539~0.4330179",
    "0.8940217~1.190761",
    "0.936413~1.423913",
    "0.9152174~1.084783",
    "0.9152174~1.169566",
    "0.6~0.8",
    "0.96~1.07",
    "0.96~1.12",
    "0.9082352~1.091765",
    "0.9576087~1.084783",
    "0.9576087~1.063587",
    "0.9788043~1.084783",
    "0.9788043~1.063587",
    "0.936413~1.042391",
    "0.8728257~1",
    "0.9576087~1.042391",
    "0.85~0.95",
    "1.153763~1.265591",
    "0.55~0.65",
    "0.6976015~0.7769372",
    "1.091765~1",
    "0.7~0.8",
    "0.9770592~1.114706",
    "1.75~1.85",
    "0.9082353~1.045882",
    "0.99~1.01",
    "0.91~1.05",
    "0.9165775~1.114706",
    "0.8~0.8",
    "0.8164706~1.160588",
    "0.7541547~1.268195",
    "0.8973684~1.148246",
    "1.190761~0.8304348",
    "1.042391~1.021195",
    "0.91~1.15",
    "0.9~1.3",
  ],
  distRange: [
    "25~40",
    "10~30",
    "10~70",
    "10~100",
    "10~80",
    "20~50",
    "10~40",
    "25~50",
    "5~30",
    "10~34",
    "10~38",
    "0~50.27907",
    "0~30",
    "5~25",
    "10~25",
    "5~20",
    "10~20",
    "15~40",
    "10~50",
    "0~49.53489",
    "0~51.86047",
    "0~70",
    "0~44.41861",
    "0~40",
    "20~40",
    "0~50.40025",
    "0~50",
    "15~30",
    "20.29412~70",
    "5~50",
    "39.11765~70",
    "20~100",
    "0~51.39535",
    "0~51",
  ],
  sustainAttack: [
    "1.1",
    "1",
    "2",
    "5",
    "0.05882355",
    "1.0",
    "0.5",
    "0.1",
    "20",
    "10",
    "2.5",
  ],
  clipFolderPath: [
    "Interact/Work/Paint",
    "Interact/Work/RemovePaint",
    "Misc/DeathAcidifier",
    "Misc/EMPDisabled",
    "Misc/MechanoidsWakeUp",
    "Impact/BuildingDestroyed/Wood/Big",
    "Impact/BuildingDestroyed/Wood/Medium",
    "Impact/BuildingDestroyed/Wood/Small",
    "Impact/BuildingDestroyed/Metal/Big",
    "Impact/BuildingDestroyed/Metal/Medium",
    "Impact/BuildingDestroyed/Metal/Small",
    "Impact/BuildingDestroyed/Stone/Big",
    "Impact/BuildingDestroyed/Stone/Medium",
    "Impact/BuildingDestroyed/Stone/Small",
    "Impact/BuildingDestroyed/Soft/Medium",
    "Impact/BuildingDestroyed/Soft/Small",
    "Misc/BulletShieldGenerator/Reactivate",
    "Misc/Shuttle/Boarding",
    "Buildings/BurningPowerCell/Stage1",
    "Buildings/BurningPowerCell/Stage2",
    "Buildings/BurningPowerCell/Loop",
    "Misc/MoisturePump",
    "Exotic/Crashed_Ship_Part/Psychic_Pulse",
    "Misc/Artifacts/Psychic_Soothe_Pulser",
    "Misc/Artifacts/Psychic_Insanity_Lance",
    "Misc/Artifacts/Psychic_Shock_Lance",
    "Misc/Artifacts/Psychic_Animal_Pulser",
    "Pawn/Human/Eating/Raw_Vegetable",
    "Pawn/Human/Eating/Raw_Meat",
    "Pawn/Human/Eating/Meal",
    "Pawn/Human/Drinking/Ingest_Beer/Loop",
    "Pawn/Human/Drinking/Ingest_Beer/Start",
    "Interact/Drugs/Snort",
    "Interact/Drugs/Pills",
    "Interact/Drugs/Inject",
    "Impact/PunchHitPawn",
    "Impact/PunchHitBuilding",
    "Impact/PunchMiss",
    "Pawn/Animal/Melee_Small/Hit_Pawn",
    "Pawn/Animal/Melee_Small/Hit_Building",
    "Pawn/Animal/Melee_Small/Miss",
    "Pawn/Animal/Melee_Big/Hit_Pawn",
    "Pawn/Animal/Melee_Big/Hit_Building",
    "Pawn/Animal/Melee_Big/Miss",
    "Pawn/Mechanoid/Melee/Hit_Pawn",
    "Pawn/Mechanoid/Melee/Hit_Building",
    "Pawn/Mechanoid/Melee/Miss",
    "Pawn/Mechanoid/Scyther/Melee/HitPawn",
    "Pawn/Mechanoid/Scyther/Melee/HitBuilding",
    "Pawn/Mechanoid/Scyther/Melee/Miss",
    "Impact/MeleeHit_Metal_Sharp",
    "Impact/MeleeHit_Metal_Blunt",
    "Impact/MeleeHit_Stone",
    "Impact/MeleeHit_Wood",
    "Impact/MeleeDodge",
    "Impact/HumanBite_Hit",
    "Impact/HumanBite_Miss",
    "Impact/BionicPunch_Hit",
    "Impact/BionicPunch_Miss",
    "Impact/MeleeHit_PowerClaw",
    "Impact/MeleeMiss_PowerClaw",
    "Impact/ToxicBuildupGained",
    "Interact/Work/Mine/PickHit",
    "Interact/Joy/HorseshoeImpact",
    "Interact/Joy/StoneImpact",
    "Interact/Joy/PlayBilliards",
    "Interact/Joy/PokerChips",
    "Interact/Work/RoofStart",
    "Interact/Work/RoofFinish",
    "Interact/Work/Grow",
    "Interact/Haul/Pickup/Standard",
    "Interact/Haul/Drop/Standard",
    "Interact/Haul/Drop/Wood",
    "Interact/Haul/Drop/Silver",
    "Interact/Haul/Drop/Stone",
    "Interact/Haul/Drop/ChunkRock",
    "Interact/Haul/Drop/ChunkSlag",
    "Impact/BeatFire",
    "Impact/Ignite",
    "Interact/Work/Construct/Metal",
    "Interact/Work/Construct/Dig",
    "Interact/Work/Research",
    "Interact/Work/Construct/Trees/Tree_Chop",
    "Interact/Work/Construct/Trees/Tree_Felled",
    "Interact/Work/Construct/Wood/Wood_Saw_Hand",
    "Interact/Work/Construct/Wood/Wood_Saw_Circular",
    "Interact/Work/Construct/Circular_Saw/Saw_Circular_Cuts",
    "Interact/Work/Construct/Wood/Construct_Wood",
    "Interact/Work/Construct/Wood/Rummage_Wood",
    "Interact/Work/Construct/Wood/Finish_Wood",
    "Interact/Work/Clean/Cleaning_Sweeping",
    "Interact/Work/Clean/Cleaning_Scattered",
    "Interact/Work/Clean/Cleaning_Fluid",
    "Interact/Work/Clean/Cleaning_Dirt",
    "Interact/Work/Construct/Stone/Hammer_Stone",
    "Interact/Work/Construct/Stone/Stone_Chunk_Light",
    "Interact/Work/Butcher/Butcher_Meat",
    "Interact/Work/Butcher/Butcher_Mechanoid/Centipede",
    "Interact/Work/Butcher/Butcher_Mechanoid/Generic",
    "Interact/Work/Cremate/Burning_Corpse",
    "Interact/Work/Cook/Pan_Fry",
    "Interact/Work/Sculpt/Sculpting_Loop",
    "Interact/Work/Surgery/Surgery_Loop",
    "Interact/Work/Smith/Smithing_Loop",
    "Interact/Work/Tailor/Tailoring_Start",
    "Interact/Work/Tailor/Tailoring_Loop",
    "Interact/Work/Tend/Tend_Start",
    "Interact/Work/Tend/Tend_Loop",
    "Interact/Work/Machine/Loop",
    "Interact/Work/Machine/Stop",
    "Interact/Work/Brew/Loop",
    "Interact/Work/Brew/Start",
    "Interact/Work/Brew/Stop",
    "Interact/Work/Produce/Producing_Drug/Granule",
    "Interact/Work/Produce/Producing_Bow",
    "Misc/ThroneSpeech_Male",
    "Misc/ThroneSpeech_Female",
    "Pawn/Animal/Chicken/Chick_Call",
    "Pawn/Animal/Chicken/Chicken_Call",
    "Pawn/Animal/Chicken/Chicken_Angry",
    "Pawn/Animal/Chicken/Chicken_Pain",
    "Pawn/Animal/Chicken/Chicken_Death",
    "Pawn/Animal/DogSmall/DogSmall_Call",
    "Pawn/Animal/DogSmall/DogSmall_Angry",
    "Pawn/Animal/DogSmall/DogSmall_Injured",
    "Pawn/Animal/DogSmall/DogSmall_Dead",
    "Pawn/Animal/Dog/Dog_Call",
    "Pawn/Animal/Dog/Dog_Angry",
    "Pawn/Animal/Dog/Dog_Injured",
    "Pawn/Animal/Dog/Dog_Dead",
    "Pawn/Animal/Cat/Cat_Call",
    "Pawn/Animal/Cat/Cat_Angry",
    "Pawn/Animal/Cat/Cat_Injured",
    "Pawn/Animal/Megascarab/Megascarab_Call",
    "Pawn/Animal/Megascarab/Megascarab_Angry",
    "Pawn/Animal/Megascarab/Megascarab_Wounded",
    "Pawn/Animal/BigInsect/BigInsect_Call",
    "Pawn/Animal/BigInsect/BigInsect_Angry",
    "Pawn/Animal/BigInsect/BigInsect_Injured",
    "Pawn/Animal/Muffalo/Muffalo_Calls",
    "Pawn/Animal/Muffalo/Muffalo_Angry",
    "Pawn/Animal/Muffalo/Muffalo_Pain",
    "Pawn/Animal/Muffalo/Muffalo_Death",
    "Pawn/Animal/Boomrat/Boomrat_Angry",
    "Pawn/Animal/Boomrat/Boomrat_Call",
    "Pawn/Animal/Boomrat/Boomrat_Pain",
    "Pawn/Animal/Boomrat/Boomrat_Death",
    "Pawn/Animal/Rodent/Rodent_Angry",
    "Pawn/Animal/Rodent/Rodent_Call",
    "Pawn/Animal/Rodent/Rodent_Pain",
    "Pawn/Animal/Rodent/Rodent_Death",
    "Pawn/Animal/Alphabeaver/Alphabeaver_Call",
    "Pawn/Animal/Alphabeaver/Alphabeaver_Angry",
    "Pawn/Animal/Alphabeaver/Alphabeaver_Wounded",
    "Pawn/Animal/Deer/Deer_Call",
    "Pawn/Animal/Deer/Deer_Pain",
    "Pawn/Animal/Deer/Deer_Death",
    "Pawn/Animal/Dromedary/Dromedary_Call",
    "Pawn/Animal/Dromedary/Dromedary_Angry",
    "Pawn/Animal/Dromedary/Dromedary_Death",
    "Pawn/Animal/Dromedary/Dromedary_Wounded",
    "Pawn/Animal/Elk/Elk_Call",
    "Pawn/Animal/Elk/Elk_Pain",
    "Pawn/Animal/Elk/Elk_Death",
    "Pawn/Animal/Monkey/Monkey_Call",
    "Pawn/Animal/Monkey/Monkey_Angry",
    "Pawn/Animal/Monkey/Monkey_Pain",
    "Pawn/Animal/Tortoise/Tortoise_Call",
    "Pawn/Animal/Tortoise/Tortoise_Angry",
    "Pawn/Animal/Tortoise/Tortoise_Wounded",
    "Pawn/Animal/Wild_Boar/Wildboar_Call",
    "Pawn/Animal/Wild_boar/Wildboar_Angry",
    "Pawn/Animal/Wild_boar/Wildboar_Death",
    "Pawn/Animal/Wild_Boar/Wildboar_Wounded",
    "Pawn/Animal/Hare/Hare_Call",
    "Pawn/Animal/Hare/Hare_Angry",
    "Pawn/Animal/Hare/Hare_Death",
    "Pawn/Animal/Hare/Hare_Wounded",
    "Pawn/Animal/Cobra/Cobra_Call",
    "Pawn/Animal/Cobra/Cobra_Wounded",
    "Pawn/Animal/Iguana/Iguana_Call",
    "Pawn/Animal/Iguana/Iguana_Angry",
    "Pawn/Animal/Iguana/Iguana_Wounded",
    "Pawn/Animal/Rhinoceros/Rhinoceros_Call",
    "Pawn/Animal/Rhinoceros/Rhinoceros_Angry",
    "Pawn/Animal/Rhinoceros/Rhinoceros_Death",
    "Pawn/Animal/Warg/Warg_Call",
    "Pawn/Animal/Warg/Warg_Angry",
    "Pawn/Animal/Warg/Warg_Wounded",
    "Pawn/Animal/Warg/Warg_Death",
    "Pawn/Animal/Elephant/Call",
    "Pawn/Animal/Elephant/Angry",
    "Pawn/Animal/Elephant/Injured",
    "Pawn/Animal/Elephant/Dead",
    "Pawn/Animal/Thrumbo/Thrumbo_Call",
    "Pawn/Animal/Thrumbo/Thrumbo_Angry",
    "Pawn/Animal/Thrumbo/Thrumbo_Pain",
    "Pawn/Animal/Thrumbo/Thrumbo_Death",
    "Pawn/Animal/Bear/Call",
    "Pawn/Animal/Bear/Angry",
    "Pawn/Animal/Bear/Injured",
    "Pawn/Animal/Bear/Dead",
    "Pawn/Animal/Donkey/Call",
    "Pawn/Animal/Donkey/Angry",
    "Pawn/Animal/Donkey/Death",
    "Pawn/Animal/Donkey/Pain",
    "Pawn/Animal/Bison/Call",
    "Pawn/Animal/Bison/Angry",
    "Pawn/Animal/Bison/Death",
    "Pawn/Animal/Bison/Pain",
    "Pawn/Animal/Duck/Call",
    "Pawn/Animal/Duck/Angry",
    "Pawn/Animal/Duck/Death",
    "Pawn/Animal/Duck/Pain",
    "Pawn/Animal/Goat/Call",
    "Pawn/Animal/Goat/Angry",
    "Pawn/Animal/Goat/Death",
    "Pawn/Animal/Goat/Pain",
    "Pawn/Animal/Goose/Call",
    "Pawn/Animal/Goose/Angry",
    "Pawn/Animal/Goose/Death",
    "Pawn/Animal/Goose/Pain",
    "Pawn/Animal/GuineaPig/Call",
    "Pawn/Animal/GuineaPig/Angry",
    "Pawn/Animal/GuineaPig/Death",
    "Pawn/Animal/GuineaPig/Pain",
    "Pawn/Animal/Horse/Call",
    "Pawn/Animal/Horse/Angry",
    "Pawn/Animal/Horse/Death",
    "Pawn/Animal/Horse/Pain",
    "Pawn/Animal/Sheep/Call",
    "Pawn/Animal/Sheep/Angry",
    "Pawn/Animal/Sheep/Death",
    "Pawn/Animal/Sheep/Pain",
    "Pawn/Mechanoid/Mechanoid_Centipede_Pain",
    "Pawn/Mechanoid/Mechanoid_Centipede_Death",
    "Pawn/Mechanoid/Mechanoid_Centipede_Calls",
    "Pawn/Mechanoid/Scyther/Pain",
    "Pawn/Mechanoid/Scyther/Death",
    "Pawn/Mechanoid/Scyther/Calls",
    "Pawn/Mechanoid/Termite/Wounded",
    "Pawn/Mechanoid/Termite/Death",
    "Pawn/Mechanoid/Termite/Calls",
    "Misc/Rituals/ConclusionPositive",
    "Misc/Rituals/ConclusionNegative",
    "UI/Designate/ZoneChanged",
    "UI/Designate/PlaceBuilding",
    "UI/Designate/Deconstruct",
    "UI/Designate/Mine",
    "UI/Designate/AddZone/Stockpile",
    "UI/Designate/AddZone/Growing",
    "UI/Designate/AddZone/Roof",
    "UI/Designate/AddZone/AllowedArea",
    "UI/Designate/AddZone/RemoveSnow",
    "UI/Designate/Haul",
    "UI/Designate/CutPlants",
    "UI/Designate/HarvestWood",
    "UI/Designate/HarvestPlants",
    "UI/Designate/SmoothSurface",
    "UI/Designate/RemoveFloor",
    "UI/Designate/RemoveBridge",
    "UI/Designate/Paint",
    "UI/Designate/Scrape",
    "UI/Designate/Tame",
    "UI/TickTiny",
    "UI/DragElement",
    "UI/DropElement",
    "UI/Mouseovers/MouseoverButtonCategory",
    "UI/Mouseovers/Meta_Mouseover_2",
    "UI/Mouseovers/OptionMouseoverThump",
    "UI/DraftOn",
    "UI/DragGoto",
    "UI/InfoCard_Open",
    "UI/DragSlider",
    "UI/RowTabSelect",
    "UI/OptionMouseoverThump",
    "Misc/Door/AutoDoors/Open/Normal",
    "Misc/Door/AutoDoors/Open/Fast",
    "Misc/Door/AutoDoors/Close/Normal",
    "Misc/Door/AutoDoors/Close/Fast",
    "Misc/Door/ManualDoors/Open/Normal",
    "Misc/Door/ManualDoors/Open/Fast",
    "Misc/Door/ManualDoors/Close/Normal",
    "Misc/Door/ManualDoors/Close/Fast",
    "Misc/Door/FenceGates",
    "Weapon/Artillery/Mortar_Explode_Dry",
    "Weapon/Artillery/Mortar_Explode_Incendiary",
    "Weapon/Artillery/EMPExplosion_01d",
    "Explosion/GiantExplosion",
    "Weapon/RocketswarmLauncher/Explosion",
    "Electricity/PowerOn/Small",
    "Electricity/PowerOff/Small",
    "Misc/DropPodImpact/Default",
    "Misc/DropPodImpact/Mechanoid",
    "Misc/DropPodOpen/Default",
    "Misc/DropPodOpen/Mechanoid",
    "Weapon/Artillery/Mortar_Incoming_Alt2",
    "Misc/Shuttle/Crash",
    "Misc/Shuttle/Impact",
    "Weapon/Artillery/MortarRound_Ambient",
    "Weapon/Artillery/Mortar_Fire",
    "Weapon/Artillery/ArtilleryHitThickRoof",
    "Weapon/Artillery/Artillery_Load",
    "Impact/Bullet_Ground",
    "Impact/Bullet_Wood",
    "Impact/Bullet_Metal",
    "Impact/Bullet_Flesh",
    "Misc/EnergyShield/Absorb",
    "Misc/EnergyShield/Broken",
    "Impact/Deflect/Deflect_Metal",
    "Impact/Deflect/Deflect_General",
    "Impact/ThumpCannon",
    "Impact/Foam",
    "Weapon/Tails/Light",
    "Weapon/Tails/Medium",
    "Weapon/Tails/Heavy",
    "Misc/Swish1",
    "Misc/Swish2",
    "Weapon/InfernoCannon_Fire",
    "Weapon/ChargeRifle",
    "Weapon/Revolver",
    "Weapon/Autopistol",
    "Weapon/MachinePistol",
    "Weapon/HeavySMG",
    "Weapon/AssaultRifle",
    "Weapon/Autocannon",
    "Weapon/SniperRifle",
    "Weapon/Shotgun/Shot",
    "Weapon/Shotgun/Rack",
    "Weapon/BoltActionRifle",
    "Weapon/Minigun/Shot",
    "Weapon/ChargeLance/Fire",
    "Weapon/IncendiaryLauncher",
    "Weapon/ThumpCannon_Fire",
    "Weapon/RocketswarmLauncher/Cast",
    "Ambience/Thunder/OffMap",
    "Ambience/Thunder/OnMap",
    "Pawn/Human/Vomit",
    "Pawn/Human/Roping",
    "Misc/DropPodFall/Default",
    "Misc/DropPodFall/Mechanoid",
  ],
  sustainIntervalRange: [
    "-0.2",
    "0.2~0.7",
    "1~3",
    "0.6978282~0.6978282",
    "0.1~0.5",
    "0.7948722~0.7948722",
    "0.4~0.55",
    "-0.3294118~-0.3294118",
    "5~5",
    "-1.102564~-1.102564",
    "1~1",
    "-0.5128205~-0.5128205",
    "-0.3076923~-0.3076923",
    "0.5128205~0.5128205",
    "0",
    "0.4705882~0.8941177",
    "0.8~1.6",
    "0.3~1.1",
    "0~1",
    "0~0.25",
    "-0.5~-0.5",
    "0.1025641~0.1025641",
    "-20~-20",
    "-10~-10",
    "-2.5~-2.5",
  ],
  realTime: ["true"],
  renderInstanced: ["true"],
  landSound: ["HorseshoeImpact", "StoneImpact"],
  fleckSystemClass: [
    "FleckSystemThrown",
    "FleckSystemStatic",
    "FleckSystemSplash",
  ],
  _DistortionTex: [
    "/Things/Mote/PsycastDistortionMask",
    "/Things/Mote/PsycastPsychicLineMask",
    "/Things/Mote/MoteHellfireCannon_HeatWaveDistortion",
    "/Other/Ripples",
  ],
  _distortionIntensity: ["0.05", "0.15", "0.024", "0.03", "0.015", "0.006"],
  _brightnessMultiplier: ["1.15", "1.1", "1.0", "1.075"],
  _MultiplyTex: [
    "/Things/Mote/RadiationDistortion_A",
    "/Things/Mote/RadiationDistortion_B",
  ],
  _texBScale: ["0.2", "0.3"],
  _texBScrollSpeed: ["-0.5", "1.25", "(0.12, 0, 0)", "-0.8"],
  _Intensity: ["13", "1", "11"],
  _Clip: ["0"],
  _ExtraTex: ["/Things/Mote/Sparks_Radial_B"],
  _texScale: ["0.2"],
  _texAScrollSpeed: ["-0.75", "(0, 0.15, 0)", "1.5"],
  rotateTowardsTarget: ["true"],
  needsMaintenance: ["true", "True"],
  attachedDrawOffset: [
    "(0.45, 0, 0.45)",
    "(0.2, 0, 0.2)",
    "(0.75, 0, 0.75)",
    "(0.85, 0, 0.85)",
  ],
  isSaveable: ["false"],
  drawOffset: [
    "(0,0,1)",
    "(0,0,0.65)",
    "(0, 0.1, 0)",
    "(0,0,-0.05)",
    "(0,0,0.05)",
    "(0,0,0.25)",
    "(0,0,-0.1)",
    "(0,0,0.2)",
  ],
  drawOffscreen: ["true"],
  _distortionScale: ["40", "25"],
  _MultiplyTexA: ["/Things/Mote/Cloudy_B"],
  _MultiplyTexB: ["/Things/Mote/Cloudy_C"],
  _DetailTex: ["/Things/Mote/Speckles"],
  _detailIntensity: ["1.3"],
  _texAScale: ["0.4", "0.3"],
  _DetailScale: ["1.25"],
  _detailScrollSpeed: ["(0.15, 0.15, 0)"],
  _NumFrames: ["5"],
  _FramesPerSec: ["10"],
  pawnSingular: [
    "ancient",
    "mechanoid",
    "insect",
    "outlander",
    "tribesman",
    "pirate",
    "colonist",
  ],
  pawnsPlural: [
    "ancients",
    "mechanoids",
    "insects",
    "outlanders",
    "tribespeople",
    "pirates",
    "colonists",
  ],
  categoryTag: ["Ancient", "Outlander", "Tribal"],
  requiredCountAtGameStart: ["1"],
  maxConfigurableAtWorldCreation: ["1", "9999"],
  configurationListOrderPriority: [
    "2000",
    "900",
    "1000",
    "10",
    "20",
    "30",
    "40",
    "50",
    "60",
  ],
  displayInFactionSelection: ["false"],
  fixedName: ["Ancients", "Sorne Geneline"],
  factionIconPath: [
    "World/WorldObjects/Expanding/Sites/DownedRefugee",
    "World/WorldObjects/Expanding/Mechanoids",
    "World/WorldObjects/Expanding/Insects",
    "World/WorldObjects/Expanding/Town",
    "World/WorldObjects/Expanding/TownRough",
    "World/WorldObjects/Expanding/Village",
    "World/WorldObjects/Expanding/VillageRough",
    "World/WorldObjects/Expanding/VillageSavage",
    "World/WorldObjects/Expanding/PirateOutpost",
  ],
  hidden: ["true"],
  rescueesCanJoin: ["true"],
  autoFlee: ["false"],
  permanentEnemy: ["true"],
  factionNameMaker: [
    "NamerFactionMechanoid",
    "NamerFactionOutlander",
    "NamerFactionTribal",
    "NamerFactionPirate",
  ],
  canStageAttacks: ["true"],
  raidLootMaker: [
    "MechanoidRaidLootMaker",
    "OutlanderRaidLootMaker",
    "TribeRaidLootMaker",
    "PirateRaidLootMaker",
  ],
  humanlikeFaction: ["false"],
  canUseAvoidGrid: ["false"],
  earliestRaidDays: ["45"],
  hostileToFactionlessHumanlikes: ["true"],
  kindDef: [
    "Combat",
    "Peaceful",
    "Trader",
    "Settlement",
    "Miners",
    "Hunters",
    "Loggers",
    "Farmers",
    "Settlement_RangedOnly",
    "SpaceRefugee",
  ],
  Mech_Scyther: ["10"],
  Mech_Pikeman: ["10"],
  Mech_Lancer: ["10"],
  Mech_CentipedeBlaster: ["10"],
  Mech_CentipedeGunner: ["5"],
  Mech_CentipedeBurner: ["5"],
  Mech_Militor: ["10"],
  Mech_Termite_Breach: ["1"],
  settlementTexturePath: [
    "World/WorldObjects/DefaultSettlement",
    "World/WorldObjects/TribalSettlement",
  ],
  allowedArrivalTemperatureRange: ["-100~200", "0~45", "-40~45"],
  dropPodActive: ["ActiveDropPodMechanoid"],
  dropPodIncoming: ["DropPodIncomingMechanoid"],
  listOrderPriority: ["30", "20", "10"],
  settlementGenerationWeight: ["1"],
  canMakeRandomly: ["true"],
  canSiege: ["true"],
  leaderTitle: ["prime councilor", "chief", "boss"],
  settlementNameMaker: [
    "NamerSettlementOutlander",
    "NamerSettlementTribal",
    "NamerSettlementPirate",
  ],
  Villager: ["5", "20", "3", "10"],
  Town_Guard: ["10"],
  Grenadier_Destructive: ["1.5", "2", "10"],
  Mercenary_Slasher: ["7", "3", "10"],
  Mercenary_Gunner: ["10", "1"],
  Mercenary_Elite: ["10", "1"],
  Town_Councilman: ["10"],
  Town_Trader: ["1"],
  Miner: ["1"],
  Hunter: ["1"],
  Logger: ["1"],
  Farmer: ["1"],
  classicIdeo: ["true"],
  naturalEnemy: ["true"],
  Tribal_Penitent: ["5", "10"],
  Tribal_Warrior: ["5", "10", "20", "7"],
  Tribal_Archer: ["10"],
  Tribal_Hunter: ["10", "1"],
  Tribal_HeavyArcher: ["10"],
  Tribal_Berserker: ["5", "10", "7"],
  Tribal_ChiefRanged: ["3", "5", "10"],
  Tribal_ChiefMelee: ["1.5", "5"],
  Tribal_Breacher: ["5"],
  Tribal_Trader: ["1"],
  Tribal_Miner: ["1"],
  Tribal_Logger: ["1"],
  Tribal_Farmer: ["1"],
  maxCountAtGameStart: ["1"],
  Drifter: ["10"],
  Thrasher: ["3", "10"],
  Scavenger: ["10"],
  Pirate: ["10"],
  Grenadier_EMP: ["0.25", "0.5"],
  Grenadier_Smoke: ["0.25", "0.5"],
  Mercenary_Heavy: ["6", "10"],
  Mercenary_Sniper: ["7", "10"],
  PirateBoss: ["5", "1", "10"],
  maxTotalPoints: ["1000"],
  playerInitialSettlementNameMaker: ["NamerInitialSettlementColony"],
  isPlayer: ["true"],
  basicMemberKind: ["Colonist", "Tribesperson"],
  forageabilityFactor: ["1.7"],
  conditionClass: [
    "GameCondition_DisableElectricity",
    "GameCondition_NoSunlight",
    "GameCondition_PsychicEmanation",
    "GameCondition_ToxicFallout",
    "GameCondition_VolcanicWinter",
    "GameCondition_HeatWave",
    "GameCondition_ColdSnap",
    "GameCondition_Flashstorm",
    "GameCondition_ClimateCycle",
    "GameCondition_Planetkiller",
    "GameCondition_Aurora",
  ],
  endMessage: [
    "The solar flare is ending.",
    "The eclipse is ending.",
    "The psychic drone is ending.",
    "The psychic soothe is ending.",
    "The worst of the toxic fallout has settled.",
    "Most of the ash has settled.",
    "The heat wave is over.",
    "The cold snap is over.",
    "The flashstorm is over.",
    "The aurora is ending.",
    "{0} is no longer inspired (work frenzy).",
    "{0} is no longer inspired (go frenzy).",
    "{0} is no longer inspired (shoot frenzy).",
    "{0} is no longer inspired (inspired trade).",
    "{0} is no longer inspired (inspired recruitment).",
    "{0} is no longer inspired (inspired taming).",
    "{0} is no longer inspired (inspired surgery).",
    "{0} is no longer inspired (inspired creativity).",
  ],
  letterText: [
    "A solar flare has begun.\\n\\nThe intense radiation will shut down all electrical devices.\\n\\nIt should pass in about a day.",
    "One of the moons of this planet has orbited in front of the sun. An eclipse has begun.",
    "Every {0} colonist feels a wave of anxiety and anger!\\n\\nSome distant engine of hatred is stirring. It is projecting a psychic drone onto this site through an orbital amplifier, tuned to only affect {0}s. For a few days, some people's mood will be quite a bit worse.\\n\\nThe drone level is {1}.",
    "Every {0} colonist smiles with contentment!\\n\\nSome distant engine of happiness is stirring. It is projecting a psychic drone onto this site through an orbital amplifier, tuned to only affect {0}s. For a few days, some people's mood will be quite a bit better.",
    "A distant chemical fire has released a plume of poison over this entire region.\\n\\nAny person or creature not under a roof will be slowly sickened by the toxic dust settling out of the atmosphere.\\n\\nIt will last for anywhere between a few days to over a quadrum.",
    "Some distant volcano or fire has begun spewing massive quantities of ash into the atmosphere.\\n\\nAsh in the atmosphere will obscure the sun. Temperatures will drop and plants will suffer for lack of sunlight. It could pass in a few weeks, or it might last many quadrums.",
    "An unusual heat wave has begun.\\n\\nHeat waves can induce deadly heatstroke. Stay cool by building either a passive or electric cooler, or by getting deep underground where the rocks are naturally cool.",
    "An unusual cold snap has set in.\\n\\nCold snaps can quickly kill by hypothermia. Be sure to build a heated space to survive, wear appropriate apparel, and try to harvest crops before they freeze and die.",
    "A freak localized flashstorm is striking a small area with lightning. This can cause massive fires.",
    "A beautiful aurora is lighting up the sky.\\n\\nThe undulating colors will boost the mood of anyone outside to see them, and make the night brighter.",
    "{ORGANIZER_labelShort} is throwing a party! Everyone who goes will gain recreation and social energy, and a lasting positive mood boost.",
    "{SURGEON_labelShort} has committed a fatal error while operating on {PATIENT_labelShort} because of the special challenges of: {RECIPE_label}.",
    "{SURGEON_labelShort} has failed catastrophically while operating on {PATIENT_labelShort} ({RECIPE_label}).",
    "{SURGEON_labelShort} has failed in a ridiculous way while operating on {PATIENT_labelShort} ({RECIPE_label}).",
    "{SURGEON_labelShort} has failed while operating on {PATIENT_labelShort} ({RECIPE_label}), leaving {PATIENT_objective} sterile.",
    "{SURGEON_labelShort} has failed in a minor way while operating on {PATIENT_labelShort} ({RECIPE_label}).",
    "{0} has been ambushed by {1} from {2}!",
    "{0} has been ambushed by scaria-infected manhunting {1}!",
    "{0} of your {1} have gotten sick from {2}.\\n\\nEnsure you have a medical bed and a doctor. Make sure that they get proper treatment and spend as much time in bed as possible.\\n\\nThe following {1} have gotten sick",
    "{0} of your animals have gotten sick from {2}.\\n\\nMake sure that they get proper treatment and rest as much as possible.\\n\\nThe following animals have gotten sick",
    "A grove of the mysterious ambrosia bush has sprouted nearby! If you wait for the plants to grow, you'll be able to harvest the delicious, pleasurable, and slightly addictive fruit.",
    "A large meteorite has struck ground in the area. It has left behind a lump of {0}.",
    "A group of {0} is passing through the area.\\n\\nThey won't attack unless provoked.",
    "A {1} living among wild animals has wandered into the area. {PAWN_pronoun}'s called {0}.\\n\\nYou can attempt to tame {PAWN_objective}.",
    "Sensing trouble, a mysterious [PAWN_kind] has arrived.\\n\\nWill [PAWN_pronoun] be able to set things right in these parts?",
    "Giant insects are tunneling towards you! They will break through in a few seconds and plant hives.\\n\\nThe hives will spawn more insects and more hives.\\n\\nIf you don't want the insects to infest the whole area, destroy the hives. But beware - the bugs will defend their home.",
    "Vibrations from your deep drills have angered some underground insects. Now they're tunneling upwards to seek revenge!\\n\\nBeware - the insects have been angered and will try to destroy your base.",
    "A large piece of an ancient ship has crashed nearby.\\n\\nIts mysterious influence will kill all plants in an expanding circle around itself.\\n\\nDestroy it as soon as possible. But beware - it will probably defend itself.",
    "A large piece of an ancient ship has crashed nearby.\\n\\nYour colonists can feel it in the back of their mind, exhorting unspeakable acts. It must have an onboard machine persona with psychic projection ability. And this persona is not friendly.\\n\\nDestroy it as soon as possible. But beware - it will probably defend itself.",
    "A mechanoid combat cluster is landing nearby. The cluster will be initially dormant, so you can take time to decide how to attack it.\\n\\nIt may remain dormant until disturbed, or it may have a timer or proximity activators.\\n\\nEven dormant mech clusters aren't harmless. A dormant cluster may assemble mechanoid attackers from time to time, or have some broader negative effect that must be dealt with eventually.",
    "A psychic droner machine has begun affecting this region.",
  ],
  letterDef: [
    "NegativeEvent",
    "PositiveEvent",
    "ThreatSmall",
    "ChoosePawn",
    "ThreatBig",
    "RansomDemand",
    "NeutralEvent",
    "NewQuest",
  ],
  canBePermanent: ["true", "false"],
  descriptionFuture: [
    "a [psychicDroneLevel] psychic drone will buzz the area around [map_definite] for [gameConditionDuration_duration], pushing all people of the [psychicDroneGender] gender towards insanity",
    "a cloud of toxic fallout will blanket the area around [map_definite] for [gameConditionDuration_duration], killing outdoor plant and animal life",
    "a layer of ash will be desposited in the upper atmosphere, reducing sunlight around [map_definite] for [gameConditionDuration_duration], seriously harming the local ecosystem",
    "a heat wave will bake the area around [map_definite] for [gameConditionDuration_duration], harming crops and possibly killing people or animals in uncooled areas",
    "a front of cold air will cool the area around [map_definite] for [gameConditionDuration_duration], harming crops and any person or animal without adequate protection",
  ],
  defaultDroneLevel: ["BadMedium", "GoodMedium"],
  natural: ["false", "true"],
  preventRain: ["true"],
  jumpToSourceKey: ["ClickToJumpToFlashstorm"],
  randomSelectionWeight: ["1"],
  letterTitle: ["Party"],
  calledOffMessage: ["The party has been called off."],
  finishedMessage: ["The party has finished."],
  duty: ["Party"],
  respectTimetable: ["false"],
  displayPriorityInXenotype: ["300", "280", "285", "270"],
  displayPriorityInGenepack: ["-100", "-110"],
  biostatCpx: ["0"],
  endogeneCategory: ["HairColor", "Melanin"],
  canGenerateInGeneSet: ["false"],
  displayCategory: ["Cosmetic_Hair", "Cosmetic_Skin"],
  randomBrightnessFactor: ["0.12", "0"],
  passOnDirectly: ["false"],
  hairColorOverride: [
    "(250, 250, 250)",
    "(25, 25, 25)",
    "(0.65, 0.65, 0.65)",
    "(0.2, 0.2, 0.2)",
    "(0.31, 0.28, 0.26)",
    "(0.25, 0.2, 0.15)",
    "(56, 36, 18)",
    "(90, 58, 32)",
    "(132, 83, 47)",
    "(193, 146, 85)",
    "(237, 202, 156)",
    "(191, 86, 149)",
    "(227, 115, 255)",
    "(34, 63, 227)",
    "(52, 191, 182)",
    "(72, 201, 40)",
    "(189, 133, 49)",
    "(191, 86, 86)",
  ],
  selectionWeight: [
    "0.05",
    "0.02",
    "1.5",
    "0",
    "0.2",
    "0.5",
    "100",
    "40",
    "1.0",
    "$selectionWeightOneStar",
    "$selectionWeightTwoStar",
    "$selectionWeightThreeStar",
    "0.3",
    "0.4",
    "0.6",
    "1.25",
    "0.75",
    "0.01",
    "0.65",
    "0.7",
    "0.8",
    "0.25",
    "0.1",
  ],
  displayOrderInCategory: [
    "0",
    "130",
    "10",
    "120",
    "110",
    "100",
    "90",
    "80",
    "75",
    "60",
    "50",
    "170",
    "180",
    "140",
    "150",
    "160",
    "70",
    "190",
    "20",
  ],
  selectionWeightFactorDarkSkin: ["0"],
  skinColorBase: [
    "(242, 237, 224)",
    "(255, 239, 213)",
    "(255, 239, 201)",
    "(255, 239, 189)",
    "(249, 219, 165)",
    "(242, 199, 140)",
    "(228, 158, 90)",
    "(130, 91, 48)",
    "(99, 70, 36)",
  ],
  minMelanin: [
    "0",
    "0.1",
    "0.25",
    "0.45",
    "0.58",
    "0.63",
    "0.75",
    "0.83",
    "0.9",
  ],
  hairMeshSize: ["(1.5, 1.5)", "(1.3, 1.5)"],
  beardMeshSize: ["(1.5, 1.5)"],
  beardOffset: ["(0, 0, -0.05)"],
  beardOffsetXEast: ["-0.05"],
  eyeOffsetEastWest: ["(0.1, 0, 0.18)", "(0.175, 0, 0.18)"],
  narrow: ["true"],
  graphicPath: [
    "Things/Pawn/Humanlike/Heads/None_Average_Skull",
    "Things/Pawn/Humanlike/Heads/None_Average_Stump",
    "Things/Pawn/Humanlike/Heads/Male/Male_Average_Normal",
    "Things/Pawn/Humanlike/Heads/Male/Male_Average_Pointy",
    "Things/Pawn/Humanlike/Heads/Male/Male_Average_Wide",
    "Things/Pawn/Humanlike/Heads/Male/Male_Narrow_Normal",
    "Things/Pawn/Humanlike/Heads/Male/Male_Narrow_Pointy",
    "Things/Pawn/Humanlike/Heads/Male/Male_Narrow_Wide",
    "Things/Pawn/Humanlike/Heads/Female/Female_Average_Normal",
    "Things/Pawn/Humanlike/Heads/Female/Female_Average_Pointy",
    "Things/Pawn/Humanlike/Heads/Female/Female_Average_Wide",
    "Things/Pawn/Humanlike/Heads/Female/Female_Narrow_Normal",
    "Things/Pawn/Humanlike/Heads/Female/Female_Narrow_Pointy",
    "Things/Pawn/Humanlike/Heads/Female/Female_Narrow_Wide",
  ],
  randomChosen: ["false"],
  gender: ["None", "Male", "Female"],
  RecipeDef: [
    "InstallArchotechEye",
    "InstallArchotechArm",
    "InstallArchotechLeg",
    "InstallBionicEye",
    "InstallBionicArm",
    "InstallBionicLeg",
    "InstallBionicSpine",
    "InstallBionicHeart",
    "InstallBionicStomach",
    "InstallDeathAcidifier",
    "InstallBionicEar",
    "InstallBionicTongue",
    "InstallNaturalHeart",
    "InstallNaturalLung",
    "InstallNaturalKidney",
    "InstallNaturalLiver",
    "InstallSimpleProstheticLeg",
    "InstallSimpleProstheticArm",
    "InstallSimpleProstheticHeart",
    "InstallCochlearImplant",
    "InstallPowerClaw",
    "InstallJoywire",
    "InstallPainstopper",
  ],
  ThingDef: [
    "ArchotechEye",
    "ArchotechArm",
    "ArchotechLeg",
    "BionicEye",
    "BionicArm",
    "BionicLeg",
    "BionicSpine",
    "BionicHeart",
    "BionicStomach",
    "DeathAcidifier",
    "BionicEar",
    "BionicTongue",
    "WoodLog",
    "Heart",
    "Lung",
    "Kidney",
    "Liver",
    "SimpleProstheticLeg",
    "SimpleProstheticArm",
    "SimpleProstheticHeart",
    "CochlearImplant",
    "PowerClaw",
    "Joywire",
    "Painstopper",
    "PsychicAmplifier",
    "Plant_Tinctoria",
  ],
  woundAnchorRange: ["0"],
  displayWound: ["true", "false"],
  partEfficiency: [
    "1.50",
    "1.25",
    "1.0",
    "0.60",
    "0.80",
    "0.85",
    "0.50",
    "0.65",
    "1.00",
  ],
  eyeGraphicScale: ["0.2"],
  soundMeleeHit: [
    "MeleeHit_BionicPunch",
    "Pawn_Melee_PowerClaw_Hit",
    "Pawn_Melee_HumanBite_Hit",
  ],
  soundMeleeMiss: [
    "MeleeMiss_BionicPunch",
    "Pawn_Melee_PowerClaw_Miss",
    "Pawn_Melee_BigBash_Miss",
    "Pawn_Melee_SmallScratch_Miss",
    "Pawn_Melee_HumanBite_Miss",
    "Pawn_Melee_Punch_Miss",
    "Pawn_Melee_MechanoidBash_Miss",
    "Pawn_Melee_MechanoidSlash_Miss",
  ],
  betterThanNatural: ["true"],
  addsHediff: [
    "ArchotechEye",
    "ArchotechArm",
    "ArchotechLeg",
    "BionicEye",
    "BionicArm",
    "BionicLeg",
    "BionicSpine",
    "BionicHeart",
    "BionicStomach",
    "DeathAcidifier",
    "BionicEar",
    "BionicTongue",
    "PegLeg",
    "WoodenHand",
    "WoodenFoot",
    "Denture",
    "SimpleProstheticLeg",
    "SimpleProstheticArm",
    "SimpleProstheticHeart",
    "CochlearImplant",
    "PowerClaw",
    "Joywire",
    "Painstopper",
    "Sterilized",
  ],
  isTechHediff: ["true"],
  priceImpact: ["true", "false"],
  countsAsAddedPartOrImplant: ["true"],
  allowMothballIfLowPriorityWorldPawn: ["true"],
  Medicine: ["5", "3", "8", "4", "10"],
  isViolation: ["true", "false"],
  unfinishedThingDef: [
    "UnfinishedHealthItemBionic",
    "UnfinishedHealthItemProsthetic",
    "UnfinishedComponent",
    "UnfinishedSculpture",
    "UnfinishedMusicalInstrument",
    "UnfinishedBelt",
    "UnfinishedMetallicTechArmor",
    "UnfinishedTechArmor",
    "UnfinishedPack",
    "UnfinishedApparel",
    "UnfinishedArmor",
    "UnfinishedGun",
    "UnfinishedWeapon",
  ],
  Crafting: ["8", "5", "3", "4", "6", "7", "2", "9"],
  Plasteel: [
    "15",
    "10",
    "8",
    "50",
    "7",
    "70",
    "40",
    "30",
    "20",
    "280",
    "140",
    "100",
    "80",
    "60",
  ],
  ComponentSpacer: ["4", "3", "2", "1", "8", "6"],
  fleck: ["AcidCloud", "Music"],
  moteCount: ["6"],
  moteOffsetRange: ["0.25~0.75"],
  filth: ["Filth_Slime", "Filth_FireFoam"],
  sound: [
    "DeathAcidifier",
    "Message_ThreatBig",
    "Message_ThreatSmall",
    "Message_PawnDeath",
    "Message_NegativeHealthEvent",
    "Message_NegativeEvent",
    "Message_NeutralEvent",
    "Message_TaskCompletion",
    "Message_PositiveEvent",
    "ClickReject",
    "PsychicAnimalPulserCast",
    "PsychicSoothePulserCast",
    "OrbitalBeam",
  ],
  injuryCreatedOnDeath: ["ChemicalBurn"],
  injuryCount: ["3~6"],
  uiIconThing: ["WoodLog", "Meat_Muffalo", "Steel"],
  deathOnFailedSurgeryChance: ["0.25"],
  Steel: [
    "40",
    "25",
    "20",
    "15",
    "1",
    "2",
    "7",
    "3",
    "60",
    "4",
    "80",
    "140",
    "260",
    "50",
    "120",
    "75",
    "150",
    "200",
    "180",
    "10",
    "100",
    "70",
    "340",
    "30",
    "170",
    "125",
    "350",
    "300",
    "90",
    "35",
    "45",
    "160",
  ],
  ComponentIndustrial: [
    "4",
    "8",
    "1",
    "11",
    "10",
    "5",
    "16",
    "22",
    "6",
    "3",
    "2",
    "12",
    "7",
    "20",
  ],
  removesHediff: ["Painstopper", "Carcinoma", "Scaria"],
  alwaysTreatAsWeapon: ["true"],
  isGoodWeapon: ["true"],
  partEfficiencyOffset: [
    "-0.20",
    "-0.5",
    "-1",
    "-0.15",
    "-0.05",
    "-0.1",
    "-0.2",
    "-0.3",
    "-0.35",
    "-0.6",
    "-0.25",
    "-0.8",
    "-0.9",
    "-1.0",
    "-0.60",
  ],
  Defs: ["\r\n\r\n"],
  lethalSeverity: ["1", "1.00"],
  becomeVisible: ["false"],
  disappearsAfterTicks: [
    "45000~120000",
    "100000~300000",
    "7500~7500",
    "2500~3500",
    "8000~12000",
    "90000~150000",
    "900",
    "900000~1800000",
    "240000~480000",
  ],
  showRemainingTime: ["true"],
  forgetMemoryThoughtMtbDays: ["5", "7", "4", "2", "1.0"],
  thought: [
    "Catharsis",
    "AteNutrientPasteMeal",
    "AteHumanlikeMeatDirect",
    "AteHumanlikeMeatAsIngredient",
    "AteRawHumanlikeMeat",
    "ButcheredHumanlikeCorpse",
    "KnowButcheredHumanlikeCorpse",
    "ButcheredHumanlikeCorpseOpinion",
    "HumanLeatherApparelSad",
    "ObservedLayingCorpse",
    "ObservedLayingRottingCorpse",
    "AteInsectMeatDirect",
    "AteInsectMeatAsIngredient",
    "KnowColonistOrganHarvested",
    "KnowGuestOrganHarvested",
    "KnowPrisonerDiedInnocent",
    "KnowColonistExecuted",
    "KnowGuestExecuted",
    "KnowPrisonerSold",
  ],
  hungerRateFactor: ["1.5", "0.125", "0.8", "0.4", "0.75"],
  descriptionShort: [
    "After-effects of using a cryptosleep pod including dizziness, nausea, and vomiting.",
    "A painful bacterial disease caused by exposure to rot stink gas. Upon reaching full saturation, it will kill the affected individual.",
    "Chaotic thought patterns caused by after-effects of resurrection. Resurrection psychosis is progressive and eventually causes psychosis and death.",
    "A disease which causes affected creatures to enter berserk rages. If not treated, scaria kills its host about five days after infection.",
    "Allows a person to psychically-induce an archotech to influence reality in ways that seem impossible. Higher levels of psylink permit the use of more powers.",
  ],
  makesSickThought: ["true"],
  taleOnVisible: [
    "ToxicityRevealed",
    "HeatstrokeRevealed",
    "HypothermiaRevealed",
  ],
  severityPerDayNotImmune: [
    "-0.08",
    "0.003",
    "0.25",
    "0.0007",
    "0.84",
    "0.2488",
    "0.666",
    "0.3702",
    "0.12",
  ],
  canAffectAnyLivePart: ["true"],
  preventsPregnancy: ["true"],
  pregnant: ["true"],
  message: ["{0} is pregnant!"],
  messageType: ["PositiveEvent"],
  tendable: ["true"],
  sendLetterWhenDiscovered: ["true"],
  discoverLetterLabel: ["Overdose: {0}"],
  discoverLetterText: ["{0} is overdosing!"],
  chronic: ["true"],
  cureAllAtOnceIfCuredByItem: ["true"],
  pctConditionalThoughtsNullified: ["0.15", "0.33", "0.5"],
  baseTendDurationHours: ["168", "96", "48", "12", "32"],
  tendAllAtOnce: ["true"],
  severityPerDayTended: [
    "-0.8",
    "-0.0027",
    "-1.0",
    "-0.53",
    "-0.0773",
    "-0.1105",
    "-0.3628",
    "-0.4254",
    "-0.232",
    "-0.07",
    "-1",
  ],
  severityPerDayNotImmuneRandomFactor: ["0.5~3"],
  allowOnLodgers: ["false"],
  allowOnQuestRewardPawns: ["false"],
  allowOnQuestReservedPawns: ["false"],
  allowOnBeggars: ["false"],
  chanceToCauseNoPain: ["0.3"],
  removeOnQuestLodgers: ["true"],
  destroyPart: ["true"],
  severityPerDayGrowing: ["0.003"],
  severityPerDayRemission: ["-0.002"],
  severityPerDayGrowingRandomFactor: ["0.45~1.65"],
  severityPerDayRemissionRandomFactor: ["0.7~1.5"],
  successfullyRemovedHediffMessage: [
    "{0} has successfully excised {1}'s carcinoma.",
    "{0} has successfully cured {1}'s scaria.",
    "{0} has successfully sterilized {1}.",
  ],
  disappearsAtTotalTendQuality: ["3"],
  makesAlert: ["false"],
  immunityPerDaySick: [
    "0.6441",
    "0.2388",
    "0.2614",
    "0.5224",
    "0.6092",
    "0.3145",
    "0.10",
  ],
  severityPerDayImmune: ["-0.70", "-0.4947", "-0.333", "-0.7297", "-0.176"],
  immunityPerDayNotSick: ["-0.40", "-0.06", "-0.02", "-0.03"],
  gasType: ["RotStink"],
  severityGasDensityFactor: ["0.05"],
  intervalTicks: ["60"],
  severityNotExposed: ["-0.00015"],
  exposureStatFactor: ["ToxicEnvironmentResistance"],
  mtbCheckDuration: ["600"],
  labelNounPretty: ["missing a {1}", "{0} in the {1}"],
  painPerSeverity: ["0.0125", "0.01875", "0.01"],
  showTendQuality: ["false"],
  labelTendedWell: ["bandaged", "set"],
  labelTendedWellInner: ["sutured", "tended", "set"],
  labelSolidTendedWell: ["set", "tended"],
  permanentLabel: [
    "scar",
    "burn scar",
    "chemical burn scar",
    "mangled scar",
    "permanent crack",
    "cut scar",
    "surgical scar",
    "scratch scar",
    "bite scar",
    "stab scar",
    "old gunshot",
    "shredded scar",
    "frostbite scar",
  ],
  canMerge: ["false", "true"],
  destroyedLabel: [
    "Destroyed",
    "Burned off",
    "Burned off (chemical)",
    "Crushed",
    "Shattered",
    "Cut off",
    "Torn off",
    "Bitten off",
    "Shot off",
    "Lost to frostbite",
  ],
  infectionChance: ["0.30", "0.15", "0.20", "0.25"],
  averagePainPerSeverityPermanent: ["0.00625"],
  destroyedOutLabel: [
    "Burned out",
    "Burned out (chemical)",
    "Cut out",
    "Torn out",
    "Bitten out",
    "Shot out",
  ],
  useRemovedLabel: ["true"],
  instantlyPermanentLabel: ["permanent gunshot injury"],
  opinionOfOthersFactor: ["0"],
  partIgnoreMissingHP: ["true"],
  mentalBreakMtbDays: ["9", "6", "3", "0.5", "0.25"],
  days: ["5"],
  animalMentalState: ["ManhunterPermanent"],
  animalMentalStateAlias: ["Manhunter"],
  humanMentalState: ["Berserk"],
  mtbDaysToCauseMentalState: ["1"],
  hideBodyPartNames: ["true"],
  targetsBodyPart: ["false"],
  surgeryIgnoreEnvironment: ["true"],
  battleStateLabel: ["blind"],
  healAmount: ["0.02", "0.05", "0.1"],
  useJob: ["UseItem", "TriggerObject", "UseArtifact"],
  useLabel: [
    "Use neuroformer to form psylink",
    "Summon diabolus threat",
    "Trigger {0_label}",
    "Activate {0_label}",
    "Use {0_label}",
  ],
  bodyPart: ["Brain"],
  canUpgrade: ["true"],
  soundOnUsed: ["PsyAmpInstalled", "MechSerumUsed"],
  keepOnBodyPartRestoration: ["True"],
  PsychicEntropyMax: ["1.0", "1.3334", "1.6667", "2.0", "2.3334", "2.6667"],
  PsychicEntropyRecoveryRate: ["1", "1.125", "1.25", "1.375", "1.5", "1.625"],
  hediffInsectoid: ["HypothermicSlowdown"],
  minPlayerPopulation: ["2"],
  averageSeverityPerDayBeforeGeneration: ["0.0005", "0.001", "0.00025"],
  chancePerDamagePct: ["0.12"],
  letterLabel: [
    "Trauma savant",
    "Surgery failed on {PATIENT_labelShort}",
    "Surgery failed on {PATIENT_labelShort}: Sterilized",
    "Caravan ambushed",
    "Caravan ambushed (manhunters)",
    "Disease: Flu",
    "Disease: Plague",
    "Disease: Malaria",
    "Disease: Sleeping sickness",
    "Disease: Fibrous mechanites",
    "Disease: Sensory mechanites",
    "Disease: Gut worms",
    "Disease: Muscle parasites",
    "Animal disease: Flu",
    "Animal disease: Plague",
    "Ambrosia sprout",
    "Ransom demand",
    "Meteorite",
    "Animal migration: {0}",
    "{0} wanders in",
    "Toxic fallout",
    "Volcanic winter",
    "Heat wave",
    "Cold snap",
    "Flashstorm",
    "Man in black",
    "Infestation",
    "Too deep: Infestation",
    "Defoliator ship",
    "Psychic ship",
    "Mechanoid cluster",
    "Eclipse",
    "Solar flare",
    "Aurora",
    "Quest available",
    "Journey offer",
  ],
  letter: [
    "[PAWN_nameDef]'s brain injury has caused [PAWN_objective] to develop strange savant-like abilities.",
  ],
  baseDurationDays: ["8"],
  beginLetter: [
    "[PAWN_pronoun] will work faster for the next 8 days.",
    "[PAWN_pronoun] will move faster for the next 8 days.",
    "[PAWN_pronoun] will shoot more accurately for the next 8 days.",
    "[PAWN_pronoun] will get a significant trade price bonus when closing [PAWN_possessive] next trade deal.\\n\\nThe inspiration will expire after 8 days, or when the deal is done.",
    "[PAWN_pronoun] will successfully recruit the next prisoner regardless of difficulty or resistance.\\n\\nThe inspiration will end after 8 days, or when the prisoner is recruited.",
    "[PAWN_pronoun] will successfully tame the next animal regardless of difficulty.\\n\\nThe inspiration will end after 8 days, or when an animal was tamed.",
    "The next time [PAWN_pronoun] performs a surgery, [PAWN_possessive] chance of success will be doubled. A small minimum chance of failure still applies.\\n\\nThe inspiration will end after 8 days, or when the surgery is performed.",
    "The next item, art, or furniture [PAWN_pronoun] creates will be two quality levels higher than it would otherwise be. This even allows the creation of legendary items.\\n\\nThe inspiration will end after 8 days, or when the creation is completed.",
    "{0} has gone berserk.\\n\\n[PAWN_pronoun] will attack anyone [PAWN_pronoun] sees.",
    "{0} is on a fire starting spree.\\n\\n[PAWN_pronoun] will wander around for a while, randomly starting fires.",
    "{0} has had a mental breakdown and is going to induce prisoners to escape.",
    "{0} has had a mental breakdown and is going to vent [PAWN_possessive] anger on your animals.",
    "{0} has flown into a murderous rage.\\n\\n[PAWN_pronoun] has decided to kill {1}.",
    "{0} has given up on this community.\\n\\n[PAWN_pronoun] has decided to leave and pursue a better life elsewhere. You can try to arrest [PAWN_objective] as [PAWN_pronoun] leaves. Otherwise, you may still see [PAWN_objective] again some day.",
    "{0} is wandering around in a psychotic state.",
    "{0} is having a tantrum.\\n\\n[PAWN_pronoun] will smash up random furniture, items and structures.",
    "{0} is having a tantrum.\\n\\n[PAWN_pronoun] is going to destroy {1}.",
    "{0} is having a tantrum.\\n\\n[PAWN_pronoun] is going to smash things in [PAWN_possessive] room.",
    "{0} has flown into a sadistic rage.\\n\\n[PAWN_pronoun] is going to vent [PAWN_possessive] anger on the prisoners.",
    "{0} has broken inside and become obsessed with corpses.\\n\\n[PAWN_pronoun] is going to dig up a corpse and present it for all to see.",
    "{0} is pigging out on food.",
    "{0} has broken down and is wandering around in sadness.",
    "{0} is hiding in [PAWN_possessive] room.",
    "{0} is on an insulting spree.\\n\\n[PAWN_pronoun] will wander around, randomly insulting others.",
    "{0} has fixated [PAWN_possessive] rage on {1}.\\n\\n[PAWN_pronoun] will follow {1} around, hurling insults.",
    "{0} has broken down and is wandering around confused.",
    "{0} is fleeing in panic.",
    "{0} has become a manhunter!",
  ],
  beginLetterDef: ["PositiveEvent", "ThreatSmall", "NegativeEvent"],
  baseInspectLine: [
    "Inspired: Work frenzy",
    "Inspired: Go frenzy",
    "Inspired: Shoot frenzy",
    "Inspired: Inspired trade",
    "Inspired: Inspired recruitment",
    "Inspired: Inspired taming",
    "Inspired: Inspired surgery",
    "Inspired: Inspired creativity",
    "Mental state: Berserk",
    "Mental state: Fire starting spree",
    "Mental state: Binging on {0}",
    "Mental state: Jailbreaker",
    "Mental state: Slaughterer",
    "Mental state: Murderous rage",
    "Mental state: Given up and leaving",
    "Mental state: Psychotic wandering",
    "Mental state: Tantrum",
    "Mental state: Sadistic rage",
    "Mental state: Corpse obsession",
    "Mental state: Pigging out",
    "Mental state: Sad wandering",
    "Mental state: Hiding in room",
    "Mental state: Insulting spree",
    "Mental state: Insulting spree against {0}",
    "Mental state: Confused and wandering",
    "Mental state: Fleeing in panic",
    "Maddened: Manhunter",
    "Mental state: Social fighting",
    "Mental state: Roaming",
    "Aggression judgment scrambled",
  ],
  requiredNonDisabledWorkTags: ["AllWork"],
  minAge: [
    "10",
    "8",
    "6",
    "13",
    "0",
    "0.2",
    "0.5",
    "0.1",
    "0.2222",
    "0.25",
    "0.15",
    "0.4",
    "0.3",
    "0.266",
    "0.12",
    "0.20",
    "0.3333",
    "0.666",
    "0.55",
    "0.03",
    "0.75",
    "1.332",
    "0.10",
    "0.6666",
    "0.11",
    "3",
    "9",
    "18",
    "100",
  ],
  allowedOnDownedPawns: ["false"],
  MoveSpeed: [
    "1.4",
    "0.2",
    "0.75",
    "0.95",
    "0.5",
    "0.9",
    "-0.8",
    "-0.12",
    "-0.4",
    "-0.25",
    "4.6",
    "6.0",
    "5.5",
    "5.0",
    "4.4",
    "3.1",
    "4.3",
    "2.1",
    "3.6",
    "2.3",
    "3.2",
    "3.4",
    "4.5",
    "4.7",
    "3.9",
    "5",
    "5.8",
    "4.8",
    "3.75",
    "3.65",
    "3.60",
    "3.5",
    "1.0",
    "3.7",
    "4.1",
    "5.1",
    "4.0",
    "3.0",
    "1.9",
    "2.5",
    "-0.2",
    "0.4",
    "Move speed",
  ],
  ShootingAccuracyPawn: ["8", "5", "-5"],
  Social: ["3"],
  TradePriceImprovement: ["0.18"],
  Animals: ["3"],
  Construction: ["3", "10"],
  Artistic: ["3"],
  symbol: [
    "Things/Mote/SpeechSymbols/AnimalChat",
    "Things/Mote/SpeechSymbols/PrisonerRecruit",
    "Things/Mote/SpeechSymbols/TrainAttempt",
    "Things/Mote/SpeechSymbols/Nuzzle",
    "UI/Designators/ReleaseToTheWild",
    "Things/Mote/SpeechSymbols/BuildRapport",
    "Things/Mote/SpeechSymbols/SparkJailbreak",
    "Things/Mote/SpeechSymbols/Romance",
    "Things/Mote/SpeechSymbols/MarriageProposal",
    "Things/Mote/SpeechSymbols/Breakup",
    "Things/Mote/SpeechSymbols/Chitchat",
    "Things/Mote/SpeechSymbols/DeepTalk",
    "Things/Mote/SpeechSymbols/Slight",
    "Things/Mote/SpeechSymbols/Insult",
    "Things/Mote/SpeechSymbols/KindWords",
    "outdoorsPath",
    "ancientComplexSketch",
    "basePart_indoors",
    "basePart_indoors_division",
    "basePart_indoors_leaf",
    "basePart_outdoors",
    "basePart_outdoors_division",
    "basePart_outdoors_leafPossiblyDecorated",
    "basePart_outdoors_leafDecorated",
    "basePart_outdoors_leaf",
    "clear",
    "thing",
    "pawn",
    "filth",
    "floor",
    "roof",
    "ensureCanReachMapEdge",
    "ensureCanHoldRoof",
    "outdoorsCampfire",
    "firefoamPopper",
    "pawnGroup",
    "thingSet",
    "lootScatter",
    "emptyRoom",
    "doors",
    "extraDoor",
    "edgeSandbags",
    "edgeWalls",
    "edgeFloor",
    "ancientCryptosleepCasket",
    "edgeThing",
    "cultivatedPlants",
    "bed",
    "prisonerBed",
    "rectTrigger",
    "emptyRoomRounded",
    "soundOneShotAction",
    "unfoggedTrigger",
    "containerEmptiedTrigger",
    "openDoorAction",
    "settlement",
    "edgeDefense",
    "ancientShrinesGroup",
    "ancientShrine",
    "ancientRuins",
    "randomMechanoidGroup",
    "hives",
    "fillWithBeds",
    "stockpile",
    "mannedMortar",
    "edgeMannedMortar",
    "farm",
    "fillWithThings",
    "refuel",
    "chargeBatteries",
    "placeChairsNearTables",
    "randomlyPlaceMealsOnTables",
    "addWortToFermentingBarrels",
    "street",
    "edgeStreet",
    "indoorLighting",
    "outdoorLighting",
    "innerStockpile",
    "brewery",
    "worshippedTerminal",
    "diningRoom",
    "batteryRoom",
    "storage",
    "barracks",
    "prisonCell",
    "ancientTemple",
    "terrorBuildings",
    "message",
    "sleepingMechanoids",
    "interior_storage",
    "interior_barracks",
    "interior_ancientTemple",
    "interior_brewery",
    "interior_worshippedTerminal",
    "interior_batteryRoom",
    "interior_diningRoom",
    "interior_prisonCell",
    "ship_core",
    "ship_pregen",
    "ship_spine",
    "ship_populate",
  ],
  initiatorXpGainSkill: ["Animals", "Social"],
  initiatorXpGainAmount: ["70", "90", "45", "230", "4", "10"],
  interactionMote: ["Mote_Thought"],
  recipientThought: [
    "RapportBuilt",
    "Chitchat",
    "DeepTalk",
    "Slighted",
    "Insulted",
    "KindWords",
  ],
  symbolSource: ["InitiatorFaction"],
  initiatorThought: ["Chitchat", "DeepTalk"],
  socialFightBaseChance: ["0.005", "0.04"],
  driverClass: [
    "JobDriver_Nuzzle",
    "JobDriver_Mate",
    "JobDriver_LayEgg",
    "JobDriver_PredatorHunt",
    "JobDriver_Maintain",
    "JobDriver_PrepareCaravan_GatherItems",
    "JobDriver_PrepareCaravan_GatherAnimals",
    "JobDriver_PrepareCaravan_CollectAnimals",
    "JobDriver_GatherDownedPawnToCell",
    "JobDriver_ReturnedCaravan_PenAnimals",
    "JobDriver_MarryAdjacentPawn",
    "JobDriver_Spectate",
    "JobDriver_StandAndBeSociallyActive",
    "JobDriver_GiveSpeech",
    "JobDriver_Skygaze",
    "JobDriver_Meditate",
    "JobDriver_RelaxAlone",
    "JobDriver_GoForWalk",
    "JobDriver_BuildSnowman",
    "JobDriver_VisitGrave",
    "JobDriver_ViewArt",
    "JobDriver_SocialRelax",
    "JobDriver_VisitSickPawn",
    "JobDriver_PlayHorseshoes",
    "JobDriver_PlayHoopstone",
    "JobDriver_SitFacingBuilding",
    "JobDriver_PlayBilliards",
    "JobDriver_PlayPoker",
    "JobDriver_WatchTelevision",
    "JobDriver_WatchBuilding",
    "JobDriver_PlayMusicalInstrument",
    "JobDriver_IdleWhileDespawned",
    "JobDriver_Goto",
    "JobDriver_PickupToHold",
    "JobDriver_Follow",
    "JobDriver_FollowClose",
    "JobDriver_FollowRoper",
    "JobDriver_Wait",
    "JobDriver_WaitMaintainPosture",
    "JobDriver_LayDown",
    "JobDriver_WaitDowned",
    "JobDriver_AttackStatic",
    "JobDriver_AttackMelee",
    "JobDriver_CastVerbOnce",
    "JobDriver_CastVerbOnceStatic",
    "JobDriver_CastJump",
    "JobDriver_CastAbility",
    "JobDriver_CastAbilityTouch",
    "JobDriver_CastAbilityMelee",
    "JobDriver_CastAbilityWorld",
    "JobDriver_Equip",
    "JobDriver_TakeInventory",
    "JobDriver_GiveToPackAnimal",
    "JobDriver_Wear",
    "JobDriver_RemoveApparel",
    "JobDriver_DropEquipment",
    "JobDriver_Strip",
    "JobDriver_Open",
    "JobDriver_Refuel",
    "JobDriver_RefuelAtomic",
    "JobDriver_Reload",
    "JobDriver_FillFermentingBarrel",
    "JobDriver_TakeBeerOutOfFermentingBarrel",
    "JobDriver_ApplyTechprint",
    "JobDriver_UnloadInventory",
    "JobDriver_UnloadYourInventory",
    "JobDriver_HaulToTransporter",
    "JobDriver_ManTurret",
    "JobDriver_EnterCryptosleepCasket",
    "JobDriver_UseItem",
    "JobDriver_ClearSnow",
    "JobDriver_Vomit",
    "JobDriver_Flick",
    "JobDriver_TradeWithPawn",
    "JobDriver_Flee",
    "JobDriver_FleeAndCower",
    "JobDriver_EnterTransporter",
    "JobDriver_Resurrect",
    "JobDriver_Insult",
    "JobDriver_HaulCorpseToPublicPlace",
    "JobDriver_SingleInteraction",
    "JobDriver_OfferHelp",
    "JobDriver_EmptyThingContainer",
    "JobDriver_ActivateThing",
    "JobDriver_DeliverPawnToCell",
    "JobDriver_TakeToBed",
    "JobDriver_TakeCountToInventory",
    "JobDriver_TakeFromOtherInventory",
    "JobDriver_Carried",
    "JobDriver_Ignite",
    "JobDriver_BeatFire",
    "JobDriver_ExtinguishSelf",
    "JobDriver_Ingest",
    "JobDriver_LayDownAwake",
    "JobDriver_LayDownResting",
    "JobDriver_Lovin",
    "JobDriver_GotoMindControlled",
    "JobDriver_HaulToCell",
    "JobDriver_HaulToContainer",
    "JobDriver_TakeAndExitMap",
    "JobDriver_Kidnap",
    "JobDriver_CarryToCryptosleepCasket",
    "JobDriver_ReleasePrisoner",
    "JobDriver_CarryDownedPawn",
    "JobDriver_Slaughter",
    "JobDriver_Milk",
    "JobDriver_Shear",
    "JobDriver_Tame",
    "JobDriver_Train",
    "JobDriver_RopeToPen",
    "JobDriver_RopeRoamerToUnenclosedPen",
    "JobDriver_RopeRoamerToHitchingPost",
    "JobDriver_Unrope",
    "JobDriver_ReleaseAnimalToWild",
    "JobDriver_PlaceNoCostFrame",
    "JobDriver_Replant",
    "JobDriver_ConstructFinishFrame",
    "JobDriver_Deconstruct",
    "JobDriver_Uninstall",
    "JobDriver_ExtractTree",
    "JobDriver_Repair",
    "JobDriver_FixBrokenDownBuilding",
    "JobDriver_BuildRoof",
    "JobDriver_RemoveRoof",
    "JobDriver_PaintBuilding",
    "JobDriver_PaintFloor",
    "JobDriver_RemovePaintBuilding",
    "JobDriver_RemovePaintFloor",
    "JobDriver_FoodFeedPatient",
    "JobDriver_TendPatient",
    "JobDriver_FoodDeliver",
    "JobDriver_DoBill",
    "JobDriver_OperateDeepDrill",
    "JobDriver_OperateScanner",
    "JobDriver_CleanFilth",
    "JobDriver_Research",
    "JobDriver_Hunt",
    "JobDriver_UseCommsConsole",
    "JobDriver_Mine",
    "JobDriver_SmoothFloor",
    "JobDriver_RemoveFloor",
    "JobDriver_SmoothWall",
    "JobDriver_PlantSow",
    "JobDriver_PlantHarvest",
    "JobDriver_PlantHarvest_Designated",
    "JobDriver_PlantCut",
    "JobDriver_PlantCut_Designated",
    "JobDriver_ChatWithPrisoner",
    "JobDriver_Execute",
    "JobDriver_ExecuteGuiltyColonist",
    "JobDriver_Study_Building",
    "JobDriver_PlantSeed",
  ],
  reportString: [
    "nuzzling TargetA.",
    "mating with TargetA.",
    "laying egg.",
    "hunting TargetA.",
    "maintaining TargetA.",
    "gathering supplies.",
    "leading TargetA to caravan spot.",
    "leading TargetA to exit.",
    "preparing to leave.",
    "taking TargetA back to a pen.",
    "marrying TargetA.",
    "spectating.",
    "relaxing socially.",
    "talking.",
    "skygazing.",
    "meditating.",
    "praying.",
    "going for a walk.",
    "building snowman.",
    "visiting grave.",
    "viewing art.",
    "cheering up patient TargetA.",
    "playing horseshoes.",
    "playing hoopstone.",
    "playing the game of Ur.",
    "playing chess.",
    "playing billiards.",
    "playing poker.",
    "watching television.",
    "using telescope.",
    "playing TargetA.",
    "idling.",
    "moving.",
    "picking up TargetA.",
    "following TargetA.",
    "seeking safe temperature.",
    "wandering.",
    "standing.",
    "sleeping.",
    "downed.",
    "waiting in safe temperature.",
    "watching for targets.",
    "attacking TargetA.",
    "melee attacking TargetA.",
    "fighting with TargetA.",
    "equipping TargetA.",
    "taking TargetA to inventory.",
    "taking TargetA.",
    "wearing TargetA.",
    "removing TargetA.",
    "dropping TargetA.",
    "stripping TargetA.",
    "opening TargetA.",
    "rearming TargetA.",
    "refueling TargetA.",
    "reloading TargetA.",
    "filling TargetA.",
    "taking beer out of TargetA.",
    "applying TargetB.",
    "unloading TargetA.",
    "unloading inventory.",
    "hauling TargetA.",
    "operating turret.",
    "entering cryptosleep casket.",
    "using neurotrainer.",
    "activating artifact.",
    "using TargetA.",
    "clearing snow.",
    "vomiting.",
    "flicking switch.",
    "trading with TargetA.",
    "fleeing.",
    "entering TargetA.",
    "resurrecting TargetA.",
    "insulting TargetA.",
    "inducing TargetA to escape.",
    "helping TargetA.",
    "emptying TargetA.",
    "activating TargetA.",
    "delivering TargetA.",
    "grabbing TargetA from TargetB.",
    "igniting TargetA.",
    "beating fire out.",
    "extinguishing self.",
    "consuming TargetA.",
    "lying down.",
    "lovin'.",
    "triggering TargetA.",
    "stealing TargetA.",
    "kidnapping TargetA.",
    "carrying TargetA.",
    "rescuing TargetA.",
    "carrying TargetA to cryptosleep casket.",
    "capturing TargetA.",
    "arresting TargetA.",
    "releasing TargetA.",
    "escorting prisoner TargetA.",
    "taking wounded prisoner TargetA.",
    "taking TargetA to bed.",
    "slaughtering TargetA.",
    "milking TargetA.",
    "shearing TargetA.",
    "taming TargetA.",
    "training TargetA.",
    "leading TargetA to TargetC.",
    "leading TargetA to hitching spot.",
    "unroping TargetA.",
    "releasing TargetA into the wild.",
    "building TargetA.",
    "replanting TargetA.",
    "deconstructing TargetA.",
    "uninstalling TargetA.",
    "extracting TargetA.",
    "repairing TargetA.",
    "replacing broken components in TargetA.",
    "building roof.",
    "removing roof.",
    "painting TargetA.",
    "removing paint from TargetA.",
    "feeding TargetA to TargetB.",
    "tending to TargetA.",
    "doing bill at TargetA.",
    "drilling at TargetA.",
    "scanning at TargetA.",
    "cleaning TargetA.",
    "researching.",
    "using comms console.",
    "digging at TargetA.",
    "smoothing floor.",
    "removing floor.",
    "smoothing wall.",
    "sowing TargetA.",
    "harvesting TargetA.",
    "cutting TargetA.",
    "attempting to recruit TargetA.",
    "executing TargetA.",
    "Studying TargetA.",
    "planting TargetA.",
  ],
  allowOpportunisticPrefix: ["true", "false"],
  casualInterruptible: ["false"],
  checkOverrideOnDamage: ["OnlyIfInstigatorNotJobTarget", "Never"],
  neverFleeFromEnemies: ["true"],
  suspendable: ["false"],
  carryThingAfterJob: ["true"],
  dropThingBeforeJob: ["false"],
  neverShowWeapon: ["true"],
  joyDuration: ["4000", "5000", "3000", "8000", "1500"],
  taleOnCompletion: [
    "Meditated",
    "Prayed",
    "BuiltSnowman",
    "VisitedGrave",
    "PlayedGame",
    "Stripped",
    "EnteredCryptosleep",
    "PutIntoCryptosleep",
  ],
  joyMaxParticipants: ["3", "2", "4", "8", "1"],
  joySkill: ["Shooting", "Intellectual", "Artistic"],
  joyXpPerTick: ["0.003", "0.0015", "0.002", "0.004"],
  isIdle: ["true"],
  collideWithPawns: ["true"],
  playerInterruptible: ["false"],
  waitAfterArriving: ["2000"],
  makeTargetPrisoner: ["true"],
  giverClass: [
    "JoyGiver_Meditate",
    "JoyGiver_InPrivateRoom",
    "JoyGiver_Skygaze",
    "JoyGiver_GoForWalk",
    "JoyGiver_VisitGrave",
    "JoyGiver_ViewArt",
    "JoyGiver_BuildSnowman",
    "JoyGiver_SocialRelax",
    "JoyGiver_VisitSickPawn",
    "JoyGiver_WatchBuilding",
    "JoyGiver_PlayBilliards",
    "JoyGiver_InteractBuildingSitAdjacent",
    "JoyGiver_InteractBuildingInteractionCell",
    "JoyGiver_TakeDrug",
    "JoyGiver_Ingest",
    "WorkGiver_FightFires",
    "WorkGiver_PatientGoToBedEmergencyTreatment",
    "WorkGiver_PatientGoToBedTreatment",
    "WorkGiver_TendOtherUrgent",
    "WorkGiver_TendOther",
    "WorkGiver_TendSelf",
    "WorkGiver_TendSelfEmergency",
    "WorkGiver_FeedPatient",
    "WorkGiver_DoBill",
    "WorkGiver_RescueDowned",
    "WorkGiver_TakeToBedToOperate",
    "WorkGiver_VisitSickPawn",
    "WorkGiver_PatientGoToBedRecuperate",
    "WorkGiver_Flick",
    "WorkGiver_Open",
    "WorkGiver_Warden_DoExecution",
    "WorkGiver_ExecuteGuiltyColonist",
    "WorkGiver_Warden_ReleasePrisoner",
    "WorkGiver_Warden_TakeToBed",
    "WorkGiver_Warden_Feed",
    "WorkGiver_Warden_DeliverFood",
    "WorkGiver_Warden_Chat",
    "WorkGiver_TakeRoamingAnimalsToPen",
    "WorkGiver_TakeToPen",
    "WorkGiver_Slaughter",
    "WorkGiver_ReleaseAnimalsToWild",
    "WorkGiver_Milk",
    "WorkGiver_Shear",
    "WorkGiver_Tame",
    "WorkGiver_Train",
    "WorkGiver_RebalanceAnimalsInPens",
    "WorkGiver_CookFillHopper",
    "WorkGiver_HunterHunt",
    "WorkGiver_FixBrokenDownBuilding",
    "WorkGiver_Uninstall",
    "WorkGiver_ExtractTree",
    "WorkGiver_BuildRoof",
    "WorkGiver_RemoveRoof",
    "WorkGiver_ConstructFinishFrames",
    "WorkGiver_ConstructDeliverResourcesToFrames",
    "WorkGiver_ConstructDeliverResourcesToBlueprints",
    "WorkGiver_Replant",
    "WorkGiver_Deconstruct",
    "WorkGiver_Repair",
    "WorkGiver_PaintBuilding",
    "WorkGiver_PaintFloor",
    "WorkGiver_RemovePaintBuilding",
    "WorkGiver_RemovePaintFloor",
    "WorkGiver_ConstructRemoveFloor",
    "WorkGiver_ConstructSmoothFloor",
    "WorkGiver_ConstructSmoothWall",
    "WorkGiver_GrowerHarvest",
    "WorkGiver_GrowerSow",
    "WorkGiver_Miner",
    "WorkGiver_DeepDrill",
    "WorkGiver_PlantsCut",
    "WorkGiver_Refuel_Turret",
    "WorkGiver_Refuel",
    "WorkGiver_UnloadCarriers",
    "WorkGiver_HelpGatheringItemsForCaravan",
    "WorkGiver_LoadTransporters",
    "WorkGiver_Strip",
    "WorkGiver_HaulCorpses",
    "WorkGiver_TakeBeerOutOfFermentingBarrel",
    "WorkGiver_FillFermentingBarrel",
    "WorkGiver_HaulGeneral",
    "WorkGiver_Merge",
    "WorkGiver_EmptyEggBox",
    "WorkGiver_ClearSnow",
    "WorkGiver_CleanFilth",
    "WorkGiver_Researcher",
    "WorkGiver_OperateScanner",
    "WorkGiver_StudyThing",
    "WorkGiver_PlantSeed",
  ],
  baseChance: [
    "1",
    "0.75",
    "4",
    "3",
    "2.5",
    "2",
    "3.5",
    "1.0",
    "0.4",
    "1.5",
    "0.7",
    "2.0",
    "0.5",
    "0.12",
    "0.08",
    "0.3",
    "3.0",
    "0",
    "7.4",
    "2.7",
    "1.3",
    "0.0",
    "5",
    "1.2",
  ],
  pctPawnsEverDo: ["0.4", "0.5"],
  canDoWhileInBed: ["true"],
  requiresEnjoyOutdoors: ["true"],
  desireSit: ["false"],
  requireChair: ["false"],
  unroofedOnly: ["true"],
  needsThing: ["false"],
  requiredCapacity: [
    "Cut",
    "Stab",
    "Blunt",
    "Demolish",
    "Scratch",
    "ScratchToxic",
    "Poke",
    "Bite",
    "ToxicBite",
    "KickMaterialInEyes",
  ],
  meleeDamageDef: [
    "Cut",
    "Stab",
    "Blunt",
    "Demolish",
    "Scratch",
    "ScratchToxic",
    "Poke",
    "Bite",
    "ToxicBite",
  ],
  logEntryDef: ["MeleeAttack", "SandInEyes"],
  combatLogRulesHit: [
    "Maneuver_Slash_MeleeHit",
    "Maneuver_Stab_MeleeHit",
    "Maneuver_Smash_MeleeHit",
    "Maneuver_Scratch_MeleeHit",
    "Maneuver_Poke_MeleeHit",
    "Maneuver_Bite_MeleeHit",
    "Maneuver_KickMaterialInEyes_MeleeHit",
  ],
  combatLogRulesDeflect: [
    "Maneuver_Slash_MeleeDeflect",
    "Maneuver_Stab_MeleeDeflect",
    "Maneuver_Smash_MeleeDeflect",
    "Maneuver_Scratch_MeleeDeflect",
    "Maneuver_Poke_MeleeDeflect",
    "Maneuver_Bite_MeleeDeflect",
    "Maneuver_KickMaterialInEyes_MeleeDeflect",
  ],
  combatLogRulesMiss: [
    "Maneuver_Slash_MeleeMiss",
    "Maneuver_Stab_MeleeMiss",
    "Maneuver_Smash_MeleeMiss",
    "Maneuver_Scratch_MeleeMiss",
    "Maneuver_Poke_MeleeMiss",
    "Maneuver_Bite_MeleeMiss",
    "Maneuver_KickMaterialInEyes_MeleeMiss",
  ],
  combatLogRulesDodge: [
    "Maneuver_Slash_MeleeDodge",
    "Maneuver_Stab_MeleeDodge",
    "Maneuver_Smash_MeleeDodge",
    "Maneuver_Scratch_MeleeDodge",
    "Maneuver_Poke_MeleeDodge",
    "Maneuver_Bite_MeleeDodge",
    "Maneuver_KickMaterialInEyes_MeleeDodge",
  ],
  ai_IsBuildingDestroyer: ["true", "false"],
  bodypartTagTarget: ["SightSource"],
  minIntelligence: ["ToolUser", "Humanlike"],
  impactFleck: ["SandInEyes"],
  linkedBodyPartsGroup: [
    "Feet",
    "FrontLeftPaw",
    "FrontRightPaw",
    "Teeth",
    "HeadAttackTool",
    "Beak",
    "LeftHand",
    "RightHand",
    "FrontLeftLeg",
    "FrontRightLeg",
    "TuskAttackTool",
    "HornAttackTool",
    "Mouth",
    "HeadClaw",
    "TurtleBeakAttackTool",
    "FrontLeftClaws",
    "FrontRightClaws",
    "LeftBlade",
    "RightBlade",
  ],
  order: [
    "400",
    "401",
    "1100",
    "10",
    "11",
    "200",
    "210",
    "211",
    "250",
    "270",
    "300",
    "500",
    "600",
    "700",
    "800",
    "900",
    "1000",
    "1500",
    "100",
    "50",
    "25",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "8",
    "9",
    "20",
    "30",
    "110",
    "120",
    "130",
    "140",
    "150",
    "310",
    "320",
    "330",
    "410",
    "420",
    "430",
    "440",
    "450",
    "40",
    "60",
    "65",
    "70",
    "80",
    "90",
    "1200",
    "1300",
    "1400",
    "2200",
    "2300",
    "2400",
    "3200",
    "3300",
    "3400",
    "1600",
    "451",
    "480",
    "460",
    "470",
    "471",
  ],
  nearMapCenter: ["true"],
  allowInWaterBiome: ["false"],
  maxMineableValue: ["0"],
  countPer10kCellsRange: ["0~3", "0.7~1"],
  thingDef: [
    "SteamGeyser",
    "MedicineIndustrial",
    "MedicineHerbal",
    "Silver",
    "MealSurvivalPack",
    "ComponentIndustrial",
    "Gun_BoltActionRifle",
    "Gun_Revolver",
    "MeleeWeapon_Knife",
    "Apparel_FlakPants",
    "Apparel_FlakVest",
    "Apparel_AdvancedHelmet",
    "Steel",
    "WoodLog",
    "ShipChunk",
    "Cloth",
    "Pemmican",
    "MeleeWeapon_Club",
    "MeleeWeapon_Ikwa",
    "Bow_Short",
    "Pila",
    "Gold",
    "MedicineUltratech",
    "Gun_ChargeRifle",
    "AnimusStone",
    "ComponentSpacer",
    "Plasteel",
    "Uranium",
    "Neutroamine",
    "Chemfuel",
    "Chocolate",
    "Beer",
    "Telescope",
    "Genepack",
    "ArchiteCapsule",
    "DeathrestCapacitySerum",
    "Dye",
    "PoluxSeed",
    "Bed",
    "TorchLamp",
    "AnimalSleepingSpot",
    "HorseshoesPin",
    "FueledStove",
    "SimpleResearchBench",
  ],
  minSpacing: ["25"],
  extraNoBuildEdgeDist: ["4"],
  clearSpaceSize: ["30"],
  terrainValidationRadius: ["4"],
  radius: ["4", "9.9", "3", "6.9", "75", "radius"],
  affordance: ["Heavy"],
  requiresRoyalTitle: ["True"],
  categoryName: ["Tribal", "AdultTribal", "ChildTribal"],
  minTicksBeforeRecovery: [
    "10000",
    "40000",
    "6000",
    "60000",
    "8000",
    "100000",
    "70000",
    "2500",
    "50000",
    "25000",
    "3500",
    "99999999",
    "420",
  ],
  recoveryMtbDays: ["0.3", "0.166", "0.033", "0.133", "0.2", "0.02"],
  stateClass: [
    "MentalState_Berserk",
    "MentalState_FireStartingSpree",
    "MentalState_BingingDrug",
    "MentalState_Jailbreaker",
    "MentalState_Slaughterer",
    "MentalState_MurderousRage",
    "MentalState_GiveUpExit",
    "MentalState_WanderPsychotic",
    "MentalState_TantrumAll",
    "MentalState_TargetedTantrum",
    "MentalState_BedroomTantrum",
    "MentalState_SadisticRageTantrum",
    "MentalState_CorpseObsession",
    "MentalState_Binging",
    "MentalState_WanderSad",
    "MentalState_WanderOwnRoom",
    "MentalState_InsultingSpreeAll",
    "MentalState_TargetedInsultingSpree",
    "MentalState_WanderConfused",
    "MentalState_PanicFlee",
    "MentalState_Manhunter",
    "MentalState_SocialFighting",
    "MentalState_Roaming",
    "MentalState_InsultingSpree",
    "MentalState_Tantrum",
  ],
  blockRandomInteraction: ["true"],
  moodRecoveryThought: ["Catharsis"],
  blockNormalThoughts: ["true"],
  nameColor: [
    "(0.9,0.2,0.5)",
    "(0.5, 0.9, 0.5)",
    "(0.8,0.36,1)",
    "(0.88,0.48,0.16)",
    "(0.65, 0.9, 0.93)",
    "(0.98,0.48,0.16)",
  ],
  maxTicksBeforeRecovery: [
    "60000",
    "10000",
    "12000",
    "100000",
    "90000",
    "30000",
    "70000",
    "45000",
  ],
  recoveryMessage: [
    "{0}'s berserk rage has come to an end.",
    "{0} is no longer on a fire starting spree.",
    "{0} is no longer inducing prisoners to escape.",
    "{0} is no longer slaughtering random animals.",
    "{0} is no longer in a murderous rage.",
    "{0} has had a change of heart and is coming back to the colony.",
    "{0} is no longer wandering in a psychotic state.",
    "{0} is no longer having a tantrum.",
    "{0} is no longer in a sadistic rage.",
    "{0} is no longer having a corpse obsession.",
    "{0} is no longer pigging out on food.",
    "{0} is no longer wandering in sadness.",
    "{0} is no longer hiding in [PAWN_possessive] room.",
    "{0} is no longer on an insulting spree.",
    "{0} is no longer confused.",
    "{0} is no longer fleeing in panic.",
    "{0}'s manhunting bloodlust has come to an end.",
  ],
  recoverFromSleep: ["true", "false"],
  inCaravanCanDo: ["true", "false"],
  blockInteractionInitiationExcept: ["\r\n    "],
  prisonersCanDo: ["false"],
  colonistsOnly: ["true"],
  allowBeatfire: ["true"],
  ignoreDrugPolicy: ["true"],
  beginLetterLabel: [
    "jailbreaker",
    "gave up",
    "daze",
    "food binge",
    "sad wander",
    "hide in room",
    "confusion",
    "flee",
  ],
  escapingPrisonersIgnore: ["true"],
  blockInteractionRecipientExcept: ["\r\n    "],
  slavesCanDo: ["false"],
  IsNull: ["True"],
  baseCommonality: ["1", "0.75", "0.5", "0.333", "0.4", "0.8"],
  intensity: ["Extreme", "Major", "Minor"],
  requiredTrait: ["Pyromaniac"],
  questLodgersCanDo: ["false"],
  recoverFromDowned: ["false"],
  recoverFromCollapsingExhausted: ["false"],
  drawOrder: ["0", "100", "200", "300", "400", "500"],
  vital: ["true"],
  headOffset: ["(0.04, 0.34)", "(0.10, 0.34)", "(0.09, 0.34)"],
  bodyNakedGraphicPath: [
    "Things/Pawn/Humanlike/Bodies/Naked_Male",
    "Things/Pawn/Humanlike/Bodies/Naked_Female",
    "Things/Pawn/Humanlike/Bodies/Naked_Thin",
    "Things/Pawn/Humanlike/Bodies/Naked_Hulk",
    "Things/Pawn/Humanlike/Bodies/Naked_Fat",
  ],
  bodyDessicatedGraphicPath: [
    "Things/Pawn/Humanlike/Bodies/Dessicated/Dessicated_Male",
    "Things/Pawn/Humanlike/Bodies/Dessicated/Dessicated_Thin",
  ],
  bodyGraphicScale: ["(1, 0.9)", "(1, 1)", "(0.6, 1)", "(1, 1.25)", "(1.5, 1)"],
  group: ["Torso", "FullHead"],
  debugColor: [
    "(1,0,0,1)",
    "(0,1,0,1)",
    "(0,0,1,1)",
    "(1,1,0,1)",
    "(1,0,1,1)",
    "(0,1,1,1)",
    "(1,1,1,1)",
    "(0,0,0,1)",
  ],
  layer: [
    "Head",
    "WaterDepth",
    "Outline",
    "Dirt",
    "Stone",
    "Gravel",
    "Asphalt",
  ],
  canMirror: ["false"],
  narrowCrown: ["true"],
  multStat: ["SharpDamageMultiplier", "BluntDamageMultiplier"],
  armorRatingStat: [
    "ArmorRating_Sharp",
    "ArmorRating_Blunt",
    "ArmorRating_Heat",
  ],
  showPowerGrid: ["true"],
  texturePath: [
    "Designations/Plan",
    "Designations/Mine",
    "Designations/Haul",
    "Designations/Deconstruct",
    "Designations/Uninstall",
    "Designations/ExtractTree",
    "Designations/CutPlant",
    "Designations/HarvestPlant",
    "Designations/Hunt",
    "Designations/SmoothSurface",
    "Designations/Paint",
    "Designations/PaintFloor",
    "Designations/RemovePaint",
    "Designations/RemoveFloor",
    "Designations/Flick",
    "Designations/Strip",
    "Designations/Slaughter",
    "Designations/Tame",
    "Designations/Open",
    "Designations/ReleaseToTheWild",
    "Designations/Study",
    "Terrain/Scatter/DebrisStoneA",
    "Terrain/Scatter/DebrisStoneB",
    "Terrain/Scatter/DirtSmearA",
    "Terrain/Scatter/DirtSmearB",
    "Terrain/Scatter/GraySmearA",
    "Terrain/Scatter/GraySmearB",
    "Terrain/Surfaces/StrawMatting",
    "Terrain/Surfaces/Concrete",
    "Terrain/Surfaces/PavedTile",
    "Terrain/Surfaces/WoodFloor",
    "Terrain/Surfaces/GenericFloorTile",
    "Terrain/Surfaces/Carpet",
    "Terrain/Surfaces/BurnedWoodFloor",
    "Terrain/Surfaces/BurnedCarpet",
    "Terrain/Surfaces/BurnedStrawmatting",
    "Terrain/Surfaces/TileStone",
    "Terrain/Surfaces/Flagstone",
    "Terrain/Surfaces/Soil",
    "Terrain/Surfaces/Mossy",
    "Terrain/Surfaces/MarshyTerrain",
    "Terrain/Surfaces/SoilRich",
    "Terrain/Surfaces/Gravel",
    "Terrain/Surfaces/Sand",
    "Terrain/Surfaces/SoftSand",
    "Terrain/Surfaces/Mud",
    "Terrain/Surfaces/Ice",
    "Terrain/Surfaces/BrokenAsphalt",
    "Terrain/Surfaces/PackedDirt",
    "Terrain/Surfaces/Underwall",
    "Terrain/Surfaces/Bridge",
    "Terrain/Surfaces/WaterDeepRamp",
    "Terrain/Surfaces/WaterChestDeepRamp",
    "Terrain/Surfaces/WaterShallowRamp",
    "Terrain/Surfaces/Marsh",
  ],
  targetType: ["Cell", "Thing"],
  removeIfBuildingDespawned: ["true"],
  shouldBatchDraw: ["false"],
  designateCancelable: ["false"],
  iconSource: ["Placed"],
  useGridMenu: ["true"],
  includeEyeDropperTool: ["true"],
  difficulty: ["0", "1", "2", "3", "4", "5", "100", "200", "300"],
  threatScale: ["0.10", "0.30", "0.60", "1", "1.55", "2.2"],
  allowBigThreats: ["false"],
  allowIntroThreats: ["false"],
  peacefulTemples: ["true"],
  allowCaveHives: ["false"],
  allowViolentQuests: ["false"],
  predatorsHuntHumanlikes: ["false"],
  colonistMoodOffset: ["10", "5", "0", "-5", "-10"],
  cropYieldFactor: ["1.20", "1", "0.95", "0.8"],
  mineYieldFactor: ["1.20", "1", "0.95", "0.8"],
  researchSpeedFactor: ["1.20", "1", "0.95", "0.9"],
  diseaseIntervalFactor: ["3", "2.5", "1.5", "1", "0.95", "0.9"],
  enemyReproductionRateFactor: ["0.1", "0.15", "0.5", "1"],
  playerPawnInfectionChanceFactor: ["0.3", "0.5", "0.75", "1.1"],
  manhunterChanceOnDamageFactor: ["0.25"],
  deepDrillInfestationChanceFactor: ["0", "0.25", "0.75", "1", "1.1", "1.3"],
  wastepackInfestationChanceFactor: ["0", "0.25", "0.5", "1", "1.5", "2"],
  foodPoisonChanceFactor: ["0.3", "0.5", "0.75", "1", "1.1", "1.2"],
  maintenanceCostFactor: ["1"],
  enemyDeathOnDownedChanceFactor: ["0.5", "0.90", "1"],
  adaptationGrowthRateFactorOverZero: ["0", "0.25", "0.75", "1"],
  scariaRotChance: ["0", "0.000", "0.333", "0.600", "0.742", "0.818"],
  allowExtremeWeatherIncidents: ["false"],
  minThreatPointsRangeCeiling: ["45"],
  adaptationEffectFactor: ["0.9", "0.7", "0.4"],
  tradePriceFactorLoss: ["0.10", "0.20"],
  butcherYieldFactor: ["0.9", "0.8"],
  isCustom: ["true"],
  linkedMod: [
    "Ludeon.RimWorld",
    "Ludeon.RimWorld.Royalty",
    "Ludeon.RimWorld.Ideology",
    "Ludeon.RimWorld.Biotech",
  ],
  backgroundPath: [
    "UI/HeroArt/BGPlanet",
    "UI/HeroArt/MenuBG_Royalty",
    "UI/HeroArt/MenuBG_Ideology",
    "UI/HeroArt/MenuBG_Biotech",
  ],
  isCore: ["True"],
  steamUrl: [
    "steam://url/StoreAppPage/1149640",
    "https://store.steampowered.com/app/1392840",
    "steam://url/StoreAppPage/1826140",
  ],
  siteUrl: ["https://rimworldgame.com/"],
  notOwnedIconPath: [
    "UI/HeroArt/NotOwned_Royalty",
    "UI/HeroArt/NotOwned_Ideology",
    "UI/HeroArt/NotOwned_Biotech",
  ],
  previewImagesFolderPath: [
    "UI/HeroArt/Preview_Royalty",
    "UI/HeroArt/Preview_Ideology",
    "UI/HeroArt/Preview_Biotech",
  ],
  primaryColor: ["(179, 179, 125)", "(179, 125, 125)", "(125, 179, 179)"],
  thoughtStage: ["5", "4", "3", "2", "1", "0", "6", "7"],
  maxMapWealth: ["15000", "31000", "81000", "182000", "308000", "1000000000"],
  joyKindsNeeded: ["2", "3", "4", "5", "6"],
  joyToleranceDropPerDay: ["0.18", "0.13", "0.11", "0.10", "0.08", "0.07"],
  ritualQualityOffset: ["0.5", "0.3", "0.15"],
  maxSize: ["350", "400", "1500", "1.0", "7.0"],
  nameMaker: [
    "NamerIsland",
    "NamerArchipelago",
    "NamerPeninsula",
    "NamerBay",
    "NamerLake",
    "NamerSea",
    "NamerOcean",
    "NamerMountainRange",
    "NamerDesert",
    "NamerSwamp",
    "NamerForest",
    "NamerTropicalRainforest",
    "NamerBorealForest",
    "NamerAridShrubland",
    "NamerIceSheet",
    "NamerTundra",
    "NamerArtSculpture",
    "NamerArtFurniture",
    "NamerArtSarcophagusPlate",
    "NamerArtWeaponGun",
    "NamerArtWeaponMelee",
  ],
  minRootGroupSize: ["3"],
  maxRootGroupSize: ["75"],
  canTouchWorldEdge: ["false"],
  maxPctOfWholeArea: ["0.5"],
  maxPassageWidth: ["12"],
  minRootGroupsInCluster: ["1"],
  maxSpaceBetweenRootGroups: ["1"],
  corpseCategory: ["CorpsesAnimal", "CorpsesMechanoid", "CorpsesInsect"],
  tintWithSkinColor: ["true"],
  displayOverApparel: ["false"],
  displayPermanent: ["false"],
  drawOffsetSouth: ["(0, 0.001, -0.24)", "(0, 0, -0.24)"],
  drawOffsetEastWest: ["(-0.03, 0.001, -0.24)", "(-0.03, 0, -0.24)"],
  textureSouth: [
    "Things/Pawn/Wounds/MissingEye_Scar_south",
    "Things/Pawn/Wounds/MissingEye_Fresh",
  ],
  textureNorth: [
    "Things/Pawn/Wounds/MissingEye_Scar_south",
    "Things/Pawn/Wounds/MissingEye_Fresh",
  ],
  textureEast: [
    "Things/Pawn/Wounds/MissingEye_Scar_east",
    "Things/Pawn/Wounds/MissingEye_Fresh",
  ],
  textureWest: [
    "Things/Pawn/Wounds/MissingEye_Scar_east",
    "Things/Pawn/Wounds/MissingEye_Fresh",
  ],
  flipWest: ["true"],
  onlyOnPart: ["Eye"],
  flipOnWoundAnchorTag: ["LeftEye"],
  flipOnRotation: ["South"],
  missingBodyPartFresh: ["false", "true"],
  integersOnly: ["true"],
  useFixedScale: ["true"],
  fixedScale: ["(0, 100)"],
  onlyPositiveValues: ["false"],
  devModeOnly: ["true"],
  graphColor: [
    "(1, 1, 0, 1)",
    "(0.91, 0.68, 0, 1)",
    "(0.5, 0.7, 0, 1)",
    "(0.3, 0.6, 0.48, 1)",
    "(0, 1, 0, 1)",
    "(1, 0, 0, 1)",
    "(0, 1, 0.7, 1)",
    "(1, 0.5, 0.5, 1)",
    "(0, 0.5, 1, 1)",
  ],
  recordTicksFrequency: ["30000", "60000"],
  valueFormat: ["${0}", "{0}", "{0}%", "{0} days", "{0} points"],
  playOnlyIfHitPawn: ["true"],
  implementOwnerRuleName: ["WEAPON"],
  implementOwnerTypeValue: [
    "weapon",
    "bodypart",
    "hediff",
    "terrain",
    "nativeVerb",
  ],
  needsParmsPoints: ["true"],
  defaultThingDef: ["MedicineIndustrial"],
  isGameUniversal: ["true"],
  selfConflicting: ["false"],
  defaultKeyCodeA: [
    "W",
    "S",
    "A",
    "D",
    "PageDown",
    "PageUp",
    "Return",
    "Escape",
    "F10",
    "F11",
    "KeypadMultiply",
    "Space",
    "Alpha1",
    "Alpha2",
    "Alpha3",
    "Alpha4",
    "End",
    "Home",
    "Comma",
    "Period",
    "G",
    "T",
    "LeftAlt",
    "LeftControl",
    "B",
    "H",
    "Y",
    "N",
    "J",
    "U",
    "M",
    "K",
    "I",
    "L",
    "O",
    "P",
    "V",
    "F",
    "R",
    "C",
    "X",
    "Q",
    "E",
    "LeftShift",
    "KeypadPlus",
    "Semicolon",
    "BackQuote",
    "Slash",
    "Insert",
    "Quote",
    "RightBracket",
    "LeftBracket",
    "Tab",
  ],
  defaultKeyCodeB: [
    "UpArrow",
    "DownArrow",
    "LeftArrow",
    "RightArrow",
    "RightAlt",
    "RightControl",
    "RightShift",
  ],
  letterClass: [
    "ChoiceLetter",
    "ChoiceLetter_RansomDemand",
    "ChoiceLetter_ChoosePawn",
    "ChoiceLetter_AcceptVisitors",
    "ChoiceLetter_AcceptJoiner",
    "ChoiceLetter_BetrayVisitors",
    "DeathLetter",
    "NewQuestLetter",
    "BundleLetter",
  ],
  flashInterval: ["-1", "90", "40", "6", "16"],
  flashColor: [
    "(106, 179, 231)",
    "(210, 198, 106)",
    "(255, 85, 85)",
    "(255, 155, 95)",
    "(160, 170, 180)",
  ],
  arriveSound: [
    "RitualConclusion_Positive",
    "RitualConclusion_Negative",
    "LetterArrive_BadUrgentBig",
    "LetterArrive_BadUrgent",
    "LetterArrive_BadUrgentSmall",
    "LetterArrive",
    "LetterArrive_Good",
  ],
  bounce: ["true"],
  pauseMode: ["MajorThreat", "AnyThreat"],
  whitelist: ["false"],
  bodySizeFactor: ["0.2", "0.35", "0.8", "0.5", "0.1"],
  bodyWidth: ["0.95", "1.125"],
  bodyDrawOffset: ["(0, 0, -0.03)", "(0, 0, -0.1)"],
  voxPitch: ["1.6", "1.2"],
  headSizeFactor: ["0.5", "0.75"],
  eyeSizeFactor: ["0.7", "0.85"],
  foodMaxFactor: ["0.625", "2.286", "1.25", "2", "1.5", "3", "6"],
  healthScaleFactor: ["0.2", "0.5", "0.90", "0.25", "0.6"],
  marketValueFactor: ["0.5", "0.9", "0.4", "0.75", "1.4"],
  meleeDamageFactor: ["0.5", "0.7", "0.75"],
  developmentalStage: ["Baby", "Child"],
  fallAsleepMaxThresholdOverride: [".60"],
  naturalWakeThresholdOverride: ["1.0"],
  alwaysDowned: ["true"],
  claimable: ["true", "false"],
  involuntarySleepIsNegativeEvent: ["false"],
  canDoRandomMentalBreaks: ["false"],
  canSleepWhileHeld: ["true"],
  canVoluntarilySleep: ["false"],
  canSleepWhenStarving: ["false"],
  canInitiateSocialInteraction: ["false"],
  customMoodTipString: [
    "Mood represents how happy or stressed someone is. Babies with low mood are more likely to cry, while babies with a high mood are more likely to giggle.",
  ],
  ComfyTemperatureMin: [
    "-46",
    "-40",
    "-55",
    "-8",
    "-25",
    "-50",
    "-15",
    "-30",
    "-5",
    "-10",
    "-22",
    "-20",
    "-45",
    "-35",
    "-12",
    "0",
    "-65",
    "-23",
    "16",
    "-100",
  ],
  ComfyTemperatureMax: ["4", "50", "55", "45", "60", "26", "250"],
  equipmentDrawDistanceFactor: ["0.55", "0.65"],
  sittingOffset: ["0.3", "0.23", "0.18"],
  adjective: ["teenage"],
  reproductive: ["true"],
  voxVolume: ["0.4", "0.8"],
  milkable: ["true"],
  shearable: ["true"],
  caravanRideable: ["true"],
  iconDamaged: [
    "Things/Mote/BattleSymbols/Blood",
    "Things/Mote/BattleSymbols/SandInEyes",
  ],
  iconDamagedFromInstigator: [
    "Things/Mote/BattleSymbols/BloodTarget",
    "Things/Mote/BattleSymbols/SandInEyesTarget",
  ],
  tabWindowClass: [
    "MainTabWindow_Inspect",
    "MainTabWindow_Architect",
    "MainTabWindow_Work",
    "MainTabWindow_Schedule",
    "MainTabWindow_Assign",
    "MainTabWindow_Animals",
    "MainTabWindow_Wildlife",
    "MainTabWindow_Research",
    "MainTabWindow_Quests",
    "MainTabWindow_History",
    "MainTabWindow_Factions",
    "MainTabWindow_Menu",
  ],
  buttonVisible: ["false"],
  defaultHotKey: ["Tab", "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9"],
  closesWorldView: ["true"],
  validWithoutMap: ["true"],
  minimized: ["True"],
  canBeTutorDenied: ["false"],
  isDev: ["true"],
  sortable: ["true"],
  headerIcon: [
    "UI/Icons/Animal/Slaughter",
    "UI/Icons/Animal/Sterile",
    "UI/Designators/ReleaseToTheWild",
    "UI/Icons/Animal/FollowDrafted",
    "UI/Icons/Animal/FollowFieldwork",
    "UI/Icons/Animal/Hunt",
    "UI/Icons/Animal/Tame",
    "UI/Icons/Gender/Genders",
    "UI/Icons/Animal/Bond",
    "UI/Icons/Animal/Predator",
    "UI/Icons/ThingCategories/Medicine",
    "World/WorldObjects/Expanding/Sites/Manhunters",
  ],
  headerTip: [
    "Slaughter",
    "Sterilize",
    "Release to wild",
    "Follow master while the master is drafted.",
    "Follow master while the master is doing field work (hunting or taming animals).",
    "Mark animals to be hunted by your hunters.",
    "Tame a wild animal.",
    "Bond",
    "Info",
    "Medical care",
    "Hostility response",
    "The chance this creature will attack when harmed.\\n\\nThis chance increases up to three times if the attacker is closer.\\n\\nThis chance is applied each time damage is taken. This means that slower-firing, higher-damage weapons are less likely to trigger it while hunting.",
    "The chance that this creature will attack when a tamer tries to tame it and fails.",
  ],
  paintable: ["true", "false"],
  gap: ["4", "10", "17", "26"],
  widthPriority: ["-1000", "100"],
  ignoreWhenCalculatingOptimalTableSize: ["true"],
  showIcon: ["true"],
  useLabelShort: ["true"],
  width: [
    "30",
    "45",
    "0.35",
    "0.2",
    "0.55",
    "0.4",
    "0.65",
    "0.5",
    "0.25",
    "0.95",
    "0.8",
    "8",
  ],
  textEnemy: [
    "A group of {0} from {1} have arrived nearby.",
    "A group of {0} from {1} have arrived in transport pods nearby.",
    "{0} from {1} have arrived nearby, approaching from multiple angles.",
    "Several separate groups of {0} from {1} have arrived in transport pods nearby.",
    "A group of {0} from {1} have dropped in right on top of you!",
    "A group of {0} from {1} have arrived in transport pods. Their pods went haywire and are landing scattered all over the area!",
    "A cluster of {0} have landed in drop pods nearby.",
  ],
  textFriendly: [
    "A group of friendly {0} from {1} have arrived nearby.",
    "A group of friendly {0} from {1} have arrived in transport pods nearby.",
    "Friendly {0} from {1} have arrived nearby, approaching from multiple angles.",
    "Several separate groups of friendly {0} from {1} have arrived in transport pods nearby.",
    "A group of friendly {0} from {1} have dropped in right on top of you!",
    "A group of friendly {0} from {1} have arrived in transport pods. Their pods went haywire and are landing scattered all over the area!",
  ],
  textWillArrive: [
    "{0_pawnsPluralDef} will arrive on foot.",
    "{0_pawnsPluralDef} will arrive in transport pods.",
    "{0_pawnsPluralDef} will arrive on foot, approaching from several angles at once.",
    "Several separate groups of {0_pawnsPluralDef} will arrive in transport pods.",
    "{0_pawnsPluralDef} will arrive in transport pods right on top of you.",
    "The mech cluster will arrive in drop pods.",
  ],
  walkIn: ["true"],
  minTechLevel: ["Industrial"],
  minWidth: ["0"],
  allowOnWildMan: ["False"],
  hideIfNotRecruitable: ["true"],
  mustBeAwake: ["false"],
  type: [
    "Int",
    "Float",
    "Time",
    "Volatile",
    "Expirable",
    "PermanentHistorical",
  ],
  isThickRoof: ["false", "true"],
  filthLeaving: ["Filth_RubbleBuilding", "Filth_RubbleRock", "SandbagRubble"],
  soundPunchThrough: ["PunchThroughRoofMetal", "Roof_Collapse"],
  isNatural: ["true"],
  collapseLeavingThingDef: ["CollapsedRocks"],
  scatterType: ["Rocky", "SoftDry", "SoftGray"],
  shaderPath: [
    "Map/Cutout",
    "Map/CutoutWithOverlay",
    "Map/CutoutFlying",
    "Map/CutoutFlying01",
    "Map/CutoutPlant",
    "Map/CutoutComplex",
    "Map/CutoutSkin",
    "Map/CutoutSkinOverlay",
    "Map/Transparent",
    "Map/TransparentPostLight",
    "Map/TransparentPlant",
    "Map/MetaOverlay",
    "Map/Mote",
    "Map/MoteGlow",
    "Map/MoteGlowDistorted",
    "Map/MoteDistorted",
    "Map/MoteGlowDistortBackground",
    "Map/MoteGlowPulseLink",
    "Map/MotePsychicConditionCauser",
    "Map/PsyfocusMeditationPulse",
    "Map/MoteProximityScannerRadius",
    "Map/MoteGlowPulse",
    "Map/MoteWater",
    "Map/EdgeDetect",
    "Map/MotePsychicWarmupWordOf",
    "Map/MotePsychicWarmupNeuroquake",
    "Map/MoteLargeDistortionWave",
    "Map/CutoutAnimated",
    "Map/GlowAnimated",
    "Map/TransparentAnimated",
    "Map/AdditiveChangeHue",
    "Map/RitualStencil",
    "Map/PawnSilhouetteStencil",
    "Map/PawnSilhouetteStencilGlow",
    "Map/PawnSilhouetteStencilColorAnimated",
    "Map/TerrainFadeRoughSoftLight",
    "Map/TerrainFadeRoughLinearAdd",
    "Map/TerrainFadeRoughDifference",
    "Map/TransparentBelowSnow",
    "Map/MoteHeatDiffusion",
    "Map/MoteMultiplyAddScroll",
    "Map/MoteGlowCircularScrolling",
    "Map/MoteMultiplyAddCircular",
    "Map/MoteMultiplyAddCircularGrayscale",
    "Map/MoteCircularSparks",
  ],
  playOnMap: ["false"],
  volume: [
    "0.9",
    "0.65",
    "0.7",
    "1.03",
    "0.98",
    "0.70",
    "1.0",
    "0.97",
    "0.95",
    "0.99",
    "1.05",
    "1.02",
    "1.00",
    "1.04",
    "(0.6, 0.8, 0.6)",
    "(0.76,0.3,0.15)",
    "(0.55, 0.35, 0.3)",
    "(0.9, 1.0, 0.9)",
    "(1.39,0.5,1.25)",
    "(4.1, 1.0, 1.8)",
    "(0.18, 0.23, 0.18)",
    "(0.23, 0.26, 0.23)",
    "(0.3, 0.33, 0.3)",
    "(0.3, 0.6, 0.3)",
    "(0.08, 0.2, 0.08)",
    "(0.65, 0.25, 0.6)",
    "(1.6, 0.3, 1.6)",
    "(0.5, 0.3, 0.4)",
    "(1.6, 0.6, 0.1)",
    "(2.5, 0.6, 0.1)",
    "(0.3, 0.7, 0.3)",
    "(1,0.5,1)",
    "(0.3, 0.2, 0.3)",
    "(3,0.5,2)",
    "(0.25, 0.35, 0.25)",
    "(0.58, 0.35, 0.25)",
    "(1.6875, 0.375, 2.125)",
    "(1.4, 0.4, 1.4)",
    "(0.55, 0.30, 0.40)",
    "(0.83, 0.3, 1.7)",
    "(1.5, 0.6, 1.5)",
    "(2.2, 1, 2.2)",
    "(0.2, 0.5, 0.2)",
    "(1.93,1,1.69)",
    "(0.6, 1.0, 1.6)",
    "(3.5,0.75,3.4)",
    "(6.03,1.0,5.25)",
    "(2.6,1,2.16)",
    "(2.9, 0.3, 0.5)",
    "(2.8, 0.35, 0.59)",
    "(2.85, 0.3, 0.62)",
    "(2.8, 0.3, 0.54)",
    "(2.22, 0.8, 0.62)",
    "(1.95,0.5,1.3)",
    "(0.75, 0.35, 0.33)",
    "(0.52, 0.53, 0.09)",
    "(2.87,0.75,3.05)",
    "(0.5,0.4,1.05)",
    "(0.27,0.25,0.27)",
    "(1.5,0.35,1.4)",
    "(2.04, 1.0, 5.75)",
    "(2.76, 0.5, 2.66)",
    "(5.94, 1.0, 6.71)",
    "(3.1, 1.0, 3.3)",
    "(1.83, 0.5, 1.73)",
    "(1.8, 1.0, 0.2)",
    "(0.3, 0.5, 0.3)",
    "(0.9,0.3,0.9)",
    "(0.5,0.3,0.7)",
    "(0.8, 0.6, 0.8)",
    "(0.55, 0.2, 0.2)",
    "(0.2, 0.35, 0.13)",
    "(0.2, 0.3, 0.13)",
    "(0.15, 0.3, 0.15)",
    "(0.15, 0.15, 0.13)",
    "(0.15, 0.1, 0.15)",
    "(0.15, 0.15, 0.15)",
    "(0.1, 0.2, 0.1)",
    "(0.2, 0.6, 0.2)",
    "(0.24, 0.3, 0.15)",
    "(0.24, 0.35, 0.13)",
    "(0.24, 0.4, 0.13)",
    "(0.14, 0.32, 0.12)",
    "(0.15, 0.3, 0.1)",
    "(0.55, 0.17, 0.15)",
    "(0.3, 0.2, 0.15)",
    "(0.18, 0.3, 0.15)",
    "(0.38, 0.3, 0.15)",
    "(0.4, 0.3, 0.3)",
    "(0.6, 0.45, 0.45)",
    "(0.8, 0.6, 0.6)",
    "(0.3, 0.3, 0.3)",
    "(0.4, 0.4, 0.4)",
    "(0.25, 0.3, 0.25)",
    "(0.20, 0.3, 0.20)",
    "(0.3, 0.4, 0.3)",
    "(0.2, 0.2, 0.2)",
    "(0.25, 0.25, 0.25)",
    "(0.375, 0.375, 0.375)",
    "(0.5, 0.5, 0.5)",
    "(0.5, 0.5, 0.4)",
    "(0.4, 0.25, 0.35)",
    "(0.5, 0.3, 0.45)",
    "(0.475, 0.2, 0.3)",
    "(0.72, 0.3, 0.45)",
    "(0.95, 0.4, 0.6)",
    "(0.32, 0.35, 0.32)",
    "(0.2, 0.3, 0.2)",
    "(0.4, 0.5, 0.37)",
    "(0.5, 0.7, 0.43)",
    "(0.7, 0.6, 0.4)",
    "(1, 0.8, 0.5)",
    "(0.45, 0.45, 0.45)",
    "(0.35, 0.4, 0.3)",
    "(0.30, 0.25, 0.20)",
    "(0.3, 0.8, 0.4)",
    "(0.4, 0.8, 0.4)",
  ],
  allowedTimeOfDay: ["Day", "Night"],
  tense: ["true"],
  parentCategory: [
    "CorpsesHumanlike",
    "Corpses",
    "Root",
    "Foods",
    "Apparel",
    "Weapons",
    "Animals",
  ],
  allowedByDefault: ["false", "true"],
  saveKey: [
    "allowCorpsesColonist",
    "allowCorpsesStranger",
    "allowLargeCorpses",
    "allowRotten",
    "allowFresh",
    "allowPlantFood",
    "allowSmeltableApparel",
    "allowNonSmeltableApparel",
    "allowBurnableApparel",
    "allowNonBurnableApparel",
    "allowSmeltable",
    "allowNonSmeltableWeapons",
    "allowNonBurnableWeapons",
    "allowBurnableWeapons",
    "allowBiocodedWeapons",
    "allowNonBiocodedWeapons",
    "allowBiocodedApparel",
    "allowNonBiocodedApparel",
    "allowNonDeadmansApparel",
    "allowDeadmansApparel",
    "allowFemaleGender",
    "allowMaleGender",
  ],
  configurable: ["true", "false"],
  noun: ["metal", "wood", "stone", "fabric", "leather"],
  destroySoundSmall: [
    "BuildingDestroyed_Metal_Small",
    "BuildingDestroyed_Wood_Small",
    "BuildingDestroyed_Stone_Small",
    "BuildingDestroyed_Soft_Small",
  ],
  destroySoundMedium: [
    "BuildingDestroyed_Metal_Medium",
    "BuildingDestroyed_Wood_Medium",
    "BuildingDestroyed_Stone_Medium",
    "BuildingDestroyed_Soft_Medium",
  ],
  destroySoundLarge: [
    "BuildingDestroyed_Metal_Big",
    "BuildingDestroyed_Wood_Big",
    "BuildingDestroyed_Stone_Big",
  ],
  format: ["RFloat"],
  visualizeOnAffordanceOverlay: ["true"],
  affordanceOverlayColor: [
    "(255,130,0)",
    "(255,255,0)",
    "(0,0,100)",
    "(0,0,200)",
  ],
  blockAffordanceOverlay: ["true"],
  allowRest: ["false"],
  allowJoy: ["false"],
  TKey: [
    "DismissLetters",
    "QueueOrders",
    "ReorderColonistbar",
    "SelectPrevNextColonist",
    "SettingPainting",
    "ManualPriorities",
    "ColonistMood",
    "WorkTabChangeAllColonists",
    "WorkTabDecreasePriority",
    "CellInspector",
    "GunfightCover",
    "GunfightSpread",
    "ShootingAccuracySmoke",
    "DesignDefenses",
    "ShootingAccuracyFogRain",
    "ShootingTooltip",
    "TurretsExplode",
    "AnimalDeathExplosion",
    "CallAllies",
    "MaddenedAnimals",
    "EMPDisablesTurretsShields",
    "EMPDisablesPersonalShields",
    "HunterStealth",
    "AnimalsAttackCloseRange",
    "AnimalsMayAttack",
    "AnimalDeathExplosionRain",
    "GreaterSlaughterYield",
    "CaravanHitchingSpot",
    "CaravanHitchingSpotRoamers",
    "CaravanRideableAnimals",
    "CaravanSmallerLessVisible",
    "CaravanStockpileNearPackingSpot",
    "CaravanUntrainedAnimals",
    "CaravanDontForgetMedicine",
    "StoryGenerator",
    "BadAllies",
    "MakeCaravanRunBeforeDefeat",
    "FixedWealthMode",
    "StoneDoors",
    "ChairsWorkbench",
    "MechanicalBreakdown",
    "CarefulConstructionOnBridges",
    "CleanRooms",
    "ColonyOneStructure",
    "TerrainMovementSpeed",
    "TerrainCleanliness",
    "TerrainCleanSpeed",
    "PrisonersAsGifts",
    "RequestTradeCaravans",
    "TransportPodsSendGift",
    "KeepingPrisonersTogether",
    "EnemyFactionBaseDefenses",
    "AnimalNuzzle",
    "AnimalHerbivorousGrassArea",
    "RemoveLimbInfection",
    "SloshingWater",
    "Luciferium",
    "WorkMovementSpeedLighting",
    "DeepCavesTemperature",
    "MountainBases",
    "PrisonersGoodMood",
    "MultipleResearchers",
    "GeysersHeatRooms",
    "ExtinguishFireArtillery",
    "BestStoriesFromDarkestSituations",
    "KeepWeaponsAwayFromPrisoners",
    "MakeSureYouHaveFoodForTamedAnimals",
    "DroppingChunksWillForceDoorsOpen",
    "CleanLabs",
    "ChangeStoryteller",
    "MoreAlliesMoreTraders",
    "CombatDrugsFromInventory",
    "SchedulesSetLong",
    "StrawMatting",
    "AnimalFilth",
    "PredatorsAndFences",
    "LetterLabelChasing",
    "LetterTextChasing",
    "LetterLabelQuestExpired",
    "LetterTextQuestExpired",
    "LetterLabelQuestFailed",
    "LetterTextQuestFailed",
    "LetterLabelPaymentArrived",
    "LetterTextPaymentArrived",
    "LetterLabelFavorReceiver",
    "LetterTextFavorReceiver",
    "ReportStringPatrolling",
  ],
  comparerClass: [
    "TransferableComparer_None",
    "TransferableComparer_Name",
    "TransferableComparer_MarketValue",
    "TransferableComparer_Category",
    "TransferableComparer_Quality",
    "TransferableComparer_Mass",
    "TransferableComparer_HitPointsPercentage",
  ],
  intelligenceOrder: ["0", "20", "30"],
  showOnNeedList: ["false"],
  baseLevel: ["0.32", "0.4"],
  seekerRisePerHour: ["0.12", "0.32", "0.60", "0.90"],
  seekerFallPerHour: ["0.08", "0.04", "0.90"],
  major: ["true"],
  freezeWhileSleeping: ["true"],
  showUnitTicks: ["true"],
  neverOnPrisoner: ["true"],
  neverOnSlave: ["true"],
  freezeInMentalState: ["true"],
  colonistAndPrisonersOnly: ["true"],
  labelMechanoids: [
    "Data processing",
    "Communication",
    "fluid reprocessing",
    "power generation",
  ],
  lethalFlesh: ["true"],
  lethalMechanoids: ["true"],
  showOnCaravanHealthTab: ["true"],
  minForCapable: ["0.15"],
  zeroIfCannotBeAwake: ["true"],
  showOnAnimals: ["false"],
  minValue: [
    "0.1",
    "0",
    "-9999",
    "1",
    "-1000",
    "0.2",
    "0.0",
    "0.001",
    "0.4",
    "0.25",
    "0.5",
    "0.3",
    "0.01",
    "0.15",
    "0.05",
    "-2000",
    "0.0001",
    "0.6",
  ],
  showOnMechanoids: ["false", "true"],
  race: [
    "Human",
    "Mech_Termite",
    "Bear_Grizzly",
    "Bear_Polar",
    "Ostrich",
    "Emu",
    "Cassowary",
    "Cougar",
    "Panther",
    "Lynx",
    "Cat",
    "YorkshireTerrier",
    "GuineaPig",
    "LabradorRetriever",
    "Husky",
    "Monkey",
    "Chicken",
    "Duck",
    "Turkey",
    "Goose",
    "Cow",
    "Boomalope",
    "Muffalo",
    "Bison",
    "Dromedary",
    "Goat",
    "Elk",
    "Yak",
    "Caribou",
    "Horse",
    "Donkey",
    "Elephant",
    "Rhinoceros",
    "Hare",
    "Snowhare",
    "Megascarab",
    "Spelopede",
    "Megaspider",
    "Thrumbo",
    "Cobra",
    "Tortoise",
    "Alphabeaver",
    "Pig",
    "WildBoar",
    "Ibex",
    "Deer",
    "Gazelle",
    "Chinchilla",
    "Sheep",
    "Alpaca",
    "Megasloth",
    "Capybara",
    "Squirrel",
    "Rat",
    "Boomrat",
    "Raccoon",
    "Iguana",
    "Warg",
    "Wolf_Timber",
    "Wolf_Arctic",
    "Fox_Fennec",
    "Fox_Red",
    "Fox_Arctic",
    "Mech_CentipedeBlaster",
    "Mech_CentipedeGunner",
    "Mech_CentipedeBurner",
    "Mech_Lancer",
    "Mech_Scyther",
    "Mech_Pikeman",
  ],
  defaultFactionType: [
    "Pirate",
    "OutlanderCivil",
    "PlayerColony",
    "PlayerTribe",
    "AncientsHostile",
    "TribeCivil",
    "Mechanoid",
  ],
  chemicalAddictionChance: [
    "0.1",
    "0.05",
    "0.12",
    "0.06",
    "0.08",
    "0.03",
    "0.10",
  ],
  invNutrition: ["2.55", "0", "1", "10.0"],
  itemQuality: ["Normal", "Poor", "Good"],
  backstoryCryptosleepCommonality: [
    "0.08",
    "0.25",
    "0.05",
    "1",
    "0",
    "0.10",
    "0.1",
  ],
  maxGenerationAge: ["65", "45", "55", "60", "999"],
  combatEnhancingDrugsChance: ["0.15", "0.05", "0.80", "0.5"],
  combatEnhancingDrugsCount: ["0~2", "1~2"],
  biocodeWeaponChance: ["0.1", "0.2", "0.3"],
  gearHealthRange: [
    "0.7~2.3",
    "0.7~3.2",
    "1~1",
    "0.2~2.0",
    "0.6~2",
    "0.2~0.6",
    "0.4~1.1",
    "0.4~1.4",
    "0.2~0.8",
    "0.2~1.1",
    "0.5~1.8",
  ],
  initialWillRange: ["1~3", "2~4", "3~5", "0~1", "2~3", "0~0", "0"],
  apparelMoney: [
    "400~700",
    "1000~1500",
    "300~1400",
    "200~350",
    "2500~3500",
    "200~400",
    "400~600",
    "700~1200",
    "90~280",
    "300~500",
    "300~800",
    "400~1000",
    "350~600",
    "200~200",
    "0~1000",
    "200~1000",
    "0~3800",
    "0~350",
    "50~100",
    "180~350",
    "200~300",
    "200~550",
    "450~750",
  ],
  apparelAllowHeadgearChance: ["0.5", "0", "0.9", "0.4", "0.2", "0.7"],
  weaponMoney: [
    "500~500",
    "400~400",
    "330~650",
    "600~600",
    "200~500",
    "1200~1200",
    "500~1400",
    "65~250",
    "250~400",
    "200~200",
    "60~200",
    "200~300",
    "100~160",
    "250~345",
    "300~900",
    "90~150",
    "80~80",
    "150~150",
    "100~100",
    "300~300",
    "250~250",
    "500~1000",
    "9999~9999",
    "0~0",
  ],
  techHediffsChance: [
    "0.05",
    "0.15",
    "0.35",
    "0.06",
    "0.04",
    "0.03",
    "0.02",
    "0.08",
    "0.40",
    "1",
  ],
  techHediffsMoney: [
    "500~500",
    "700~1200",
    "1000~1200",
    "50~600",
    "200~700",
    "600~1500",
    "50~50",
    "50~800",
    "2000~3000",
    "9999~9999",
  ],
  skipChance: ["0.95", "0.9"],
  countRange: [
    "1",
    "5",
    "8~8",
    "2~3",
    "1~2",
    "5~20",
    "1~4",
    "2~8",
    "2~6",
    "3~6",
    "5~12",
    "30~100",
    "10~30",
    "30~50",
    "10~20",
    "1~3",
    "100~4000",
    "800~3000",
    "3~10",
    "200~300",
    "500~600",
    "-40~120",
    "500~1000",
    "15~30",
    "2~4",
    "3~9",
    "1~1",
    "-3~1",
    "-1~2",
    "20~70",
    "1~6",
    "500~800",
    "400~700",
    "100~250",
    "40~200",
    "400~600",
    "100~200",
    "50~200",
    "300~500",
    "-30~70",
    "-40~100",
    "25~50",
    "20~40",
    "12~50",
    "8~12",
    "5~10",
    "0~1",
    "0~4",
    "3~8",
    "750~1200",
    "100~350",
    "250~300",
    "0~10",
    "20~30",
    "7~7",
    "3~3",
    "3~4",
    "150~300",
    "4~4",
    "50~150",
    "30~60",
    "25~100",
    "30~40",
    "-10~2",
    "250~400",
    "70~160",
    "15~20",
    "5~5",
    "3~15",
    "2~5",
    "1~10",
    "6~20",
    "40~80",
    "-8~1",
    "2000~4000",
    "100~400",
    "200~600",
    "7~15",
    "3~5",
    "10~14",
    "8~10",
    "5~30",
    "200~400",
    "100~500",
    "4~8",
    "5~15",
    "-2~2",
    "50~250",
    "-2~5",
  ],
  combatPower: [
    "70",
    "55",
    "85",
    "110",
    "140",
    "130",
    "45",
    "60",
    "40",
    "35",
    "50",
    "65",
    "30",
    "75",
    "250",
    "5",
    "200",
    "120",
    "80",
    "33",
    "100",
    "90",
    "260",
    "270",
    "150",
    "500",
    "280",
    "160",
    "400",
    "180",
  ],
  canBeSapper: ["true"],
  isGoodBreacher: ["true"],
  initialResistanceRange: [
    "10~16",
    "15~24",
    "18~28",
    "6~10",
    "13~20",
    "14~23",
    "19~29",
    "9~15",
    "17~27",
    "15~23",
    "12~20",
    "10~17",
    "7~11",
    "7~12",
    "17~26",
    "13~21",
    "12~19",
    "0~0",
    "0~1",
    "28~44",
    "0~2",
    "5~9",
    "14~22",
    "19~30",
    "38~58",
    "16~26",
  ],
  skill: [
    "Shooting",
    "Melee",
    "Plants",
    "Social",
    "Animals",
    "Mining",
    "Construction",
    "Intellectual",
    "Medicine",
    "Cooking",
    "Crafting",
  ],
  labelPlural: [
    "heavy mercenaries",
    "bosses",
    "elite mercenaries",
    "town councilmen",
    "wild men",
    "strangers in black",
    "ostriches",
    "cassowaries",
    "lynx",
    "yorkshire terrier puppies",
    "labrador puppies",
    "huskies",
    "husky puppies",
    "geese",
    "calves",
    "boomalope calves",
    "muffalo calves",
    "bison calves",
    "dromedaries",
    "dromedary calves",
    "elk",
    "elk calves",
    "yak calves",
    "caribou",
    "caribou calves",
    "rhinoceroses",
    "thrumbo calves",
    "ibexes",
    "deer",
    "sheep",
    "lambs",
    "warg puppies",
    "timber wolves",
    "timber wolf puppies",
    "arctic wolves",
    "arctic wolf puppies",
    "fennec foxes",
    "fennec fox puppies",
    "red foxes",
    "red fox puppies",
    "arctic foxes",
    "arctic fox puppies",
    "pikemen",
  ],
  factionLeader: ["true"],
  isFighter: ["false", "true"],
  trader: ["true"],
  minGenerationAge: ["30", "20"],
  apparelIgnoreSeasons: ["true"],
  forceNormalGearQuality: ["true"],
  humanPregnancyChance: ["0.06", "0"],
  invFoodDef: ["Pemmican"],
  labelFemale: [
    "wild woman",
    "woman in black",
    "mother",
    "daughter",
    "sister",
    "grandmother",
    "granddaughter",
    "niece",
    "aunt",
    "great grandmother",
    "great granddaughter",
    "grandaunt",
    "grandniece",
    "wife",
    "fiancée",
    "stepmother",
    "stepdaughter",
    "mother-in-law",
    "daughter-in-law",
    "ex-wife",
    "hen",
    "goat doe",
    "mare",
    "sow",
    "ibex doe",
    "doe",
    "ewe",
  ],
  labelFemalePlural: ["wild women"],
  acceptArrestChanceFactor: ["0.5"],
  labelMale: [
    "man in black",
    "rooster",
    "cockerel",
    "bull",
    "yak",
    "stallion",
    "ibex ram",
    "buck",
    "ram",
  ],
  apparelColor: ["(58,58,58)"],
  ignoreIdeoApparelColors: ["true"],
  favoriteColor: ["(58,58,58)"],
  Inherit: ["False", "false"],
  importance: [
    "195",
    "190",
    "185",
    "180",
    "175",
    "170",
    "165",
    "160",
    "155",
    "120",
    "115",
    "110",
    "105",
    "100",
    "95",
    "90",
    "210",
    "205",
    "200",
    "150",
    "145",
    "140",
    "135",
    "130",
    "125",
    "85",
  ],
  diedThought: [
    "MyFatherDied",
    "MySonDied",
    "MyBrotherDied",
    "MyHalfSiblingDied",
    "MyGrandparentDied",
    "MyGrandchildDied",
    "MyNephewDied",
    "MyUncleDied",
    "MyCousinDied",
    "MyKinDied",
    "MyHusbandDied",
    "MyFianceDied",
    "MyLoverDied",
    "BondedAnimalDied",
  ],
  diedThoughtFemale: [
    "MyMotherDied",
    "MyDaughterDied",
    "MySisterDied",
    "MyNieceDied",
    "MyAuntDied",
    "MyWifeDied",
    "MyFianceeDied",
  ],
  killedThought: [
    "KilledMyFather",
    "KilledMySon",
    "KilledMyBrother",
    "KilledMyKin",
    "KilledMySpouse",
    "KilledMyFiance",
    "KilledMyLover",
    "KilledMyBondedAnimal",
  ],
  killedThoughtFemale: ["KilledMyMother", "KilledMyDaughter", "KilledMySister"],
  lostThought: [
    "MyFatherLost",
    "MySonLost",
    "MyBrotherLost",
    "MyHalfSiblingLost",
    "MyGrandparentLost",
    "MyGrandchildLost",
    "MyNephewLost",
    "MyUncleLost",
    "MyCousinLost",
    "MyKinLost",
    "MyHusbandLost",
    "MyFianceLost",
    "MyLoverLost",
    "BondedAnimalLost",
  ],
  lostThoughtFemale: [
    "MyMotherLost",
    "MyDaughterLost",
    "MySisterLost",
    "MyNieceLost",
    "MyAuntLost",
    "MyWifeLost",
    "MyFianceeLost",
    "MyLoverLost",
  ],
  opinionOffset: ["30", "20", "15", "10", "5", "35", "-15", "50"],
  generationChanceFactor: ["1.0", "0.4", "0.08", "0.35", "0.09", "0.1"],
  romanceChanceFactor: ["0.03", "0.25", "0.5"],
  incestOpinionOffset: ["-30", "-15"],
  inbredChanceOnChild: ["0.8", "0.4", "0.2", "0.1"],
  implied: ["false", "true"],
  familyByBloodRelation: ["true"],
  reflexive: ["true"],
  issue: [
    "NutrientPasteEating",
    "Cannibalism",
    "Corpses",
    "InsectMeat",
    "Lovin",
    "MarriageName",
    "OrganUse",
    "Execution",
    "Ritual",
    "SlaveTrading",
    "SpouseCount_Male",
    "SpouseCount_Female",
  ],
  impact: ["Low", "Medium"],
  displayOrderInIssue: ["10", "0"],
  defaultSelectionWeight: ["1"],
  classic: ["true"],
  eventDef: [
    "AteNutrientPaste",
    "AteHumanMeatDirect",
    "AteHumanMeatAsIngredient",
    "ButcheredHuman",
    "ObservedLayingCorpse",
    "ObservedLayingRottingCorpse",
    "AteInsectMeatDirect",
    "AteInsectMeatAsIngredient",
    "GotMarried_TookWomansName",
    "GotMarried_KeptName",
    "HarvestedOrganFromColonist",
    "HarvestedOrganFromGuest",
    "InnocentPrisonerDied",
    "ExecutedColonist",
    "ExecutedGuest",
    "ExecutedPrisoner",
    "SoldSlave",
    "GotMarried_SpouseCount_Two",
    "GotMarried_SpouseCount_Three",
    "GotMarried_SpouseCount_Four",
    "GotMarried_SpouseCount_FiveOrMore",
  ],
  durationDays: [
    "1",
    "1.5~3.0",
    "0.75~1.75",
    "2.5~10.5",
    "7.5~40",
    "1.5~3.5",
    "0.075~0.1",
    "0.75~1.25",
    "0.15~0.5",
    "0.125~0.35",
    "6",
    "20",
    "10",
    "30.0",
    "1.0",
    "10.0",
    "8",
    "15",
    "4",
    "12",
    "3",
    "0.1",
    "5",
    "0.5",
    "2",
    "30",
    "90",
    "120",
    "60",
    "6.0",
    "3.0",
    "25.0",
    "180",
    "duration (days)",
  ],
  tooltipShowMoodRange: ["true"],
  displayOrderInImpact: ["-100"],
  allowMultiplePrecepts: ["true"],
  preceptClass: ["Precept_Ritual"],
  countsTowardsPreceptLimit: ["false"],
  approvesOfSlavery: ["true"],
  displayDescription: ["false"],
  ritualOutcomeEffect: ["AttendedSpeech"],
  delayTicks: [
    "$(randInt(600,1200))",
    "$raidDelayTicks",
    "$($raidDelayTicks+600)",
    "$nextRaidDelayTicks",
    "$(randInt(12,28)*60000)",
    "$(randInt(7,15)*60000)",
    "$timeoutTicks",
    "$timeout",
    "120",
    "180",
  ],
  outSignals: ["JoinerArrived", "AllRaidsSent"],
  rootSelectionWeight: ["0.6", "1.0", "1", "1.1"],
  rootMinPoints: ["0", "350"],
  expireDaysRange: ["0.3", "4~8"],
  rootIncreasesPopulation: ["true"],
  defaultCharity: ["true"],
  allowEnemy: ["true"],
  mustBePermanentEnemy: ["true"],
  storeAs: [
    "enemyFaction",
    "rewardValue",
    "joiner",
    "itemPodsTotalMarketValueRange",
    "itemPodsContents",
    "itemPodsTotalMarketValue",
    "points",
    "raidCountMinusOne",
    "nextRaidDelayTicks",
    "site",
    "asker",
    "siteTile",
    "sitePartDefs",
    "sitePoints",
    "tile",
    "escapeShip",
    "faction",
    "playerFaction",
    "peaceTalks",
    "settlement",
    "timeout",
    "mapWealth",
    "wealthRewardValueFactor",
  ],
  historyDef: ["CharityFulfilled_ThreatReward_Joiner"],
  name: [
    "raidDelayTicks",
    "pointsOriginal",
    "pointsFactorTwoStar",
    "pointsFactorThreeStar",
    "selectionWeightOneStar",
    "selectionWeightTwoStar",
    "selectionWeightThreeStar",
    "minPointsTwoStar",
    "minPointsThreeStar",
    "challengeRating",
    "pointsFactor",
    "peacefulChallengeRating",
    "nextRaidDelayTicks",
    "raidCountMinusOne",
    "askerIsNull",
    "siteThreatChance",
    "asker",
    "timeoutTicks",
    "siteDistRange",
    "rewardValue",
    "Shot",
    "Main",
    "main",
    "",
    "MainWind",
    "Main hiss",
    "Main hiss jet",
  ],
  prefix: ["raid", "raid$raidLoopCounter"],
  inSignal: [
    "$inSignal",
    "site.Destroyed",
    "site.AllEnemiesDefeated",
    "escapeShip.ReactorDestroyed",
    "escapeShip.LaunchedShip",
    "PeaceTalksTimeout",
    "peaceTalks.Resolved",
    "faction.BecameHostileToPlayer",
    "settlement.TradeRequestFulfilled",
    "TradeRequestTimeout",
  ],
  map: ["$map"],
  points: ["$points", "$sitePoints"],
  enemyFaction: ["$enemyFaction"],
  walkInSpot: ["$walkInSpot"],
  childChance: ["0.5"],
  adultChance: ["0.5"],
  pawns: ["$joiner"],
  joinPlayer: ["true"],
  customLetterLabel: ["$customLetterLabel"],
  customLetterText: ["$customLetterText"],
  customLetterLabelRules: ["$customLetterLabelRules"],
  customLetterTextRules: ["$customLetterTextRules"],
  isSingleReward: ["true"],
  rewardDetailsHidden: ["true"],
  allowPregnant: ["true"],
  arrivalMode: ["RandomDrop", "$arrivalMode"],
  thingSetMaker: ["Reward_ItemsStandard"],
  totalMarketValueRange: [
    "$itemPodsTotalMarketValueRange",
    "1000~1000",
    "1000~2000",
    "100~500",
    "500~5000",
  ],
  factionOf: ["$asker"],
  qualityGenerator: ["Reward", "Trader", "Gift", "Super"],
  things: ["$itemPodsContents"],
  contents: ["$itemPodsContents"],
  value1: [
    "$points",
    "$raidCountMinusOne",
    "$raidLoopCounter",
    "$nextRaidDelayTicks",
    "$rewardValue",
    "$requestedThing",
  ],
  value2: [
    "$minPointsThreeStar",
    "$minPointsTwoStar",
    "$pointsFactor",
    "1",
    "$($raidCount - 1)",
    "9000",
    "1.75",
    "Leather_Human",
    "1.7",
  ],
  challengeRating: ["$challengeRating"],
  canTimeoutOrFlee: ["$canTimeoutOrFlee"],
  raidPawnKind: ["$raidPawnKind"],
  inSignalLeave: ["EndRaid"],
  loopCount: ["$raidCount"],
  storeLoopCounterAs: ["raidLoopCounter"],
  compareAs: ["int"],
  sitePartsParams: ["$sitePartsParams"],
  hiddenSitePartsPossible: ["$hiddenSitePartsPossible", "true"],
  tile: ["$siteTile", "$tile"],
  canGiveRoyalFavor: ["true"],
  pointsFactorTwoStar: ["1.5"],
  pointsFactorThreeStar: ["2"],
  mustBeFactionLeader: ["true"],
  allowPermanentEnemyFaction: ["false"],
  hostileWeight: ["0.15"],
  preferCloserTiles: ["true"],
  storeFactionAs: ["siteFaction"],
  mustBeHostileToFactionOf: ["$asker"],
  sitePartDefs: ["$sitePartDefs"],
  storeSitePartsParamsAs: ["sitePartsParams"],
  worldObjects: ["$site", "$escapeShip", "$peaceTalks"],
  worldObject: ["$site", "$escapeShip", "$peaceTalks"],
  isQuestTimeout: ["true"],
  inSignalDisable: ["site.MapGenerated"],
  destroyOnCleanup: ["true"],
  outcome: ["Fail", "Success"],
  getRaidersFromMapParent: ["$site"],
  allowGoodwill: ["true"],
  allowRoyalFavor: ["true"],
  chosenPawnSignal: ["ChosenPawnForReward"],
  addCampLootReward: ["true"],
  useColonistsOnMap: ["$site"],
  defaultHidden: ["true"],
  autoAccept: ["true"],
  mustBeNonHostileToPlayer: ["true"],
  pawn: ["$refugee", "$prisoner"],
  inSignalChoiceUsed: ["site.MapGenerated", "escapeShip.LaunchedShip"],
  defaultChallengeRating: ["4", "1"],
  isRootSpecial: ["true"],
  items: ["$generatedItemStashThings"],
  rootMinProgressScore: ["10", "8"],
  allowPermanentEnemy: ["false"],
  playerCantBeAttackingCurrently: ["true"],
  peaceTalksCantExist: ["true"],
  leaderMustBeSafe: ["true"],
  mustHaveGoodwillRewardsEnabled: ["true"],
  outSignalComplete: ["PeaceTalksTimeout", "TradeRequestTimeout"],
  defsToExcludeFromHyperlinks: ["Human"],
  sendStandardLetter: ["true"],
  allowActiveTradeRequest: ["false"],
  maxTileDistance: ["32"],
  storeFactionLeaderAs: ["asker"],
  thing: ["$asker", "Wastepack", "ElephantTusk", "ThrumboHorn"],
  settlement: ["$settlement"],
  storeEstimatedTravelTimeAs: ["estimatedTravelTime"],
  storeThingAs: ["requestedThing"],
  storeThingCountAs: ["requestedThingCount"],
  storeMarketValueAs: ["requestedThingMarketValue"],
  storeHasQualityAs: ["requestedThingHasQuality"],
  requestedThingDef: ["$requestedThing"],
  requestedThingCount: ["$requestedThingCount"],
  duration: ["$timeout"],
  giveToCaravan: ["true"],
  useDifficultyFactor: ["false"],
  useColonistsFromCaravanArg: ["true"],
  workerCounterClass: [
    "RecipeWorkerCounter_ButcherAnimals",
    "RecipeWorkerCounter_MakeStoneBlocks",
  ],
  efficiencyStat: ["ButcheryFleshEfficiency", "ButcheryMechanoidEfficiency"],
  interruptIfIngredientIsRotting: ["true"],
  autoStripCorpses: ["false"],
  conceptLearned: ["DrugBurning"],
  ignoreIngredientCountTakeEntireStacks: ["true"],
  ingredientValueGetterClass: ["IngredientValueGetter_Nutrition"],
  customSummary: ["protein", "greens", "vegetarian ingredients", "feedstock"],
  Kibble: ["50"],
  Pemmican: ["16", "64"],
  MealSimple: ["1", "4"],
  MealFine: ["1", "4"],
  MealFine_Veg: ["1", "4"],
  MealFine_Meat: ["1", "4"],
  MealLavish: ["1", "4"],
  MealLavish_Meat: ["1", "4"],
  MealLavish_Veg: ["1", "4"],
  MealSurvivalPack: ["1", "4"],
  Chemfuel: ["35", "140", "180", "15", "20", "40", "30", "80"],
  Leather_Patch: ["50"],
  workSkillLearnFactor: ["16"],
  surgeryOutcomeEffect: ["SurgeryOutcomeBase"],
  surgerySuccessChanceFactor: ["2", "5", "1.2"],
  failure: ["true"],
  applyEffectsToPart: ["true", "false"],
  totalDamage: ["65", "10", "20"],
  failedHediff: ["Sterilized"],
  inspirationDef: ["Inspired_Surgery"],
  factor: ["2", "1.1", "5", "0.66", "3", "0.85", "0.5"],
  baseCost: [
    "500",
    "1000",
    "400",
    "300",
    "600",
    "800",
    "700",
    "1600",
    "3200",
    "1200",
    "2000",
    "3000",
    "1500",
    "1400",
    "2600",
    "4000",
    "2500",
    "6000",
    "2800",
  ],
  researchViewX: [
    "0.00",
    "1.00",
    "3.00",
    "4.00",
    "2.00",
    "5.00",
    "6.00",
    "7.00",
    "8.00",
    "9.00",
    "10.00",
    "11.00",
    "12.00",
    "13.00",
    "14.00",
    "16.00",
    "15.00",
    "18.00",
    "19.00",
  ],
  researchViewY: [
    "1.40",
    "0.00",
    "3.50",
    "4.25",
    "2.10",
    "2.80",
    "0.70",
    "0.40",
    "1.10",
    "1.80",
    "2.50",
    "3.15",
    "2.90",
    "0.30",
    "2.70",
    "1.50",
    "0.90",
    "4.80",
    "3.40",
    "4.10",
    "0.80",
    "2.20",
    "3.90",
    "3.20",
    "4.60",
    "3.8",
    "3.80",
    "3.60",
    "4.85",
    "1.15",
  ],
  discoveredLetterTitle: [
    "About: Electricity",
    "About: Getting advanced components",
    "About: Launching the ship",
  ],
  discoveredLetterText: [
    'Your colony has harnessed the power which outsiders call "electricity". It has the potential to transform every aspect of your people\'s way of life.\\n\\nYou have now unlocked the Power tab in the Architect menu from which you may build electric generators, power conduits, and other mechanisms to control this new force. The Power tab also displays the electric grid which connects electric generators and appliances.',
    "You now have the technology to build a fabrication bench - but it also requires some advanced components to get started. You can collect advanced components several ways:\\n\\n  -All outlander settlements sell advanced components. Send a caravan to buy some.\\n  -Some visiting traders sell advanced components. Invite or wait for them.\\n  -Some quests are rewarded with advanced components.",
    "Escaping from this planet - it would be freedom at last, and maybe a return home.\\n\\nBut also incredibly dangerous.\\n\\nA new Ship category is available in the Architect menu from which you may build ship parts once the appropriate technology is researched. Ships require several different parts in order to launch, including a ship reactor.\\n\\nShip reactors take 15 days to charge up and many desperate souls want off this planet. Once you begin that process, the ship reactor will emit an energy signature detectable from thousands of kilometers away. Raiders will flock to attack you in waves, with an intensity you've never seen. Mechanoids are also known to be attracted to such energy signatures.\\n\\nIt won't start until you activate your ship's reactor, but when it does, it'll be ferocious. You'll need to stockpile resources, weapons, and defenses for the onslaught if you hope to escape alive.",
  ],
  trapsDisabled: ["true"],
  recalculatePower: ["true"],
  mortarsDisabled: ["true"],
  turretsDisabled: ["true"],
  requiredResearchBuilding: ["HiTechResearchBench"],
  bigThreatsDisabled: ["true"],
  requiredTag: ["Arrived"],
  eastRotationOffset: ["(0.5, 0, 0.2)"],
  westRotationOffset: ["(-0.5, 0, 0.2)"],
  northRotationOffset: ["(0, 0, 0.5)"],
  spawnIntervalTicks: ["45"],
  labelAbstract: ["speaker's social impact"],
  roleId: ["speaker"],
  statDef: ["SocialImpact", "Impressiveness", "MeditationFocusStrength"],
  memory: [
    "TerribleSpeech",
    "UninspiringSpeech",
    "EncouragingSpeech",
    "InspirationalSpeech",
  ],
  positivityIndex: ["-2", "-1", "1", "2"],
  spawnFlowThreshold: ["1000000", "500000", "100000"],
  spawnChance: ["1", "0.75", "0.5"],
  degradeThreshold: ["500000", "250000", "50000", "20000"],
  degradeChild: ["LargeRiver", "River", "Creek"],
  minFlow: ["750000", "125000", "75000", "100000", "50000"],
  child: ["HugeRiver", "LargeRiver", "River", "Creek"],
  widthOnWorld: ["0.8", "0.6", "0.4", "0.2"],
  widthOnMap: ["30", "14", "6", "4"],
  debugOpacity: ["0.8", "0.4", "0.2", "0.05"],
  movementCostMultiplier: ["0.5"],
  tilesPerSegment: ["15", "25", "100", "400"],
  pathingMode: ["Avoid", "Bulldoze"],
  place: [
    "Bridge",
    "PackedDirt",
    "FlagstoneSandstone",
    "Gravel",
    "BrokenAsphalt",
    "AncientConcreteBarrier",
    "AncientLamppost",
  ],
  antialiasingMultiplier: ["0"],
  onlyIfOriginAllows: ["true"],
  distortionFrequency: ["0.5", "0.2"],
  distortionIntensity: ["0.2", "0.10"],
  worldTransitionGroup: ["Dirt", "Stone", "Asphalt"],
  ancientOnly: ["true"],
  suppressOnTerrainTag: ["Water"],
  periodicSpacing: ["12", "8"],
  proximitySpacing: ["4"],
  updatePriority: ["1", "2", "0"],
  displayRounded: ["true"],
  roomlessScore: ["0", "350", "1.0", "0.6", "0.75", "1", "0.02"],
  minScore: [
    "20",
    "30",
    "40",
    "50",
    "65",
    "85",
    "120",
    "170",
    "240",
    "500",
    "700",
    "2000",
    "4000",
    "10000",
    "40000",
    "100000",
    "1000000",
    "12.5",
    "29",
    "55",
    "70",
    "130",
    "349.5",
    "-3.5",
    "0.0",
    "2.4",
    "5.0",
    "15.0",
    "50.0",
    "100.0",
    "-1.1",
    "-0.4",
    "-0.05",
    "0.4",
  ],
  isHidden: ["true"],
  inputStat: ["Cleanliness", "Impressiveness"],
  minRectSize: [
    "(10, 10)",
    "(3, 3)",
    "(5, 7)",
    "(4, 4)",
    "(5, 5)",
    "(12, 12)",
    "(9, 9)",
    "(0, 0)",
    "(2, 2)",
    "(4, 3)",
    "(6, 5)",
    "(5,5)",
    "(1, 1)",
    "(3, 5)",
  ],
  techprintChance: ["0.033"],
  bladelinkChance: ["0.02"],
  psychicChance: ["0.02"],
  interior: [
    "interior_brewery",
    "interior_worshippedTerminal",
    "interior_diningRoom",
    "interior_batteryRoom",
    "interior_storage",
    "interior_barracks",
    "interior_prisonCell",
  ],
  keyword: ["NamePerson", "NamePersonMale", "NamePersonFemale", "Digit"],
  summary: [
    "Three crashlanded survivors - the classic RimWorld experience.",
    "Five lost tribespeople attempt to rebuild. Difficult.",
    "One rich explorer out to experience the universe. Extra difficult.",
    "Naked, alone, and utterly unprepared. Can you survive? Extremely difficult and unfair.",
  ],
  factionDef: ["PlayerColony", "PlayerTribe"],
  pawnCount: ["3", "5", "1"],
  pawnChoiceCount: ["8"],
  method: ["DropPods", "Standing"],
  hideOffMap: ["true"],
  severityRange: ["1~1", "0.2~0.4"],
  stuff: ["Plasteel", "WoodLog", "Steel", "Jade", "Cloth"],
  bondToRandomPlayerPawnChance: ["1.0"],
  allowRoofed: ["false"],
  textKey: ["GameStartDialog"],
  closeSound: ["GameStartSting"],
  showInUI: ["false"],
  levelRange: ["0~0.1"],
  text: [
    "The gods were very angry. The blood machines came at night. They swept through your village, cutting and burning your people with their blades and devil-fire.\\n\\nOnly a few of you escaped.\\n\\nNow, after a harrowing journey, with no friends to turn to, you must build a new home in the wilderness - like your ancestors did.",
    "The neurosimulations, holo-games, and free-orgies were never enough for you. You wanted more - the grit and consequence of real life, like they talk about in the history books. You wanted to know what real challenge and consequence feel like.\\n\\nNow, after a journey of decades in cryptosleep, you're landing on this unknown rimworld. Real consequences await you.",
    "It was supposed to be a minor surgery. Just an hour under anesthetic. You felt totally safe.\\n\\nNow you've awoken inside a drop pod punching through the atmosphere of a distant rimworld.\\n\\nAside from a slick of mysterious goo all over your body, you are totally naked. With no preparation, no supplies, and no tools, can you survive?",
    "Welcome to RimWorld!\\n\\nThis page configures how your world should be generated.\\n\\nThe default settings here are good - go ahead and click GENERATE!",
    "Here you choose your starting site.\\n\\nClick a temperate forest (light green) with no brown hills. Then click NEXT.\\n\\nOptionally, you can use the TERRAIN tab to view information about the selected tile.",
    'Now you choose which characters you want to use.\\n\\nDRAG a character from the "left behind" part of the character list (at the bottom) into the "selected" part (at the top).\\n\\nOptionally, clicking a character will allow you inspect him or her.',
    "If you don't like a character, you can regenerate them!\\n\\nClick the RANDOMIZE button to randomize the character.",
    "Great!\\n\\nReorder and randomize more if you want - but don't try to get the perfect characters. Everyone has flaws, and it makes the story more interesting!\\n\\nYou can also re-name the characters by clicking on their names.\\n\\nClick START when you're ready.",
    "Here you are on the surface!\\n\\nNow try moving the camera around.\\n\\nUse the {Key:MapDolly_Up}-{Key:MapDolly_Left}-{Key:MapDolly_Down}-{Key:MapDolly_Right} keys, or click and drag with the middle mouse button.\\n\\nTry it now!",
    "Great!\\n\\nYou can also zoom in and out with the mouse wheel, or the {Key:MapZoom_In} and {Key:MapZoom_Out} keys.\\n\\nTry it now!",
    "You can pause time.\\n\\nThis means you never need to rush. You can always pause and take your time to issue orders.\\n\\nTry pausing with the {Key:TogglePause} key, or by using the time controls in the bottom right.",
    "You can also speed up time.\\n\\nTry controlling time with the {Key:TimeSpeed_Normal}, {Key:TimeSpeed_Fast}, and {Key:TimeSpeed_Superfast} keys, or with the time controls in the bottom right.",
    "Great!\\n\\nNow, make a stockpile so your colonists know where to keep items.\\n\\n1. Click ARCHITECT tab in the bottom left.\\n2. Click the ZONE/AREA category.\\n3. Select the CREATE STOCKPILE tool.\\n4. Click and drag out a square as indicated on the map.",
    "Right-click to get out of stockpile designating mode.",
    'To allow your colonists to bring your items to the stockpile, you must remove the items\' "forbidden" designation.\\n\\n1. Clicking your starting items to select them.\\n2. Click the ALLOW toggle button to allow them.\\n\\n(Pro tip: Double-click an item to select all on screen of the same type.)\\n\\nAlternatively, you can:\\n1. Click ARCHITECT.\\n2. Click ORDERS.\\n3. Click ALLOW.\\n4. Drag out a shape covering all forbidden items to allow them.',
    "Awesome! Next, we'll build a room.\\n\\n1. Click ARCHITECT.\\n2. Click STRUCTURE.\\n3. Select WALL.\\n4. Select WOOD as the material.\\n5. Drag out four walls to form the shape indicated on the map.",
    "Now just place a DOOR over any one of the room walls.\\n\\nDOOR is right beside WALL in the ARCHITECT menu.",
    "Your colonists will now build the room!\\n\\nNow they need somewhere to sleep. Place three BEDS inside the room.\\n\\nFind them in the FURNITURE category.\\n\\nYou can use the {Key:Designator_RotateLeft} and {Key:Designator_RotateRight} keys to rotate the building.",
    "You'll also want some light inside, or your colonists will get grumpy in the dark.\\n\\nBuild a TORCH LAMP inside the room.",
    "So your pet will sleep inside with you, place an ANIMAL SLEEPING SPOT inside the room.\\n\\nSleeping spots aren't real buildings - they're just spots on the ground designated for a sleeping.",
    "Your colonists need sources of recreation or they'll get sad over time.\\n\\nBuild a HORSESHOES pin outside, near the room.",
    "The house is being built!\\n\\nYour colonists will need something to eat, so place a GROWING ZONE as indicated on the map.\\n\\nThis is where your colonists will sow crops.",
    "You can decide what plant your colonists should sow in a growing zone.\\n\\n1. Right-click to exit architect mode.\\n2. Click your growing zone to select it.\\n3. Click the plant selector at the bottom and change it to rice.",
    "Have your colonists equip the starting weapons. To equip a weapon:\\n\\n1. Click a colonist to select them.\\n2. Right-click the weapon you want to equip.\\n3. Click 'equip weapon' on the context menu.\\n\\nDo this for each colonist.",
    "Excellent!\\n\\nNow you'll need to make a stove to cook food.\\n\\nBuild a FUELED STOVE inside the room.",
    "Colonists need to be told what to cook.\\n\\nCooking orders are added on the stove itself. Once a bill has been created, colonists will do the work automatically.\\n\\n1. Wait for the stove to be built.\\n2. Click the stove to select it.\\n3. Open the BILLS tab.\\n4. Click ADD BILL.\\n5. Select COOK SIMPLE MEAL on the context menu.\\n6. Click the + button to increase the count to 10.\\n\\nRemember, you can speed up time if building is taking too long.\\n\\nYou can also select a colonist and right-click the stove to prioritize building it.",
    "Now your colonists will cook some food! Tasty!\\n\\nNext, you'll want to mine some minerals. I've spawned some mineable steel near your base.\\n\\nSelect the MINE designator and drag over the steel to designate it for mining.",
    "You'll want to harvest some wood. Designate some trees to be chopped.\\n\\nSelect the CHOP WOOD designator and designate 10 trees to be chopped down.\\n\\n(Pro tip: You can drag a box over trees to designate several at once.)",
    "You can control which colonist does what kind of work.\\n\\nOpen the WORK tab at the bottom of the screen.",
    "You can control who does what kinds of work using the checkboxes. Colonists will do tasks in order, from left to right.\\n\\nTry changing some settings now.\\n\\nBeware - Colonists always follow their work priorities, even if this makes them do dumb things! Setting up a smart work regime is an important skill in RimWorld. So set the work settings carefully, and review them often!",
    "To advance, you'll need to research new technologies.\\n\\nBuild a wooden SIMPLE RESEARCH BENCH inside your room.",
    "Excellent! Next, you'll want to select what you want to be researched.\\n\\nOpen the RESEARCH tab.",
    "Now just choose whatever you want to be researched first.\\n\\nYou might have to wait for the research bench to be constructed, or for trees to be chopped for wood.\\n\\nIf it's taking too long, use the WORK tab to assign more colonists to Construct.",
    "Next, you'll learn to expand the HOME AREA.\\n\\nColonists will clean floors and extinguish fires in the home area only, and ignore fires or filth outside of it.\\n\\nThe home area is added automatically when you build things - but you can also expand it manually.\\n\\nSelect the EXPAND HOME AREA tool and drag out a new area on the map.",
    "The BUILD ROOF AREA defines where your colonists will try to build roofs.\\n\\nIt auto-fills when you enclose a new room.\\n\\nSelect the EXPAND BUILD ROOF AREA tool and drag out the shape of a porch roof on the front of the house.",
    "Great! You've now got a basic colony running! Eventually, enemies will raid your colony. It's time to prepare for that.\\n\\nSelect the SANDBAGS designator and drag the sandbags out at the designated area.",
    "Let's just wait for all your constructions to be built.\\n\\nConsider using the WORK tab to assign more colonists to Construct.\\n\\nAlso, you can speed up time to shorten the wait.\\n\\nOnce everything's built, I'll send an attacker to test your defenses!",
    "I've now sent a raider to attack your colony!\\n\\n1. Pause the game by hitting {Key:TogglePause}!\\n2. Read the red letter in the bottom-right of the screen.\\n3. DRAFT your colonists by selecting them and hitting the DRAFT command.\\n4. Right-click to send them to positions inside the sandbag square, touching the sandbags.\\n5. Unpause.\\n\\nColonists must be touching cover to benefit from it. Once you're in cover, wait for the attacker to approach. Your colonists will shoot automatically.",
    "Success! Now UNDRAFT all your colonists using the same command as before.\\n\\nThis will let them return to their own schedules.",
    "This is the end of the tutorial!\\n\\nThere's still tons more to learn, including prisoners, hunting, trade, animal taming, and much more. But you've got the basics down.\\n\\nRandom incidents were disabled during this tutorial. To begin the real game:\\n\\n1. Open the MENU tab in the bottom-right.\\n2. Select OPTIONS.\\n3. Click the Gameplay button in the left columm.\\n4. Click the Modify button beside Storyteller settings.\\n5. Select a storyteller and playstyle that appeals to you.\\n\\nGood luck, and have fun.",
  ],
  project: ["GunTurrets"],
  scenPartClass: [
    "ScenPart_PlayerFaction",
    "ScenPart_ConfigPage_ConfigureStartingPawns",
    "ScenPart_PlayerPawnsArriveMethod",
    "ScenPart_GameStartDialog",
    "ScenPart_PawnFilter_Age",
    "ScenPart_OnPawnDeathExplode",
    "ScenPart_ForcedTrait",
    "ScenPart_ForcedHediff",
    "ScenPart_Naked",
    "ScenPart_SetNeedLevel",
    "ScenPart_StartingResearch",
    "ScenPart_GameCondition",
    "ScenPart_Rule_DisallowDesignator",
    "ScenPart_StatFactor",
    "ScenPart_NoPossessions",
    "ScenPart_DisableIncident",
    "ScenPart_CreateIncident",
    "ScenPart_DisallowBuilding",
    "ScenPart_PermaGameCondition",
    "ScenPart_StartingAnimal",
    "ScenPart_StartingThing_Defined",
    "ScenPart_ScatterThingsNearPlayerStart",
    "ScenPart_ScatterThingsAnywhere",
  ],
  summaryPriority: [
    "1000",
    "500",
    "470",
    "475",
    "461",
    "460",
    "459",
    "458",
    "457",
    "400",
    "380",
    "379",
    "390",
    "360",
    "361",
    "359",
    "350",
    "305",
    "300",
    "295",
    "100",
  ],
  pageClass: ["Page_ConfigureStartingPawns"],
  maxUses: ["1"],
  gameCondition: [
    "Planetkiller",
    "PsychicDrone",
    "ToxicFallout",
    "VolcanicWinter",
    "HeatWave",
    "ColdSnap",
    "Eclipse",
    "SolarFlare",
    "Aurora",
  ],
  gameConditionTargetsWorld: ["true"],
  durationRandomRange: ["90~500"],
  designatorType: [
    "Designator_ZoneAdd_Growing",
    "Designator_Mine",
    "Designator_Hunt",
    "Designator_Tame",
  ],
  jobClass: ["ShipJob_Unload", "ShipJob_WaitTime", "ShipJob_Arrive"],
  blocksDisposalIfQueuedUnspawned: ["false"],
  siteTexture: [
    "World/WorldObjects/Sites/GenericSite",
    "World/WorldObjects/Sites/Outpost",
  ],
  expandingIconTexture: [
    "World/WorldObjects/Expanding/Sites/Nothing",
    "World/WorldObjects/Expanding/Sites/Ambush",
    "World/WorldObjects/Expanding/Sites/DownedRefugee",
    "World/WorldObjects/Expanding/Sites/ItemStash",
    "World/WorldObjects/Expanding/Sites/Manhunters",
    "World/WorldObjects/Expanding/Sites/Outpost",
    "World/WorldObjects/Expanding/Sites/PreciousLump",
    "World/WorldObjects/Expanding/Sites/Prisoner",
    "World/WorldObjects/Expanding/Sites/SleepingPawns",
    "World/WorldObjects/Expanding/Sites/Turrets",
    "World/WorldObjects/Expanding/Ambush",
    "World/WorldObjects/Expanding/Caravan",
    "World/WorldObjects/Expanding/DestroyedSettlement",
    "World/WorldObjects/Expanding/JourneyDestination",
    "World/WorldObjects/Expanding/TravelingTransportPods",
    "World/WorldObjects/Expanding/RoutePlannerWaypoint",
    "World/WorldObjects/Expanding/PeaceTalks",
  ],
  wantsThreatPoints: ["true"],
  linkWithSite: [
    "AmbushEdge",
    "AmbushHidden",
    "BanditCamp",
    "DownedRefugee",
    "ItemStash",
    "Manhunters",
    "Outpost",
    "PreciousLump",
    "PrisonerWillingToJoin",
    "SleepingMechanoids",
    "Turrets",
  ],
  forceExitAndRemoveMapCountdownDurationDays: ["16", "11", "6"],
  increasesPopulation: ["true"],
  handlesWorldObjectTimeoutInspectString: ["true"],
  arrivedLetter: [
    "There are scaria-infected manhunting animals in this area.",
    "There is an enemy outpost in this area.",
    "There are a few sleeping hostile mechanoids in this area.\\n\\nThe mechanoids may or may not wake up when you approach them, so beware.",
    "There are enemy turrets in this area.",
  ],
  arrivedLetterDef: ["NegativeEvent"],
  applyFactionColorToSiteTexture: ["true"],
  showFactionInInspectString: ["true"],
  requiresFaction: ["true"],
  approachOrderString: ["Attack {0}"],
  approachingReportString: ["Attacking {0}"],
  minThreatPoints: ["300", "400", "500"],
  mainPartAllThreatsLabel: ["Hostile activity detected."],
  minFactionTechLevel: ["Industrial"],
  isRoot: ["true"],
  skillLabel: [
    "shooting",
    "melee",
    "construction",
    "mining",
    "cooking",
    "plants",
    "animals",
    "crafting",
    "artistic",
    "medical",
    "social",
    "intellectual",
  ],
  pawnCreatorSummaryVisible: ["true"],
  disablingWorkTags: ["Violent"],
  neverDisabledBasedOnWorkTypes: ["true"],
  usuallyDefinedInBackstories: ["false"],
  sustainLoop: ["False", "false"],
  startDelayRange: ["0.5", "17", "4.94"],
  sustainFadeoutTime: ["1", "0.25", "0.5"],
  sustainSkipFirstAttack: ["False"],
  sustainStartSound: [
    "GeothermalPlant_Ambience_Start",
    "ScannerGroundPenetrating_Start",
    "ScannerLongRangeMineral_Start",
    "Ingest_Beer_Start",
    "Interact_Repair_Start",
    "Smelt_Start",
    "Sculpt_Start",
    "Tailor_Start",
    "Tend_Start",
    "Brewing_Start",
    "Recipe_Drug_Start",
    "Click",
    "Designate_DragBuilding_Start",
    "Designate_DragAreaAdd_Start",
    "Designate_DragAreaDelete_Start",
  ],
  sustainStopSound: [
    "GeothermalPlant_Ambience_Stop",
    "ScannerGroundPenetrating_Stop",
    "ScannerLongRangeMineral_Stop",
    "Recipe_CircularSaw_Off",
    "Finish_Wood",
    "Finish_StoneBlock",
    "Crematorium_Stop",
    "Smelt_Stop",
    "Sculpt_Stop",
    "Tailor_Start",
    "Machining_Stop",
    "Brewing_Stop",
    "Recipe_Drug_Stop",
    "Tunnel_End",
  ],
  maxVoices: ["1", "2", "3", "15", "8"],
  cutoffFrequency: ["50", "2180.26", "10000"],
  lowpassResonaceQ: ["1"],
  inParamName: ["PowerOutput", "TimeSinceDrag", "LerpFactor"],
  defaultValue: ["2000", "1", "0"],
  filterProperty: ["Cutoff"],
  paramUpdateMode: ["Constant"],
  onCamera: ["True"],
  delay: ["1112.654"],
  decayRatio: ["0.5433328"],
  wetMix: ["0.1333435"],
  dryMix: ["1"],
  sustainLoopDurationRange: [
    "2.391304~0.9782609",
    "1~1",
    "0~0",
    "40~80",
    "30~50",
    "36~36",
    "5~5",
  ],
  sustainRelease: ["0.4823529", "0.5314582", "0.5", "5", "20", "10", "2.5"],
  repeatMode: ["NeverTwice", "Any"],
  tempoAffectedByGameSpeed: ["true"],
  gameSpeedRange: ["0~2", "1~2", "3~99"],
  x: [
    "0.001",
    "0.005",
    "0.1",
    "0.001351357",
    "0.06995674",
    "0.2002703",
    "0.08995674",
    "0.2202703",
    "17.08957",
    "24.77761",
    "32.786",
    "45.91975",
    "66.10088",
    "0",
    "28.00688",
    "52.18179",
    "1",
    "11.0473",
    "27.45536",
    "42.48009",
    "1.743164",
    "3.74354",
    "19.08203",
    "22.03683",
    "5",
    "40.93931",
    "60.05113",
    "37.59342",
    "50.79147",
    "64.42703",
    "33.34967",
    "69.43261",
    "0.6926602",
    "2.202203",
    "4.875373",
    "0.3816619",
    "4.838721",
    "13.89854",
    "360",
    "900",
    "2400",
  ],
  y: [
    "5",
    "3",
    "1.2",
    "0.9981133",
    "0.881117",
    "-0.005660377",
    "21001.8",
    "12701.95",
    "7168.717",
    "4270.358",
    "2557.69",
    "0",
    "0.7644969",
    "0.9989628",
    "1",
    "0.9918624",
    "0.2410323",
    "-0.004399121",
    "1.004483",
    "-0.002942368",
    "-0.008623362",
    "0.9950145",
    "0.9981107",
    "-0.001349449",
    "-0.008144975",
    "0.3525248",
    "0.9864293",
    "0.9631265",
    "0.5882397",
    "265.3306",
    "50.08133",
    "-2.766907",
    "0.1522805",
    "0.9683864",
    "1.049647",
    "0.8",
    "1.25",
    "1.5",
    "0.4",
  ],
  subSounds: ["\r\n    "],
  dryLevel: ["0"],
  room: ["-1000", "0"],
  roomHF: ["-6000", "-500", "0"],
  roomLF: ["0"],
  decayTime: ["0.17", "3.92", "1"],
  decayHFRatio: ["0.1", "0.7", "0.5"],
  reflectionsLevel: ["-1204", "-1230", "-10000"],
  reflectionsDelay: ["0"],
  reverbLevel: ["207", "-2", "0"],
  reverbDelay: ["0.002", "0.029", "0.04"],
  hfReference: ["5000"],
  lfReference: ["250"],
  diffusion: ["100"],
  density: ["100"],
  timeType: ["Ticks"],
  pitchType: ["Multiply"],
  displayAllByDefault: ["true", "True"],
  defaultBaseValue: [
    "0",
    "1",
    "5",
    "25",
    "0.45",
    "100",
    "0.96",
    "0.0",
    "1.0",
    "1.00",
    "3.0",
    "0.35",
    "40",
    "75",
    "140",
    "0.8",
    "0.5",
    "30",
    "0.54",
  ],
  hideAtValue: ["0", "1"],
  showIfUndefined: ["false"],
  displayPriorityInCategory: [
    "1005",
    "1004",
    "1003",
    "1002",
    "1001",
    "999",
    "998",
    "997",
    "996",
    "1",
    "2",
    "3",
    "100",
    "99",
    "98",
    "90",
    "89",
    "70",
    "69",
    "60",
    "50",
    "99997",
    "1500",
    "2510",
    "2509",
    "2508",
    "3000",
    "3100",
    "2500",
    "4000",
    "4010",
    "3500",
    "3101",
    "3102",
    "5001",
    "5000",
    "1000",
    "2000",
    "4100",
    "5100",
    "4050",
    "4049",
    "4048",
    "4047",
    "4046",
    "4040",
    "4060",
    "3451",
    "2010",
    "2201",
    "2203",
    "3552",
    "3551",
    "2205",
    "3450",
    "2600",
    "2599",
    "2560",
    "1901",
    "1900",
    "1890",
    "4900",
    "4901",
    "4902",
    "4500",
    "4501",
    "4502",
    "4550",
    "4551",
    "4552",
    "4602",
    "4601",
    "4600",
    "4650",
    "4651",
    "4652",
    "4653",
    "4999",
    "4511",
    "4541",
    "4542",
    "4510",
    "4520",
    "4509",
    "4508",
    "4507",
    "4506",
    "5010",
    "5009",
    "5008",
    "4504",
    "4505",
    "5110",
    "5109",
    "5108",
    "5107",
    "5106",
    "5105",
  ],
  formatString: ["{0} s", "{0}/s", "{0} c", "{0} kg", "{0} / day", "{0} c/s"],
  toStringStyle: [
    "FloatOne",
    "PercentOne",
    "PercentZero",
    "TemperatureOffset",
    "FloatMaxOne",
    "Integer",
    "FloatTwoOrThree",
    "Money",
    "FloatMaxThree",
    "WorkAmount",
    "FloatTwo",
    "Temperature",
    "FloatMaxTwo",
    "PercentTwo",
  ],
  alwaysHide: ["true"],
  maxValue: ["2", "9999", "1000", "0.50", "1", "2000", "0.99", "1.25", "1.5"],
  factorAwful: [
    "0.60",
    "0.8",
    "0.6",
    "0.9",
    "0.84",
    "0.5",
    "2",
    "-0.1",
    "0.76",
    "0.86",
    "0.90",
  ],
  factorPoor: [
    "0.80",
    "0.9",
    "0.8",
    "0.95",
    "0.92",
    "0.75",
    "1.5",
    "0.5",
    "0.88",
    "0.66",
    "1",
  ],
  factorNormal: ["1.00", "1", "0.83"],
  factorGood: [
    "1.15",
    "1.1",
    "1.2",
    "1.05",
    "1.08",
    "1.25",
    "0.8",
    "2",
    "1.12",
    "1.0",
    "1",
  ],
  factorExcellent: [
    "1.30",
    "1.2",
    "1.4",
    "1.1",
    "1.16",
    "1.5",
    "0.6",
    "3",
    "1.24",
    "1.14",
    "1",
  ],
  factorMasterwork: [
    "1.45",
    "1.5",
    "1.7",
    "1.2",
    "1.3",
    "2.5",
    "0.3",
    "5",
    "1.32",
    "1.25",
    "1.4",
    "1.15",
    "1.35",
  ],
  factorLegendary: [
    "1.80",
    "1.8",
    "2.1",
    "1.3",
    "1.5",
    "5",
    "0.1",
    "8",
    "1.7",
    "1.6",
    "1.65",
  ],
  labelForFullStatList: [
    "Armor - Sharp (armor stat)",
    "Armor - Blunt (armor stat)",
    "Armor - Heat (armor stat)",
    "Insulation - Cold (armor stat)",
    "Insulation - Heat (armor stat)",
    "food poison chance (food stat)",
    "shooting accuracy (turrets)",
    "construction speed (material factor)",
    "shooting accuracy (people)",
    "Mortar miss radius multiplier",
    "food poison chance (chance to poison a meal)",
    "Armor - Sharp (material factor)",
    "Armor - Blunt (material factor)",
    "Armor - Heat (material factor)",
    "Insulation - Cold (material factor)",
    "Insulation - Heat (material factor)",
  ],
  stuffPowerStat: [
    "StuffPower_Armor_Sharp",
    "StuffPower_Armor_Blunt",
    "StuffPower_Armor_Heat",
    "StuffPower_Insulation_Cold",
    "StuffPower_Insulation_Heat",
  ],
  multiplierStat: [
    "StuffEffectMultiplierArmor",
    "StuffEffectMultiplierInsulation_Cold",
    "StuffEffectMultiplierInsulation_Heat",
  ],
  showOnPawns: ["false"],
  applyToNegativeValues: ["true"],
  cacheable: ["true"],
  roundValue: ["true"],
  roundToFiveOver: ["200", "300", "100"],
  showNonAbstract: ["true"],
  scenarioRandomizable: ["true"],
  minifiedThingInherits: ["true"],
  showOnUnhaulables: ["false"],
  showOnUntradeables: ["false"],
  maxGainGood: ["500"],
  maxGainExcellent: ["1000"],
  maxGainMasterwork: ["2000"],
  maxGainLegendary: ["3000"],
  useBiologicalYears: ["true"],
  humanlikeOnly: ["true"],
  factorOffsetUnroofed: ["0.5"],
  factorOffsetOutdoors: ["0.5"],
  protectedByEdificeFactor: ["0"],
  multiplier: ["1.5", "3", "0", "4", "2", "multiplier"],
  applyFactorsIfNegative: ["false"],
  toStringStyleUnfinalized: ["FloatOne"],
  formatStringUnfinalized: ["{0} / day"],
  showZeroBaseValue: ["true"],
  valueIfMissing: ["0.8", "0.4"],
  factorIndoors: ["1.00", "1"],
  factorOutdoors: ["0.75", "0.85"],
  roomStat: ["ResearchSpeedFactor", "SurgerySuccessChanceCleanlinessFactor"],
  showOnNonWorkTables: ["false"],
  ignoreIfIncapableOfSight: ["true"],
  ignoreIfPrefersDarkness: ["true"],
  forInformationOnly: ["true"],
  showDevelopmentalStageFilter: ["Child, Adult"],
  neverDisabled: ["true"],
  finalizeEquippedStatOffset: ["false"],
  noSkillOffset: ["4", "0", "8", "20"],
  baseValue: [
    "0",
    "0.2",
    "0.4",
    "0.6",
    "0.82",
    "0.04",
    "0.10",
    "0.3",
    "0.08",
    "0.20",
    "0.75",
  ],
  bonusPerLevel: [
    "1",
    "-0.025",
    "0.09",
    "0.075",
    "0.015",
    "0.0275",
    "0.03",
    "0.05",
    "0.12",
    "0.0875",
    "0.115",
    "0.06",
    "0.10",
    "0.025",
  ],
  weight: [
    "1",
    "0.3",
    "0.95",
    "0.5",
    "1.0",
    "0.9",
    "0.7",
    "0.2",
    "0.8",
    "0.4",
    "0.6",
    "5",
    "10",
    "6",
    "15",
    "20",
    "30",
    "2",
    "0.15",
    "0.05",
    "3",
    "2.5",
    "1.5",
    "4",
    "0",
  ],
  apparelStat: [
    "PsychicSensitivityOffset",
    "Insulation_Cold",
    "Insulation_Heat",
  ],
  includeWeapon: ["true"],
  subtract: ["true"],
  factorUrgentlyHungry: ["0.9"],
  factorStarving: ["0.7"],
  factorTired: ["0.96"],
  factorVeryTired: ["0.92"],
  factorExhausted: ["0.8"],
  stat: ["ImmunityGainSpeedFactor", "WorkSpeedGlobalOffsetMech"],
  showOnNonWildManHumanlikes: ["false"],
  allowedDefect: ["0.05", "0.20"],
  disableIfSkillDisabled: ["Social", "Crafting"],
  showOnPlayerMechanoids: ["true"],
  supressDisabledError: ["true"],
  required: ["false"],
  pointsScaleable: ["true"],
  minRefireDays: [
    "0.17",
    "15",
    "13",
    "90",
    "140",
    "30",
    "8",
    "60",
    "20",
    "1",
    "2",
  ],
  TemperateForest: ["20", "10"],
  BorealForest: ["20", "10"],
  TropicalRainforest: ["20", "10"],
  AridShrubland: ["20", "10"],
  Desert: ["30", "15"],
  Tundra: ["30", "15"],
  TropicalSwamp: ["30", "15"],
  TemperateSwamp: ["30", "15"],
  ColdBog: ["35", "25"],
  ExtremeDesert: ["35", "25"],
  IceSheet: ["40", "35"],
  SeaIce: ["60", "80"],
  worldObjectClass: [
    "CaravansBattlefield",
    "Caravan",
    "Settlement",
    "DestroyedSettlement",
    "EscapeShip",
    "TravelingTransportPods",
    "RoutePlannerWaypoint",
    "Site",
    "PeaceTalks",
    "MapParent",
  ],
  expandingIcon: ["true"],
  expandingIconPriority: ["80", "100", "10", "20", "50", "60", "1000", "70"],
  expandMore: ["true"],
  blockExitGridUntilBattleIsWon: ["true"],
  isTempIncidentMapOwner: ["true"],
  diseaseVictimFractionRange: ["0.2~0.5", "0.3~0.7"],
  diseaseIncident: [
    "Flu",
    "Plague",
    "Malaria",
    "SleepingSickness",
    "FibrousMechanites",
    "SensoryMechanites",
    "GutWorms",
    "MuscleParasites",
    "Animal_Flu",
    "Animal_Plague",
  ],
  requireColonistsPresent: ["true", "True"],
  questScriptDef: ["WandererJoins", "RefugeePodCrash", "EndGame_ShipEscape"],
  pawnKind: ["Villager", "StrangerInBlack", "WildMan"],
  populationEffect: ["IncreaseEasy", "IncreaseMedium", "IncreaseHard"],
  earliestDay: ["60", "2"],
  extremeWeatherIncidentsDisabled: ["true"],
  minGreatestPopulation: ["3"],
  pawnFixedGender: ["Male"],
  pawnMustBeCapableOfViolence: ["true"],
  baseChanceWithRoyalty: ["0.4", "1.9"],
  mechClusterBuilding: ["DefoliatorShipPart", "PsychicDronerShipPart"],
  letterLabelEnemy: ["Raid", "Siege"],
  arrivalTextEnemy: [
    "They are attacking immediately.",
    "They are attacking immediately.\\n\\nWatch out - they appear to be unusually clever with their tactics. They'll avoid your turrets' fields of fire and notice some of your traps.",
    "They will prepare for a while, then attack.\\n\\nPrepare a defense or attack them pre-emptively.",
    "They are attacking immediately.\\n\\nThese raiders intend to breach your walls. They'll determine their own path into your colony and destroy anything in their way.",
    "They are attacking immediately.\\n\\nThese raiders intend to breach your walls. They'll determine their own path into your colony and destroy anything in their way.\\n\\nWatch out - they appear to be unusually clever with their tactics. They'll avoid your turrets' fields of fire and notice some of your traps.",
    "It looks like they want to use sappers to tunnel around your defenses.",
    "It looks like they want to besiege the colony and pound you with mortars from a distance. You can try to wait them out - or go get them.",
  ],
  letterLabelFriendly: ["Friendlies"],
  arrivalTextFriendly: [
    "They are moving in to help you immediately.",
    "They will prepare for a while before moving in to help you.",
    "It looks like they want to use siege tactics to help you.",
  ],
  pawnsCanBringFood: ["True"],
  minPawns: ["2", "4"],
  raidLootValueFactor: ["0"],
  adaptDaysMin: ["-60"],
  adaptDaysMax: ["100"],
  adaptDaysGameStartGraceDays: ["30"],
  fireAfterDaysPassed: ["20", "8", "26"],
  incident: [
    "GiveQuest_EndGame_ShipEscape",
    "WastepackInfestation",
    "RaidFriendly",
    "TraderCaravanArrival",
    "VisitorGroup",
    "TravelerGroup",
    "OrbitalTraderArrival",
    "StrangerInBlackJoin",
  ],
  minColonyWealth: ["150000"],
  minDaysPassed: [
    "0",
    "35",
    "20",
    "4",
    "30",
    "11.0",
    "5",
    "9",
    "3",
    "1",
    "15",
    "13.0",
    "12",
  ],
  refireEveryDays: ["22"],
  baseMtbDaysPerDrill: ["20"],
  skipIfOnExtremeBiome: ["true"],
  minColonistCount: ["3"],
  baseIncidentsPerYear: ["2", "15", "5", "4", "6", "10"],
  minSpacingDays: [
    "30",
    "20",
    "60",
    "1.9",
    "0.04",
    "0.4",
    "6",
    "5",
    "1",
    "3",
    "0.2",
  ],
  minWealth: ["20000"],
  onDays: ["15", "4", "60", "40", "4.6", "1.0", "10", "12", "7", "8.0"],
  offDays: ["15", "26", "0", "6.0", "0.5", "8", "8.0"],
  numIncidentsRange: ["1", "1~2", "0.2~1", "2", "1~1", "1~3"],
  onDaysNoTreeConnectors: ["55"],
  offDaysNoTreeConnectors: ["5"],
  existingMechanitorOrMechlinkMTBFactor: ["4"],
  lastFireMinMTBThreshold: ["0.5"],
  lastFireMaxMTBThreshold: ["2"],
  portraitLarge: [
    "UI/HeroArt/Storytellers/CassandraClassic",
    "UI/HeroArt/Storytellers/PhoebeFriendly",
    "UI/HeroArt/Storytellers/RandyRandom",
  ],
  portraitTiny: [
    "UI/HeroArt/Storytellers/CassandraClassicTiny",
    "UI/HeroArt/Storytellers/PhoebeFriendlyTiny",
    "UI/HeroArt/Storytellers/RandyRandomTiny",
  ],
  forceRaidEnemyBeforeDaysPassed: ["20"],
  allowedThreats: ["Raids"],
  fullAlliesOnly: ["true"],
  minDanger: ["High"],
  applyCaravanVisibility: ["true"],
  maxThreatBigIntervalDays: ["13"],
  minIncChancePopulationIntentFactor: ["0.2"],
  randomPointsFactorRange: ["0.5~1.5"],
  skipThreatBigIfRaidBeacon: ["true"],
  Misc: ["3.5"],
  ThreatBig: ["1.4"],
  OrbitalVisitor: ["1.1"],
  FactionArrival: ["2.4"],
  ThreatSmall: ["0.6"],
  ShipChunkDrop: ["0.22"],
  listVisible: ["false"],
  tutorialMode: ["true"],
  disableAdaptiveTraining: ["true"],
  disableAlerts: ["true"],
  disablePermadeath: ["true"],
  forcedDifficulty: ["Easy"],
  taleClass: [
    "Tale_SinglePawn",
    "Tale_SinglePawnAndDef",
    "Tale_DoublePawn",
    "Tale_DoublePawnKilledBy",
    "Tale_DoublePawnAndTrader",
    "Tale_DoublePawnAndDef",
    "Tale",
    "Tale_SinglePawnAndThing",
  ],
  baseInterest: [
    "10",
    "20",
    "1",
    "50",
    "3.5",
    "4",
    "0.2",
    "2.5",
    "3",
    "0.5",
    "6",
    "16",
    "0.25",
    "5",
    "2",
    "1.0",
    "0.35",
    "0.6",
    "0.9",
    "1.5",
  ],
  defSymbol: [
    "MATERIAL",
    "TRAINABLE",
    "WEAPON",
    "CAPACITY",
    "ILLNESS",
    "OBJECT",
    "SKILL",
    "PROJECT",
  ],
  firstPawnSymbol: [
    "CAPTURER",
    "RECRUITER",
    "HUNTER",
    "SURGEON",
    "EXECUTIONER",
    "KIDNAPPER",
    "TAMER",
    "VICTIM",
    "SELLER",
    "TRAINER",
    "KILLER",
    "BUYER",
    "HUMAN",
    "PURSUER",
    "DUMPER",
    "SPOUSE1",
    "INITIATOR",
    "MOTHER",
    "ATTACKER",
    "ATTENDER",
    "VISITOR",
    "DIGGER",
    "CARRIER",
    "TAKER",
  ],
  secondPawnSymbol: [
    "PRISONER",
    "JOINER",
    "PREY",
    "PATIENT",
    "VICTIM",
    "ANIMAL",
    "KILLER",
    "COLONIST",
    "SELLER",
    "ACCEPTER",
    "REJECTED",
    "SPOUSE2",
    "RESPONDER",
    "CHILD",
    "ORGANIZER",
    "CORPSE",
    "SLEEPER",
    "STRIPPED",
  ],
  ignoreChance: ["0.5"],
  maxPerPawn: ["1"],
  expireDays: ["20", "30", "50", "25", "10"],
  defType: [
    "TrainableDef",
    "PawnCapacityDef",
    "HediffDef",
    "SkillDef",
    "ResearchProjectDef",
  ],
  usableForArt: ["false"],
  historyGraphColor: ["(1,1,1)", "(0.8, 0.45, 0.45)"],
  colonistOnly: ["false"],
  tattooType: ["Face", "Body"],
  layerable: ["true"],
  designationCategory: [
    "Floors",
    "Structure",
    "Furniture",
    "Joy",
    "Misc",
    "Power",
    "Production",
    "Security",
    "Ship",
    "Temperature",
  ],
  fertility: ["0", "1.0", "1", "1.4", "0.7", "0.10", "0.00", "0.0", "2.8"],
  constructEffect: ["ConstructDirt", "ConstructWood", "ConstructMetal"],
  terrainAffordanceNeeded: [
    "Heavy",
    "Bridgeable",
    "Light",
    "Medium",
    "Diggable",
    "ShallowWater",
    "",
  ],
  pollutionOverlayTexturePath: [
    "Terrain/Surfaces/PollutionFloorSmooth",
    "",
    "Terrain/Surfaces/PollutionSoil",
    "Terrain/Surfaces/PollutionMossy",
    "Terrain/Surfaces/PollutionMarsh",
    "Terrain/Surfaces/RoughStonePollutionOverlay",
    "Terrain/Surfaces/PollutionSand",
    "Terrain/Surfaces/PollutionMud",
    "Terrain/Surfaces/PollutionIce",
    "Terrain/Surfaces/MarshPollutionOverlay",
  ],
  pollutionColor: [
    "(1, 1, 1, 0.8)",
    "(1, 1, 1, 1)",
    "(1, 1, 1, 0.43)",
    "(1, 1, 1, 0.15)",
    "(1, 1, 1, 0.25)",
  ],
  pollutionOverlayScale: ["(0.75, 0.75)", "(0.66, 0.66)", "(0.8, 0.8)"],
  pollutedTexturePath: [
    "Terrain/Surfaces/StrawMattingPolluted",
    "Terrain/Surfaces/SoilPolluted",
    "Terrain/Surfaces/MossyPolluted",
    "Terrain/Surfaces/SoilRichPolluted",
    "Terrain/Surfaces/GravelPolluted",
    "Terrain/Surfaces/SandPolluted",
    "Terrain/Surfaces/MudPolluted",
    "Terrain/Surfaces/IcePolluted",
    "Terrain/Surfaces/WaterDeepRampPolluted",
    "Terrain/Surfaces/WaterChestDeepRampPolluted",
    "Terrain/Surfaces/WaterShallowRampPolluted",
    "Terrain/Surfaces/MarshPolluted",
  ],
  pollutionTintColor: ["(1, 1, 1, 1)", "(0.95, 0.95, 0.93, 1)"],
  edgeType: ["Hard", "FadeRough", "Water"],
  renderPrecedence: [
    "240",
    "70",
    "230",
    "250",
    "241",
    "242",
    "243",
    "251",
    "201",
    "220",
    "340",
    "315",
    "337",
    "335",
    "320",
    "350",
    "352",
    "330",
    "370",
    "360",
    "0",
    "400",
    "395",
    "397",
    "399",
    "394",
    "396",
    "398",
    "325",
  ],
  burnedDef: ["BurnedStrawMatting", "BurnedWoodPlankFloor", "BurnedCarpet"],
  Cleanliness: [
    "-0.1",
    "0.2",
    "0.6",
    "-1",
    "-2",
    "-5",
    "-15",
    "-3",
    "-20",
    "-10",
  ],
  WorkToBuild: [
    "120",
    "100",
    "300",
    "85",
    "800",
    "1600",
    "1100",
    "500",
    "1500",
    "600",
    "400",
    "2000",
    "1000",
    "12000",
    "0",
    "50000",
    "2800",
    "180",
    "450",
    "8000",
    "14000",
    "750",
    "3000",
    "3300",
    "250",
    "330",
    "6000",
    "10000",
    "40000",
    "80000",
    "2200",
    "1800",
    "2400",
    "3200",
    "16000",
    "35",
    "200",
    "2500",
    "4000",
    "3500",
    "5000",
    "4500",
    "320",
    "1400",
    "15000",
    "65000",
    "30000",
    "850",
    "135",
    "70",
    "0.9",
    "2.2",
    "0.7",
    "1.9",
    "5.0",
    "140",
    "6.0",
    "5.5",
  ],
  FilthMultiplier: ["0.05"],
  Hay: ["2"],
  designationHotKey: [
    "Misc6",
    "Misc8",
    "Misc9",
    "Misc7",
    "Misc2",
    "Misc3",
    "Misc4",
    "Misc1",
    "Misc5",
    "Misc10",
    "Misc11",
    "Misc12",
  ],
  uiOrder: [
    "2010",
    "2020",
    "2030",
    "2000",
    "2040",
    "2050",
    "2100",
    "2060",
    "2070",
    "2025",
    "2035",
    "2400",
    "2410",
    "2420",
    "2300",
    "2900",
    "2600",
    "2800",
    "2990",
    "2995",
    "2200",
    "2065",
    "2110",
    "2500",
    "2510",
    "2520",
    "2120",
    "2310",
    "2530",
    "2610",
    "2710",
    "2130",
    "2140",
    "0",
    "10",
    "30",
    "40",
    "41",
    "42",
    "43",
    "45",
    "46",
  ],
  isPaintable: ["true"],
  CleaningTimeFactor: ["0.8", "0.6", "2"],
  WoodLog: ["3", "12", "20", "25", "30", "280", "120", "50", "70", "40", "60"],
  designatorDropdown: [
    "Floor_Tile_Metal",
    "Floor_Carpet",
    "Floor_Tile",
    "Floor_Flagstone",
  ],
  constructionSkillPrerequisite: ["3", "6", "8", "4", "5", "7"],
  Silver: ["70", "12"],
  Gold: ["70", "50", "20", "4"],
  Cloth: ["7", "50", "80", "3", "30", "25"],
  renderPrecedenceStart: ["200"],
  BlocksSandstone: ["4", "20"],
  BlocksGranite: ["4", "20"],
  BlocksLimestone: ["4", "20"],
  BlocksSlate: ["4", "20"],
  BlocksMarble: ["4", "20"],
  resourcesFractionWhenDeconstructed: ["0"],
  BeautyOutdoors: ["0", "1", "2", "4", "14", "18", "-6"],
  generatedFilth: ["Filth_Dirt", "Filth_Sand"],
  takeFootprints: ["True", "true"],
  avoidWander: ["false", "true"],
  driesTo: ["Soil", "Sand", "Gravel"],
  pollutionCloudColor: ["(1, 1, 1, 0.66)"],
  uiIconPath: [
    "Terrain/Surfaces/Bridge_MenuIcon",
    "Things/Building/Misc/TorchLamp_MenuIcon",
    "Things/Building/Linked/PowerConduit_MenuIcon",
    "Things/Building/Linked/WaterproofConduit_MenuIcon",
    "Things/Building/Power/WindTurbine/WindTurbine_MenuIcon",
    "Things/Building/Production/Hopper_MenuIcon",
    "Things/Building/Linked/Sandbags_MenuIcon",
    "Things/Building/Linked/Barricade_MenuIcon",
    "Things/Building/Security/TurretMini_MenuIcon",
    "Things/Building/Security/TurretAutocannon_MenuIcon",
    "Things/Building/Security/TurretSniper_MenuIcon",
    "Things/Building/Security/TurretMortar_MenuIcon",
    "Things/Building/Security/TurretFoam_MenuIcon",
    "Things/Building/Security/TurretRocket_MenuIcon",
    "Things/Building/Door/DoorSimple_MenuIcon",
    "Things/Building/Door/Autodoor_MenuIcon",
    "Things/Building/Door/AnimalFlap_MenuIcon",
    "Things/Building/Linked/WallSmooth_MenuIcon",
    "Things/Building/Linked/Fence_MenuIcon",
    "Things/Building/Door/FenceGate_MenuIcon",
    "Things/Building/Misc/Campfire_MenuIcon",
  ],
  bridge: ["true"],
  autoRebuildable: ["true"],
  destroyOnBombDamageThreshold: ["35"],
  destroyBuildingsOnDestroyed: ["true"],
  destroyEffect: ["Bridge_Collapse"],
  destroyEffectWater: ["Bridge_CollapseWater"],
  holdSnow: ["false"],
  takeSplashes: ["true"],
  extinguishesFire: ["true"],
  extraDeteriorationFactor: ["3"],
  traversedThought: ["SoakingWet"],
  extraNonDraftedPerceivedPathCost: ["180"],
  extraDraftedPerceivedPathCost: ["18"],
  waterDepthShader: ["Map/WaterDepth"],
  passability: ["Impassable", "PassThroughOnly", "Standable"],
  changeable: ["false"],
  _UseWaterOffset: ["1"],
  pollutionOverlayScrollSpeed: ["0.007"],
  parent: [
    "Root",
    "Foods",
    "FoodRaw",
    "AnimalProductRaw",
    "Manufactured",
    "Textiles",
    "ResourcesRaw",
    "Items",
    "Neurotrainers",
    "BodyParts",
    "Weapons",
    "WeaponsRanged",
    "Apparel",
    "ApparelArmor",
    "ApparelNoble",
    "Buildings",
    "Chunks",
    "Plants",
    "Corpses",
    "CorpsesAnimal",
  ],
  resourceReadoutRoot: ["true"],
  castEdgeShadows: ["true", "True", "false"],
  staticSunShadowHeight: [
    "0.2",
    "0.17",
    "0.20",
    "0",
    "0.5",
    "0.35",
    "0.3",
    "1.0",
  ],
  startingHpRange: ["0.5~1.3"],
  pathCostIgnoreRepeat: ["true", "false"],
  fillPercent: [
    "0.5",
    "0.25",
    "0.40",
    "0.20",
    "0.35",
    "1",
    "0.50",
    "1.0",
    "0.4",
    "0.15",
    "0.3",
    "0.30",
    "0.2",
    "0.45",
    "0.55",
  ],
  canOverlapZones: ["false", "true"],
  isInert: ["true"],
  ai_chillDestination: ["false"],
  repairEffect: ["ConstructDirt", "Repair", "ConstructMetal"],
  blockWind: ["true", "false"],
  minifiedDef: ["MinifiedThing", "", "MinifiedTree"],
  costStuffCount: [
    "20",
    "50",
    "100",
    "400",
    "45",
    "85",
    "40",
    "25",
    "110",
    "30",
    "28",
    "95",
    "10",
    "35",
    "70",
    "80",
    "60",
    "125",
    "250",
    "75",
    "150",
    "5",
    "1",
    "170",
  ],
  rect: [
    "(0.3,0,0.3,0.9)",
    "(0.5, 0.1, 5, 2.8)",
    "(0.1,0.1,1.8,1.8)",
    "(0,0.05,1,1.95)",
    "(0,0.05,2,1.95)",
    "(0.05,0.05,0.9,0.9)",
    "(0.2,0.2,0.6,0.6)",
    "(0.35,0.35,0.3,0.3)",
    "(0.3,0.3,0.4,0.4)",
    "(0.09375,0.296875,0.796875,0.703125)",
    "(0,0,1,1)",
    "(0,0,3,1.8)",
    "(0.1,0.1,1.9,1.9)",
    "(0.1,0.1,2.9,2.9)",
    "(0.25,0.6,0.5,0.2)",
    "(0,0.35,1,0.3)",
    "(2,0.15,1,1.4)",
    "(0,0.6,4,2.8)",
    "(0.3,0,5.4,6)",
    "(0.3,0,2.7,1)",
    "(0.3,0.1,2.4,1.8)",
    "(0.05,0.1,0.9,0.9)",
    "(0.02,0.25,2.96,2.85)",
    "(0,0,1,0.15)",
    "(0.1,0,0.8,0.3)",
    "(0.38,0.2,0.56375,0.8)",
    "(0,0.75,1.0,0.5)",
    "(0.35,0.1,0.3,0.7)",
    "(0.2,0,0.6,0.1)",
    "(0.234375,0,0.515625,0.984375)",
  ],
  containedPawnsSelectable: ["true"],
  deconstructible: ["false"],
  hasInteractionCell: ["false", "true", "True"],
  leaveResourcesWhenKilled: ["false", "true", "True"],
  soundImpactDefault: [
    "BulletImpact_Metal",
    "BulletImpact_Ground",
    "BulletImpact_Flesh",
  ],
  glowRadius: ["5.5", "10", "12", "14", "6", "5", "3", "5.9"],
  glowColor: [
    "(71,43,6,0)",
    "(184,136,83,0)",
    "(214,148,94,0)",
    "(370,370,370,0)",
    "(113,141,117,0)",
    "(217,112,33,0)",
    "(80,112,180,0)",
    "(73,123,138,0)",
    "(227,233,168,0)",
    "(252,187,113,0)",
    "(255,150,100,0)",
    "(10,50,64,0)",
    "(23,15,30,0)",
    "(5,5,25,0)",
  ],
  SellPriceFactor: ["1.10", "0.70", "0.20"],
  MeditationFocusStrength: ["0.0", "0.06", "0.10", "0.15", "0.18", "0.22"],
  descriptionMaker: [
    "ArtDescription_Sculpture",
    "ArtDescription_Furniture",
    "ArtDescription_SarcophagusPlate",
    "ArtDescription_WeaponGun",
    "ArtDescription_WeaponMelee",
  ],
  canBeEnjoyedAsArt: ["true"],
  maxBuildings: ["8", "4"],
  explanationKey: [
    "MeditationFocusPerSculpture",
    "MeditationFocusPerFlame",
    "MeditationFocusPerGrave",
  ],
  explanationKeyAbstract: [
    "MeditationFocusPerSculptureAbstract",
    "MeditationFocusPerFlameAbstract",
    "MeditationFocusPerGraveAbstract",
  ],
  spectateDistance: ["2", "1"],
  allowedSpectateSides: ["Down", "Vertical"],
  size: [
    "(2,2)",
    "(6,3)",
    "(5,3)",
    "(1,2)",
    "(1,1)",
    "(2,4)",
    "(3,3)",
    "(2,1)",
    "(2,3)",
    "(3,1)",
    "(3,2)",
    "(3, 3)",
    "(7,2)",
    "(4,4)",
    "(6,6)",
    "(5,6)",
    "(5,2)",
    "(1,4)",
    "(3,4)",
    "(2,6)",
    "(6,7)",
    "(1, 2)",
    "(2, 2)",
    "(0.04, 0.77)",
    "(6, 3)",
  ],
  drawDamagedOverlay: ["false"],
  forceDebugSpawnable: ["true"],
  expandHomeArea: ["false"],
  repairable: ["false"],
  artificialForMeditationPurposes: ["false"],
  receivesSignals: ["true"],
  neverMultiSelect: ["true", "false", "True"],
  ChunkSlagSteel: ["4", "2", "1"],
  damageDef: [
    "Flame",
    "Deterioration",
    "Thump",
    "Bullet",
    "Extinguish",
    "Bomb",
    "EMP",
    "Smoke",
    "BombSuper",
    "Arrow",
    "RangedStab",
    "ArrowHighVelocity",
  ],
  roofCollapseDamageMultiplier: ["0.2"],
  destroySound: [
    "BuildingDestroyed_Metal_Big",
    "BuildingDestroyed_Soft_Medium",
    "BuildingDestroyed_Soft_Small",
    "BuildingDestroyed_Metal_Small",
    "BuildingDestroyed_Metal_Medium",
    "ChunkRock_Drop",
    "BuildingDestroyed_Wood_Big",
    "BuildingDestroyed_Wood_Small",
  ],
  conditionDef: ["PsychicDroner"],
  worldRange: ["1"],
  droneLevelIncreaseInterval: ["150000"],
  droneLevel: ["2"],
  soundAmbient: [
    "CrashedShipPart_Ambience",
    "ShuttleIdle_Ambience",
    "GeothermalPlant_Ambience",
    "MortarRound_Ambient",
  ],
  drawPlaceWorkersWhileSelected: ["true", "True"],
  cellsToPollutePerDay: ["6"],
  alwaysDeconstructible: ["true"],
  Uranium: ["50", "5", "3", "60", "14", "70", "20", "10"],
  preventSkyfallersLandingOn: ["true"],
  uiIconScale: [
    "1.4",
    "0.90",
    "0.80",
    "0.75",
    "0.9",
    "0.8",
    "0.85",
    "0.5",
    "0.65",
    "0.7",
    "1.2",
    "1.1",
    "0.95",
    "1.25",
    "1.15",
    "1.3",
    "1.6",
    "1.5",
    "1.35",
    "2",
    "1.75",
    "2.25",
  ],
  massCapacity: ["1000"],
  max1PerGroup: ["true"],
  canChangeAssignedThingsAfterStarting: ["true"],
  showOverallStats: ["false"],
  pawnLoadedSound: ["Shuttle_PawnLoaded"],
  pawnExitSound: ["Shuttle_PawnExit"],
  minQualityForArtistic: ["Excellent", "Awful"],
  Comfort: [
    "0.4",
    "0.75",
    "0.90",
    "0.80",
    "0.68",
    "0.60",
    "0.5",
    "0.70",
    "0.8",
    "0.05",
  ],
  SurgerySuccessChanceFactor: [
    "0.7",
    "1",
    "1.1",
    "0.05",
    "Success rate multiplier",
  ],
  scatterableOnMapGen: ["false"],
  defaultPlacingRot: ["South", "East"],
  bed_showSleeperBody: ["True", "False", "false", "true"],
  sowTag: ["SupportPlantsOnly", "Decorative", "Hydroponic"],
  canPlaceOverImpassablePlant: ["false"],
  wakeDormantPawnsOnConstruction: ["false"],
  drawAssignmentOverlay: ["false"],
  ImmunityGainSpeedFactor: ["1.07", "1.11", "1.05", "0.02"],
  bed_healPerDay: ["4", "10"],
  BedRestEffectiveness: ["1", "1.05", "0.95", "0.93", "0.9"],
  MedicalTendQualityOffset: ["0.10", "0.07"],
  bed_defaultMedical: ["true"],
  buildingSizeCategory: ["Small", "Medium"],
  bed_caravansCanUse: ["true"],
  destroyShakeAmount: ["0"],
  bed_humanlike: ["false"],
  cornerTL: ["Damage/Corner"],
  cornerTR: ["Damage/Corner"],
  cornerBL: ["Damage/Corner"],
  cornerBR: ["Damage/Corner"],
  bed_maxBodySize: ["0.55"],
  rectN: [
    "(0.125,0.296875,0.734375,0.421875)",
    "(0.25,0.234375,0.5,0.28125)",
    "(0,0,1,0.703125)",
    "(0.078125,0.46875,0.859375,0.53125)",
    "(0.1,1.2,4.75,3.25)",
  ],
  rectS: [
    "(0.125,0.296875,0.734375,0.421875)",
    "(0.25,0.234375,0.5,0.28125)",
    "(0.09375,0,0.84375,1)",
    "(0.078125,0.46875,0.859375,0.53125)",
    "(0.2,1.2,4.7,3.25)",
  ],
  rectE: [
    "(0.234375,0.296875,0.5,0.546875)",
    "(0.28125,0.25,0.453125,0.25)",
    "(0,0,0.84375,0.625)",
    "(0.125,0.46875,0.625,0.296875)",
    "(1.25,0.2,3.5,4.7)",
  ],
  rectW: [
    "(0.234375,0.296875,0.5,0.546875)",
    "(0.28125,0.25,0.453125,0.25)",
    "(0.15625,0,0.84375,0.625)",
    "(0.25,0.46875,0.625,0.296875)",
    "(1.25,0.2,3.5,4.7)",
  ],
  isSittable: ["true"],
  uiIconOffset: [
    "(0, -0.05)",
    "(0, 0.03)",
    "(0, 0.04)",
    "(0, 0.02)",
    "(0,-0.14)",
  ],
  surfaceType: ["Eat", "Item"],
  mustBePlacedAdjacentCardinalToBedHead: ["true"],
  defaultPlantToGrow: ["Plant_Daylily", "Plant_Rice"],
  drawRotated: ["false"],
  fuelConsumptionRate: ["2.0", "22.0", "4.5", "80.0", "160.0", "10.0"],
  fuelCapacity: [
    "20.0",
    "150.0",
    "75.0",
    "30.0",
    "50.0",
    "60",
    "90",
    "30",
    "20",
    "10",
    "12",
  ],
  fuelConsumptionPerTickInRain: ["0.0006"],
  initialFuelPercent: ["1"],
  showAllowAutoRefuelToggle: ["true"],
  heatPerSecond: ["3.5", "3", "6", "4", "9", "12", "21", "-11"],
  heatPushMaxTemperature: ["23", "38", "28"],
  fireSize: ["0.4", "1"],
  offsetPerBuilding: ["0.01", "0.02"],
  basePowerConsumption: [
    "30",
    "2900",
    "200",
    "330",
    "450",
    "40",
    "150",
    "700",
    "80",
    "-1000",
    "-2300",
    "-1",
    "-3600",
    "-1100",
    "120",
    "210",
    "350",
    "170",
    "250",
    "70",
    "300",
    "50",
    "175",
  ],
  researchProject: ["ColoredLights", "MultiAnalyzer"],
  colorPickerEnabled: ["true"],
  darklightToggle: ["true"],
  overlightRadius: ["7.0"],
  shortCircuitInRain: ["true"],
  startTime: ["0.25"],
  endTime: ["0.8"],
  offMessage: ["Off for plant resting period"],
  specialDisplayRadius: [
    "5.8",
    "9.9",
    "6.9",
    "2.6",
    "3.9",
    "10.9",
    "8.6",
    "14.9",
  ],
  preventDeteriorationOnTop: ["true"],
  ignoreStoredThingsBeauty: ["true"],
  maxItemsInCell: ["3"],
  storageGroupTag: ["Shelf", "Hopper"],
  blueprintClass: ["Blueprint_Storage", "Blueprint_Door"],
  disallowNotEverStorable: ["true"],
  maxDistance: ["6"],
  minTechLevelToBuild: ["Medieval"],
  JoyGainFactor: ["1", "0.8", "1.3", "1.2", "1.4", "1.6"],
  watchBuildingStandDistanceRange: ["5~5", "2~4", "2~6", "2~7"],
  watchBuildingStandRectWidth: ["3", "5", "6", "7"],
  watchBuildingInSameRoom: ["true"],
  maxTechLevelToBuild: ["Neolithic"],
  spawnedConceptLearnOpportunity: ["TVForSickPeople", "BillsTab"],
  boughtConceptLearnOpportunity: ["TVForSickPeople"],
  effectWatching: ["WatchingTelevision"],
  canBeUsedUnderRoof: ["false"],
  interactionCellOffset: [
    "(0,0,1)",
    "(0,0,2)",
    "(1,0,0)",
    "(0,0,-1)",
    "(0,0,3)",
  ],
  isMechClusterThreat: ["true", "false"],
  clearBuildingArea: ["false"],
  isEdifice: ["false"],
  wickTicks: ["999", "70~150", "15", "240", "0", "30~60", "60~120"],
  explosiveRadius: [
    "3.9",
    "9.9",
    "2.66",
    "0",
    "10.9",
    "8.6",
    "14.9",
    "5.9",
    "4.9",
    "6.9",
    "8",
    "1.1",
    "2.9",
    "11.9",
    "11",
    "7.8",
  ],
  explosiveDamageType: [
    "Bomb",
    "Extinguish",
    "Flame",
    "EMP",
    "Smoke",
    "BombSuper",
  ],
  explodeOnKilled: ["true"],
  startWickHitPointsPercent: ["0.15", "-1", "0.333", "0.2", "0.7", "0"],
  drawWick: ["false"],
  damage: ["1", "damage"],
  ticksBetweenDamage: ["60"],
  minHitPointsPercent: ["9999", "0.1666"],
  effecterDef: [
    "Power_Cell_Burning",
    "Power_Cell_Sparks",
    "CommsConsoleBossgroupSummoned",
  ],
  minCountToEmpty: ["20"],
  drawStackLabel: ["true"],
  useDuration: ["900", "600", "0"],
  floatMenuOptionPriority: ["SummonThreat"],
  floatMenuFactionIcon: ["Mechanoid"],
  ignoreOtherReservations: ["true"],
  bossgroupDef: ["Diabolus"],
  spawnLetterLabelKey: ["LetterLabelCommsConsoleSpawned"],
  spawnLetterTextKey: ["LetterCommsConsoleSpawned"],
  postExplosionSpawnThingDef: ["Filth_FireFoam"],
  postExplosionSpawnChance: ["1"],
  postExplosionSpawnThingCount: ["1", "3"],
  applyDamageToExplosionCellsNeighbors: ["true"],
  explosionEffect: ["ExtinguisherExplosion", "GiantExplosion"],
  explosionSound: [
    "Explosion_FirefoamPopper",
    "Explosion_GiantBomb",
    "Explosion_FirefoamPopPack",
  ],
  target: ["Fire"],
  daysToRadius: ["60"],
  scanSpeedStat: ["ResearchSpeed"],
  scanFindMtbDays: ["3", "4"],
  scanFindGuaranteedDays: ["6", "8"],
  interactionCellIcon: ["DiningChair"],
  interactionCellIconReverse: ["true"],
  hasFuelingPort: ["true"],
  targetFuelLevelConfigurable: ["true"],
  initialConfigurableTargetFuelLevel: ["75"],
  consumeFuelOnlyWhenUsed: ["true"],
  autoRefuelPercent: ["1", "0.5", "0", "0.25"],
  showFuelGizmo: ["true"],
  drawOutOfFuelOverlay: ["false"],
  drawFuelGaugeInMap: ["true"],
  restEffectiveness: ["0.8"],
  skyfallerLeaving: ["DropPodLeaving"],
  ResearchSpeedFactor: ["0.1", "0.75", "1.0"],
  mustBePlacedAdjacent: ["true"],
  WorkTableWorkSpeedFactor: ["0.06", "0.5"],
  preventDeteriorationInside: ["true"],
  haulToContainerDuration: ["500"],
  focusPerFullGrave: ["0.01"],
  mustBeFullGrave: ["true"],
  ai_neverTrashThis: ["true"],
  offsetMin: ["(-0.6,0,0.3)"],
  offsetMax: ["(0.6,0,0.5)"],
  emissionInterval: ["100", "350"],
  velocityX: ["0.3~0.7"],
  velocityY: ["0.7~1.0"],
  linkType: ["CornerFiller", "None", "Transmitter", "Basic", "Asymmetric"],
  coversFloor: ["true"],
  saveCompressible: ["true", "false"],
  holdsRoof: ["true", "false"],
  blockLight: ["true"],
  mineable: ["true"],
  isNaturalRock: ["true", "false"],
  canBuildNonEdificesUnder: ["false", "true"],
  colorTwo: [
    "(155,133,107)",
    "(147,144,134)",
    "(187,173,25)",
    "(70,70,70)",
    "(134,166,166)",
    "(30,173,25)",
  ],
  isResourceRock: ["true"],
  mineableThing: [
    "Steel",
    "Silver",
    "Gold",
    "Uranium",
    "Plasteel",
    "Jade",
    "ComponentIndustrial",
    "ChunkSandstone",
    "ChunkGranite",
    "ChunkLimestone",
    "ChunkSlate",
    "ChunkMarble",
  ],
  mineableYield: ["40", "2"],
  mineableScatterCommonality: [
    "1",
    "0.10",
    "0.07",
    "0.12",
    "0.05",
    "0.065",
    "1.00",
  ],
  mineableScatterLumpSizeRange: ["30~40", "4~12", "2~8", "6~12", "3~6"],
  destroyable: ["false"],
  neverOverlapFloors: ["true"],
  blockPlants: ["true"],
  alwaysShowRelatedBuildCommands: ["true"],
  InsectJelly: ["30"],
  startsDormant: ["true"],
  canWakeUpFogged: ["false"],
  lordJob: ["LordJob_DefendAndExpandHive"],
  spawnSound: ["Hive_Spawn"],
  initialPawnsPoints: ["200"],
  maxSpawnedPawnsPoints: ["500"],
  ticksPerHeal: ["6000"],
  thingToSpawn: ["InsectJelly", "GlowPod", "Chemfuel"],
  spawnCount: ["20", "1", "75"],
  spawnIntervalRange: ["26000~30000", "30000~60000"],
  spawnMaxAdjacent: ["40", "1"],
  spawnForbidden: ["true"],
  saveKeysPrefix: ["jelly", "pod"],
  inheritFaction: ["true"],
  filthDef: ["Filth_Slime"],
  spawnCountOnSpawn: ["10"],
  spawnMtbHours: ["4"],
  spawnRadius: ["5"],
  ticksHealthy: ["60000"],
  ticksNeedsMaintenance: ["60000"],
  damagePerTickRare: ["10"],
  lifespanTicks: ["1200000", "10000"],
  expireEffect: ["RaisedRock_Collapse"],
  placingDraggableDimensions: ["1", "0"],
  transmitsPower: ["true"],
  allowWireConnection: ["false"],
  soundAmbientProducingPower: [
    "WoodFiredGenerator_Ambience",
    "ChemfuelFiredGenerator_Ambience",
    "WaterMill_Ambience",
  ],
  explosiveExpandPerFuel: ["0.95", "1.25"],
  destroyThingOnExplosionSize: ["2", "9999"],
  preExplosionSpawnThingDef: ["Filth_Fuel"],
  preExplosionSpawnChance: ["1", "0.25", "0.6", "0.27"],
  allowAutoroof: ["false"],
  storedEnergyMax: ["600"],
  efficiency: ["0.5"],
  WorkTableEfficiencyFactor: ["0.7"],
  unpoweredWorkTableWorkSpeedFactor: ["0.5"],
  isMealSource: ["true"],
  heatPerTickWhileWorking: ["0.10", "0.32"],
  forceShowRoomStats: ["true"],
  minSafeTemperature: ["-1", "0"],
  maxSafeTemperature: ["32", "50"],
  progressPerDegreePerTick: ["0.00001", "0.00003"],
  uninstallWork: ["1800"],
  wantsHopperAdjacent: ["true"],
  nutritionCostPerDispense: ["0.3"],
  soundDispense: ["DispensePaste"],
  isHopper: ["true"],
  isFence: ["true"],
  isPlaceOverableWall: ["true"],
  useStuffTerrainAffordance: ["true"],
  stealable: ["false"],
  TrapMeleeDamage: ["100"],
  TrapSpringChance: ["1.0"],
  isTrap: ["true"],
  trapDestroyOnSpring: ["true"],
  trapDamageCategory: ["Sharp"],
  trapPeacefulWildAnimalsSpringChanceFactor: ["0.25"],
  Shell_HighExplosive: ["2"],
  Shell_Incendiary: ["2"],
  Shell_EMP: ["2"],
  Shell_Smoke: ["2"],
  postExplosionGasType: ["BlindSmoke"],
  Shell_Firefoam: ["2"],
  Shell_AntigrainWarhead: ["1"],
  chanceToStartFire: ["0.22"],
  damageFalloff: ["true"],
  destroyOnDrop: ["True", "true"],
  canGenerateDefaultDesignator: ["false"],
  manWorkType: ["Violent"],
  turretBurstWarmupTime: ["4.0", "0"],
  turretBurstCooldownTime: ["28.0", "4.8", "3.5", "3.2", "0.1"],
  ShootingAccuracyTurret: ["0.96", "0.98", "1"],
  chanceNeverExplodeFromDamage: ["0.5", "1", "0.8"],
  fuelLabel: [
    "Shots until barrel change",
    "Shots until rearm",
    "Foam",
    "Rockets",
  ],
  fuelGizmoLabel: ["Barrel durability", "Uranium slugs", "Foam", "Rockets"],
  outOfFuelMessage: [
    "Needs new barrel",
    "No slugs",
    "Needs new reinforced barrel",
    "Out of foam",
    "Missing rockets",
  ],
  fuelMultiplier: ["0.75", "0.5", "20", "0.14", "0.06667"],
  minimumFueledThreshold: ["1", "12"],
  factorByDifficulty: ["true", "false"],
  fuelIconPath: [
    "UI/Overlays/Barrel",
    "Things/Item/Resource/ReinforcedBarrel/ReinforcedBarrel",
    "Things/Item/Resource/Chemfuel",
  ],
  hasTooltip: ["true"],
  ai_combatDangerous: ["true", "false"],
  turretGunDef: [
    "Gun_MiniTurret",
    "Gun_AutocannonTurret",
    "Gun_TurretSniper",
    "Artillery_Mortar",
    "Gun_TurretFoam",
    "Gun_RocketswarmLauncher",
  ],
  damageAmountBase: [
    "12",
    "27",
    "55",
    "9999",
    "24",
    "10",
    "6",
    "18",
    "11",
    "25",
    "15",
    "14",
    "17",
    "30",
    "9",
  ],
  AccuracyTouch: [
    "0.77",
    "0.28",
    "0.22",
    "1",
    "0.80",
    "0.90",
    "0.65",
    "0.57",
    "0.85",
    "0.40",
    "0.60",
    "0.50",
    "0.15",
    "0.18",
    "0.75",
    "0.70",
    "0.55",
  ],
  AccuracyShort: [
    "0.70",
    "0.72",
    "0.33",
    "1",
    "0.75",
    "0.65",
    "0.80",
    "0.87",
    "0.64",
    "0.48",
    "0.25",
    "0.26",
    "0.71",
    "0.78",
    "0.85",
  ],
  AccuracyMedium: [
    "0.45",
    "0.66",
    "0.44",
    "1",
    "0.40",
    "0.35",
    "0.90",
    "0.77",
    "0.55",
    "0.65",
    "0.86",
    "0.25",
    "0.26",
    "0.50",
    "0.75",
    "0.85",
  ],
  AccuracyLong: [
    "0.24",
    "0.5",
    "0.95",
    "1",
    "0.35",
    "0.30",
    "0.15",
    "0.80",
    "0.64",
    "0.45",
    "0.20",
    "0.26",
    "0.55",
    "0.88",
    "0.18",
    "0.85",
    "0.25",
    "0.32",
    "0.50",
    "0.75",
  ],
  RangedWeapon_Cooldown: [
    "4.8",
    "3.5",
    "3.2",
    "0.1",
    "1.6",
    "1",
    "0.9",
    "4.5",
    "1.5",
    "1.25",
    "1.35",
    "1.65",
    "1.8",
    "1.70",
    "2.3",
    "2.66",
    "7.4",
    "8.4",
    "2.1",
    "4",
    "2.00",
    "2.7",
  ],
  defaultProjectile: [
    "Bullet_MiniTurret",
    "Bullet_AutocannonTurret",
    "Bullet_TurretSniper",
    "Proj_Foam",
    "Proj_Rocket",
    "Bullet_Revolver",
    "Bullet_Autopistol",
    "Bullet_MachinePistol",
    "Bullet_IncendiaryLauncher",
    "Bullet_SmokeLauncher",
    "Bullet_EMPLauncher",
    "Bullet_BoltActionRifle",
    "Bullet_Shotgun",
    "Bullet_HeavySMG",
    "Bullet_LMG",
    "Bullet_AssaultRifle",
    "Bullet_SniperRifle",
    "Bullet_Minigun",
    "Bullet_Rocket",
    "Bullet_DoomsdayRocket",
    "Proj_GrenadeFrag",
    "Proj_GrenadeMolotov",
    "Proj_GrenadeEMP",
    "Bullet_ChargeBlasterHeavy",
    "Bullet_InfernoCannon",
    "Bullet_NeedleGun",
    "Arrow_Short",
    "Pilum_Thrown",
    "Arrow_Recurve",
    "Arrow_Great",
    "Bullet_ChargeRifle",
    "Bullet_ChargeLance",
    "Bullet_ThumpCannon",
  ],
  ticksBetweenBurstShots: ["8", "17", "2", "10", "7", "11", "5", "20", "12"],
  burstShotCount: ["2", "3", "1", "41", "12", "6", "25", "24"],
  soundCast: [
    "GunShotA",
    "Shot_Autocannon",
    "Shot_TurretSniper",
    "Mortar_LaunchA",
    "RocketswarmLauncher_Fire",
    "PsychicShockLanceCast",
    "PsychicInsanityLanceCast",
    "Shot_Revolver",
    "Shot_Autopistol",
    "Shot_MachinePistol",
    "Shot_IncendiaryLauncher",
    "Shot_BoltActionRifle",
    "Shot_Shotgun",
    "Shot_HeavySMG",
    "Shot_Minigun",
    "Shot_AssaultRifle",
    "Shot_SniperRifle",
    "InfernoCannon_Fire",
    "ThrowGrenade",
    "ThrowMolotovCocktail",
    "Shot_ChargeBlaster",
    "Shot_NeedleGun",
    "Bow_Small",
    "Interact_BeatFire",
    "Bow_Recurve",
    "Bow_Large",
    "Shot_ChargeRifle",
    "ChargeLance_Fire",
    "OrbitalTargeter_Fire",
    "ThumpCannon_Fire",
  ],
  soundCastTail: ["GunTail_Light", "GunTail_Heavy", "GunTail_Medium"],
  muzzleFlashScale: ["9", "12", "18", "16", "14"],
  consumeFuelPerShot: ["1"],
  turretTopDrawSize: ["2.7", "1.8", "2.2"],
  turretTopOffset: ["(0, 0.05)"],
  minRange: ["8.9", "11.9", "29.9"],
  fuelIsMortarBarrel: ["true"],
  initialAllowAutoRefuel: ["true"],
  difficultyVar: ["classicMortars"],
  ReinforcedBarrel: ["1"],
  recoilPower: ["3"],
  forceNormalTimeSpeed: ["false"],
  forcedMissRadius: ["9", "5.75", "1.9", "2.9", "3.5"],
  forcedMissRadiusClassicMortars: ["13"],
  isMortar: ["true"],
  canTargetLocations: ["true"],
  activeTicks: ["60", "1"],
  cooldownTicks: ["3600", "7500"],
  onCooldownString: ["repressurizing", "cooling off"],
  cooldownFleck: ["FlashRed"],
  cooldownFleckSpawnIntervalTicks: ["60"],
  cooldownFleckScale: ["0.7"],
  activateTexPath: ["UI/Commands/ActivateTurret"],
  soundActivate: ["FoamTurret_Activate"],
  canTargetMechs: ["false"],
  onlyTargetControlledPawns: ["true"],
  playTargetAcquiredSound: ["false"],
  arcHeightFactor: ["0.4", "0.2", "2"],
  armorPenetrationBase: ["0.8", "0.14", "0.35", "0.10", "0.15"],
  stoppingPower: ["1", "1.5", "3", "2.5"],
  shadowSize: [
    "0",
    "(2, 2)",
    "(2.5, 2.5)",
    "(7, 3.5)",
    "(3, 3)",
    "(5.5,3.5)",
    "0.6",
    "0.4",
  ],
  filthCount: ["1"],
  landedEffecter: ["ExtinguisherPuffSmall"],
  numExtraHitCells: ["4"],
  soundImpact: ["Foam_Impact"],
  consumeFuelPerBurst: ["1"],
  sprayWidth: ["5.5"],
  sprayArching: ["1.5"],
  sprayThicknessCells: ["4"],
  sprayNumExtraCells: ["40"],
  sprayEffecterDef: ["FoamSpray_Directional"],
  ticksToActivate: ["60"],
  cooldownPreventsRefuel: ["true"],
  explosionRadius: [
    "2.9",
    "8.9",
    "7.2",
    "5",
    "14.9",
    "2",
    "4",
    "3",
    "1.1",
    "2.4",
    "3.9",
    "7.8",
    "1.9",
    "3.5",
  ],
  soundExplode: [
    "Explosion_Rocket",
    "MortarBomb_Explode",
    "MortarIncendiary_Explode",
    "Explosion_EMP",
    "Explosion_Smoke",
    "Explosion_GiantBomb",
    "ThumpCannon_Impact",
  ],
  forcedMissEvenDispersal: ["true"],
  canTargetPawns: ["false"],
  shipPart: ["true"],
  isPlayerEjectable: ["true"],
  AIPersonaCore: ["1"],
  incidentTargetWhileStarting: ["Map_RaidBeacon"],
  sustainerActive: ["ShipReactor_Ambience"],
  mote: ["Mote_PsychicEmanatorEffect"],
  requiresPower: ["true"],
  writeTimeLeftToSpawn: ["true"],
  showMessageIfOwned: ["true"],
  canPlaceOverWall: ["true"],
  soundDoorOpenPowered: ["Door_OpenPowered"],
  soundDoorClosePowered: ["Door_ClosePowered"],
  soundDoorOpenManual: ["Door_OpenManual", "Door_FenceGateManual"],
  soundDoorCloseManual: ["Door_CloseManual", "Door_FenceGateManual"],
  allowNonPlayer: ["true"],
  enabled: ["false"],
  roamerCanOpen: ["true"],
  edgeTop: ["Damage/Edge"],
  edgeBot: ["Damage/Edge"],
  edgeLeft: ["Damage/Edge"],
  edgeRight: ["Damage/Edge"],
  appearance: ["Planks", "Bricks", "Metal"],
  linkToDoors: ["true"],
  DoorOpenSpeed: ["1.15", "1.2", "0.75", "0.45"],
  allowFlip: ["false"],
  heatPushMinTemperature: ["17"],
  energyPerSecond: ["21", "-21"],
  commandTexture: ["UI/Commands/Vent"],
  commandLabelKey: ["CommandDesignateOpenCloseVentLabel"],
  commandDescKey: ["CommandDesignateOpenCloseVentDesc"],
  tradeNeverStack: ["true"],
  relicChance: ["3", "2", "1", "0"],
  psychicSensitiveTargetsOnly: ["true"],
  doCameraShake: ["true"],
  fleckOnTarget: ["PsycastPsychicEffect"],
  fleckOnUsed: ["PsycastAreaEffect"],
  fleckOnUsedScale: ["10"],
  ignorePlayerFactionPawns: ["True"],
  goodwillImpact: ["-200"],
  soundInteract: [
    "Metal_Drop",
    "Standard_Drop",
    "Grain_Drop",
    "Silver_Drop",
    "Wood_Drop",
    "ChunkRock_Drop",
    "Stone_Drop",
    "Interact_Revolver",
    "Interact_Autopistol",
    "Interact_SMG",
    "Interact_Rifle",
    "Interact_Shotgun",
    "Interact_Grenade",
    "Interact_MolotovCocktail",
    "Bow_Small",
    "Interact_BeatFire",
    "Bow_Recurve",
    "Bow_Large",
    "Interact_ChargeRifle",
    "Interact_ChargeLance",
    "Standard_Pickup",
  ],
  soundDrop: [
    "Metal_Drop",
    "Standard_Drop",
    "Grain_Drop",
    "Silver_Drop",
    "Wood_Drop",
    "ChunkRock_Drop",
    "Stone_Drop",
    "ChunkSlag_Drop",
  ],
  warmupMote: ["Mote_ResurrectAbility"],
  fleshCorpsesOnly: ["true"],
  nonDessicatedCorpsesOnly: ["true"],
  chanceFactor: ["0.5", "0.2", "0.7", "0.1", "0.6", "0.9", "0.07"],
  anesthetize: ["false"],
  dontShowIfAnyIngredientMissing: ["true"],
  uiIconForStackCount: ["1"],
  optimalityOffsetHumanlikes: ["16", "-5", "-30", "6"],
  splitTransferableFoodKind: ["true"],
  optimalityOffsetFeedingAnimals: ["-10", "15", "7"],
  ateEvent: ["AteNutrientPaste"],
  noIngredientsFoodKind: ["NonMeat", "Meat"],
  FoodPoisonChanceFixedHuman: ["0.02"],
  performMergeCompatibilityChecks: ["false"],
  babiesCanIngest: ["true"],
  disableIfHatcher: ["true"],
  hatcherDaystoHatch: ["3.5", "4.5", "7", "6", "8", "5", "6.5"],
  hatcherPawn: [
    "Chicken",
    "Cobra",
    "Iguana",
    "Tortoise",
    "Cassowary",
    "Emu",
    "Ostrich",
    "Turkey",
    "Duck",
    "Goose",
  ],
  MedicalPotency: ["0.60", "1.00", "1.60"],
  MedicalQualityMax: ["0.70", "1.00", "1.30"],
  MedicineHerbal: ["1"],
  Intellectual: ["4"],
  intricate: ["true"],
  explosiveExpandPerStackcount: ["0.037", "0.4"],
  projectileWhenLoaded: [
    "Bullet_Shell_HighExplosive",
    "Bullet_Shell_Incendiary",
    "Bullet_Shell_EMP",
    "Bullet_Shell_Smoke",
    "Bullet_Shell_Firefoam",
    "Bullet_Shell_AntigrainWarhead",
  ],
  flyOverhead: ["true"],
  soundHitThickRoof: ["Artillery_HitThickRoof"],
  soundImpactAnticipate: ["MortarRound_PreImpact"],
  ai_IsIncendiary: ["true"],
  explosionChanceToStartFire: ["0.22"],
  explosionDamageFalloff: ["true"],
  resourceReadoutAlwaysShow: ["true"],
  StuffPower_Armor_Sharp: [
    "0.72",
    "0.9",
    "1.14",
    "0.54",
    "1.08",
    "0.36",
    "0.94",
    "1.40",
    "2.00",
    "0.80",
    "0.81",
    "1.02",
    "0.93",
    "1.12",
    "0.67",
    "0.64",
    "1.24",
    "1.29",
    "2.08",
    "0.45",
  ],
  StuffPower_Armor_Blunt: [
    "0.36",
    "0.45",
    "0.55",
    "0.54",
    "0",
    "0.26",
    "0.00",
    "0.24",
    "0.14",
    "0.21",
    "0.27",
    "0.19",
  ],
  StuffPower_Armor_Heat: [
    "0.36",
    "0.60",
    "0.65",
    "0.40",
    "0.54",
    "0.18",
    "0.90",
    "3.00",
    "2.88",
    "1.10",
    "1.5",
    "0.9",
  ],
  StuffPower_Insulation_Cold: [
    "3",
    "8",
    "18",
    "22",
    "20",
    "26",
    "30",
    "34",
    "28",
    "16",
    "14",
    "24",
    "38",
    "12",
    "10",
    "9",
  ],
  StuffPower_Insulation_Heat: [
    "0",
    "4",
    "18",
    "22",
    "24",
    "26",
    "10",
    "16",
    "12",
    "20",
    "14",
    "9",
  ],
  SharpDamageMultiplier: [
    "0.85",
    "0.75",
    "1",
    "1.1",
    "0.40",
    "0.6",
    "0.5",
    "0.65",
  ],
  BluntDamageMultiplier: ["1.0", "1", "0.9", "1.5"],
  smallVolume: ["true"],
  deepCommonality: ["0.5", "4", "1"],
  deepCountPerPortion: ["70", "8", "45", "10", "15"],
  deepLumpSizeRange: ["2~10", "1~4", "20~30", "4~10"],
  smeltable: ["true", "false"],
  soundImpactStuff: [
    "BulletImpact_Metal",
    "BulletImpact_Wood",
    "BulletImpact_Ground",
  ],
  soundMeleeHitSharp: [
    "MeleeHit_Metal_Sharp",
    "MeleeHit_Wood",
    "MeleeHit_Stone",
  ],
  soundMeleeHitBlunt: [
    "MeleeHit_Metal_Blunt",
    "MeleeHit_Wood",
    "MeleeHit_Stone",
  ],
  RoyalFavorValue: ["0.015", "3"],
  stuffAdjective: [
    "golden",
    "wooden",
    "sandstone",
    "granite",
    "limestone",
    "slate",
    "marble",
  ],
  MeleeWeapon_CooldownMultiplier: ["1.0", "0.8", "1.10", "1.3", "1.30"],
  slagDef: ["ChunkSlagSteel"],
  canSuggestUseDefaultStuff: ["true"],
  allowColorGenerators: ["true"],
  only: [
    "(0.33,0.33,0.33,1)",
    "(0.9,0.9,0.9,1)",
    "(0.65,0.65,0.65,1)",
    "(0.9,0.54,0.15,1)",
    "(0.9,0.6,0.18,1)",
    "(0.9,0.42,0.23,1)",
    "(0.6,0.4,0.4,1)",
    "(0.6,0.6,0.4,1)",
    "(0.4,0.3,0.15)",
    "(0.6,0.45,0.18)",
    "(0.8,0.6,0.23)",
    "(0.33,0.33,0.33)",
    "(0.65,0.65,0.65)",
    "(0.44,0.44,0.44)",
    "(0.62,0.62,0.62)",
    "(0.9,0.9,0.9)",
  ],
  isUnfinishedThing: ["true"],
  EnergyShieldRechargeRate: ["0.13"],
  EnergyShieldEnergyMax: ["1.1"],
  EquipDelay: ["2", "0.8", "1.5", "4", "3", "15", "5", "14", "11"],
  useIngredientsForColor: ["false"],
  countsAsClothingForNudity: ["false"],
  careIfWornByCorpse: ["false"],
  careIfDamaged: ["false"],
  wearPerDay: ["0"],
  StuffEffectMultiplierArmor: ["0.2", "0.3", "0.5", "0.7", "0.73"],
  StuffEffectMultiplierInsulation_Cold: [
    "0.10",
    "0.1",
    "0.50",
    "0.05",
    "0.15",
    "0.55",
    "2.00",
    "0.20",
    "0.22",
    "0.26",
    "0.60",
    "0.80",
    "1.0",
  ],
  StuffEffectMultiplierInsulation_Heat: [
    "0.50",
    "0.40",
    "0.15",
    "0",
    "0.05",
    "0.25",
    "0.55",
    "0.00",
    "0.08",
    "0.10",
    "0.85",
    "0.30",
  ],
  SocialImpact: ["0.10", "0.15", "0.2"],
  wornGraphicPath: [
    "Things/Pawn/Humanlike/Apparel/CowboyHat/CowboyHat",
    "Things/Pawn/Humanlike/Apparel/BowlerHat/BowlerHat",
    "Things/Pawn/Humanlike/Apparel/TribalHeaddress/TribalHeaddress",
    "Things/Pawn/Humanlike/Apparel/Tuque/Tuque",
    "Things/Pawn/Humanlike/Apparel/WarMask/WarMask",
    "Things/Pawn/Humanlike/Apparel/Veil/Veil",
    "Things/Pawn/Humanlike/Apparel/SimpleHelmet/SimpleHelmet",
    "Things/Pawn/Humanlike/Apparel/AdvancedHelmet/AdvancedHelmet",
    "Things/Pawn/Humanlike/Apparel/PowerArmorHelmet/PowerArmorHelmet",
    "Things/Pawn/Humanlike/Apparel/ReconArmorHelmet/ReconHelmet",
    "Things/Pawn/Humanlike/Apparel/PsychicFoilHelmet/PsychicFoilHelmet",
    "Things/Pawn/Humanlike/Apparel/Hood/Hood",
    "Things/Pawn/Humanlike/Apparel/SmokepopPack/SmokepopPack",
    "Things/Pawn/Humanlike/Apparel/FirefoamPack/FirefoamPack",
    "Things/Pawn/Humanlike/Apparel/TribalA/TribalA",
    "Things/Pawn/Humanlike/Apparel/Parka/Parka",
    "Things/Pawn/Humanlike/Apparel/ShirtBasic/ShirtBasic",
    "Things/Pawn/Humanlike/Apparel/ShirtButton/ShirtButton",
    "Things/Pawn/Humanlike/Apparel/Duster/Duster",
    "Things/Pawn/Humanlike/Apparel/Jacket/Jacket",
    "Things/Pawn/Humanlike/Apparel/PlateArmor/PlateArmor",
    "Things/Pawn/Humanlike/Apparel/FlakVest/FlakVest",
    "Things/Pawn/Humanlike/Apparel/FlakJacket/FlakJacket",
    "Things/Pawn/Humanlike/Apparel/PowerArmor/PowerArmor",
    "Things/Pawn/Humanlike/Apparel/ReconArmor/ReconArmor",
    "Things/Pawn/Humanlike/Apparel/Cape/Cape",
    "Things/Item/Equipment/WeaponSpecial/OrbitalTargeterBombardment/OrbitalTargeterBombardment",
    "Things/Item/Equipment/WeaponSpecial/OrbitalTargeterPowerBeam/OrbitalTargeterPowerBeam",
  ],
  generateCommonality: ["0.5", "2", "0.1", "0.3"],
  PainShockThreshold: ["0.10", "0.05", "-0.50"],
  hatRenderedFrontOfFace: ["true"],
  ArmorRating_Sharp: [
    "1.06",
    "0.92",
    "0.09",
    "1.00",
    "0.40",
    "0.72",
    "0.18",
    "0.27",
    "0.60",
    "0.50",
    "0.56",
  ],
  ArmorRating_Blunt: [
    "0.45",
    "0.4",
    "0.09",
    "0.36",
    "0.08",
    "0.18",
    "0.40",
    "0.35",
    "0.22",
    "0.20",
  ],
  ArmorRating_Heat: ["0.54", "0.46", "0.27", "0.10", "0.30", "2.00"],
  Insulation_Cold: ["4", "2", "1", "3.5", "14.4", "34", "32"],
  Insulation_Heat: ["2", "1", "3", "10", "9"],
  useDeflectMetalEffect: ["true"],
  maxCharges: ["3", "1", "2"],
  ammoDef: ["Chemfuel"],
  ammoCountToRefill: ["10", "30"],
  baseReloadTicks: ["60"],
  soundReload: ["Standard_Reload"],
  chargeNoun: ["smokepop", "firefoam pop", "charge"],
  violent: ["false"],
  hasStandardCommand: ["true"],
  targetable: ["false", "true"],
  nonInterruptingSelfCast: ["true"],
  onlyManualCast: ["True", "true"],
  SmokepopBeltRadius: ["4.9"],
  generateAllowChance: ["0.15"],
  renderUtilityAsPack: ["true"],
  checkInterval: ["60"],
  scoreOffset: ["4"],
  ignoredByNonViolent: ["true"],
  invalidTargetPawn: ["Psychic shock immune", "psychic insanity immune"],
  onlyTargetPsychicSensitive: ["true"],
  neverTargetIncapacitated: ["true"],
  destroyOnEmpty: ["true"],
  brainDamageChance: ["0.3"],
  onGroundRandomRotateAngle: ["35"],
  canBeDesiredForIdeo: ["false"],
  shellRenderedBehindHead: ["true"],
  canBeGeneratedToSatisfyWarmth: ["false"],
  canBeGeneratedToSatisfyToxicEnvironmentResistance: ["false"],
  seeThroughFog: ["true"],
  unattachedDrawOffset: ["(0,0,40)"],
  mag: ["0.03"],
  sky: [
    "(255, 230, 200)",
    "(1,1,1)",
    "(0.858,0.650,0.423)",
    "(0.482,0.603,0.682)",
    "(0.8,0.8,0.8)",
    "(0.35,0.40,0.45)",
  ],
  shadow: [
    "(225, 220, 185)",
    "Things/Skyfaller/SkyfallerShadowDropPod",
    "Things/Skyfaller/SkyfallerShadowRectangle",
    "(0.718,0.745,0.757)",
    "(0.955,0.886,0.914)",
    "(0.92,0.92,0.92)",
    "(0.85, 0.85, 0.85)",
  ],
  overlay: [
    "(255, 255, 255)",
    "(1,1,1)",
    "(0.8,0.8,0.8)",
    "(0.6,0.6,0.6)",
    "(0.7,0.7,0.7)",
    "(0.5,0.5,0.5)",
  ],
  saturation: ["1.3", "1.25", "0.9"],
  skyfaller: [""],
  movementType: ["Decelerate", "ConstantSpeed"],
  anticipationSound: [
    "DropPod_Fall",
    "DropPod_Fall_Mechanoid",
    "DropPod_Leaving",
    "Shuttle_CrashLanding",
  ],
  anticipationSoundTicks: ["100", "-10", "180"],
  impactSound: ["DropPod_Impact", "Shuttle_Impact"],
  motesPerCell: ["0", "1"],
  reversed: ["true"],
  explosionDamage: ["Bomb", "Flame"],
  explosionDamageFactor: ["0.5"],
  cameraShake: ["1"],
  rotateGraphicTowardsDirection: ["true"],
  ticksToImpactRange: ["150~200"],
  shrapnelDistanceFactor: ["0.2"],
  alwaysFlee: ["true"],
  flightDurationMin: ["0.5"],
  flightSpeed: ["12"],
  cleaningSound: [
    "Interact_CleanFilth",
    "Interact_CleanFilth_Dirt",
    "Interact_CleanFilth_Scattered",
    "Interact_CleanFilth_Fluid",
  ],
  disappearsInDays: ["45~50", "35~40", "5~10", "10~15", "0.2~0.4", "30~40"],
  rainWashes: ["true"],
  cleaningWorkToReduceThickness: ["35", "70", "80", "100", "30"],
  canFilthAttach: ["true"],
  ignoreFilthMultiplierStat: ["true"],
  allowsFire: ["false"],
  maxThickness: ["1"],
  soundOpen: ["DropPod_Open", "DropPod_Open_Mechanoid"],
  alwaysFreeIntercept: ["true"],
  randomizeRotationOnSpawn: ["true"],
  designateHaulable: ["true"],
  flipExtraRotation: ["80"],
  ConstructionSpeedFactor: ["0.8"],
  mineableYieldWasteable: ["false"],
  mineableDropChance: ["0.25"],
  smoothedThing: [
    "SmoothedSandstone",
    "",
    "SmoothedGranite",
    "SmoothedLimestone",
    "SmoothedSlate",
    "SmoothedMarble",
  ],
  labelUsedInLogging: ["false"],
  armorPenetration: ["0.50"],
  screenShakeFactor: ["0.5"],
  ai_AvoidFriendlyFireRadius: ["5", "8", "3", "23", "15", "10"],
  stopBurstWithoutLos: ["false"],
  requiredDamageTypeToExplode: ["Flame"],
  noiseRadius: ["4"],
  rangedFireRulepack: ["Combat_RangedFire_Thrown"],
  explosionDelay: ["100"],
  rotateInShelves: ["false"],
  ai_pickUpOpportunistically: ["true"],
  soundAiming: ["OrbitalTargeter_Aiming"],
  spawnDef: ["Tornado"],
  colonyWideTaleDef: ["TornadoFromItem"],
  fertilityMin: ["0.7", "0.01", "0.70", "0.50", "0.05", "0.5"],
  fertilitySensitivity: [
    "1.0",
    "0.5",
    "0.15",
    "0.4",
    "0.6",
    "0.7",
    "0",
    "0.3",
    "0.0",
  ],
  soundHarvesting: ["Harvest_Standard", "Harvest_Tree"],
  soundHarvestFinish: ["Harvest_Standard_Finish", "Harvest_Tree_Finish"],
  sowWork: ["170", "4000", "750", "540", "400", "800"],
  harvestWork: [
    "200",
    "800",
    "400",
    "310",
    "180",
    "90",
    "300",
    "210",
    "660",
    "40",
    "60",
    "1800",
    "150",
    "250",
    "1400",
    "710",
    "510",
    "460",
  ],
  visualSizeRange: [
    "0.3~1.00",
    "0.7~1.1",
    "1.3~2.0",
    "0.4~0.7",
    "0.9~1.5",
    "0.82~0.95",
    "0.3~1.05",
    "0.3~0.8",
    "0.3~1.4",
    "0.3~1.0",
    "0.8~2.0",
    "1.2~1.9",
    "0.6~1.1",
    "0.9~1.4",
    "0.40~0.65",
    "0.4~0.6",
    "0.7~0.85",
    "1.1~1.8",
    "1.5~2.3",
    "0.78~0.88",
    "0.3~0.4",
    "0.95~1.7",
    "1.3~3.0",
    "0.85~1.05",
    "1.3~2.4",
  ],
  topWindExposure: [
    "0.1",
    "0.20",
    "0.25",
    "0.05",
    "0.02",
    "0.35",
    "0.15",
    "0.3",
    "0.0",
    "0.08",
    "0.4",
    "0.16",
    "0.2",
    "0.07",
  ],
  ingestible: [""],
  growDays: [
    "3",
    "40",
    "60",
    "1.5",
    "5.8",
    "11.3",
    "4.6",
    "7",
    "8",
    "22.5",
    "10",
    "5",
    "7.50",
    "9.00",
    "16",
    "30",
    "6",
    "2",
    "2.5",
    "15",
    "13",
    "35",
    "27",
    "4",
    "15.05",
    "20",
    "32.5",
    "14",
    "12",
  ],
  wildClusterRadius: ["4", "8", "3", "-1", "6", "17", "5", "10"],
  wildClusterWeight: [
    "5",
    "24",
    "0",
    "300",
    "4",
    "3",
    "10",
    "200",
    "80",
    "25",
    "8",
    "250",
    "35",
    "40",
    "7.5",
    "11",
    "15",
  ],
  wildOrder: ["2", "3", "1"],
  lifespanDaysPerGrowDays: ["9", "5", "3", "0", "40"],
  sowMinSkill: ["6", "5", "10", "8", "3", "4"],
  mustBeWildToSow: ["true", "false"],
  harvestedThingDef: [
    "WoodLog",
    "RawFungus",
    "RawRice",
    "RawPotatoes",
    "RawCorn",
    "RawBerries",
    "Hay",
    "Cloth",
    "DevilstrandCloth",
    "MedicineHerbal",
    "RawHops",
    "SmokeleafLeaves",
    "PsychoidLeaves",
    "Chocolate",
    "Ambrosia",
    "Dye",
    "RawAgave",
  ],
  harvestYield: [
    "25",
    "20",
    "35",
    "6",
    "11",
    "22",
    "8",
    "18",
    "10",
    "1",
    "9",
    "4",
    "15",
    "27",
    "60",
    "46",
  ],
  harvestTag: ["Wood", "Standard"],
  harvestMinGrowth: ["0.40", "0", "0.2"],
  harvestFailable: ["false", "true"],
  blockAdjacentSow: ["true"],
  treeLoversCareIfChopped: ["true", "false"],
  burnedThingDef: ["BurnedTree"],
  choppedThingDef: ["ChoppedStump"],
  smashedThingDef: ["SmashedStump"],
  treeCategory: ["Full"],
  interferesWithRoof: ["true"],
  _FallColorSource: ["(0.3803, 0.4352, 0.1451)", "(0.373, 0.427, 0.313)"],
  _FallColorDestination: ["/Other/TreeFallGradient"],
  _FallTransitionRange: ["(0.02, 0.10)", "(0.02, 0.14)"],
  _FallBehaviorEnabled: ["1"],
  neverBlightable: ["true"],
  growMinGlow: ["0", "0.3"],
  growOptimalGlow: ["0"],
  cavePlant: ["true"],
  wildEqualLocalDistribution: ["false"],
  dieIfLeafless: ["true", "false"],
  maxMeshCount: ["4", "9", "25"],
  purpose: ["Food", "Beauty", "Health", "Misc"],
  pollution: ["Any"],
  cavePlantWeight: ["0.17"],
  humanFoodPlant: ["true"],
  immatureGraphicPath: [
    "Things/Plant/CornPlant_Immature",
    "Things/Plant/StrawberryPlant_Immature",
    "Things/Plant/CottonPlant_Immature",
    "Things/Plant/TreeCocoa_Immature",
    "Things/Plant/Ambrosia_Immature",
    "Things/Plant/BerryPlant_Immature",
  ],
  allowAutoCut: ["false"],
  drugForHarvestPurposes: ["True"],
  forceIsTree: ["true"],
  messageOnDeteriorateInStorage: ["false"],
  canDeteriorate: ["true"],
  isStump: ["true"],
  leaflessGraphicPath: [
    "Things/Plant/Ambrosia_Leafless",
    "Things/Plant/SaguaroCactus_Leafless",
    "Things/Plant/Grass_Leafless",
    "Things/Plant/Bush_Leafless",
    "Things/Plant/Brambles_Leafless",
    "Things/Plant/TreeWillow_Leafless",
    "Things/Plant/TreeCypress_Leafless",
    "Things/Plant/TreeMaple_Leafless",
    "Things/Plant/Chokevine_Leafless",
    "Things/Plant/Moss_Leafless",
    "Things/Plant/BerryPlant_Leafless",
    "Things/Plant/TreeOak_Leafless",
    "Things/Plant/TreePoplar_Leafless",
    "Things/Plant/TreeBirch_Leafless",
    "Things/Plant/Alocasia_Leafless",
    "Things/Plant/TreeCecropia_Leafless",
    "Things/Plant/TreeBamboo_Leafless",
  ],
  harvestAfterGrowth: ["0.3", "0.30"],
  hideAtSnowDepth: ["0.5"],
  pollutedGraphicPath: [
    "Things/Plant/Grass_Polluted",
    "Things/Plant/Brambles_Polluted",
    "Things/Plant/Chokevine_Polluted",
    "Things/Plant/Moss_Polluted",
    "Things/Plant/TreePine_Polluted",
    "Things/Plant/ShrubLow_Polluted",
  ],
  containedItemsSelectable: ["true"],
  LeatherAmount: ["40", "0", "36", "75"],
  ToxicResistance: ["0.5", "1"],
  thinkTreeMain: ["Animal", "Humanlike", "Mechanoid"],
  thinkTreeConstant: ["AnimalConstant", "HumanlikeConstant"],
  hasGenders: ["true", "false"],
  nameGenerator: ["NamerAnimalGenericMale"],
  nameGeneratorFemale: ["NamerAnimalGenericFemale"],
  trainability: ["None", "Advanced", "Intermediate"],
  devNote: [
    "warg-1",
    "chicken-1",
    "cat",
    "cat-1",
    "chicken",
    "cow",
    "cow-1",
    "squirrel-1",
    "insect",
    "misc",
    "pig",
    "pig-1",
    "sheep",
    "sheep-1",
    "squirrel",
    "warg",
  ],
  FilthRate: ["4", "8", "2", "6", "16", "24", "20"],
  amount: ["14"],
  ensureLinkedBodyPartsGroupAlwaysUsable: ["true"],
  herdAnimal: ["false", "true"],
  predator: ["true"],
  maxPreyBodySize: ["3", "1.0", "0.25", "0.35", "2.3", "0.80"],
  body: [
    "QuadrupedAnimalWithPaws",
    "Bird",
    "QuadrupedAnimalWithPawsAndTail",
    "Monkey",
    "QuadrupedAnimalWithHooves",
    "QuadrupedAnimalWithHoovesAndHump",
    "QuadrupedAnimalWithHoovesTusksAndTrunk",
    "QuadrupedAnimalWithHoovesAndHorn",
    "BeetleLike",
    "BeetleLikeWithClaw",
    "Snake",
    "TurtleLike",
    "QuadrupedAnimalWithHoovesAndTusks",
    "QuadrupedAnimalWithClawsTailAndJowl",
    "Human",
    "MechanicalCentipede",
    "Lancer",
    "Scyther",
    "Pikeman",
    "MechanicalTermite",
  ],
  baseHungerRate: [
    "0.35",
    "0.42",
    "0.28",
    "0.2",
    "0.12",
    "0.15",
    "0.1",
    "0.4",
    "0.5",
    "0.125",
    "0.14",
    "0.175",
    "0.535",
    "0.225",
    "0.275",
    "0.425",
    "0.325",
    "1.605",
    "1.07",
    "0.115",
    "0.10",
    "0.25",
    "1.75",
    "0.07",
    "0.0825",
    "3.0",
    "0.50",
    "0.30",
    "1",
    "0.18",
  ],
  baseBodySize: [
    "2.15",
    "1.0",
    "0.6",
    "0.32",
    "0.2",
    "0.75",
    "0.86",
    "0.35",
    "0.3",
    "0.60",
    "2.4",
    "2.0",
    "2.1",
    "1.4",
    "4.0",
    "3.0",
    "0.8",
    "1.2",
    "4",
    "0.25",
    "0.5",
    "0.45",
    "1.7",
    "0.85",
    "1.00",
    "0.7",
    "0.4",
    "0.55",
    "1",
    "1.6",
  ],
  baseHealthScale: [
    "2.5",
    "1.0",
    "0.9",
    "0.8",
    "1.3",
    "0.42",
    "0.4",
    "1.05",
    "0.45",
    "0.35",
    "0.6",
    "0.40",
    "1.5",
    "0.65",
    "1.75",
    "1.6",
    "0.7",
    "1.9",
    "2.0",
    "1.45",
    "3.6",
    "3.5",
    "1.7",
    "8.0",
    "0.5",
    "0.85",
    "0.25",
    "0.29",
    "1.4",
    "0.99",
    "0.70",
    "1",
    "4.32",
    "0.72",
    "1.32",
    "2.16",
  ],
  leatherDef: [
    "Leather_Bear",
    "Leather_Bird",
    "Leather_Panthera",
    "Leather_Light",
    "Leather_Dog",
    "Leather_GuineaPig",
    "Leather_Plain",
    "Leather_Bluefur",
    "Leather_Camel",
    "Leather_Elephant",
    "Leather_Rhinoceros",
    "Leather_Thrumbo",
    "Leather_Lizard",
    "Leather_Pig",
    "Leather_Chinchilla",
    "Leather_Heavy",
    "Leather_Wolf",
    "Leather_Fox",
    "Leather_Human",
  ],
  gestationPeriodDays: [
    "10",
    "12",
    "6.66",
    "5.61",
    "13.32",
    "5.661",
    "20",
    "8.5",
    "18",
  ],
  wildness: [
    "0.80",
    "0.85",
    "0.95",
    "0",
    "0.60",
    "0.45",
    "0.6",
    "0.25",
    "0.75",
    "0.20",
    "0.35",
    "0.90",
    "0.2",
    "0.3",
    "0.4",
    "0.985",
    "0.50",
    "0.55",
    "0.97",
    "0.5",
  ],
  lifeExpectancy: [
    "22",
    "45",
    "13",
    "9",
    "10",
    "15",
    "4",
    "12",
    "30",
    "6",
    "8",
    "18",
    "24",
    "50",
    "220",
    "20",
    "180",
    "80",
    "2500",
  ],
  manhunterOnTameFailChance: ["0.30", "0.10", "1.00", "0.20", "0.1", "0.40"],
  manhunterOnDamageChance: ["0.50", "1.00", "0.1"],
  soundWounded: [
    "Pawn_Bear_Injured",
    "Pawn_Chick_Call",
    "Pawn_Cougar_Injured",
    "Pawn_Cat_Injured",
    "Pawn_DogSmall_Injured",
    "Pawn_GuineaPig_Wounded",
    "Pawn_Dog_Injured",
    "Pawn_Monkey_Wounded",
    "Pawn_Chicken_Wounded",
    "Pawn_Duck_Wounded",
    "Pawn_Goose_Wounded",
    "Pawn_Muffalo_Wounded",
    "Pawn_Bison_Wounded",
    "Pawn_Dromedary_Wounded",
    "Pawn_Goat_Wounded",
    "Pawn_Elk_Wounded",
    "Pawn_Horse_Wounded",
    "Pawn_Donkey_Wounded",
    "Pawn_Elephant_Injured",
    "Pawn_Rhinoceros_Wounded",
    "Pawn_Hare_Wounded",
    "Pawn_Megascarab_Wounded",
    "Pawn_Spelopede_Pain",
    "Pawn_BigInsect_Pain",
    "Pawn_Thrumbo_Pain",
    "Pawn_Cobra_Wounded",
    "Pawn_Tortoise_Wounded",
    "Pawn_Alphabeaver_Wounded",
    "Pawn_Wildboar_Wounded",
    "Pawn_Deer_Wounded",
    "Pawn_Rodent_Wounded",
    "Pawn_Sheep_Wounded",
    "Pawn_Boomrat_Wounded",
    "Pawn_Iguana_Wounded",
    "Pawn_Warg_Wounded",
    "Pawn_Mech_Centipede_Wounded",
    "Pawn_Mech_Scyther_Wounded",
    "Pawn_Mech_Pikeman_Wounded",
    "Pawn_Mech_Termite_Wounded",
  ],
  soundDeath: [
    "Pawn_Bear_Death",
    "Pawn_Chick_Call",
    "Pawn_Cougar_Death",
    "Pawn_Cat_Death",
    "Pawn_DogSmall_Dead",
    "Pawn_GuineaPig_Death",
    "Pawn_Dog_Death",
    "Pawn_Monkey_Death",
    "Pawn_Chicken_Death",
    "Pawn_Duck_Death",
    "Pawn_Goose_Death",
    "Pawn_Muffalo_Death",
    "Pawn_Bison_Death",
    "Pawn_Dromedary_Death",
    "Pawn_Goat_Death",
    "Pawn_Elk_Death",
    "Pawn_Horse_Death",
    "Pawn_Donkey_Death",
    "Pawn_Elephant_Dead",
    "Pawn_Rhinoceros_Death",
    "Pawn_Hare_Death",
    "Pawn_Megascarab_Death",
    "Pawn_Spelopede_Death",
    "Pawn_BigInsect_Death",
    "Pawn_Thrumbo_Death",
    "Pawn_Cobra_Death",
    "Pawn_Tortoise_Death",
    "Pawn_Alphabeaver_Death",
    "Pawn_Wildboar_Death",
    "Pawn_Deer_Death",
    "Pawn_Rodent_Death",
    "Pawn_Sheep_Death",
    "Pawn_Boomrat_Death",
    "Pawn_Iguana_Death",
    "Pawn_Warg_Death",
    "Pawn_Mech_Centipede_Death",
    "Pawn_Mech_Scyther_Death",
    "Pawn_Mech_Pikeman_Death",
    "Pawn_Mech_Termite_Death",
  ],
  soundCall: [
    "Pawn_Bear_Call",
    "Pawn_Chick_Call",
    "Pawn_Cat_Call",
    "Pawn_DogSmall_Call",
    "Pawn_GuineaPig_Call",
    "Pawn_Dog_Call",
    "Pawn_Monkey_Call",
    "Pawn_Chicken_Call",
    "Pawn_Duck_Call",
    "Pawn_Goose_Call",
    "Pawn_Muffalo_Call",
    "Pawn_Bison_Call",
    "Pawn_Dromedary_Call",
    "Pawn_Goat_Call",
    "Pawn_Elk_Call",
    "Pawn_Horse_Call",
    "Pawn_Donkey_Call",
    "Pawn_Elephant_Call",
    "Pawn_Rhinoceros_Call",
    "Pawn_Hare_Call",
    "Pawn_Megascarab_Call",
    "Pawn_Spelopede_Call",
    "Pawn_BigInsect_Call",
    "Pawn_Thrumbo_Call",
    "Pawn_Cobra_Call",
    "Pawn_Tortoise_Call",
    "Pawn_Alphabeaver_Call",
    "Pawn_Wildboar_Call",
    "Pawn_Deer_Call",
    "Pawn_Rodent_Call",
    "Pawn_Sheep_Call",
    "Pawn_Boomrat_Call",
    "Pawn_Iguana_Call",
    "Pawn_Warg_Call",
    "Pawn_Mech_Centipede_Call",
    "Pawn_Mech_Scyther_Call",
    "Pawn_Mech_Pikeman_Call",
    "Pawn_Mech_Termite_Call",
  ],
  soundAngry: [
    "Pawn_Bear_Angry",
    "Pawn_Chick_Call",
    "Pawn_Cougar_Angry",
    "Pawn_Cat_Angry",
    "Pawn_DogSmall_Angry",
    "Pawn_GuineaPig_Angry",
    "Pawn_Dog_Angry",
    "Pawn_Monkey_Angry",
    "Pawn_Chicken_Angry",
    "Pawn_Duck_Angry",
    "Pawn_Goose_Angry",
    "Pawn_Muffalo_Angry",
    "Pawn_Bison_Angry",
    "Pawn_Dromedary_Angry",
    "Pawn_Goat_Angry",
    "Pawn_Elk_Angry",
    "Pawn_Horse_Angry",
    "Pawn_Donkey_Angry",
    "Pawn_Elephant_Angry",
    "Pawn_Rhinoceros_Angry",
    "Pawn_Hare_Angry",
    "Pawn_Megascarab_Angry",
    "Pawn_Spelopede_Angry",
    "Pawn_BigInsect_Angry",
    "Pawn_Thrumbo_Angry",
    "Pawn_Cobra_Angry",
    "Pawn_Tortoise_Angry",
    "Pawn_Alphabeaver_Angry",
    "Pawn_Wildboar_Angry",
    "Pawn_Deer_Angry",
    "Pawn_Rodent_Angry",
    "Pawn_Sheep_Angry",
    "Pawn_Boomrat_Angry",
    "Pawn_Iguana_Angry",
    "Pawn_Warg_Angry",
  ],
  soundMeleeHitPawn: [
    "Pawn_Melee_BigBash_HitPawn",
    "Pawn_Melee_SmallScratch_HitPawn",
    "Pawn_Melee_Punch_HitPawn",
    "Pawn_Melee_MechanoidBash_HitPawn",
    "Pawn_Melee_MechanoidSlash_HitPawn",
  ],
  soundMeleeHitBuilding: [
    "Pawn_Melee_BigBash_HitBuilding",
    "Pawn_Melee_SmallScratch_HitBuilding",
    "Pawn_Melee_Punch_HitBuilding",
    "Pawn_Melee_MechanoidBash_HitBuilding",
    "Pawn_Melee_MechanoidSlash_HitBuilding",
  ],
  meatLabel: [
    "bear meat",
    "bird meat",
    "beef",
    "yak beef",
    "horse meat",
    "insect meat",
    "cobra meat",
    "pork",
    "venison",
    "wolf meat",
    "fox meat",
  ],
  useMeatFrom: [
    "Bear_Grizzly",
    "Cassowary",
    "Hare",
    "Megaspider",
    "Pig",
    "Wolf_Timber",
    "Fox_Fennec",
  ],
  ecoSystemWeight: [
    "0.5",
    "0.50",
    "0.22",
    "0.3",
    "0.30",
    "0.6",
    "0.7",
    "1.1",
    "1.0",
    "2.0",
    "1.5",
    "0.25",
    "0.15",
    "0.35",
    "1",
    "0.40",
    "0.45",
    "0.55",
    "0.2",
    "0.20",
  ],
  roamMtbDays: ["3", "7", "2", "5"],
  eggFertilizedDef: [
    "EggOstrichFertilized",
    "EggEmuFertilized",
    "EggCassowaryFertilized",
    "EggChickenFertilized",
    "EggDuckFertilized",
    "EggTurkeyFertilized",
    "EggGooseFertilized",
    "EggCobraFertilized",
    "EggTortoiseFertilized",
    "EggIguanaFertilized",
  ],
  eggFertilizationCountMax: ["1"],
  eggLayIntervalDays: ["3.33", "1", "1.333", "2", "10", "6.66", "5.661"],
  eggProgressUnfertilizedMax: ["0.5"],
  eggCountRange: ["1", "1~1", "1~2", "1~3"],
  petness: [
    "1",
    "0.30",
    "0.50",
    "0.3",
    "0.6",
    "0.60",
    "0.08",
    "0.05",
    "0.20",
    "0.15",
    "0.5",
    "0.1",
  ],
  nuzzleMtbHours: ["12", "24"],
  nameOnTameChance: ["1"],
  animalType: ["Canine"],
  mateMtbHours: ["8"],
  wildGroupSize: [
    "3~8",
    "3~7",
    "3~6",
    "3~9",
    "2~5",
    "3~5",
    "2~4",
    "1~4",
    "5~10",
    "1~3",
    "4~13",
    "1~1",
  ],
  alternateGraphicChance: ["0.99", "0.8"],
  eggUnfertilizedDef: [
    "EggChickenUnfertilized",
    "EggDuckUnfertilized",
    "EggGooseUnfertilized",
  ],
  milkDef: ["Milk", "Chemfuel"],
  milkIntervalDays: ["1", "2", "3"],
  milkAmount: ["14", "11", "18", "12", "10"],
  milkFemaleOnly: ["false"],
  deathActionWorkerClass: [
    "DeathActionWorker_BigExplosion",
    "DeathActionWorker_SmallExplosion",
  ],
  executionRange: ["6", "4"],
  canBePredatorPrey: ["false"],
  woolDef: [
    "WoolMuffalo",
    "WoolBison",
    "WoolSheep",
    "WoolAlpaca",
    "WoolMegasloth",
  ],
  shearIntervalDays: ["15", "10", "20"],
  woolAmount: ["120", "45", "200"],
  packAnimal: ["true"],
  CaravanRidingSpeedFactor: ["1.3", "1.6"],
  bodyPartGroup: ["TuskAttackTool", "HornAttackTool"],
  fleshType: ["Insectoid", "Mechanoid"],
  bloodDef: ["Filth_BloodInsect", "Filth_MachineBits"],
  meatColor: ["(160,168,139)"],
  meatMarketValue: ["0.5", "0.8"],
  wakeUpOnDamage: ["true"],
  canArriveManhunter: ["false"],
  herdMigrationAllowed: ["false"],
  intelligence: ["Humanlike", "ToolUser"],
  makesFootprints: ["true"],
  nameCategory: ["HumanStandard"],
  soundCallIntervalRange: ["2000~5000", "1000~2000"],
  Firefighter: ["7"],
  Patient: ["0"],
  Doctor: ["10"],
  PatientBedRest: ["0"],
  BasicWorker: ["3"],
  Warden: ["10"],
  Handling: ["7"],
  Hunting: ["7"],
  Growing: ["7"],
  Mining: ["7"],
  PlantCutting: ["7"],
  Smithing: ["13"],
  Tailoring: ["7"],
  Art: ["10"],
  Hauling: ["3"],
  Cleaning: ["3"],
  Research: ["13", "Research"],
  soundMeleeDodge: ["Pawn_MeleeDodge"],
  MeatAmount: ["0"],
  needsRest: ["false"],
  soundCallIntervalFriendlyFactor: ["2"],
  wakeUpCheckRadius: ["30"],
  wakeUpSound: ["MechanoidsWakeUp"],
  needsOverseerEffect: ["MechUncontrolled"],
  delayUntilFeralCheck: ["60000"],
  feralMtbDays: ["10"],
  feralCascadeRadialDistance: ["25"],
  mechWeightClass: ["Heavy"],
  aiAvoidCover: ["true"],
  destroyGearOnDrop: ["true"],
  canStrip: ["false"],
  maskPath: [
    "Things/Pawn/Mechanoid/AllegianceOverlays/Mech_Centipede",
    "Things/Pawn/Mechanoid/AllegianceOverlays/CentipedeGunner",
    "Things/Pawn/Mechanoid/AllegianceOverlays/CentipedeBurner",
    "Things/Pawn/Mechanoid/AllegianceOverlays/Mech_Lancer",
    "Things/Pawn/Mechanoid/AllegianceOverlays/Mech_Scyther",
    "Things/Pawn/Mechanoid/AllegianceOverlays/Mech_Pikeman",
  ],
  controlGroupPortraitZoom: ["0.65"],
  defendPointRadius: ["0"],
  weaponTags: ["\r\n    "],
  maxThingMarketValue: ["300"],
  requireNonNull: ["true"],
  disallowWorsePreferability: ["RawBad"],
  disallowWithComp: ["CompHatcher"],
  disallowInedibleByHuman: ["true"],
  totalNutritionRange: ["4~8"],
  disallowCheaperThan: ["6", "7"],
  resolveInOrder: ["true"],
  maxMarketValue: ["5500"],
  minSingleItemMarketValuePct: ["0.15"],
  allowNonStackableDuplicates: ["False"],
  weightIfPlayerHasNoItem: ["1"],
  weightIfPlayerHasNoItemItem: ["AIPersonaCore"],
  minMaxTotalMarketValue: ["2500"],
  weightIfPlayerHasXenotype: ["20"],
  minMarketValue: ["150"],
  minTotalMarketValue: ["5500"],
  inBedOnly: ["true"],
  insertTag: [
    "Animal_PreMain",
    "Animal_PreWander",
    "Humanlike_PostMentalState",
    "Humanlike_PostDuty",
    "Humanlike_PreMain",
    "Humanlike_PostMain",
  ],
  trainable: ["Obedience", "Rescue", "Haul"],
  attackMeleeThreatEvenIfNotHostile: ["true"],
  dutyHook: ["HighPriority", "MediumPriority"],
  leaveJoinableLordIfIssuesJob: ["true"],
  emergency: ["true", "True"],
  ignoreForbidden: ["true"],
  threshold: ["0.6", "0.9"],
  state: [
    "BerserkMechanoid",
    "Berserk",
    "BerserkTrance",
    "SocialFighting",
    "BerserkWarcall",
    "Wander_Psychotic",
    "Wander_Sad",
    "WanderConfused",
    "Wander_OwnRoom",
    "Binging_Food",
    "PanicFlee",
    "PanicFleeFire",
    "GiveUpExit",
    "Roaming",
    "FireStartingSpree",
    "CorpseObsession",
    "Jailbreaker",
    "Slaughterer",
    "MurderousRage",
    "Rebellion",
  ],
  workMode: ["Work", "SelfShutdown", "Recharge", "Escort"],
  forced: ["true"],
  canBash: ["true"],
  maxAttackDistance: ["65"],
  maxLevelPercentage: ["0.05", "0.15"],
  minPriority: ["0.5"],
  forceScanWholeMap: ["true"],
  failIfCantJoinOrCreateCaravan: ["true"],
  doNotApplyToQuestLodgers: ["true"],
  showBubble: ["true"],
  stackLimitForSameOtherPawn: ["1", "3", "10", "50", "5", "2"],
  stackedEffectMultiplier: ["1", "0.75", "0.5", "0.9", "0.6"],
  thoughtClass: [
    "Thought_FoodEaten",
    "Thought_MemorySocial",
    "Thought_MemoryObservation",
    "Thought_Tale",
    "Thought_Banished",
    "Thought_MemorySocialCumulative",
    "Thought_SituationalSocial",
    "Thought_Incestuous",
    "Thought_HardWorkerVsLazy",
    "Thought_TeetotalerVsChemicalInterest",
    "Thought_ChemicalInterestVsTeetotaler",
    "Thought_OpinionOfMyLover",
    "Thought_BondedAnimalMaster",
    "Thought_NotBondedAnimalMaster",
    "Thought_SharedBed",
  ],
  icon: [
    "Things/Mote/ThoughtSymbol/Food",
    "Things/Mote/ThoughtSymbol/SleepZ",
    "Things/Mote/ThoughtSymbol/Skull",
    "UI/Icons/Trainables/Obedience",
    "UI/Icons/Trainables/Release",
    "UI/Icons/Trainables/Rescue",
    "UI/Icons/Trainables/Haul",
    "UI/Icons/Trainables/Tameness",
  ],
  baseOpinionOffset: [
    "-30",
    "-15",
    "20",
    "40",
    "-10",
    "0.66",
    "15",
    "-5",
    "2",
    "-22",
    "38",
    "-20",
    "25",
    "-50",
    "-70",
    "6",
    "-35",
    "35",
    "-65",
    "-80",
    "-25",
    "-40",
    "8",
    "16",
    "24",
    "32",
    "-8",
    "-16",
    "-24",
    "-32",
  ],
  nextThought: ["NewColonyHope"],
  taleDef: [
    "DefeatedHostileFactionLeader",
    "SoldPrisoner",
    "ExecutedPrisoner",
    "KilledColonist",
    "KilledColonyAnimal",
  ],
  nullifiedIfNotColonist: ["true"],
  maxCumulatedOpinionOffset: ["10"],
  socialTargetDevelopmentalStageFilter: ["Baby, Child, Adult"],
  thoughtToMake: [
    "InsultedMood",
    "KindWordsMood",
    "ForcedMeToTakeDrugsMood",
    "ForcedMeToTakeLuciferiumMood",
    "RebuffedMyRomanceAttemptMood",
    "BrokeUpWithMeMood",
    "CheatedOnMeMood",
    "DivorcedMeMood",
    "RejectedMyProposalMood",
  ],
  labelSocial: ["sold my loved one", "gave away my bonded animal"],
  effectMultiplyingStat: ["PsychicSensitivity"],
  requiredTraitsDegree: ["2", "1", "-1", "-2"],
  categoryDef: [
    "Textiles",
    "ResourcesRaw",
    "FoodRaw",
    "Drugs",
    "WeaponsMelee",
    "FoodMeals",
    "BuildingsFurniture",
    "Medicine",
  ],
  thingDefCountRange: [
    "1~2",
    "3~3",
    "3~5",
    "2~4",
    "0~3",
    "3~4",
    "1~4",
    "2~2",
    "4~4",
    "1~1",
    "6~6",
    "-1~2",
    "3",
    "5~6",
    "1~3",
    "3~6",
    "-4~5",
    "-5~1",
    "-1~1",
  ],
  totalPriceRange: [
    "300~700",
    "200~600",
    "300~800",
    "400~1000",
    "400~800",
    "700~1500",
    "400~600",
    "-100~100",
    "10~40",
    "150~600",
    "600~1000",
    "-70~100",
    "-70~200",
    "2200~4000",
    "800~1500",
    "1000~2000",
    "2000~3000",
    "-300~300",
    "200~400",
    "100~300",
  ],
  maxTechLevelGenerate: ["Neolithic"],
  tradeTag: [
    "WeaponRanged",
    "BasicClothing",
    "Clothing",
    "Artifact",
    "MortarShell",
    "Armor",
    "TechHediff",
    "Art",
    "Television",
    "ExoticMisc",
  ],
  respectPopulationIntent: ["true"],
  maxWildness: ["0.70"],
  kindCountRange: ["3~4", "2~4", "2~2", "1~2", "1", "3~3"],
  MedicineUltratech: ["2~15"],
  Hyperweave: ["50~200", "40~120"],
  requestable: ["false"],
  maxTechLevelBuy: ["Ultra"],
  Luciferium: ["7~25"],
  orbital: ["true"],
  checkTemperature: ["false"],
  requiredTrainability: ["Intermediate", "Advanced", "None"],
  steps: ["3", "2", "7", "5"],
  defaultTrainable: ["true"],
  minBodySize: ["0.65", "0.40"],
  meatSource: ["Humanlike"],
  marketValueFactorOffset: ["-0.15", "-0.2", "-0.1", "-0.10"],
  GlobalLearningFactor: ["0.75", "-0.75"],
  MentalBreakThreshold: ["0.12", "-0.18", "-0.09", "0.08", "0.15", "0.14"],
  MeleeHitChance: ["4"],
  disabledWorkTags: ["Firefighting"],
  randomMentalState: ["FireStartingSpree", "Binging_Food"],
  allowOnHostileSpawn: ["false"],
  MeleeDodgeChance: ["15"],
  PawnTrapSpringChance: ["0.1"],
  commonalityFemale: ["1.7", "0.3"],
  IncomingDamageFactor: ["0.5"],
  mentalBreakInspirationGainReasonText: [
    "As a suffering tortured artist, [PAWN_nameIndef] has experienced an inspiration.",
  ],
  mentalBreakInspirationGainChance: ["0.5"],
  RestRateMultiplier: ["0.50"],
  degree: ["-1", "1", "2", "-2"],
  AimingDelayFactor: ["0.25", "-0.5"],
  PawnBeauty: ["2", "1", "-1", "-2"],
  ImmunityGainSpeed: ["0.30"],
  randomDiseaseMtbDays: ["30"],
  needsOpportunity: ["true", "True"],
  gameMode: ["Entry"],
  helpText: [
    "Zoom with the MOUSE WHEEL or {Key:MapZoom_In} and {Key:MapZoom_Out} keys.\\n\\nPan with the {Key:MapDolly_Up}-{Key:MapDolly_Left}-{Key:MapDolly_Down}-{Key:MapDolly_Right} keys, or by MIDDLE-CLICKING and DRAGGING.",
    "After an encounter, you can easily re-form a caravan by using the RE-FORM CARAVAN command in the World view.",
    "To rescue a wounded person, select a healthy colonist and then right-click on the wounded one.\\n\\nIf you rescue a non-colonist, they won't necessarily join your colony. They may simply walk away after healing. If you want to guarantee that they join, capture them and recruit them.",
    "When an enemy is downed on the ground but not dead, you can CAPTURE them.\\n\\nTo capture, select a colonist, right-click on the incapacitated enemy, and select Capture.\\n\\nYou'll need an extra bed marked for prisoner use.",
    "Shield belts stop ranged attacks from coming in or out. They have no effect on melee attacks.\\n\\nTo fight against shield belts, either concentrate a lot of gunfire on the target, or fight hand-to-hand.",
    "You can talk to people with ? over their heads.\\n\\nSelect a colonist and right-click on the character with ? attached to their head.",
    "To control colonists directly for combat, Draft them by selecting them and hitting the DRAFT button.\\n\\nA drafted colonist will do only what you tell them, and can only take combat actions. Those with weapons will use them when possible.\\n\\nDon't leave colonists Drafted forever - they'll starve and become unhappy.",
    "Right-click and drag to have your drafted fighters form a line.\\n\\nSpread out - bunched-up targets are easy to hit!",
    "To send items or silver to orbital traders, you must build an ORBITAL TRADE BEACON and place a stockpile of items near it.",
    "Manhunting animals will attack doors if they see one of your colonists moving through them. They will also attack inactive turrets.",
    "To make colonists work at a table, select the table and open the Bills tab. Here, you can say what meals to cook, what things to craft, what creatures to butcher.",
    "To communicate, select a colonist and right-click on the comms console.",
    'You can inspect your colonists\' desire to take a drug in their Needs tab.\\n\\nAs long as their need level is at zero, their addiction changes to a "withdrawal" state which can have various negative side effects.\\n\\nHowever, after long enough in withdrawal, their addiction will end and the drug need will disappear.',
    "You can assign colonists to take specific drugs on a specific schedule. For example, you can make them take infection-blocking drugs regularly, or drink a beer a day to stay happy.\\n\\nOpen the ASSIGN tab and press the 'Manage drug policies' button. Create a new drug policy. Then, you can assign this policy to colonists.\\n\\nColonists can still take drugs not in their policy. You can tell them what to do, but they also follow their own desires!",
    "Sick people can watch TV while laying in bed.",
    "Look in a prisoner's 'Prisoner' tab to set how they'll be treated.\\n\\nYou can set whether they'll be recruited, ignored or executed, whether they eat, and what kind of medical care they get.\\n\\nColonists with the Warden work type will interact with the prisoner.",
    "You can set what to plant in a growing zone. You can even grow trees!\\n\\nJust select the growing zone, open the Growing tab, and click the 'plant' button.",
    "Drugs can be useful, but can also lead to harmful addictions.\\n\\nIf you want to avoid drugs in your colony, you have the option of burning them at a campfire.",
    "Doors open at different speeds depending on what they're made of.\\n\\nWarning: Stone doors open very slowly. Anyone passing through will be significantly slowed down.",
    'When giving commands to pawns, you can queue up multiple orders by holding "shift". This also works when giving jobs to undrafted pawns.',
    "Shelves store three times as much as empty ground. Items on shelves will also never deteriorate and don't affect the beauty of their surroundings.\\n\\nYou can link shelves into groups and configure them as one. First, select two or more shelves, then click 'Link storage settings'.",
    "Move the camera by clicking and dragging the MOUSE BUTTON 3 (middle button) or with the {Key:MapDolly_Up}-{Key:MapDolly_Left}-{Key:MapDolly_Down}-{Key:MapDolly_Right} keys.",
    "Zoom in and out with the MOUSEWHEEL or the {Key:MapZoom_In} and {Key:MapZoom_Out} keys.",
    "You can speed up time.\\n\\nTry controlling time with the {Key:TimeSpeed_Normal}, {Key:TimeSpeed_Fast}, and {Key:TimeSpeed_Superfast} keys, or with the time controls in the bottom right.",
    "Hit {Key:TogglePause} to pause or unpause the game.\\n\\nYou can give orders while paused.\\n\\nRemember this - if things get hectic, just hit {Key:TogglePause}!",
    "Your colonists need somewhere to store items. Designate a STOCKPILE for them to store things.\\n\\nFind the stockpile in the ZONES section of the ARCHITECT menu in the lower-left.",
    "Colonists will not interact with items marked FORBIDDEN.\\n\\nForbidden items have a small red X attached. Select a forbidden item and use the controls at the bottom to ALLOW it.",
    "To grow food, place GROWING ZONES using the Architect menu.\\n\\nThey can only be placed on fertile ground.",
    "Your colonists arrived with some weapons. Equip them!\\n\\nSelect each colonist and right-click on the weapon you want them to equip.",
    "The alerts at the right edge of the screen tell you about issues that need your attention.\\n\\nKeep an eye on the alerts.",
    "You can designate where to mine by opening the ARCHITECT menu and selecting the ORDERS tab.\\n\\nSome mineable blocks yield STEEL, GOLD, PLASTEEL, and other useful materials.",
    "You can set each colonist's work settings in the WORK tab at the bottom left of the screen.\\n\\nThey will always do the highest priority work that they can find.\\n\\nIf nobody has a certain work type assigned, or if they are busy with higher-priority tasks, it will never get done.",
    "You can FORBID doors so colonists and tame animals won't go through them.\\n\\nNote that this isn't a door lock. Doors are always locked, so enemies can't pass freely. Forbidding just directs your colonists not to use the door. Colonists who are going crazy might use the door anyway.",
    "The most important thing to do in ranged combat is to use cover.\\n\\nCover only works if your colonist is touching it, and it is between your colonist and the enemy.\\n\\nYou can also place colonists behind wall corners. They will lean out to shoot.\\n\\nMost things can be used as cover, but some things are better than others. Hiding behind a tree is better than nothing, but hiding behind sandbags is better than using a tree.",
    'You can form a caravan to send groups of people traveling across the planet!\\n\\nIn the WORLD tab, select your home base and click the "form caravan" button.',
    "You can assign colonists to tame a wild animal with the TAME designator.\\n\\nColonists will offer the animal food and attempt to tame it.\\n\\nBeware: Some animals can respond violently to failed taming attempts.",
    "You can assign a tame animal to be trained in specific skills on its TRAINING tab.\\n\\nAnimals can't be trained continuously; they need time between training sessions.",
    "The info card shows you detailed statistics about any item, person, or construction.\\n\\nSelect a person or item and open their info card with the 'i' button on the inspect pane.",
    "You can configure stockpiles and storage buildings by selecting them and opening the STORAGE TAB above the bottom-left inspector pane.\\n\\nIn the storage tab of a stockpile, you can expand categories to allow or deny specific items. Click the triangles to the left of category names.\\n\\nYou can change the PRIORITY of storage. Colonists will fill higher-priority storage first, and move items from lower to higher priority.",
    "The HOME AREA tells your colonists which area to clean and where to extinguish fires.\\n\\nDefine the HOME AREA with the Zones category under the Architect menu.",
    "Most foodstuffs will spoil after a relatively short time.\\n\\nTo prevent this, you can build a walk-in freezer.\\n\\nTo build a freezer, construct a closed room, and put one or two coolers into the wall. Set the coolers to a negative target temperature.\\n\\nFrozen foods won't ever spoil.",
    "Items left outdoors will slowly deteriorate.\\n\\nIf you want to store items long-term, keep them in a roofed room.",
    "You can configure how colonists should automatically respond to threats like predatory animals.\\n\\nChoose from FLEE, ATTACK, and IGNORE modes in the ASSIGN menu.",
    "Colonists and colony animals can be assigned to ALLOWED AREAS. This forbids them from taking destinations outside their allowed area.\\n\\nThis can be used to, for example, forbid colonists from going outside.\\n\\nYou can create multiple allowed areas and assign them to different colonists and animals.\\n\\nCreate, delete, and assign allowed areas in the RESTRICT tab.\\n\\nPaint allowed areas onto the map using the EXPAND ALLOWED AREA and CLEAR ALLOWED AREA designators in the Architect tab.",
    "To assign a medical operation, like organ harvesting or prosthetics installation, open a colonist's HEALTH tab, then switch to the OPERATIONS sub-tab.",
    "You can modify what time of day colonists should do different activities using the RESTRICT tab.",
    "One of the most important parts of RimWorld is choosing good work settings for your colonists.\\n\\nPoor work settings can leave essential work unfinished for a long time while colonists waste time on unimportant tasks.\\n\\nTo give more control over what work colonists do, you can use the Manual Priorities mode in the WORK tab.\\n\\nIn this mode, each colonist has a priority number for each work type. Colonists will do priority 1 work from left to right, then priority 2 work from left to right, and so on.\\n\\nIntelligent use of these setting is essential for a large, well-automated colony.",
    "More trader caravans will come to visit you if you're allied with more factions.\\n\\nIf you have no allies, no caravans will ever visit!\\n\\nYou can also pay allies to send trade caravans by calling them on the comms console.",
    "You can inspect the details of a tile by holding {Key:ShowCellInspector}. This displays the contents of a tile, room information, beauty information, and more.",
    'Colonists will automatically try to wear the newest, highest-quality apparel they can.\\n\\nYou don\'t need to manually assign each piece of apparel to colonists (though you can, if you wish).\\n\\nTo assign colonists restrictions on how to dress, open the ASSIGN tab, use the "Manage outfits" dialog box to design a new outfit, and then assign the outfit to colonists.',
    "Fires can easily burn down a colony. To defeat them, you must prepare before they happen.\r\n\\nThese design elements can help reduce the damage from fires:\r\n\\n1. Instead of constructing one super-building, build separate buildings with spaces in between.\r\n\\n2. Use less flammable materials. Wood is cheap and fast - but very flammable.\r\n\\n3. Build firebreaks to stop wildfires approaching your base. A strip of concrete floor 3 or 4 cells wide will generally stop an advancing fire.",
    "You can see a record of your colony's fortunes over time in the HISTORY tab at the bottom of the screen.",
    "You can click on the notifications in the top-left of the screen to instantly center the camera on their subject.",
    "You can see the exact calculations behind the accuracy of any shot.\\n\\nTo do so, select the shooter, then rest the mouse over the target. The tooltip will show the chance to hit, and a breakdown of the contribution of various to-hit chance multipliers.",
    "Friendly fire never occurs if the shooter is close to their ally.\\n\\nFor example, you can safely put a sword-wielding colonist directly in front of a gun-wielding one. The shooter will fire over their friend's shoulder.\\n\\nThis is a good way to combine ranged and melee fighters.",
    "Warning: The person you are trying to arrest may not go quietly.\\n\\nIf you arrest a non-colonist or a colonist from another faction, their entire faction may become your enemy. \\n\\nThis arrest has a {0} chance of succeeding, based on the social skill of the arrester.",
    "Note: This only designates that a colonist should flick the switch.\\n\\nNothing will actually happen until a colonist comes and flicks the switch by hand.",
    "Warning: RimWorld is designed to be played with one player colony at a time. Multiple player colonies are allowed as an experimental testing feature only.\\n\\nPlaying with multiple colonies will cause gameplay imbalances and split your focus, as well as likely causing performance slowdowns.\\n\\nWe recommend that you play with the one-colony maximum the game was designed for, at least for your first few games.",
    "Trading here requires the title of {0}.\\n\\nEnsure any trade caravan you send has someone with the title of {0} or higher.",
    "Use the trackpad to move the cursor and the right trigger button to click. Press {Key:Accept} to accept and {Key:Cancel} to go back.",
    "Press X to open the architect menu and {Key:TogglePause} to pause and resume the game. Use triggers for primary and secondary clicks. Zoom in and out and scroll through lists with {Key:MapZoom_In} and {Key:MapZoom_Out}. Press and hold the L5 back button to pan the camera with the touch screen and simulate secondary clicks.",
  ],
  helpTextController: [
    "Zoom with {Key:MapZoom_In} and {Key:MapZoom_Out}.\\n\\nPan with the D-pad or by using the touch screen.",
    "To rescue a wounded person, select a healthy colonist and then press the left trigger button on the wounded one.\\n\\nIf you rescue a non-colonist, they won't necessarily join your colony. They may simply walk away after healing. If you want to guarantee that they join, capture them and recruit them.",
    "When an enemy is downed on the ground but not dead, you can CAPTURE them.\\n\\nTo capture, select a colonist, press the left trigger button on the incapacitated enemy, and select Capture.\\n\\nYou'll need an extra bed marked for prisoner use.",
    "You can talk to people with ? over their heads.\\n\\nSelect a colonist and press the left trigger button on the character with ? attached to their head.",
    "Hold the left trigger button and drag to have your drafted fighters form a line.\\n\\nSpread out - bunched-up targets are easy to hit!",
    "To communicate, select a colonist and press the left trigger button on the comms console.",
    "When giving commands to pawns, you can queue up multiple orders by holding {Key:QueueOrder}. This also works when giving jobs to undrafted pawns.",
    "Move the camera by using the D-pad.",
    "Zoom in and out with {Key:MapZoom_In} and {Key:MapZoom_Out}.",
    "You can speed up time.\\n\\nTry controlling time with {Key:TimeSpeed_Faster} and {Key:TimeSpeed_Slower}, or with the time controls in the bottom right.",
    "Your colonists arrived with some weapons. Equip them!\\n\\nSelect each colonist and press the left trigger on the weapon you want them to equip.",
  ],
  opportunityDecays: ["false"],
  eventTagInitiate: [
    "PageStart-CreateWorldParams",
    "PageStart-SelectStartingSite",
    "PageStart-ConfigureStartingPawns",
    "ReorderPawnOptionalToStarting",
    "RandomizePawn",
    "GameStartDialogClosed",
    "InstructionDeactivated-MapCameraDolly",
    "InstructionDeactivated-MapCameraZoom",
    "InstructionDeactivated-Pause",
    "InstructionDeactivated-TimeControls",
    "InstructionDeactivated-MakeStockpile",
    "InstructionDeactivated-EndStockpileDesignating",
    "InstructionDeactivated-UnforbidStartingResources",
    "InstructionDeactivated-BuildRoomWalls",
    "InstructionDeactivated-BuildRoomDoor",
    "InstructionDeactivated-BuildBeds",
    "InstructionDeactivated-BuildTorchLamp",
    "InstructionDeactivated-BuildAnimalSleepingSpot",
    "InstructionDeactivated-BuildHorseshoesPin",
    "InstructionDeactivated-MakeGrowingZone",
    "InstructionDeactivated-SetToGrowRice",
    "InstructionDeactivated-EquipWeapons",
    "InstructionDeactivated-BuildFueledStove",
    "InstructionDeactivated-AddBillSimpleMeal",
    "InstructionDeactivated-MineSteel",
    "InstructionDeactivated-ChopTrees",
    "InstructionDeactivated-OpenMainTabWork",
    "InstructionDeactivated-ChangeWorkSettings",
    "InstructionDeactivated-BuildSimpleResearchBench",
    "InstructionDeactivated-OpenMainTabResearch",
    "InstructionDeactivated-SelectResearchProject",
    "InstructionDeactivated-ExpandAreaHome",
    "InstructionDeactivated-ExpandAreaBuildRoof",
    "InstructionDeactivated-BuildSandbags",
    "InstructionDeactivated-FinishSandbags",
    "InstructionDeactivated-DownRaider",
    "InstructionDeactivated-UndraftAll",
  ],
  startCentered: ["true"],
  rejectInputMessage: [
    "Click GENERATE to generate your world.",
    "Please choose a temperate forest site with no hills (light green with no brown dots).",
    'Please drag a character from the "left behind" group (at the bottom-left) into the "selected" group (at the upper-left).',
    "Please click the RANDOMIZE button to randomize the character.",
    "Please make a stockpile on the indicated area.",
    "Please allow your starting items.",
    "Please build wooden walls along the edges of the highlighted rectangle.",
    "Please build a wooden door over one of your room walls.",
    "Please build wooden beds inside the room.",
    "Please build a torch lamp inside the room.",
    "Please place an animal sleeping spot inside the room.",
    "Please place a horseshoes pin somewhere near the room.",
    "Please make a growing zone on the indicated area.",
    "Please set your growing zone to grow rice.",
    "Please have your colonists equip weapons.",
    "Please build the fueled stove inside the room you built earlier.",
    "Please add a bill to cook simple meals at your cook stove.",
    "Please use the 'mine' designator on the compacted steel.",
    "Please drag the 'chop wood' designator over some trees.",
    "Please open the 'Work' tab.",
    "Please open the 'Work' tab and change some settings.",
    "Please place a wooden simple research bench inside the room you built earlier.",
    "Please open the 'Research' tab.",
    "Please choose a research project.",
    "Please expand the home area a bit, just for practice.",
    "Please expand the build roof area a bit, just for practice.",
    "Please build sandbags in the highlighted area.",
    "Please wait for your colonists to finish building the sandbags.",
    "Please focus on winning the fight!",
    "Please un-draft your colonists.",
    "Please choose a storyteller in the Options menu to end the tutorial.",
  ],
  eventTagInitiateSource: ["ReorderCharacters"],
  textController: [
    "Here you are on the surface!\\n\\nNow try moving the camera around with the left joystick.\\n\\nTry it now!",
    "Great!\\n\\nYou can also zoom in and out with {Key:MapZoom_In} and {Key:MapZoom_Out}.\\n\\nTry it now!",
    "You can pause time.\\n\\nThis means you never need to rush. You can always pause and take your time to issue orders.\\n\\nTry pausing with the {Key:TogglePause} button, or by using the time controls in the bottom right.",
    "You can also speed up time.\\n\\nTry controlling time with {Key:TimeSpeed_Faster} and {Key:TimeSpeed_Slower}, or with the time controls in the bottom right.",
    "Press left trigger button to get out of stockpile designating mode.",
    "Your colonists will now build the room!\\n\\nNow they need somewhere to sleep. Place three BEDS inside the room.\\n\\nFind them in the FURNITURE category.\\n\\nYou can rotate the building by pressing the rotate buttons on the left.",
    "You can decide what plant your colonists should sow in a growing zone.\\n\\n1. Press left trigger button to exit architect mode.\\n2. Click your growing zone to select it.\\n3. Click the plant selector at the bottom and change it to rice.",
    "Have your colonists equip the starting weapons. To equip a weapon:\\n\\n1. Click a colonist to select them.\\n2. Hover over the weapon you want to equip and press left trigger button.\\n3. Click 'equip weapon' on the context menu.\\n\\nDo this for each colonist.",
    "Colonists need to be told what to cook.\\n\\nCooking orders are added on the stove itself. Once a bill has been created, colonists will do the work automatically.\\n\\n1. Wait for the stove to be built.\\n2. Click the stove to select it.\\n3. Open the BILLS tab.\\n4. Click ADD BILL.\\n5. Select COOK SIMPLE MEAL on the context menu.\\n6. Click the + button to increase the count to 10.\\n\\nRemember, you can speed up time if building is taking too long.\\n\\nYou can also select a colonist and press left trigger button on the stove to prioritize building it.",
    "I've now sent a raider to attack your colony!\\n\\n1. Pause the game by hitting {Key:TogglePause}!\\n2. Read the red letter in the bottom-right of the screen.\\n3. DRAFT your colonists by selecting them and hitting the DRAFT command.\\n4. Press left trigger button to send them to positions inside the sandbag square, touching the sandbags.\\n5. Unpause.\\n\\nColonists must be touching cover to benefit from it. Once you're in cover, wait for the attacker to approach. Your colonists will shoot automatically.",
  ],
  instructionClass: [
    "Instruction_LearnConcept",
    "Instruction_PlaceStockpile",
    "Instruction_UnforbidStartingResources",
    "Instruction_BuildRoomWalls",
    "Instruction_BuildRoomDoor",
    "Instruction_BuildInRoom",
    "Instruction_BuildNearRoom",
    "Instruction_PlaceGrowingZone",
    "Instruction_SetGrowingZonePlant",
    "Instruction_EquipWeapons",
    "Instruction_AddBill",
    "Instruction_MineSteel",
    "Instruction_ChopWood",
    "Instruction_ExpandAreaHome",
    "Instruction_ExpandAreaBuildRoof",
    "Instruction_BuildSandbags",
    "Instruction_FinishConstruction",
    "Instruction_DownRaider",
    "Instruction_UndraftAll",
  ],
  concept: ["CameraDolly", "CameraZoom", "Pause", "TimeControls", "WorkTab"],
  onMapInstruction: [
    "Place stockpile here\\n(drag corner-to-corner)",
    "Allow this",
    "Build walls",
    "Build a door over one wall",
    "Build three beds inside the room",
    "Build a torch lamp inside the room",
    "Build an animal sleeping spot\\ninside the room",
    "Build a horseshoes pin\\noutside the room",
    "Place growing zone here\\n(drag corner-to-corner)",
    "Set this growing zone to grow rice",
    "Equip this",
    "Build a fueled stove inside the room",
    "Select this",
    "Designate all this\\nfor mining",
    "Build a wooden simple research bench\\ninside the room",
    "Build sandbags here",
    "Send colonists here\\ntouching sandbags for cover",
  ],
  resetBuildDesignatorStuffs: ["true"],
  targetCount: ["3", "1", "10", "30"],
  recipeDef: ["CookMealSimple"],
  recipeTargetCount: ["10"],
  giveOnActivateDef: ["RawPotatoes"],
  giveOnActivateCount: ["75"],
  endTutorial: ["true"],
  repeatable: ["true"],
  favorability: ["Good", "Neutral", "VeryBad", "Bad"],
  perceivePriority: ["0", "1", "2"],
  windSpeedFactor: ["0.5", "1.5"],
  accuracyMultiplier: ["0.5", "0.8"],
  temperatureRange: ["0~100", "0~999", "-999~-0.5"],
  exposedThought: ["SoakingWet"],
  rainRate: ["1"],
  moveSpeedMultiplier: ["0.9", "0.8"],
  windSpeedOffset: ["1.25"],
  durationRange: ["15000~40000"],
  averageInterval: ["1200"],
  eventClass: ["WeatherEvent_LightningFlash", "WeatherEvent_LightningStrike"],
  snowRate: ["1.2", "0.8"],
  workType: [
    "Firefighter",
    "Patient",
    "Doctor",
    "PatientBedRest",
    "BasicWorker",
    "Warden",
    "Handling",
    "Cooking",
    "Hunting",
    "Construction",
    "PlantCutting",
    "Growing",
    "Art",
    "Mining",
    "Smithing",
    "Tailoring",
    "Crafting",
    "Hauling",
    "Cleaning",
    "Research",
  ],
  verb: [
    "extinguish",
    "receive treatment in",
    "tend to",
    "feed",
    "operate on",
    "rescue",
    "take to operate",
    "visit",
    "get bed rest in",
    "flick switch on",
    "open",
    "execute",
    "release",
    "take to bed",
    "deliver food for",
    "chat with",
    "rope",
    "slaughter",
    "milk",
    "shear",
    "tame",
    "train",
    "cook",
    "butcher",
    "fill",
    "brew",
    "hunt",
    "replace broken components in",
    "uninstall",
    "extract",
    "build roof",
    "remove roof",
    "construct",
    "work on",
    "replant",
    "deconstruct",
    "repair",
    "paint",
    "remove paint",
    "remove floor",
    "smooth",
    "harvest",
    "sow",
    "mine",
    "drill",
    "cut",
    "smith",
    "work",
    "fabricate",
    "tailor",
    "sculpt",
    "craft",
    "refine chemicals",
    "produce drugs",
    "stonecut",
    "refine",
    "rearm",
    "refuel",
    "unload",
    "load",
    "strip",
    "haul",
    "cremate",
    "work at",
    "take beer",
    "deliver to",
    "merge",
    "empty",
    "clear snow",
    "clean",
    "research",
    "scan",
    "plant",
    "Extinguish",
    "Become patient",
    "Care for",
    "Deal with",
    "Handle",
    "Cook",
    "Hunt",
    "Construct",
    "Grow",
    "Mine",
    "Cut",
    "Smith at",
    "Tailor at",
    "Do art at",
    "Craft at",
    "Haul",
    "Clean",
    "Research at",
  ],
  gerund: [
    "extinguishing",
    "receiving treatment in",
    "tending to",
    "feeding",
    "operating on",
    "rescuing",
    "taking to operate",
    "visiting",
    "getting bed rest in",
    "flicking switch on",
    "opening",
    "executing",
    "releasing",
    "taking to bed",
    "delivering food for",
    "chatting with",
    "roping",
    "slaughtering",
    "milking",
    "shearing",
    "taming",
    "training",
    "cooking at",
    "butchering at",
    "filling",
    "brewing at",
    "hunting",
    "replacing broken components in",
    "uninstalling",
    "extracting",
    "building roof",
    "removing roof",
    "constructing",
    "working on",
    "replanting",
    "deconstructing",
    "repairing",
    "painting",
    "removing paint from",
    "removing floor",
    "smoothing",
    "harvesting",
    "sowing",
    "mining",
    "drilling",
    "cutting",
    "smithing at",
    "working at",
    "fabricating things at",
    "tailoring at",
    "sculpting at",
    "crafting at",
    "refining chemicals at",
    "producing drugs at",
    "cutting stone blocks at",
    "refining at",
    "rearming",
    "refueling",
    "unloading",
    "loading",
    "stripping",
    "hauling",
    "cremating at",
    "taking beer from",
    "delivering to",
    "merging",
    "emptying",
    "clearing snow",
    "cleaning",
    "researching at",
    "scanning at",
    "studying",
    "planting",
  ],
  canBeDoneWhileDrafted: ["true"],
  autoTakeablePriorityDrafted: ["20"],
  forceFleck: ["FeedbackExtinguish"],
  priorityInType: [
    "110",
    "100",
    "90",
    "95",
    "80",
    "70",
    "60",
    "50",
    "40",
    "30",
    "20",
    "10",
    "500",
    "160",
    "150",
    "130",
    "85",
    "97",
    "120",
    "200",
    "202",
    "115",
    "75",
    "140",
    "19",
    "15",
    "9",
    "5",
  ],
  prioritizeSustains: ["true"],
  tendToHumanlikesOnly: ["true"],
  canBeDoneByMechs: ["false", "true"],
  feedHumanlikesOnly: ["true"],
  billGiversAllHumanlikes: ["true"],
  billGiversAllHumanlikesCorpses: ["true"],
  directOrderable: ["false"],
  tendToAnimalsOnly: ["true"],
  feedAnimalsOnly: ["true"],
  equivalenceGroup: [
    "FeedPatientAnimals",
    "ReleasePrisoner",
    "AssistInConstruction",
  ],
  billGiversAllAnimals: ["true"],
  billGiversAllAnimalsCorpses: ["true"],
  scanThings: ["false"],
  scanCells: ["true"],
  nonColonistsCanDo: ["true"],
  doesSmoothing: ["true"],
  scannerDef: ["LongRangeMineralScanner", "GroundPenetratingScanner"],
  pawnLabel: [
    "Firefighter",
    "Patient",
    "Doctor",
    "Bed rester",
    "Worker",
    "Warden",
    "Handler",
    "Cook",
    "Hunter",
    "Constructor",
    "Grower",
    "Miner",
    "Plant cutter",
    "Smith",
    "Tailor",
    "Artist",
    "Crafter",
    "Hauler",
    "Cleaner",
    "Researcher",
  ],
  gerundLabel: [
    "firefighting",
    "patienting",
    "doctoring",
    "resting in bed",
    "dealing with",
    "wardening",
    "handling",
    "cooking",
    "hunting",
    "constructing",
    "growing",
    "mining",
    "plant cutting",
    "smithing",
    "tailoring",
    "art",
    "crafting",
    "hauling",
    "cleaning",
    "researching",
  ],
  naturalPriority: [
    "1400",
    "1350",
    "1300",
    "1200",
    "1150",
    "1100",
    "1050",
    "1000",
    "950",
    "900",
    "700",
    "600",
    "500",
    "470",
    "450",
    "430",
    "400",
    "300",
    "200",
    "100",
  ],
  alwaysStartActive: ["true"],
  requireCapableColonist: ["true"],
  disabledForSlaves: ["true"],
  ancientSitesPer100kTiles: ["10~20"],
  maximumSiteCurve: ["15"],
  minimumChain: ["4"],
  maximumSegmentCurviness: ["1.5"],
  useDynamicDrawer: ["true"],
  allowCaravanIncidentsWhichGenerateMap: ["true"],
  canBePlayerHome: ["true"],
  mapGenerator: ["EscapeShip"],
  saved: ["false"],
  LanguageData: [
    "\r\n  \r\n\r\n\r\n",
    "\r\n  \r\n  \r\n\r\n\r\n  \r\n  \r\n\r\n  \r\n  \r\n\r\n",
  ],
  ClickToJumpToProblem: ["Click to jump to problem"],
  BreakRiskMinor: ["Minor break risk"],
  BreakRiskMajor: ["Major break risk"],
  BreakRiskExtreme: ["Extreme break risk"],
  BreakRiskMinorDesc: [
    "These colonists are in a poor mood and may have a minor mental break at any time:\\n\\n{0}",
  ],
  BreakRiskMajorDesc: [
    "These colonists are in a very poor mood and may have a major mental break at any time:\\n\\n{0}",
  ],
  BreakRiskExtremeDesc: [
    "These colonists are critically stressed and may have an extreme (and possibly violent) mental break at any moment:\\n\\n{0}",
  ],
  BreakRiskDescEnding: [
    "Check these colonists' Needs tab to see what's bothering them.\\n\\nTo make colonists feel better, you can do things like make them fancy meals, give them more recreation hours per day and nicer recreation objects, place them in beautiful environments, have them drink and smoke, and much more.",
  ],
  ColonistNeedsRescue: ["Colonist needs rescue"],
  ColonistsNeedRescue: ["Colonists need rescue"],
  ColonistsNeedRescueDesc: [
    "These colonists are incapacitated on the ground:\\n\\n{0}\\nSend another colonist to rescue them and carry them back to bed.\\n\\n(To rescue, select another colonist, then right click on the victim and select Rescue.)",
  ],
  ColonistsNeedRescueDescController: [
    "These colonists are incapacitated on the ground:\\n\\n{0}\\nSend another colonist to rescue them and carry them back to bed.\\n\\n(To rescue, select another colonist, then press the left trigger button on the victim and select Rescue.)",
  ],
  NeedDefenses: ["Need defenses"],
  NeedDefensesDesc: [
    "You've been here some time and have probably been seen. Pirate raids will start soon.\\n\\nYou should prepare defenses, like sandbags or traps.",
  ],
  NeedDoctor: ["Need doctor"],
  NeedDoctorDesc: [
    "These colonists need medical care, but you have no healthy colonists assigned as doctors.\\n\\n{0}\\nAssign a healthy colonist to the Doctor work type. If left untreated, wounds may never heal properly and may become permanent.",
  ],
  NeedMiner: ["Need miner"],
  NeedMinerDesc: [
    "You have designated some rocks to be mined, but no colonist has the Mining work type.\\n\\nAssign a colonist the Mining work type.",
  ],
  NeedWarden: ["Need warden"],
  NeedWardenDesc: [
    "You have a prisoner, but no colonist has the Warden work type.\\n\\nAssign a colonist the Warden work type.",
  ],
  LowFood: ["Low food"],
  LowFoodDesc: [
    "You are dangerously low on food.\\n\\n    Full bars worth of food in storage: {0}\\n    Colonists and prisoners getting food: {1}\\n    Days worth of food in storage: {2}\\n\\nGrow, buy, find, or kill some food.",
  ],
  LowMedicine: ["Low medicine"],
  LowMedicineDesc: [
    "You only have {0} medications left in storage.\\n\\nBuy more medicine from traders.",
  ],
  NoMedicineDesc: [
    "You have no medicine left in storage.\\n\\nBuy more medicine from traders.",
  ],
  NeedColonistBeds: ["Need colonist beds"],
  NeedColonistBedsDesc: [
    "You have more colonists than you have colonist beds. Someone will lack a place to sleep.\\n\\nEither make more beds, or change a prisoner bed to a colonist bed.\\n\\nIf you have no resources, sleeping spots are free and can be placed instantly.",
  ],
  AlertColonistLeftUnburied: ["Colonist left unburied"],
  AlertColonistLeftUnburiedDesc: [
    "A colonist is left unburied.\\n\\nThis may negatively affect your colonists' mood.",
  ],
  HunterLacksWeapon: ["Hunter lacks ranged weapon"],
  HunterLacksWeaponDesc: [
    "A colonist is assigned to work as a hunter but does not have a ranged weapon.\\n\\nThey will not hunt until they are carrying a ranged weapon.\\n\\nThe following colonists are assigned as hunters and need ranged weapons",
  ],
  AlertTatteredApparel: ["Tattered apparel"],
  AlertTatteredApparelDesc: [
    "These colonists are wearing tattered apparel, which is making them sad:\\n\\n{0}\\nGet them some apparel that isn't so badly damaged.\\n\\nYou can tailor apparel at a crafting spot or tailoring table, or buy it from traders.",
  ],
  AlertUnhappyNudity: ["Unhappy nudity"],
  AlertUnhappyNudityDesc: [
    "These colonists are nude and not happy about it:\\n\\n{0}\\nGet them some clothes.\\n\\nYou can tailor apparel at a crafting spot or tailoring table, or buy it from traders.",
  ],
  Starvation: ["Starvation"],
  StarvationDesc: [
    "These colonists are starving:\\n\\n{0}\\nGet them some food.",
  ],
  StarvationAnimals: ["Animal starvation"],
  StarvationAnimalsDesc: [
    "These colony animals are starving:\\n\\n{0}\\nGet them some food.",
  ],
  Exhaustion: ["Exhaustion"],
  ExhaustionDesc: [
    "These colonists are exhausted and need rest:\\n\\n{0}\\nGet them some rest. They'll need a bed marked for colonist use. Also, make sure they're not drafted.",
  ],
  NeedFoodHopper: ["Need food hopper"],
  NeedFoodHopperDesc: [
    "You have a nutrient dispenser with no hopper next to it.\\n\\nTo work, paste dispensers must draw from an adjacent hopper filled with raw food.\\n\\nBuild a hopper adjacent to the dispenser.",
  ],
  NeedMealSource: ["Need meal source"],
  NeedMealSourceDesc: [
    "You have no way of preparing proper meals from raw food.\\n\\nBuild a stove, campfire, or nutrient dispenser.\\n\\n(It cannot be in a prison cell, otherwise colonists cannot use it.)",
  ],
  NeedJoySource: ["Need recreation variety"],
  NeedJoySourceDesc: [
    "There are only {0} different recreation types available in {1}, but at the current expectations level ({2}), colonists need {3} different kinds of recreation to remain satisfied. Provide recreation variety supplying a new, different kind of recreation.\\n\\n{4}\\n\\n{5}\\n\\nNote: You can check the recreation type of any item in its stats page, accessible with the 'i' button.",
  ],
  AvailableRecreationTypes: ["Available recreation types"],
  MissingRecreationTypes: ["Missing recreation types"],
  CurrentExpectationsAndRecreation: [
    "At current expectations ({0}), each tolerance falls by {1} per day awake. Having {2} recreation types is recommended.",
  ],
  bored: ["bored"],
  Boredom: ["Boredom"],
  BoredomDesc: [
    "These people are either in need of recreation or are assigned to recreation, but are bored of every available source of recreation:\\n\\n{0}\\n\\nGet them some more recreation variety.\\n\\nCurrently available recreation types for {PAWN_labelShort}:\\n\\n{2}",
  ],
  NeedBatteries: ["Need batteries"],
  NeedBatteriesDesc: [
    "You have a solar or wind generator, but no batteries. You'll lose power every time the sun goes down or the wind calms.",
  ],
  NeedBatteriesResearchedDesc: [
    "Build a battery or two to guarantee sustained power.",
  ],
  NeedBatteriesNotResearchedDesc: [
    "Research batteries and build a couple to guarantee sustained power.",
  ],
  BrawlerHasRangedWeapon: ["Brawler has ranged weapon"],
  BrawlerHasRangedWeaponDesc: [
    "One of your colonists has the Brawler personality trait, but is carrying a ranged weapon. This will make them very unhappy.",
  ],
  ShieldUserHasRangedWeapon: ["Shield user has ranged weapon"],
  ShieldUserHasRangedWeaponDesc: [
    "One of your colonists has a shield belt and is carrying a ranged weapon. They will not be able to fire their weapon through the shield (except at targets who are already touching them).",
  ],
  NeedResearchProject: ["Need research project"],
  NeedResearchProjectDesc: [
    "You have the equipment to do research but have not selected a project.\\n\\nOpen the research menu and select a project.",
  ],
  ColonistsIdle: ["{0} colonists idle"],
  ColonistsIdleDesc: [
    "These colonists are wandering idly:\\n\\n{0}\\nYou should probably find them something productive to do.",
  ],
  CaravanIdle: ["Caravan idle"],
  CaravanIdleDesc: [
    "These caravans are waiting for you to set their next destination:\\n\\n{0}",
  ],
  ColonistNeedsTreatment: ["Medical treatment needed"],
  ColonistNeedsTreatmentDesc: [
    "These people need medical treatment. Without it, they may die of their wounds, or their wounds may become permanent.\\n\\n{0}\\nTreat them by sending them to a medical bed.\\n\\n(First, assign a medical bed by selecting it and toggling it into a medical bed. Then, select the wounded person and right-click on the medical bed to make them a patient.)",
  ],
  ColonistNeedsTreatmentDescController: [
    "These people need medical treatment. Without it, they may die of their wounds, or their wounds may become permanent.\\n\\n{0}\\nTreat them by sending them to a medical bed.\\n\\n(First, assign a medical bed by selecting it and toggling it into a medical bed. Then, select the wounded person and press the left trigger button on the medical bed to make them a patient.)",
  ],
  AlertHypothermia: ["Hypothermia"],
  AlertHypothermiaDesc: [
    "These colonists are suffering from hypothermia:\\n\\n{0}\\nMake sure their clothing is appropriate for the season and that indoor spaces are properly heated.",
  ],
  PatientsAwaitingMedicalOperation: ["{0} patients await medical operation"],
  PatientsAwaitingMedicalOperationDesc: [
    "These patients await medical operation:\\n\\n{0}\\nMake sure you have all necessary medical tools and a free doctor available.",
  ],
  FireInHomeArea: ["Fire!"],
  FireInHomeAreaDesc: ["There is a fire in the home area."],
  PawnsWithLifeThreateningDisease: ["Medical emergency"],
  PawnsWithLifeThreateningDiseaseDesc: [
    "People are at risk of death because of severe illness:\\n\\n{0}\\nMake sure that they get the best medical care possible.",
  ],
  PawnsWithLifeThreateningDiseaseAmputationDesc: [
    "People are at risk for death because of severe illness:\\n\\n{0}\\nIf possible, consider amputating or replacing infected limbs in order to keep colonists alive.",
  ],
  BilliardsNeedsSpace: ["Billiards needs space"],
  BilliardsNeedsSpaceDesc: [
    "One of your billiards table is adjacent to an obstruction that will prevent colonists from using it.\\n\\nA billiards table needs clear space around it on all sides to be usable.",
  ],
  ChessTablesNeedChairs: ["Chess table needs chairs"],
  ChessTablesNeedChairsDesc: [
    "One of your chess tables does not have any adjacent chairs.\\n\\nBuild adjacent chairs or stools to allow your colonists to use the chess table. Up to two people can use a chess table at once.",
  ],
  PokerTablesNeedChairs: ["Poker table needs chairs"],
  PokerTablesNeedChairsDesc: [
    "One of your poker tables does not have any adjacent chairs.\\n\\nBuild adjacent chairs or stools to allow your colonists to use the poker table. Up to eight people can use a poker table at once.",
  ],
  HunterHasShieldAndRangedWeapon: ["Hunter has shield and ranged weapon"],
  HunterHasShieldAndRangedWeaponDesc: [
    "One of your hunters is using a ranged weapon and wearing a shield belt which prevents shooting at range.\\n\\nThey won't be able to hunt unless the shield is removed.",
  ],
  NeedWarmClothes: ["Need warm clothes"],
  NeedWarmClothesDesc1: [
    "At least {0} of your colonists will lack warm clothes when the cold season comes.",
  ],
  NeedWarmClothesDesc1All: [
    "All of your colonists will lack warm clothes when the cold season comes.",
  ],
  NeedWarmClothesDesc2: [
    "The outdoor temperature is going to reach {0}.\\n\\nYou can tailor warm clothes at the tailoring bench, or buy them from traders.",
  ],
  ImmobileCaravan: ["Immobile caravan"],
  ImmobileCaravanDesc: [
    "One of your caravans is immobile because it carries too much.\\n\\nYou can make the caravan mobile again by abandoning some items in the ITEMS tab.",
  ],
  BuildingCantBeUsedRoofed: ["Building unusable due to roof"],
  BuildingCantBeUsedRoofedDesc: [
    "One or more of your buildings can only be used if not roofed, but there is a roof over it. The building(s) won't be usable until you remove the roof.",
  ],
  AlertHeatstroke: ["Heatstroke"],
  AlertHeatstrokeDesc: [
    "The following people are suffering from heatstroke:\\n\\n{0}\\nGet them to a cooler area. You can cool down rooms with passive coolers or electrical coolers. Deep underground spaces are also naturally cool, if separated from the outdoors by a door.",
  ],
  QuestPartMoodBelowThreshold: ["Guest unhappy"],
  QuestPartMoodBelowThresholdDesc: [
    "The quest {0} requires you to keep this person in a good mood. However, their mood is poor. Take some action to make them feel better:\\n\\n{1}",
  ],
  QuestPartShuttleLeaveDelay: ["Shuttle leaving in {0}"],
  QuestPartShuttleLeaveDelayDesc: [
    "The shuttle will leave in {1}. The quest {0} requires you to load the following people or items onto the shuttle before it leaves:\\n\\n{2}",
  ],
  QuestPartShuttleLeaveDelayDescHidden: ["The shuttle will leave in {0}."],
  QuestPartShuttleArriveDelay: ["Shuttle arriving in {0}"],
  QuestPartShuttleArriveDelayDesc: [
    "A shuttle will arrive in {1}. The quest {0} requires you to load the following people or items onto the shuttle before it leaves:\\n\\n{2}",
  ],
  QuestPartShuttleArriveDelayDescHidden: ["A shuttle will arrive in {0}."],
  DisallowedBuildingInsideMonument: ["Monument will be destroyed"],
  DisallowedBuildingInsideMonumentDesc: [
    "You've built a disallowed building inside one of your monuments. The monument will be considered destroyed in {0}.",
  ],
  ActivatorCountdown: ["Countdown activator {0}"],
  ActivatorCountdownDesc: [
    "There is a countdown activator ticking down, preparing to awaken nearby mechanoids.",
  ],
  ActivatorCountdownMultiple: ["{0} countdown activators"],
  ActivatorCountdownDescMultiple: [
    "There are {0} countdown activators ticking down, preparing to awaken nearby mechanoids.",
  ],
  QuestExpiresSoon: ["Quest expires in {0}"],
  QuestExpiresSoonDesc: ["The quest '{0}' will expire in {1}."],
  AlertAnimalFilth: ["Animal filth"],
  AlertAnimalFilthDesc: [
    "A filth-producing animal is indoors on a clean floor.\\n\\nAnimals produce a very large amount of filth when moving around on normal floors. Keep filth-producing animals outdoors, or on straw matting where they will produce far less filth.\\n\\nYou can check an animal's filth production rate in its stats by clicking the 'i' button.\\n\\nThese animals are the problem:\\n{0}",
  ],
  AlertAnimalPenNeeded: ["Pen needed"],
  AlertAnimalPenNeededDesc: [
    "Some of your tame animals are roamers. If not kept in a pen or roped to a caravan hitching spot, they will wander away.",
  ],
  AlertAnimalPenNeededNoHandlers: [
    "You do not have any handlers to take animals to a pen.\\n\\nAssign a colonist to the Handling work type.",
  ],
  AlertAnimalPenNeededDescExplanation: [
    "Create an animal pen by building a pen marker inside a fenced, barricaded, or walled area. Select the pen marker to see which animals it accepts and how many its pen can support.\\n\\nYour animal handlers will bring animals to their assigned pen automatically.\\n\\nA pen needs a door or gate to admit animals.",
  ],
  AlertAnimalPenNotEnclosed: ["Pen not enclosed"],
  AlertAnimalPenNotEnclosedDesc: [
    "An animal pen marker is not enclosed.\\n\\nEnclose the pen using fences, barricades, gates, walls, or doors to prevent animals from wandering out.\\n\\nIf you have only unenclosed pen markers, your handlers can still lead wandering animals back home - but this must be repeated from time to time when the animals wander away once again.",
  ],
  AlertPredatorInAnimalPen: ["{ANIMAL_labelShort} in animal pen"],
  AlertPredatorInAnimalPenDesc: [
    "A predatory {ANIMAL_labelShort} has wandered into an animal pen.\\n\\nIt may decide to hunt your animals.\\n\\nYou can kill it, or wait and hope it leaves.",
  ],
  AlertAnimalIsRoaming: ["Animal wandering away"],
  AlertAnimalIsRoamingDesc: [
    "Some of your tame animals are roamers and have started to wander. If they reach the edge of the map, they will eventually leave.\\n\\nIf you have an enclosed animal pen, your animal handlers can bring the animal back. Animals in an animal pen will not roam.\\n\\nThe following animals are roaming:\\n\\n{0}",
  ],
  AlertPennedAnimalHungry: ["Hungry pen animals"],
  AlertPennedAnimalHungryDesc: [
    "Some of your penned animals are hungry.\\n\\nSelect a pen marker and use the Food tab to see more detail.\\n\\nGrass-eating animals may need a larger pen to provide enough grass. Other animals may need to be supplied with haygrass or similar food using a stockpile.\\n\\nThe following penned animals are hungry:\\n\\n{0}",
  ],
  AlertHitchedAnimalHungryNoFood: ["Hungry hitched animal"],
  AlertHitchedAnimalHungryNoFoodDesc: [
    "Some animals tied to hitching spots are hungry. There may not be any suitable food within their reach.\\n\\nBring them food, or remove the hitching spot so they can find food on their own.\\n\\nThe following hitched animals are hungry:\\n\\n{0}",
  ],
  AlertTimedRaidsArrivingIn: ["Raids arriving in {0}"],
  AlertTimedRaidsArrivingInDesc: [
    "Enemies have been attracted to the following sites and will start arriving in force soon.\\n\\n{0}",
  ],
  AlertTimedRaidsArrivingAt: ["Arriving at {0} in {1}"],
  FactionWillBecomeHostileIfNotLeavingWithin: [
    "Faction will become hostile if you stay",
  ],
  FactionWillBecomeHostileIfNotLeavingWithinDesc: [
    "These factions will become hostile if you stay for longer at their settlement or outpost:\\n\\n{0}",
  ],
  AlertMinifiedTreeAboutToDie: ["{0} trees dying"],
  AlertMinifiedTreeAboutToDieDesc: [
    "{0} extracted trees are going to die is less than a day. This will make some colonists unhappy because of their beliefs.\\n\\nYou can prevent this by replanting these trees.",
  ],
  NeedResearchBench: ["Need research bench"],
  NeedResearchBenchDesc: [
    "You have an active research project '{0}'. This project requires you to build {1}.",
  ],
  MainPageCredit: ["A story generator by Tynan Sylvester"],
  Credits_Developers: ["Engineering"],
  Credit_MusicAndSound: ["Audio"],
  Credit_GameArt: ["Art"],
  Credit_MenuArt: ["Menu art"],
  Credits_AdditionalDevelopment: ["Additional engineering"],
  Credits_TitleCommunity: ["Community volunteers"],
  Credits_TitleTester: ["Community testers"],
  Credits_TitleMods: ["Mods"],
  Credit_ModDonation: ["Mod donor"],
  Credit_WritingDonation: ["Writing donor"],
  Credit_Moderator: ["Moderator"],
  Credit_WikiMaster: ["Wiki master"],
  Credit_TestLead: ["Test lead"],
  Credits_TitleLanguage: ["{0} language"],
  ThanksForPlaying: ["Thanks for playing!"],
  Credit_SpecialThanks: ["Special thanks"],
  ClockTime: ["Time"],
  ClockDate: ["Date"],
  ClockYear: ["Year"],
  DateReadoutTip: [
    "Days passed since your arrival: {0}\\nCurrent quadrum: {4}\\nLocal season: {2}\\n\\nThe year is divided into 4 quadrums of {3} days each. Quadrums are the same everywhere, while seasons are different in different places.\\n\\nLocal seasons for each quadrum:\\n{5}",
  ],
  FullDate: ["{0} of {1}, {2}"],
  ShortDate: ["{0} {1} {2}"],
  DateReadout: ["{0} of {1}, {2}"],
  SeasonFullDate: ["{0} of {1}"],
  WholeYear: ["Whole year"],
  DesignatorCancel: ["Cancel"],
  DesignatorCancelDesc: [
    "Cancel designated building, mining, hauling, harvesting, and all other designations.",
  ],
  DesignatorCutPlants: ["Cut plants"],
  DesignatorCutPlantsDesc: [
    "Marks plants to be cut and destroyed. The plant will be completely removed, and any food or resource yield will be harvested.",
  ],
  DesignatorDeconstruct: ["Deconstruct"],
  DesignatorDeconstructDesc: [
    "Deconstruct this and reclaim part of its resources.",
  ],
  DesignatorUninstall: ["Uninstall"],
  DesignatorUninstallDesc: [
    "Uninstall this so it can be moved, sold, or installed somewhere else.",
  ],
  DesignatorExtractTree: ["Extract tree"],
  DesignatorExtractTreeDesc: [
    "Extract this tree while keeping it alive so it can be replanted somewhere else.",
  ],
  DesignatorHarvest: ["Harvest"],
  DesignatorHarvestDesc: [
    "Marks plants to be harvested for their food or other products.",
  ],
  DesignatorHarvestWood: ["Chop wood"],
  DesignatorHarvestWoodDesc: ["Marks trees to be chopped down for wood."],
  DesignatorHaulThings: ["Haul things"],
  DesignatorHaulThingsDesc: [
    "Mark rock chunks and other items to be hauled to dumping areas. Not needed for things like food or corpses, which are always haulable.",
  ],
  MustHaulHaulables: [
    "Can only designate haulable but non-always-hauled things (like rock chunks).",
  ],
  DesignatorHunt: ["Hunt"],
  DesignatorHuntDesc: ["Mark animals to be hunted by your hunters."],
  DesignatorMine: ["Mine"],
  DesignatorMineDesc: ["Designate areas of rock to be mined out."],
  DesignatorSmoothSurface: ["Smooth surface"],
  DesignatorSmoothSurfaceDesc: [
    "Designate rough stone terrain and walls to be smoothed.",
  ],
  DesignatorPlan: ["Plan"],
  DesignatorPlanDesc: [
    "Place planning designations. These don't do anything except help you plan future expansions.",
  ],
  DesignatorPlanRemove: ["Remove plans"],
  DesignatorPlanRemoveDesc: ["Remove planning designations."],
  DesignatorForbid: ["Forbid"],
  DesignatorForbidDesc: [
    "Mark items as forbidden. Colonists will not be able to interact with the designated items.",
  ],
  DesignatorUnforbid: ["Allow"],
  DesignatorUnforbidDesc: [
    "Mark items as not forbidden. Colonists will be able to interact with the designated items.",
  ],
  DesignatorAreaHomeExpand: ["Expand home area"],
  DesignatorAreaHomeExpandDesc: [
    "Colonists will repair buildings, clean floors, and extinguish fires only in the home area.",
  ],
  DesignatorAreaHomeClear: ["Clear home area"],
  DesignatorAreaHomeClearDesc: [
    "Removes a home area. Colonists will no longer clean, repair, or extinguish fires here.",
  ],
  DesignatorAreaBuildRoofExpand: ["Build roof area"],
  DesignatorAreaBuildRoofExpandDesc: [
    "Colonists will build roofs in this area.",
  ],
  DesignatorAreaNoRoofExpand: ["Remove roof area"],
  DesignatorAreaNoRoofExpandDesc: [
    "Colonists will remove roofs in this area (except overhead mountain, which cannot be removed).",
  ],
  DesignatorAreaIgnoreRoofExpand: ["Ignore roof area"],
  DesignatorAreaIgnoreRoofExpandDesc: [
    "Colonists will ignore roofs in this area.",
  ],
  DesignatorAreaSnowClearExpand: ["Snow removal area"],
  DesignatorAreaSnowClearExpandDesc: [
    "Create an area which colonists will try to keep clear of snow.",
  ],
  DesignatorAreaSnowClearClear: ["Clear snow removal area"],
  DesignatorAreaSnowClearClearDesc: [
    "Removes a snow removal area. Colonists will no longer try to keep this area clear of snow.",
  ],
  DesignatorExpandAreaAllowed: ["Expand allowed area"],
  DesignatorExpandAreaAllowedDesc: [
    "Expand an allowed area.\\n\\nAllowed areas are defined areas you can assign to colonists. Colonists will not accept work or fulfill their needs outside their allowed area.",
  ],
  DesignatorClearAreaAllowed: ["Clear allowed area"],
  DesignatorClearAreaAllowedDesc: [
    "Clear cells from an allowed area.\\n\\nAllowed area are defined areas you can assign to colonists. Colonists will not accept work or fulfill their needs outside their allowed area.",
  ],
  ManageAreas: ["Manage areas..."],
  ManageAutoSlaughter: ["Manage auto-slaughter..."],
  DesignatorGrowingZoneDesc: [
    "Create a zone where your colonists will try to grow a certain kind of plant.",
  ],
  DesignatorZoneCreateStorageResourcesDesc: [
    "Create a stockpile where your colonists will store resources.\\nThis tool can also expand any existing stockpile.",
  ],
  DesignatorZoneCreateStorageDumpingDesc: [
    "Create a stockpile where your colonists will store junk.\\nThis tool can also expand any existing stockpile.",
  ],
  DesignatorZoneDelete: ["Shrink zones"],
  DesignatorZoneDeleteSingular: ["Shrink zone"],
  DesignatorZoneDeleteDesc: [
    "Remove zones, like stockpile zones or growing zones.",
  ],
  DesignatorZoneExpand: ["Expand zone"],
  DesignatorClaim: ["Claim"],
  DesignatorClaimDesc: [
    "Claim neutral structures for the colony, including ancient ruins and abandoned siege bases. Claimed structures can be repaired and maintained by your colonists.",
  ],
  DesignatorRemoveFloor: ["Remove floor"],
  DesignatorRemoveFloorDesc: [
    "Remove floors to reveal the terrain underneath.",
  ],
  DesignatorRemoveBridge: ["Remove bridge"],
  DesignatorRemoveBridgeDesc: [
    "Remove bridges to reveal the terrain underneath.",
  ],
  DesignatorStrip: ["Strip"],
  DesignatorStripDesc: ["Strip apparel from corpses and the wounded."],
  DesignatorOpen: ["Open"],
  DesignatorOpenDesc: ["Open containers."],
  DesignatorSlaughter: ["Slaughter"],
  DesignatorSlaughterDesc: ["Slaughter a tame animal."],
  DesignatorTame: ["Tame"],
  DesignatorTameDesc: ["Tame a wild animal."],
  DesignatorReleaseAnimalToWild: ["Release to wild"],
  DesignatorReleaseAnimalToWildDesc: ["Release an animal back into the wild."],
  DesignatorStudy: ["Study"],
  DesignatorStudyDesc: ["Study this object to learn more about it."],
  DesignatorPaintBuilding: ["Paint building..."],
  DesignatorPaintBuildingDesc: [
    "Designate walls and buildings to be painted using dye from tinctoria plants, which you can grow. Only certain buildings can be painted.",
  ],
  DesignatorPaintFloor: ["Paint floor..."],
  DesignatorPaintFloorDesc: [
    "Designate floors to be painted using dye from tinctoria plants, which you can grow. Only certain floors can be painted.",
  ],
  DesignatorRemovePaint: ["Remove paint"],
  DesignatorRemovePaintDesc: [
    "Remove paint from walls, buildings, and floors.",
  ],
  DesignatorRemoveFloorPaint: ["Remove floor paint"],
  DesignatorRemoveFloorPaintDesc: ["Remove paint from floors."],
  Paint: ["Paint"],
  Color: ["Color"],
  DesignatorEyedropper: ["Color picker"],
  GrabExistingColor: ["Grab existing color"],
  DesignatorEyeDropperDesc_Paint: ["Grab a color from an existing building."],
  DesignatorEyeDropperDesc_Carpet: ["Grab a color from an existing carpet."],
  SelectAPaintedBuilding: ["Select a painted building."],
  SelectColoredFloor: ["Select colored carpet."],
  Grab: ["Grab"],
  GrabbedColor: ["Grabbed color"],
  UnchosenStuff: ["Unchosen material"],
  TooCloseToMapEdge: ["Too close to map edge."],
  OutOfBounds: ["Out of bounds."],
  CannotPlaceInUndiscovered: ["Cannot place in undiscovered areas."],
  InteractionSpotBlocked: ["Interaction spot is blocked by {1_labelShort}."],
  InteractionSpotOutOfBounds: ["Interaction spot is out of bounds."],
  InteractionSpotWillBeBlocked: [
    "Interaction spot will be blocked by {1_labelShort}.",
  ],
  WouldBlockInteractionSpot: ["{0} would block {1}'s interaction spot."],
  TerrainIsAlready: ["The terrain here is already {0}."],
  SurfaceBeingSmoothed: ["The surface is already marked for smoothing."],
  IdenticalThingExists: ["Identical thing already exists here."],
  IdenticalBlueprintExists: ["Identical blueprint already exists here."],
  TerrainCannotSupport: ["{0_label} cannot be built on this terrain."],
  TerrainCannotSupport_TerrainAffordance: [
    "{0_label} requires terrain that supports: {1_label}",
  ],
  TerrainCannotSupport_TerrainAffordanceFromStuff: [
    "{0_label} (when made of {2_label}) requires terrain that supports: {1_label}",
  ],
  SpaceAlreadyOccupied: ["Space already occupied."],
  SpaceBeingSmoothed: ["Space being smoothed."],
  TerrainMustBeRemovable: ["Must target a removable floor."],
  MustBeOnMovingWater: ["The waterwheel must be on moving water."],
  InteractionSpotWillOverlap: [
    "Interaction spot will overlap with the interaction spot of {1_labelShort}.",
  ],
  InteractionSpotOverlaps: [
    "Interaction spot overlaps with the interaction spot of {1_labelShort}.",
  ],
  CannotPlaceMonumentOver: ["Cannot place monument over: {0}."],
  CannotPlaceMonumentOnTerrain: ["Cannot build on: {0}."],
  MonumentOverlapsBuilding: ["Cannot place monument over: {0}."],
  MonumentAdjacentToBuilding: ["Monument cannot be placed adjacent to: {0}."],
  CannotBePlantedHere: ["Cannot be planted here"],
  ExpandOrCreateZone: ["Expand {0} or\\nCreate new {1}"],
  CreateNewZone: ["Create new {0}"],
  TransmitsPower: ["Transmits power"],
  ConstructionNeeded: ["Construction needed"],
  NoColonistWithSkillTip: ["None of your {0} have this skill."],
  SkillNeededForConstructing: ["{0} needed"],
  NoColonistWithAllSkillsForConstructing: [
    "None of your {0} have all skills required.",
  ],
  AllColonistsWithSkillHaveDisabledConstructingTip: [
    "All of your {0} who have this skill are not assigned to {1}.",
  ],
  Confirm: ["Confirm"],
  GoBack: ["Go back"],
  WantToContinue: ["Do you want to continue?"],
  OK: ["OK"],
  Close: ["Close"],
  Accept: ["Accept"],
  Cancel: ["Cancel"],
  Reset: ["Reset"],
  ResetAll: ["Reset all"],
  Disable: ["Disable"],
  Modify: ["Modify"],
  ConfirmSettle: ["Settle here anyways?"],
  Add: ["add"],
  CannotShoot: ["Cannot shoot"],
  GameUpdatedToNewVersionInitial: [
    "RimWorld has been updated from version {0} to version {1}.",
  ],
  GameUpdatedToNewVersionSavesIncompatible: [
    "This may cause saved games and mods from the old version to stop working.",
  ],
  GameUpdatedToNewVersionSavesCompatible: [
    "Saved games from the old version should be compatible, however some mods may stop working.",
  ],
  GameUpdatedToNewVersionNonSteam: [
    "Since this is a DRM-free copy, you can install the game twice in two different folders, to be able to play both old and new versions.",
  ],
  GameUpdatedToNewVersionSteam: [
    'If you wish to continue with the old version, you can opt in using Steam\'s "Betas" feature.\\n\\n  1. In the Steam library, right-click RimWorld.\\n  2. Click Properties.\\n  3. Click the Betas tab.\\n  4. Select the version you want from the drop-down menu.',
  ],
  GameUpdatedToNewVersionSteamController: [
    'If you wish to continue with the old version, you can opt in using Steam\'s "Betas" feature.',
  ],
  RecoveredFromErrorsDialogTitle: [
    "Recovered from incompatible or corrupted mods errors",
  ],
  RecoveredFromErrorsText: [
    "It seems that some of the active mods were causing errors.\\n\\nThey were incompatible with each other, designed for a different version of RimWorld, or corrupted.\\n\\nAll mods have been disabled and can be activated again in the mods dialog.",
  ],
  ErrorWhileLoadingAssetsTitle: ["Error while loading assets"],
  ErrorWhileLoadingAssets: [
    "An error occurred while loading game assets. See error log for more information.",
  ],
  ErrorWhileLoadingAssets_ModsInfo: [
    "The game is currently running with custom mods - they may or may not cause these problems.",
  ],
  ErrorWhileGeneratingMapTitle: ["Error while generating a map"],
  ErrorWhileGeneratingMap: [
    "An error occurred while generating a new map. See error log for more information.",
  ],
  ErrorWhileLoadingMapTitle: ["Error while loading a map"],
  ErrorWhileLoadingMap: [
    "An error occurred while loading a map. See error log for more information.",
  ],
  ModsChanged: [
    "The mod list has changed. The game will now restart automatically.",
  ],
  FailedToRestart: [
    "Something went wrong while restarting the game. The game can't fully unload modified code from deactivated mods, so code from deactivated mods may still be active.\\n\\nIt's recommended that you quit and restart the game now to load all mods cleanly.",
  ],
  Restarting: ["Restarting"],
  SteamClientMissing: [
    'Could not initialize Steam API. Possible causes:\\n\\n-Steam is not running.\\n-Launched from outside Steam without steam_appid.txt in place.\\n-Running with different privileges than Steam client (e.g. "as administrator").\\n\\nIn most cases, rebooting your computer will fix this problem.\\n\\nYou can play anyway, but no Steam stats will be recorded and Steam features won\'t be available.',
  ],
  InitializingInterface: ["Initializing interface"],
  UnloadingUnusedAssets: ["Unloading unused assets"],
  LoadingAllActiveMods: ["Loading all active mods"],
  LoadingDefs: ["Loading defs"],
  LoadingAssets: ["Loading assets"],
  Initializing: ["Initializing"],
  LoadingWorld: ["Loading world"],
  LoadingMap: ["Loading map"],
  InitializingGame: ["Initializing game"],
  SpawningAllThings: ["Spawning things"],
  SpawningColonists: ["Spawning colonists"],
  SaveGameButton: ["Save"],
  LoadGameButton: ["Load"],
  OverwriteButton: ["Overwrite"],
  ConfirmDelete: ["Really delete {0}?"],
  DeleteThisSavegame: ["Delete this savegame."],
  SavedAs: ["Saved as {0}."],
  NeedAName: ["Please enter a name."],
  LoadingLongEvent: ["Loading"],
  SavingLongEvent: ["Saving"],
  PermadeathModeSaveSuffix: ["(Permadeath)"],
  SaveIsFromDifferentGameVersion: [
    "We are running version {0} but the save data is from {1}, which is a different version entirely.\\n\\nTrying to load this data will probably not work.",
  ],
  SaveIsFromDifferentGameBuild: [
    "We are running version {0} but the save data is from {1}, which is a different build.\\n\\nTrying to load this data should still work.",
  ],
  SaveIsFromThisGameBuild: [
    "Save data was saved with our game version and should work without issue.",
  ],
  SaveIsUnknownFormat: [
    "Save data is in an unknown format and almost certainly will not load properly.",
  ],
  ProblemSavingFile: [
    "There was a problem saving the file {0}:\\n\\n{1}\\n\\nSee error log for more information.",
  ],
  LoadAnyway: ["Load anyway"],
  ChangeLoadedMods: ["Load mod list from save"],
  MissingMods: ["Some mods are unavailable, and need to be installed"],
  OfficialContent: ["Official content"],
  ContentActive: ["Active"],
  ContentInstalledButNotActive: ["Installed, but not active"],
  ContentNotInstalled: ["Not installed"],
  NamePlayerFactionMessage: [
    "Since it looks like you'll be here for a while, {0} thinks that you should give your faction a name. What should your faction be called?",
  ],
  PlayerFactionGainsName: ["Your faction is now known as {0}."],
  PlayerFactionNameIsInvalid: ["That name isn't valid."],
  NamePlayerFactionBaseMessage: [
    "{0} thinks that you should give this settlement a name. What should the local settlement be called?",
  ],
  PlayerFactionBaseGainsName: ["This community is now known as {0}."],
  PlayerFactionBaseNameIsInvalid: ["That name isn't valid."],
  NamePlayerFactionBaseMessage_NameFactionContinuation: [
    "{0} also thinks that you should give this settlement a name. What should this local settlement be called?",
  ],
  PlayerFactionAndBaseGainsName: [
    "Your faction is now known as {0}, and this community is now known as {1}.",
  ],
  NameIsInvalid: ["Please enter a valid name."],
  NameIsInUse: ["Name is already in use."],
  ZoneGainsName: ["The zone is now called {0}."],
  NameInvalid: ["Chosen name is invalid."],
  PawnGainsName: [
    "This person's nickname is now {0}. {PAWN_possessive} title is {PAWN_title}.",
  ],
  AnimalGainsName: ["The animal's name is now {0}."],
  RenamePerson: ["rename person"],
  Mother: ["mother"],
  Father: ["father"],
  Unknown: ["unknown"],
  FirstName: ["first name"],
  NickName: ["nickname"],
  LastName: ["last name"],
  Suggested: ["suggested"],
  VersionMismatch: ["Version mismatch"],
  SaveGameIncompatibleWarningText: [
    "This game was saved with game version {0}\\nWe are running game version {1}\\n\\nLoading this save may cause bugs and crashes.",
  ],
  WorldFileVersionMismatch: [
    "World file was generated with game version {0}\\nWe are running game version {1}\\n\\nLoading this world may cause bugs and crashes. You should probably generate a new world from scratch.",
  ],
  FileIncompatibleWarning: [
    "This file was saved with game version {0}\\nWe are running game version {1}\\n\\nLoading this file may cause bugs and crashes.",
  ],
  ModsMismatchWarningTitle: ["Mods mismatch"],
  ModsMismatchWarningText: [
    "This file was saved with a different set of mods active than those we are currently running. This may or may not cause problems, depending on exactly what these mods do.",
  ],
  ModsMismatchOrderChanged: [
    "No mods have been added or removed, but the order of your mod list has changed.",
  ],
  ConfirmLoadSaveList: [
    "Are you sure you want to load the mod list from this save file?",
  ],
  ConfirmResolutionChange: [
    "You've changed your screen settings. Do the new ones work okay?\\n\\nAuto-reverting in {0}...",
  ],
  ResolutionKeep: ["Keep"],
  ResolutionRevert: ["Revert"],
  ConfirmPermanentlyDisableDevMode: [
    "Do you really want to permanently disable development mode on this computer?\\n\\nThis option is for people who want a pure play experience without the temptation to use development tools to gain advantage in normal play.\\n\\nDevelopment mode can be re-enabled, but doing so requires manually editing configuration files. You'll need to search the Internet to find out how.",
  ],
  ConfirmResetLearningHelper: [
    "Are you sure you want to reset the learning helper?\\n\\nAll records of which concepts have been learned will be erased and the system will teach everything from scratch.",
  ],
  RestartAfterImportingLegacyBackstoryTanslations: [
    "Backstories are now implemented as a def and all legacy backstory translations have been imported into def translations. The file {0} has been imported and moved to {1}. It can now be deleted.\\n\\nRestart the game for changes to take effect.",
  ],
  SelectedCharactersMustInclude: ["Must include exactly {SUMMARY}"],
  MapTemperatureDangerWarning: [
    "Warning: You will be landing in a frozen environment. It may be hard or nearly impossible to survive. If you are not intending to face an extreme challenge, choose a different site or season.",
  ],
  MapSizePerformanceWarning: [
    "The game is designed to play on medium map sizes. These sizes provide plenty of space!\\n\\nLarge map sizes don't just degrade performance - they actually break the game design. The AI will make stupid decisions, and game balance will be badly affected in various ways. These sizes are included for tradition and testing reasons only, please do not use them without a specific reason.",
  ],
  MapSize: ["Map size"],
  MapSizeDesc: ["{0}x{0} ({1} cells)"],
  MapSizeSmall: ["Small"],
  MapSizeMedium: ["Medium"],
  MapSizeLarge: ["Large"],
  MapSizeExtreme: ["Extreme (test)"],
  MapStartSeason: ["Starting season"],
  MapStartSeasonDefault: ["Auto"],
  Notice: ["Notice"],
  Suspended: ["Suspended"],
  NotSuspended: ["Not suspended"],
  SuspendedAllCaps: ["SUSPENDED"],
  RepeatCount: ["Repeat:"],
  Forever: ["Forever"],
  Details: ["Details"],
  IngredientSearchRadius: ["Ingredient radius"],
  CurrentlyHave: ["Currently have"],
  CountingProducts: ["Counting"],
  Infinite: ["Infinite"],
  AllowedSkillRange: ["Allowed {0} skill:"],
  IncompatibleLower: ["incompatible"],
  AnyWorker: ["Any worker"],
  Unlimited: ["Unlimited"],
  RecipeCannotHaveTargetCount: [
    "(This recipe cannot have a target count because it has multiple or unpredictable products.)",
  ],
  WorkAmount: ["Work amount"],
  MinimumSkills: ["Minimum skills:"],
  BillRequires: ["Requires"],
  BillNutrition: ["nutrition"],
  BillRequiresMayVary: [
    "Note: Small-volume ingredients like gold require {0}x as much.",
  ],
  ThisIsSmallVolume: [
    "This is a small-volume ingredient. This means that each 'unit' is only 1/{0} as much as a normal-volume ingredient. So, to fill the same ingredient requirement, you'll need {0}x as much as usual.",
  ],
  UsableIngredients: ["ingredients"],
  BillRepeatTargetCountShort: ["To {0}"],
  PauseWhenSatisfied: ["Pause when satisfied"],
  UnpauseWhenYouHave: ["Unpause at"],
  Paused: ["Paused"],
  Unpause: ["Unpause"],
  IncludeEquipped: ["Count equipped"],
  IncludeTainted: ["Count tainted"],
  LimitToAllowedStuff: ["Only allowed ingredients"],
  IncludeFromAll: ["Look everywhere"],
  IncludeSpecific: ["Look in {0}"],
  Damage: ["Damage"],
  ArmorPenetration: ["Armor penetration"],
  ArmorPenetrationExplanation: [
    "Armor penetration is the amount of armor this weapon will ignore each time it hits the target.\\n\\nIf armor penetration is greater than the target's armor, it is as though the target is unarmored. Otherwise, the armor penetration is subtracted from the target's armor.",
  ],
  BuildingDamageFactor: ["Building damage factor"],
  BuildingDamageFactorExplanation: [
    "Damage to all buildings is multiplied by this value.",
  ],
  BuildingDamageFactorImpassable: ["Building damage factor (impassable)"],
  BuildingDamageFactorImpassableExplanation: [
    "Damage to all impassable buildings is multiplied by this value.",
  ],
  BuildingDamageFactorPassable: ["Building damage factor (passable)"],
  BuildingDamageFactorPassableExplanation: [
    "Damage to all passable buildings is multiplied by this value.",
  ],
  Accuracy: ["Accuracy"],
  BurstShotCount: ["Burst shot count"],
  WarmupTime: ["Warmup"],
  MeleeWarmupTime: ["Melee warmup"],
  RangedWarmupTime: ["Aiming time"],
  CooldownTime: ["Cooldown"],
  DisarmedTime: ["Disarmed"],
  ChargingTime: ["Charging"],
  ChargingNext: ["Next recharge (for {1}) in: {0}\\nCharge cycle: {2}"],
  ShutDown: ["Shut down"],
  BurstShotFireRate: ["Fire rate"],
  Range: ["Range"],
  StoppingPower: ["Stopping power"],
  StoppingPowerExplanation: [
    "Hits from this weapon will stagger targets, slowing their movement for several seconds.\\n\\nTargets with a body size larger than the stopping power will be unaffected.",
  ],
  DirectHitChance: ["Direct hit chance"],
  MissRadius: ["Miss radius"],
  GrowsWild: ["Grows wild"],
  Harvestable: ["Harvestable"],
  LimitedLifespan: ["Limited lifespan"],
  GrowingTime: ["Growing time"],
  HarvestYield: ["Harvest yield"],
  MinGrowthTemperature: ["Min growth temperature"],
  MaxGrowthTemperature: ["Max growth temperature"],
  GrowingTimeDesc: [
    "Plants only grow for part of the day, and only when lit.\\n\\nThis statistic measures the time the plant needs to spend actually growing to reach full size.\\nThe actual real growing time will generally be about twice as long.\\nLow temperatures also slow plant growth.",
  ],
  Days: ["days"],
  MinGrowingSkillToSow: ["Minimum growing skill to sow"],
  FertilityRequirement: ["Fertility requirement"],
  FertilitySensitivity: ["Fertility sensitivity"],
  LightRequirement: ["Light requirement"],
  Attributes: ["Attributes"],
  LifeSpan: ["Lifespan"],
  Joy: ["Recreation"],
  FoodQuality: ["Food quality"],
  WalkSpeedProperty: ["Walk speed"],
  MinFoodQuality: ["Min. food quality"],
  Diet: ["Diet"],
  NutritationEatenPerDay: ["Nutrition need per day"],
  LeatherType: ["Leather type"],
  BodySize: ["Body size"],
  Growth: ["Growth"],
  RecruitDifficulty: ["Recruit difficulty"],
  Covers: ["Covers"],
  CreatedAt: ["Created at"],
  Layer: ["Layer"],
  CoverEffectiveness: ["Cover effectiveness"],
  CoverEffectivenessExplanation: [
    "How effective this is when used as cover in a gunfight.\\n\\nHigher percentages will block more shots.",
  ],
  MedicineXpGainFactor: ["Experience gain factor"],
  MoodChange: ["Mood change"],
  Wildness: ["Wildness"],
  WildnessExplanation: [
    "Wilder creatures are naturally more difficult to tame, train, and handle.",
  ],
  TrainingDecayInterval: ["Training decay interval"],
  TamenessWillNotDecay: [
    "Tameness will never decay for animals of very low wildness.",
  ],
  TamenessWillNotDecayFenceBlocked: [
    "Tameness will never decay for animals that can be kept behind fences.",
  ],
  TimeRecordsCategory: ["Time"],
  MiscRecordsCategory: ["Misc"],
  Chemical: ["Chemical"],
  HighGain: ["High gain per dose"],
  HighFallRate: ["High fall rate"],
  HighDuration: ["High duration per dose"],
  ToleranceGain: ["Tolerance gain per dose"],
  ToleranceFallRate: ["Tolerance fall rate"],
  MinimumToleranceForAddiction: ["New addiction min tolerance"],
  SafeDoseInterval: ["Safe dose interval for adults"],
  AgeXToY: ["age {0}-{1}"],
  AgePlus: ["age {0}+"],
  Addictiveness: ["New addiction chance"],
  AddictionSeverityInitial: ["Addiction initial severity"],
  AddictionSeverityPerDose: ["Addiction severity per dose"],
  AddictionNeedOffset: ["Addiction need fill per dose"],
  AddictionNeedFallRate: ["Addiction need fall rate"],
  AddictionNeedDoseInterval: ["Addiction need dose interval"],
  AddictionRecoveryTime: ["Addiction recovery time"],
  AddictionCost: ["Addiction cost"],
  RandomODChance: ["Random overdose chance"],
  AlwaysSafe: ["Always safe"],
  NeverSafe: ["Never safe"],
  PerDay: ["{0} / day"],
  PerHour: ["{0} / hour"],
  PackAnimal: ["Pack animal"],
  PackAnimalExplanation: [
    "Whether this animal is appropriate to use to carry items in a caravan over long distances.",
  ],
  Skill: ["Skill"],
  SurgeryDeathOnFailChance: ["Death chance on fail"],
  WorkSpeedStat: ["Work speed governed by"],
  EfficiencyStat: ["Output quantity governed by"],
  SkillRequiredToBuild: ["{0} skill required"],
  SkillRequiredToBuildExplanation: [
    "Requires this level of {0} in order to build.",
  ],
  NuzzleInterval: ["Nuzzle interval"],
  NuzzleIntervalExplanation: [
    "How often an animal will nuzzle friendly colonists, on average.\\n\\nNuzzling is a behavior shared by many animal species, where the animal presses its nose or muzzle against a friend as a sign of affection.\\nMost humans find this cute and it will leave them in a good mood for a period of time.",
  ],
  HarmedRevengeChance: ["Revenge chance on harm"],
  HarmedRevengeChanceExplanation: [
    "The chance this creature will attack when harmed.\\n\\nThis chance increases up to three times if the attacker is closer.\\n\\nThis chance is applied each time damage is taken. This means that slower-firing, higher-damage weapons are less likely to trigger it while hunting.",
  ],
  TameFailedRevengeChance: ["Revenge chance on tame fail"],
  TerrainRequirement: ["Terrain requirement"],
  Supports: ["Supports"],
  TrapArmorPenetration: ["Trap armor penetration"],
  RearmCost: ["Rearm cost"],
  RearmCostExplanation: ["Resources needed to rearm this turret"],
  RearmCostExplanationDifficulty: ["affected by difficulty"],
  ShotsBeforeRearm: ["Shots before rearm"],
  ShotsBeforeRearmExplanation: [
    "How many shots this turret can fire before it has to be rearmed.",
  ],
  PowerConsumption: ["Power consumption"],
  Target: ["Target"],
  AbilityTargetDesc: [
    "The types of targets on which this ability can be used.",
  ],
  TargetHuman: ["human"],
  TargetAnimal: ["animal"],
  TargetSelf: ["self"],
  TargetGround: ["ground"],
  ClickToLearnMore: ["Click to learn more."],
  ClickToViewFactions: ["Click to view factions."],
  MeditationFocuses: ["meditation focus types"],
  MeditationFocusesUnlocked: ["Unlocks meditation focus types"],
  MeditationFocusesPawnDesc: [
    "The types of meditation focus this person can use. When meditating, a person can focus on an object to boost their psyfocus gain - but only if that object offers a focus type they can use. Each person's meditation types are determined by their background, traits, social position, and so on.",
  ],
  MeditationFocusesDesc: [
    "The types of meditation focus this object offers. A meditating person can focus on this object to boost their psyfocus gain, but only if they are able to use one of its meditation types. Each person can use different meditation types depending on their background, traits, social position, and so on.",
  ],
  MeditationFocusCanUse: ["Can use {0} focus type because"],
  MeditationFocusObjects: ["{0} focus objects"],
  MeditationFocusEnabledByTitle: ["holds title: {TITLE} ({FACTION_name})."],
  MeditationFocusEnabledByChildhood: ["has childhood"],
  MeditationFocusEnabledByAdulthood: ["has adulthood"],
  MeditationFocusEnabledByTrait: ["has trait"],
  MeditationFocusDisabledByTrait: ["does not have trait"],
  EnablesMeditationFocusType: ["Enables meditation focus types"],
  PositiveBuysNegativeSells: ["Positive numbers buy.\\nNegative numbers sell."],
  BuyPriceDesc: ["Price you pay to buy this."],
  SellPriceDesc: ["Price you receive for selling this."],
  PriceTypeDesc: ["For this item, this price is {0}."],
  ColonyCount: [
    "How many of this item the colony has ready to trade.\\n\\nYou can only sell items to orbital traders if they are near an orbital trade beacon.",
  ],
  TraderCount: ["How many of this item the trader has to trade."],
  AcceptButton: ["Accept"],
  LoadSelected: ["Load selected"],
  ResetButton: ["Reset"],
  CancelButton: ["Cancel"],
  CloseButton: ["Close"],
  YourTradeableSilver: ["Your tradeable silver: {0}"],
  YourTradeableSilverTip: [
    "You can only trade with silver that is near an orbital trade beacon and not under a roof.",
  ],
  TraderHasNoMore: ["Trader has no more."],
  ColonyHasNoMore: ["No more to sell."],
  TraderWillNotTrade: ["Trader is not willing to buy this."],
  Negotiator: ["Negotiator"],
  NegotiatorTradeDialogInfo: ["Negotiator: {0} (+{1})"],
  NegotiatorTalkingImpaired: [
    "Your negotiator {1_labelShort} cannot talk properly because of poor health.",
  ],
  NegotiatorHearingImpaired: [
    "Your negotiator {1_labelShort} cannot hear properly because of poor health.",
  ],
  NegotiatorCapacityImpaired: [
    "This will affect trade prices.\\n\\nConsider using a healthier negotiator.",
  ],
  ConfirmTraderShortFunds: [
    "Trader has insufficient silver to fully cover this transaction.  Proceed anyways?",
  ],
  SortBy: ["Sort by"],
  TraderTypePrice: ["trader type"],
  Selling: ["selling"],
  Buying: ["buying"],
  ItemSellPriceFactor: ["item sell price multiplier"],
  DifficultyLevel: ["difficulty level"],
  PostCurve: ["global post-process curve"],
  YourNegotiatorBonus: ["Your negotiator bonus"],
  TradeWithFactionBaseBonus: ["Trading with faction base bonus"],
  JoinsAsSlave: ["Joins as slave"],
  JoinsAsColonist: ["Joins as colonist"],
  JoinsAsSlaveDesc: [
    "If purchased, this person will join your colony as a slave.",
  ],
  JoinsAsColonistDesc: [
    "If purchased, this person will join your colony as a colonist.",
  ],
  TradingDrugsBonus: ["Trading drugs bonus"],
  minimum: ["minimum"],
  FinalPrice: ["Final price"],
  GiftModeTip: ["Gift mode - offer gifts to {0}."],
  TradeModeTip: ["Return to trade mode."],
  TradeCaravanRequestDeniedDueTitle: [
    "{FACTION_name} is not willing to send a caravan because {NEGOTIATOR_nameDef} lacks the required title of {TITLE}.",
  ],
  SellableItemsTitle: ["Things this trader will buy"],
  TraderNotVisitedYet: ["Never visited - stock unknown"],
  TraderRestockedSinceLastVisit: ["Restocked since your last visit"],
  NextTraderRestock: ["Next restock: {0} days"],
  PawnsTabShort: ["Creatures"],
  FormCaravan: ["Form caravan"],
  Send: ["Send"],
  FormCaravanColonyThingCountTip: [
    "Number available to send with the caravan.",
  ],
  PawnsTab: ["People and animals"],
  ItemsTab: ["Items"],
  TravelSupplies: ["Travel supplies"],
  CaravanMustHaveAtLeastOneColonist: [
    "You must assign at least one non-downed colonist.",
  ],
  CaravanCouldNotFindExitSpot: [
    "The chosen exit location ({0}) is inaccessible.",
  ],
  CaravanCouldNotFindPackingSpot: [
    "Could not find any valid packing spot. Make sure that the chosen exit location ({0}) is accessible.",
  ],
  CaravanCouldNotFindReachableExitSpot: [
    "Warning: Some of the assigned colonists are unable to reach the exit location ({0}).",
  ],
  CaravanRoamerCannotReachSpots: [
    "{1_labelShort} is unable to reach the packing spot or the exit location when led by any of the assigned colonists.",
  ],
  CaravanItemIsUnreachableSingle: [
    "None of the assigned colonists are able to reach the {0}.",
  ],
  CaravanItemIsUnreachableMulti: [
    "None of the assigned colonists are able to reach {0}x {1}.",
  ],
  TooBigCaravanMassUsage: ["The caravan can't carry that much."],
  CaravanMassUsageTooltip: [
    "Includes carried items and equipped items. Carrying less than the maximum gives a speed bonus.",
  ],
  CaravanVisibilityTip: [
    "Visibility is how easy your caravan is to notice.\\n\\nIt multiplies the chance that your caravan will be waylaid by enemies.\\n\\nVisibility does not affect your ability to find things you want.\\n\\nVisibility is based on the total body size of all people and animals in the caravan.",
  ],
  DaysWorthOfFood: ["Days of food"],
  DaysWorthOfFoodInfoRot: ["rot in {0}"],
  InfiniteDaysWorthOfFoodInfo: ["Unlimited"],
  DaysWorthOfFoodTooltip: [
    "The approximate number of days before at least one person or animal will be out of food. Different species have different diets, so one may run out of food before others. This value is calculated more accurately after the route is chosen.\\n\\nAffected by:\\n  - Current pawn inventory\\n  - Carried food type and amount\\n  - Caravan members and their diets\\n  - Foraging rate\\n  - Whether animals can graze\\n  - Time until food rots\\n  - Hot weather rots food faster",
  ],
  DaysWorthOfFoodTooltip_OnlyFirstWaypoint: [
    "(only the first waypoint is taken into account)",
  ],
  DaysWorthOfFoodWarningDialog: [
    "Your caravan only has {0} days worth of food and will become hungry quickly.",
  ],
  DaysWorthOfFoodDietWarningDialog: [
    "Some peoples' diets don't allow most of the food in your caravan. If they're forced to eat it due to hunger, they will become unhappy.",
  ],
  DaysWorthOfFoodWarningDialog_NoFood: [
    "Your caravan has no food and will become hungry very quickly.",
  ],
  ForagedFoodPerDayTip: [
    "The average amount of food per day your people will forage. This value will change as you travel across biomes with different forage yield rates.",
  ],
  ForagedFoodPerDay: ["Forage per day"],
  CaravanFoodWillRotSoonWarningDialog: [
    "A large part of the caravan's food will rot soon.",
  ],
  CaravanIncapableOfSocial: [
    "You have no caravan members capable of diplomacy or trading.",
  ],
  CaravanAreYouSure: ["Are you sure you want to form this caravan?"],
  MessageMustChooseRouteFirst: [
    "You must choose a route for the caravan first.",
  ],
  MessageNoValidExitTile: [
    "Your caravan is unable to leave the area. Make sure that at least one side is reachable.",
  ],
  ItemWeightTip: ["Weight of this item."],
  MarketValueTip: ["Market value"],
  DaysUntilRotTip: [
    "The number of days until this item starts to rot based on the average temperature in this area.",
  ],
  ItemNutritionTip: [
    "How much nutrition this food provides.\\n\\nFor reference: adult person needs {0} nutrition per day.",
  ],
  AnimalCanGrazeTip: [
    "This animal can graze food from the environment instead of eating carried food. Grazing is only possible in some biomes and temperature ranges.",
  ],
  NutritionForagedPerDayTip: [
    "Nutrition foraged per day. The actual amount foraged is also affected by biome forageability.\\n\\n{0}",
  ],
  NutritionEatenPerDayTip: [
    "Nutrition eaten per day. For reference, simple meals have {0} nutrition.",
  ],
  CanEat: ["Can eat"],
  Legend: ["Legend"],
  MassCarriedSimple: ["Mass carried"],
  MassCapacity: ["Mass capacity"],
  CaravanMass: ["Caravan mass"],
  EquipmentAndApparelMass: ["Equipment and apparel mass"],
  InventoryMass: ["Inventory mass"],
  CaravanFormationProcessStarted: [
    "Your colonists will now gather the items and leave the area.",
  ],
  ReformCaravan: ["Reform caravan"],
  ColonistsSection: ["Colonists"],
  PrisonersSection: ["Prisoners"],
  CaptureSection: ["Capture"],
  AnimalsSection: ["Animals"],
  ChooseRouteButton: ["Choose route"],
  ChangeRouteButton: ["Change route"],
  AbandonButton: ["Abandon"],
  CaravanMovementSpeed: ["Movement speed"],
  TilesPerDay: ["tiles/day"],
  TilesPerDayImmobile: ["None - too heavy"],
  TilesPerDayImmobileShort: ["None"],
  CaravanMovementSpeedTip: [
    "Movement speed depends on carried mass, ridden animals, and terrain movement difficulty.",
  ],
  AnimalsWillBeAbleToGraze: ["Animals will be able to graze"],
  AnimalsCanGraze: ["Animals can graze"],
  PossibleToGrazeFor: ["(for {0} more days)"],
  PossibleToGrazeForever: ["(forever)"],
  CantGrazeBecauseOfBiome: ["({0})"],
  CantGrazeBecauseOfTemp: ["(too cold for {0} more days)"],
  TotalNutrition: ["Total nutrition"],
  CaravanNotMoving: ["Not moving"],
  ForagedNutritionPerDay: ["Foraged nutrition per day"],
  FactionType: ["Faction type"],
  TotalBodySize: ["Total body size"],
  AutomaticallySelectTravelSupplies: ["Automatically select travel supplies"],
  CaravanAnimalSick: [
    "This animal is sick. It is suffering from the following illnesses",
  ],
  SplitCaravan: ["Split caravan"],
  SourceCaravanMustHaveAtLeastOneColonist: [
    "You must leave at least one non-downed colonist.",
  ],
  SplitCaravanThingCountTip: [
    "How many of this item the caravan has ready to give to the new caravan.",
  ],
  ConfirmAttackFriendlyFaction: [
    "Are you sure you want to attack {0}?\\n\\nThis will make {1} hostile to you, and they will eventually start raiding your colony!",
  ],
  LoadTransporters: ["Load {0}"],
  TooBigTransportersMassUsage: [
    "The assigned people and items are too heavy for the transport pods.",
  ],
  TooBigTransporterSingleMassUsage: [
    "The assigned people and items are too heavy for the shuttle.",
  ],
  CantSendEmptyTransportPods: ["You can't send empty transport pods."],
  CantSendEmptyTransporterSingle: ["You can't send empty shuttle."],
  PawnCantReachTransporters: ["{1_labelShort} can't reach the transport pods."],
  PawnCantReachTransporterSingle: ["{1_labelShort} can't reach the shuttle."],
  TransporterItemIsUnreachableSingle: [
    "There is no path between the transport pods and the {0}.",
  ],
  TransporterSingleItemIsUnreachableSingle: [
    "There is no path between the shuttle and the {0}.",
  ],
  TransporterItemIsUnreachableMulti: [
    "There is no path between the transport pods and {0}x {1}.",
  ],
  TransporterSingleItemIsUnreachableMulti: [
    "There is no path between the shuttle and {0}x {1}.",
  ],
  TransporterSingleTooManyColonists: ["Only {0} colonists maximum allowed."],
  SocialSkillIs: ["Social skill: {0}"],
  ResearchFinished: ["Research finished: {0}"],
  ResearchScreen: ["Research Screen"],
  HistoryUploadMessage: [
    "Do you want to upload your gameplay data records to RimWorld server in order to help developers balance the game? If you agree, your data will be uploaded every {0} days (and in some other rare cases like the end of the game). Privacy preferences can be changed later in the options menu.",
  ],
  HistoryUploadMessagePlayerName: [
    "Even though history is sent anonymously, you can attach your name.",
  ],
  HistoryUploadYes: ["Allow uploading gameplay data"],
  HistoryUploadNo: ["Do not allow uploading gameplay data"],
  HistoryUploadYesOnce: ["Upload only this time"],
  HistoryUploadNoOnce: ["Do not upload this time, ask me later"],
  Outfit: ["Outfit"],
  SelectOutfit: ["Select outfit..."],
  NewOutfit: ["New outfit"],
  DeleteOutfit: ["Delete outfit..."],
  OutfitInUse: ["Outfit is in use by {0}."],
  NoOutfitSelected: ["No outfit selected"],
  DrugPolicy: ["Drug policy"],
  SelectDrugPolicy: ["Select policy..."],
  NewDrugPolicy: ["New policy"],
  DeleteDrugPolicy: ["Delete policy..."],
  DrugPolicyInUse: ["Drugs policy is in use by {0}."],
  FoodRestrictionInUse: ["Food restriction is in use by {0}."],
  NoDrugPolicySelected: ["No drug policy selected"],
  AddDrug: ["Add drug..."],
  DrugColumnLabel: ["Drug"],
  DrugUsageColumnLabel: ["Usage"],
  FrequencyColumnLabel: ["Frequency"],
  MoodThresholdColumnLabel: ["Only if mood below"],
  JoyThresholdColumnLabel: ["Only if recreation below"],
  TakeToInventoryColumnLabel: ["Keep in inventory"],
  NoDrugsBrackets: ["(no drugs)"],
  EveryDay: ["Every day"],
  TimesPerDay: ["{0} times per day"],
  EveryDays: ["Every {0} days"],
  NoDrugUseRequirement: ["Any"],
  DeleteDrugTooltip: ["Delete this drug."],
  DrugNameColumnDesc: ["The name of a drug."],
  DrugUsageColumnDesc: ["How the drug is allowed to be used."],
  FrequencyColumnDesc: [
    "How often the colonists should try to take this drug.",
  ],
  MoodThresholdColumnDesc: [
    "The colonists will take this drug only if their mood level is below this threshold.",
  ],
  JoyThresholdColumnDesc: [
    "The colonists will take this drug only if their recreation level is below this threshold.",
  ],
  TakeToInventoryColumnDesc: [
    "An amount of the drug to pick up extra when gathering it for consumption, in order to avoid having to visit the drug stockpile every time.",
  ],
  DrugUsageTipForAddiction: [
    "For addictions\\n\\nUse this drug to feed already-established addiction needs.\\n\\nEven if disabled, some characters with specific traits, or on mental breaks, may use the drug anyway.",
  ],
  DrugUsageTipForJoy: [
    "For recreation\\n\\nUse this drug for recreation and social purposes.\\n\\nEven if disabled, some characters with specific traits, or on mental breaks, may use the drug anyway.",
  ],
  DrugUsageTipScheduled: [
    "Scheduled\\n\\nUse this drug on a defined schedule, when specific conditions are met.",
  ],
  FoodRestriction: ["Food restriction"],
  FoodRestrictionShort: ["Food"],
  FoodRestrictionLavish: ["Lavish"],
  FoodRestrictionFine: ["Fine"],
  FoodRestrictionSimple: ["Simple"],
  FoodRestrictionPaste: ["Paste"],
  FoodRestrictionRaw: ["Raw"],
  FoodRestrictionNothing: ["Nothing"],
  SelectFoodRestriction: ["Select food restriction"],
  NewFoodRestriction: ["New food restriction"],
  DeleteFoodRestriction: ["Delete food restriction"],
  NoFoodRestrictionSelected: ["No food restriction selected"],
  DefaultMedicineSettings: ["Default medicine settings"],
  MedGroupDefaults: ["Defaults"],
  MedGroupColonist: ["Colonist"],
  MedGroupImprisonedColonist: ["Imprisoned colonist"],
  MedGroupColonyAnimal: ["Colony animal"],
  MedGroupNeutralAnimal: ["Neutral animal"],
  MedGroupNeutralFaction: ["Neutral faction"],
  MedGroupHostileFaction: ["Hostile faction"],
  NoGrowerCanPlant: [
    "{0} requires {1} skill in Growing to sow.\\n\\nNone of your non-downed growers have this skill, so this plant will not be sown.",
  ],
  ConfirmAbandonHomeWithColonyPawns: [
    "Some of your colonists or animals are in this area. Are you sure you want to abandon it?\\n\\nThe following people and animals will be left behind:\\n\\n{0}",
  ],
  ConfirmAbandonHomeNegativeThoughts: [
    "Abandoning {0} will cause the following people to get the following thoughts:",
  ],
  ConfirmAbandonHomeNegativeThoughts_Everyone: ["Everyone:"],
  ConfirmMoveAutoJoinableCaravan: [
    "Some animals or prisoners are trying to join this caravan. If you move it, they won't be able to anymore.\\n\\nAnimals, prisoners, and downed colonists left behind in a map without any non-downed colonists are considered abandoned and can be captured by the enemies.\\n\\nAre you sure you want to move your caravan?",
  ],
  ConfirmBanishPawnDialog: ["Do you really want to banish {1_label}?"],
  ConfirmBanishPawnDialog_LeftToDie: ["{1_labelShort} will most likely die."],
  ConfirmBanishPawnDialog_Items: [
    "{1_labelShort} will take the following items with {1_objective}:",
  ],
  ConfirmBanishPawnDialog_AllColonistsThoughts: [
    "All colonists will get the following thoughts:",
  ],
  ConfirmBanishPawnDialog_IndividualThoughts: [
    "Banishing {1_labelShort} will cause the following people to get the following thoughts:",
  ],
  ConfirmSendNotCompletelyLoadedPods: [
    "Pod group isn't completely loaded. {1_labelShort} is missing. Launch anyway?",
  ],
  ConfirmSettleNearFactionBase: [
    "Since this location is within {0} tiles of another faction base, they will feel you are encroaching on their land and relations with those factions will worsen every {1} days.",
  ],
  ConfirmCleanupTranslationFiles: [
    "Are you sure you want to cleanup all translation files for language {0}?\\n\\nThis will:\\n  - Add placeholders for missing keyed translations, def-injected translations, and backstories\\n  - Add or update comments containing the original, untranslated text\\n  - Move all keyed and def-injected translations to the appropriate XML files\\n  - Apply automatic formatting to all XML files\\n  - Update back-compatible def names\\n  - Remove all existing XML comments (except in full-list injections)\\n\\nNon-XML files will not be removed or modified.\\n\\nRemember to restart the game after modifying the language files before running this tool in order to reload all data.\\n\\nMake sure to back up all translation files before using this tool.",
  ],
  ConfirmCleanupTranslationFiles_Confirm: ["Yes, I have a backup"],
  TransportersCaravanWillBeImmobile: [
    "The caravan will be immobile if you launch to an empty tile. Continue anyway?",
  ],
  ConfirmCancelMonumentMarker: [
    "Do you really want to remove this monument marker?",
  ],
  CannotUseAbility: ["Cannot use {0}"],
  AbilityRequiresLOS: ["Line of sight required"],
  AbilityEntropyGain: ["Neural heat gain"],
  AbilityPsyfocusCost: ["Psyfocus cost"],
  AbilityDuration: ["Effect duration"],
  AbilityEffectRadius: ["Effect radius"],
  AbilityCastingTime: ["Casting time"],
  AbilityCannotHitTarget: ["No line of sight to target."],
  AbilityOutOfRange: ["Target is out of range."],
  AbilityCannotReachTarget: ["Can't reach the target."],
  AbilityNotEnoughFreeSpace: ["Not enough free space."],
  AbilityOccupiedCells: ["Must target an empty area."],
  AbilityUnwalkable: ["Must target a walkable area."],
  AbilityRoofed: ["Must target an unroofed area."],
  AbilityCantApplyToMentallyBroken: ["{0_labelShort} is mentally broken."],
  AbilityCanOnlyApplyToMentallyBroken: [
    "{0_labelShort} is not mentally broken.",
  ],
  AbilityCanOnlyApplyToManhunter: ["{0_labelShort} is not maddened."],
  AbilityCantApplyToScaria: [
    "{0_labelShort} has scaria, which can only be treated medically.",
  ],
  AbilityDoesntWorkOnMentalState: [
    "{0} doesn't work on the '{1}' mental state.",
  ],
  AbilityCantApplyNoResistance: ["{0_labelShort} has zero resistance."],
  AbilityCantApplyDowned: ["{0_labelShort} is downed."],
  AbilityCantApplyOnAsexual: ["Cannot use: {0} is asexual."],
  AbilityCantApplyWrongAttractionGender: [
    "{1_labelShort} is the wrong gender for {0_labelShort}.",
  ],
  AbilityCantApplyTooYoung: ["{0_labelShort} is too young."],
  AbilityCantApplyOnBaby: ["Cannot target a baby."],
  PsyfocusCostPerMentalBreakIntensity: [
    "Psyfocus cost per mental break intensity",
  ],
  AbilityAlreadyInspired: ["{0_labelShort} is already inspired."],
  AbilityCantGetInspiredNow: [
    "{0_labelShort} can't get an inspiration right now.",
  ],
  AbilityMustBeNotSameIdeo: [
    "{0_labelShort} must be of a different ideoligion than {1_labelShort}.",
  ],
  AbilityMustBeSameIdeo: [
    "{0_labelShort} must be of same ideoligion as {1_labelShort}.",
  ],
  AbilityMustBeSickOrInjured: ["{0_labelShort} must be sick or injured."],
  AbilityMustBeSameIdeoCounsel: ["{0} can only counsel {1}s."],
  AbilityMustBeNotGuilty: ["{0_labelShort} is already considered guilty."],
  AbilityMustBeHuman: ["Must target a human."],
  AbilityMustBeHumanNonWild: ["Must target a non-wild human."],
  AbilityMustBeAnimal: ["Must target an animal."],
  AbilityCantApplyUnconscious: ["{0_labelShort} is unconscious."],
  AbilityCantApplyAsleep: ["{0_labelShort} is asleep."],
  AbilityWorldTileImpassable: ["This tile is impassable."],
  AbilitySkipToRandomAlly: ["Skip to random ally"],
  AbilitySkipToJoinCaravan: ["Skip to join caravan"],
  AbilityNeedAllyToSkip: ["Need ally at target for navigation"],
  AbilityNoChunkToSkip: ["No chunks to skip."],
  PsychicLoveInduceIn: ["Induce psychic love in"],
  PsychicLoveFor: ["Psychic love for"],
  FarskipConfirmTeleportingLodger: [
    "If you skip {PAWN_labelShort} to another map or a caravan, the associated quest will fail and {PAWN_pronoun} will leave immediately.\\n\\nDo you really want to farskip {PAWN_labelShort}?",
  ],
  MentalBreakIntensityMinor: ["minor"],
  MentalBreakIntensityMajor: ["major"],
  MentalBreakIntensityExtreme: ["extreme"],
  AutoSlaugtherHeaderColLabel: ["Animal"],
  AutoSlaugtherHeaderColCurrent: ["Current"],
  AutoSlaugtherHeaderColMax: ["Max"],
  AutoSlaugtherHeaderColTotal: ["Total"],
  AutoSlaugtherHeaderColOther: ["Other"],
  AutoSlaugtherTip: [
    "Colonists first slaughter non-pregnant animals in order from oldest to youngest, then pregnant animals from most recent to least recent pregnancy.",
  ],
  AnimalMaleAdult: ["Male adult"],
  AnimalMaleYoung: ["Male young"],
  AnimalFemaleAdult: ["Female adult"],
  AnimalFemaleYoung: ["Female young"],
  AnimalPregnant: ["Pregnant"],
  AnimalBonded: ["Bonded"],
  AllowSlaughter: ["Slaughter"],
  AutoSlaugtherHeaderTooltipLabel: [
    "The animal to be automatically slaughtered.",
  ],
  AutoSlaugtherHeaderTooltipCurrentTotal: [
    "The current number of animals in the colony, both male and female.",
  ],
  AutoSlaugtherHeaderTooltipMaxTotal: [
    "The maximum number of animals in the colony, both male and female.\\n\\nHandlers will automatically slaughter any extras.",
  ],
  AutoSlaugtherHeaderTooltipCurrentMales: [
    "The current number of males of breeding age in the colony.",
  ],
  AutoSlaughterHeaderTooltipCurrentMalesYoung: [
    "The current number of baby and juvenile males in the colony.",
  ],
  AutoSlaugtherHeaderTooltipMaxMales: [
    "The maximum number of males of breeding age in the colony.\\n\\nHandlers will automatically slaughter any extras.",
  ],
  AutoSlaughterHeaderTooltipMaxMalesYoung: [
    "The maximum number of baby and juvenile males in the colony.\\n\\nHandlers will automatically slaughter any extras.",
  ],
  AutoSlaugtherHeaderTooltipCurrentFemales: [
    "The current number of females of breeding age in the colony.",
  ],
  AutoSlaugtherHeaderTooltipCurrentFemalesYoung: [
    "The current number of baby and juvenile females in the colony.",
  ],
  AutoSlaugtherHeaderTooltipMaxFemales: [
    "The maximum number of females in the colony.\\n\\nHandlers will automatically slaughter any extras.",
  ],
  AutoSlaughterHeaderTooltipMaxFemalesYoung: [
    "The maximum number of baby and juvenile females in the colony.\\n\\nHandlers will automatically slaughter any extras.",
  ],
  AutoSlaughterHeaderTooltipCurrentPregnant: [
    "The current number of pregnant animals in the colony.",
  ],
  AutoSlaughterHeaderTooltipAllowSlaughterPregnant: [
    "Allow pregnant animals to be slaughtered along with other females of the same species.",
  ],
  AutoSlaughterHeaderTooltipCurrentBonded: [
    "The current number of bonded animals in the colony.",
  ],
  AutoSlaughterHeaderTooltipAllowSlaughterBonded: [
    "Allow bonded animals to be slaughtered.",
  ],
  AutoSlaughterTooltipSetLimit: ["Click to set an animal count limit."],
  RoomRequirementNoBeds: ["no beds allowed"],
  RoomRequirementArea: ["room area: {0} tiles"],
  RoomRequirementImpressiveness: ["room impressiveness"],
  RoomRequirementAllFloored: ["all floored"],
  RoomRequirementAllBraziersMustBeLit: ["all braziers must be lit"],
  RoomRequirementAllFineFloored: ["all fine floored"],
  RoomRequirementNoProductionFacilities: ["no work facilities allowed"],
  RoomRequirementNoAltars: ["no altars allowed"],
  LifeStageMaxFood: ["Lifestage max food factor"],
  ExpandAllCategories: ["Expand all"],
  CollapseAllCategories: ["Collapse all"],
  TooltipDyeExplanation: [
    "Dye can be farmed from tinctoria or purchased from traders.",
  ],
  ZoomRange: ["Zoom range {0}"],
  ColorTemperature: ["color temperature"],
  ChooseAColor: ["choose a color"],
  Red: ["red"],
  Green: ["green"],
  Blue: ["blue"],
  Hue: ["hue"],
  Saturation: ["sat"],
  ColorValue: ["value"],
  Darklight: ["darklight"],
  NotDarklight: ["not darklight"],
  CurrentColor: ["current color"],
  OldColor: ["old color"],
  CommandCopyColorLabel: ["Copy color"],
  CommandCopyColorDesc: ["Copy the current color to the clipboard."],
  CommandPasteColorLabel: ["Paste color"],
  CommandPasteColorDesc: [
    "Overwrite the color with the color in the clipboard.",
  ],
  ClipboardInvalidColor: ["The clipboard does not contain a valid color."],
  ColorCopiedSuccessfully: ["Color copied to clipboard."],
  ColorPastedSuccessfully: ["Updated color from the clipboard."],
  ToggleDarklightOff: ["Change to normal light"],
  ToggleDarklightOffDesc: ["Change the light color to its normal color."],
  ToggleDarklightOn: ["Change to darklight"],
  ToggleDarklightOnDesc: ["Change the light color to darklight."],
  ColorTemperatureTooltip: [
    "Choose a color by setting the color temperature. Note: This only affects visual color, not heat output.",
  ],
  Tool: ["Tool"],
  DamageLower: ["damage"],
  SecondsPerAttackLower: ["seconds per attack"],
  StatsReport_BaseValue: ["Base value"],
  StatsReport_RelevantTraits: ["Relevant traits"],
  StatsReport_RelevantGear: ["Relevant gear"],
  StatsReport_RelevantHediffs: ["Relevant health conditions"],
  StatsReport_LifeStage: ["Life stage"],
  StatsReport_Material: ["Material"],
  StatsReport_CharacterQuality: ["Character quality"],
  StatsReport_Skills: ["Skills"],
  StatsReport_OtherStats: ["Post-process - other stats"],
  StatsReport_Health: ["Health"],
  HealthFactorPercentImpact: ["{0} importance"],
  HealthOffsetScale: ["{0} impact"],
  HealthFactorMaxImpact: ["{0} max"],
  HealthFactorAllowedDefect: ["if below {0}"],
  StatsReport_PostProcessed: ["Post-process curve"],
  StatsReport_ShootingExampleDistances: [
    "The chances to hit at increasing distances are",
  ],
  StatsReport_FinalValue: ["Final value"],
  StatsReport_MultiplierFor: ["Multiplier for {0}"],
  StatsReport_MarketValueFromStuffsAndWork: ["Materials and labor"],
  StatsReport_QualityMultiplier: ["Quality multiplier"],
  StatsReport_QualityOffset: ["Quality offset"],
  StatsReport_MaxGain: ["Max gain"],
  StatsReport_AgeMultiplier: ["Multiplier for age {0}"],
  StatsReport_AgeOffset: ["Offset for age {0}"],
  StatsReport_HealthMultiplier: ["Multiplier for health {0}"],
  StatsReport_ReloadMarketValue: ["Cost to reload ({COUNT} {AMMO_label})"],
  StatsReport_ReloadRemainingChargesMultipler: [
    "Multiplier for remaining {CHARGENOUN_plural} ({0})",
  ],
  StatsReport_MoodMultiplier: ["Multiplier for mood {0}"],
  StatsReport_LightMultiplier: ["Multiplier for light {0}"],
  StatsReport_DifficultyMultiplier: ["Multiplier for difficulty {0}"],
  StatsReport_InBed: ["In bed"],
  StatsReport_Facilities: ["Facilities"],
  StatsReport_BodySize: ["Multiplier for body size {0}"],
  StatsReport_HasHediffExplanation: ["Damaged"],
  StatsReport_MeleeDPSExplanation: [
    "DPS = Melee damage * Melee hit chance / Cooldown in seconds",
  ],
  StatsReport_MeleeDamage: ["Melee damage"],
  StatsReport_Cooldown: ["Cooldown"],
  StatsReport_MeleeHitChance: ["Melee hit chance"],
  StatsReport_CooldownFormat: ["{0} s"],
  StatsReport_BlockedByFences: ["Blocked by fences"],
  StatsReport_RoamInterval: ["Roam interval"],
  StatsReport_CaravanRideableAge: ["Caravan rideable age"],
  StatsReport_LifeExpectancy: ["Life expectancy"],
  StatsReport_MissingBodyParts: ["Multiplier for missing body parts"],
  StatsReport_GearAndInventoryMass: ["Gear and inventory"],
  StatsReport_WornByCorpse: ["Multiplier for worn by corpse"],
  AverageOfAllAttacks: ["average of all attacks"],
  StatsReport_ScenarioFactor: ["Scenario"],
  StatsReport_IngredientsMass: ["Ingredients"],
  StatsReport_PermanentlyDisabled: ["Permanently disabled."],
  StatsReport_Inspiration: ["{0}"],
  StatsReport_AddedBodyPartsMass: ["Added body parts"],
  StatsReport_StuffEffectMultiplier: ["Material effect multiplier"],
  StatsReport_Resting: ["Resting"],
  StatsReport_JoyKind: ["recreation type"],
  StatsReport_WorkToUninstall: ["work to uninstall"],
  StatsReport_Fence: ["Fence"],
  StatsReport_PlantGrowth: ["Multiplier for growth {0}"],
  StatsReport_PlantGrowth_Wild: ["scaled because wild"],
  StatsReport_NotFlesh: ["Not flesh"],
  StatsReport_NotFresh: ["Not fresh"],
  StatsReport_WildMan: ["Wild man"],
  StatsReport_NonToolAttack: ["Attack"],
  StatsReport_Ideoligion: ["Ideoligion"],
  StatsReport_Malnutrition: ["Multiplier for malnutrition {0}"],
  StatReport_PossibleOffsets: ["Possible offsets"],
  StatsReport_RoomImpressiveness: ["Room impressiveness"],
  StatsReport_Lit: ["Lit"],
  StatsReport_GraveFull: ["Contains {0}"],
  StatsReport_GraveFullAbstract: ["Contains a human corpse"],
  StatsReport_GraveCorpseRelatedAbstract: [
    "Meditator is related to the corpse inside",
  ],
  StatsReport_FromQuality: ["From quality"],
  StatsReport_NearbyArtificialStructures: ["Nearby artificial structures"],
  StatsReport_SatisfiesTitle: ["Satisfies user's title requirements"],
  Stat_RecreationType_Desc: [
    "Different sources of recreation satisfy different recreation types. Colonists become bored of doing the same recreation type repeatedly, so it is important to provide a variety of recreation sources with different recreation types.",
  ],
  Stat_JoyKind_AllTypes: ["All recreation types"],
  Stat_MineableThing_Name: ["Mined item"],
  Stat_MineableThing_Desc: ["The item that will be yielded when mining this."],
  Stat_MiningYield_Name: ["Mining yield"],
  Stat_MiningYield_Desc: [
    "The maximum amount of items yielded when mining this. The actual yield will be adjusted by the mining skill of the miner.",
  ],
  Stat_SourceSpecies_Name: ["Source species"],
  Stat_SourceSpecies_Desc: [
    "The species of creature from which this was taken.",
  ],
  Stat_Stuff_Name: ["Stuff"],
  Stat_Stuff_Desc: [
    "The stuff this thing is made of. This affects many other stats, including weapon damage, apparel armor and insulation, item and building hit points, beauty, market value, and much more.",
  ],
  Stat_Weapon_Name: ["Weapon"],
  Stat_Weapon_Desc: ["The weapon used by this turret."],
  Stat_HitPoints_Desc: [
    "How much damage an object can take before being destroyed.",
  ],
  Stat_Thing_WorkToUninstall_Desc: [
    "The amount of work it takes to uninstall this.",
  ],
  Stat_Thing_Fence_Desc: [
    "Whether this building is a type of fence. Fences block these animals",
  ],
  Stat_Thing_CreatedAt_Desc: ["Which facilities can be used to produce this."],
  Stat_Thing_Damage_Desc: [
    "The amount of damage this weapon deals.\\n\\nThis may be deflected or mitigated by the target's armor.",
  ],
  Stat_Thing_Drug_MedicineXpGainFactor_Desc: [
    "A multiplier on the amount of experience doctors gain when using this to tend a patient.",
  ],
  Stat_Thing_Plant_Attributes_Desc: ["The attributes of this plant."],
  Stat_Thing_Apparel_CountsAsClothingNudity_Name: ["Clothing (for nudity)"],
  Stat_Thing_Apparel_CountsAsClothingNudity_Desc: [
    "Whether nudists will consider this item to be a piece of clothing. If not, nudists will never be bothered by wearing this.",
  ],
  Stat_Thing_Apparel_Covers_Desc: [
    "Which body parts this covers.\\n\\nArmor does not protect body parts that it does not cover.",
  ],
  Stat_Thing_Apparel_Layer_Desc: [
    "Which apparel layers this fills.\\n\\nFor a given body part, only one piece of apparel can be worn in each layer.",
  ],
  Stat_Thing_Plant_FertilityRequirement_Desc: [
    "The minimum soil fertility that this plant requires to grow.",
  ],
  Stat_Thing_Plant_FertilitySensitivity_Desc: [
    "How sensitive this plant is to soil fertility.\\n\\nLow sensitivity means the plant will grow about the same speed in rich or poor soil. High sensitivity means the plant grows slow in poor soil, but faster in rich soil.",
  ],
  Stat_Thing_Plant_LightRequirement_Desc: [
    "The amount of light this plant requires to grow.",
  ],
  Stat_Thing_Plant_LifeSpan_Desc: [
    "The lifespan of the plant.\\n\\nPlants naturally die after they reach a certain age, even if not harvested.",
  ],
  Stat_Thing_Plant_HarvestYield_Desc: [
    "The amount of product this plant will yield when harvested.",
  ],
  Stat_Thing_Plant_MinGrowthTemperature_Desc: [
    "The minimum temperature this plant can survive.\\n\\nTemperatures below this will cause damage over time.",
  ],
  Stat_Thing_Plant_MaxGrowthTemperature_Desc: [
    "The maximum temperature this plant can survive.\\n\\nTemperatures above this will cause damage over time.",
  ],
  Stat_Thing_Plant_MinGrowingSkillToSow_Desc: [
    "The minimum skill needed for a farmer to to sow this plant.",
  ],
  Stat_Race_Diet_Desc: [
    "The kinds of food this creature is capable of eating.\\n\\nCan eat: {0}",
  ],
  Stat_Race_LeatherType_Desc: [
    "The type of leather this creature will yield when butchered.",
  ],
  Stat_Race_Animal_TameFailedRevengeChance_Desc: [
    "The chance that this creature will attack when a tamer tries to tame it and fails.",
  ],
  Stat_Race_Trainability_Desc: [
    "This creature's general mental aptitude for training. This is a combination of intelligence and attentiveness. It determines which kinds of tasks this creature can be trained to perform.",
  ],
  Stat_Race_LifeExpectancy_Desc: [
    "The average life expectancy of this creature.",
  ],
  Stat_Race_BlockedByFences_Desc: [
    "Whether this creature is blocked by fences and barricades.",
  ],
  Stat_Race_RoamInterval_Desc: [
    "How often a tame animal will attempt to roam away and exit the map.\\n\\nAnimals will only roam if they have a direct path to the map edge. You can use fences, barricades, walls, and doors to prevent this.\\n\\nAnimal handlers can rope roaming animals and bring them back to a pen.",
  ],
  Stat_Thing_Ingestible_Joy_Desc: [
    "The recreational value of ingesting this. Higher numbers will fulfill the recreation need more.",
  ],
  Stat_Race_BodySize_Desc: [
    "The size of this creature's body, compared to an average adult human.",
  ],
  Stat_Race_Growth_Desc: [
    "How close this creature is to adulthood.\\n\\nGrowth requires nourishment. A hungry animal will grow at a slower rate compared to a well-fed one.",
  ],
  Stat_Thing_Weapon_MeleeWarmupTime_Desc: [
    "How much time passes between when a melee attack with this weapon begins and when it hits.",
  ],
  Stat_Thing_Weapon_RangedWarmupTime_Desc: [
    "How much time passes between when a ranged attack begins aiming and when it fires.",
  ],
  Stat_Thing_Weapon_BurstShotCount_Desc: [
    "The amount of shots this weapon fires in each burst.",
  ],
  Stat_Thing_Weapon_BurstShotFireRate_Desc: [
    "The fire rate of this weapon during each burst.",
  ],
  Stat_Thing_Weapon_Range_Desc: ["The maximum range of this weapon."],
  Stat_Thing_Weapon_MissRadius_Desc: [
    "The radius of random spread on shots fired by this weapon.\\n\\nHigh values make projectiles disperse randomly around the target.",
  ],
  Stat_Thing_Weapon_DirectHitChance_Desc: [
    "The chance that a shot will directly hit its target if not intercepted, dodged or stopped.",
  ],
  Stat_Thing_MoodChange_Desc: [
    "This body part's effect on the mood of the owner.",
  ],
  Stat_Recipe_Skill_Desc: [
    "The main skill used while performing this recipe.\\n\\nIt determines the quality of the result, and is learned while performing this recipe.",
  ],
  Stat_Recipe_Ingredients_Desc: [
    "The ingredients required to perform this recipe.",
  ],
  Stat_Recipe_SkillRequirements_Desc: [
    "The skills required to perform this recipe.",
  ],
  Stat_Recipe_Products_Desc: ["The products produced by this recipe."],
  Stat_Recipe_WorkSpeedStat_Desc: [
    "Which character stat governs the workspeed of this recipe.\\n\\nThe higher the stat of the worker is, the faster work will be done.",
  ],
  Stat_Recipe_EfficiencyStat_Desc: [
    "Which stat governs the quality or amount of output.\\n\\nThe higher the stat of the worker is, the higher the quality or yield will be.",
  ],
  Stat_Thing_Surgery_SuccessChanceFactor_Desc: [
    "A multiplier on the chance this operation will be a success. More difficult operations have lower multipliers.\\n\\nThe actual chance of success of a surgery is also affected by the doctor, facilities, and medicine used.",
  ],
  Stat_Thing_Surgery_SuccessChanceFactor_CantFail: ["Can't fail"],
  Stat_Thing_Surgery_SuccessChanceFactor_CantFail_Desc: [
    "Performing this operation is safe for the patient.",
  ],
  Stat_Thing_Surgery_DeathOnFailChance_Desc: [
    "The chance the patient will die upon failure of this surgery.",
  ],
  Stat_Hediff_TotalBleedFactor_Name: ["Total bleed factor"],
  Stat_Hediff_TotalBleedFactor_Desc: [
    "A multiplier applied to the overall rate of blood loss.",
  ],
  Stat_Hediff_NaturalHealingFactor_Name: ["Natural healing factor"],
  Stat_Hediff_NaturalHealingFactor_Desc: [
    "A multiplier applied to the overall rate of natural wound healing.",
  ],
  Stat_Hediff_FoodPoisoningChanceFactor_Name: ["Food poisoning chance factor"],
  Stat_Hediff_FoodPoisoningChanceFactor_Desc: [
    "A multiplier applied to the chance of getting food poisoning.",
  ],
  Stat_Hediff_BleedingRate_Desc: [
    "The rate at which this condition causes blood loss.",
  ],
  Stat_Hediff_Pain_Desc: ["The amount of pain caused by this condition."],
  Stat_Hediff_PartEfficiency_Desc: [
    "The offset in efficiency applied to body parts affected by this.",
  ],
  Stat_Hediff_Affects_Desc: ["The mental abilities this affects."],
  Stat_Hediff_HungerRateOffset_Name: ["Hunger rate offset"],
  Stat_Hediff_HungerRateFactor_Desc: [
    "A multiplier on the rate at which the food need depletes.",
  ],
  Stat_Hediff_HungerRateOffset_Desc: [
    "An offset on the rate at which the food need depletes.",
  ],
  Stat_Hediff_TirednessOffset_Name: ["Rest fall rate"],
  Stat_Hediff_TirednessOffset_Desc: [
    "An offset applied to the rate at which the creature's sleep need falls.",
  ],
  Stat_Hediff_TirednessFactor_Desc: [
    "A multiplier applied to the rate at which the creature's sleep need falls.",
  ],
  Stat_Hediff_PreventsInfection_Desc: [
    "Whether or not this will prevent infections.",
  ],
  Stat_Thing_Terrain_Supports_Desc: ["The things this terrain supports."],
  Stat_Thing_TerrainRequirement_Desc: [
    "This can only be placed on terrain of these types.",
  ],
  Stat_Thing_Terrain_Fine_Name: ["Considered"],
  Stat_Thing_Terrain_Fine_Value: ["Fine"],
  Stat_Thing_Terrain_Fine_Desc: [
    "This floor is considered fine and suitable for royalty.",
  ],
  Stat_Thing_PowerConsumption_Desc: [
    "The amount of power this building will draw from the power grid.",
  ],
  Stat_Thing_ReloadChargesRemaining_Name: ["{CHARGENOUN_plural} remaining"],
  Stat_Thing_ReloadChargesRemaining_Desc: [
    "The number of {CHARGENOUN_plural} remaining on this object. If these run out, the special ability can no longer be used.",
  ],
  Stat_Thing_ReloadMaxCharges_Name: ["{CHARGENOUN_plural}"],
  Stat_Thing_ReloadMaxCharges_Desc: [
    "The maximum number of {CHARGENOUN_plural} this object has.",
  ],
  Stat_Thing_ReloadRefill_Name: ["{CHARGENOUN} reload cost"],
  Stat_Thing_ReloadRefill_Desc: [
    "The amount of items required to fully reload this object.\\n\\nThis object can be reloaded before it is empty, but the cost is the same as if it was empty.",
  ],
  Stat_Thing_ReloadPerCharge_Name: ["Reload cost per {CHARGENOUN}"],
  Stat_Thing_ReloadPerCharge_Desc: [
    "The amount of items required to reload one {CHARGENOUN}. Multiple {CHARGENOUN_plural} can be reloaded at once.",
  ],
  Stat_Thing_ReloadDestroyOnEmpty_Name: ["Vanish on exhaust"],
  Stat_Thing_ReloadDestroyOnEmpty_Desc: [
    "This item will vanish when its last {CHARGENOUN} is used.",
  ],
  Stat_Thing_BodyPartEfficiency_Desc: [
    "The overall efficiency of this body part.",
  ],
  Stat_Thing_InstallSites: ["Install sites"],
  Stat_Thing_InstallSites_Desc: [
    "Areas on the body where this can be installed.",
  ],
  Stat_Thing_ReplacesParts: ["Replaces parts"],
  Stat_Thing_ReplacesParts_Desc: [
    "Body parts which are replaced by this when installed.",
  ],
  Stat_Thing_Biocoded_Name: ["Biocoding"],
  Stat_Thing_Biocoded_Desc: [
    "This item has been coded to only accept a particular individual's bio-signature.",
  ],
  Stat_Pawn_RequiredApparel_Name: ["Required apparel"],
  Stat_Thing_Plant_GrowthRate: ["Growth rate"],
  Stat_Thing_Plant_GrowthRate_Desc: [
    "The rate at which a plant is growing.\\n\\nGrowth rate is affected by things like soil fertility, temperature, light, and environmental conditions.",
  ],
  Stat_Thing_Plant_Age: ["Age"],
  Stat_Thing_Plant_AgeDesc: ["How long this has been alive."],
  Stat_Thing_Plant_Lifespan: ["Lifespan"],
  Stat_Building_Paintable: ["Paintable"],
  Stat_Building_PaintableDesc: ["Whether this can be painted using dye."],
  Stat_Building_PaintColor: ["Paint color"],
  Stat_Building_PaintColorDesc: ["The color this building was painted."],
  Stat_Thing_Drug_Chemical_Desc: [
    "The active chemical in this.\\n\\nIn some cases, the same chemical is present in multiple different drugs. These different drugs will satisfy the same addiction in different ways.",
  ],
  Stat_Thing_Drug_Category_Desc: ["The category this drug belongs to."],
  Stat_Thing_Drug_HighGainPerDose_Desc: [
    "The intensity of high gained per dose of this drug.",
  ],
  Stat_Thing_Drug_HighFallPerDay_Desc: [
    "How much this drug's high will decay each day.",
  ],
  Stat_Thing_Drug_HighDurationPerDose_Desc: [
    "How long this drug's high will last per dose.\\n\\nThis is calculated from the high gained per dose and the high fall rate.",
  ],
  Stat_Thing_Drug_ToleranceGainPerDose_Desc: [
    "How much a user's tolerance to the chemical will increase for each dose of this drug.\\n\\nThis can be different for different forms of the same chemical.",
  ],
  Stat_Thing_Drug_ToleranceFallPerDay_Desc: [
    "How much a user's tolerance to the chemical will fall per day.",
  ],
  Stat_Thing_Drug_MinToleranceForAddiction_Desc: [
    "The minimum tolerance required to become newly addicted to this drug.\\n\\nIf a user is below this tolerance level, they can't become newly addicted from taking a dose.",
  ],
  Stat_Thing_Drug_SafeDoseInterval_Desc: [
    "An adult will only become addicted if they take the drug more often than this.\\n\\nThis is calculated from the drug's minimum tolerance to addict, the tolerance gain per dose, and the rate of tolerance decay. Some drugs don't have a safe interval. Such drugs can addict on any dose, even the first one.\\n\\nNote that the safe dose interval depends on a person's body size.",
  ],
  Stat_Thing_Drug_RandomODChance_Desc: [
    "The chance of a random overdose when taking this drug. Random overdoses can happen on any dose, whether it's a new user's first try or an experienced addict's hundredth hit.",
  ],
  Stat_Thing_Drug_Addictiveness_Desc: [
    "The chance of addiction per dose of this drug.\\n\\nIf the drug has a minimum tolerance to addict, the tolerance must be above that level for this to apply. If there is no minimum tolerance, any dose can cause an addiction.",
  ],
  Stat_Thing_Drug_AddictionSeverityInitial_Desc: [
    "New addictions caused by this drug begin at this severity level.\\n\\nTaking more of the drug will increase addiction severity, while time will reduce it.",
  ],
  Stat_Thing_Drug_AddictionRecoveryTime_Desc: [
    "How long it takes to recover from an initial addiction to this drug.\\n\\nThis is be calculated from the new addiction severity divided by the rate of addiction recovery. An addiction which has been fed will take longer.",
  ],
  Stat_Thing_Drug_AddictionSeverityPerDose_Desc: [
    "How much severity is added to an existing addiction for each dose of this drug.\\n\\nAddiction severity cannot go above 100%.",
  ],
  Stat_Thing_Drug_AddictionNeedDoseInterval_Desc: [
    "How often an addict needs to take a dose of this drug to feed the addiction and prevent withdrawal.\\n\\nThis is calculated from the addiction need fall rate and the need fill per dose.",
  ],
  Stat_Thing_Drug_AddictionNeedOffset_Desc: [
    "How much each dose of this drug fills an addict's need for the chemical.",
  ],
  Stat_Thing_Drug_AddictionNeedFallRate_Desc: [
    "How quickly an addict's need for the chemical will fall.",
  ],
  Stat_Thing_Drug_AddictionCost_Desc: [
    "The market value of drugs that must be consumed per day to support an addiction to this drug without going into withdrawal.\\n\\nThis value is calculated from the addict's chemical need per dose, the need fall rate, and the market value of this drug.\\n\\nNote that there may be other ways to get the same chemical with different costs.",
  ],
  Stat_Thing_StyleLabel: ["Style"],
  Stat_Thing_StyleDesc: [
    "An object's style determines its appearance. This has no gameplay effect. Styles often form the differing methods of construction used by people of different beliefs and cultures.",
  ],
  Stat_Animal_GestationTime: ["Gestation time"],
  Stat_Animal_GestationTimeDesc: [
    "The time this species takes to gestate its offspring or eggs.",
  ],
  Stat_Animal_LitterSize: ["Litter size"],
  Stat_Animal_LitterSizeDesc: [
    "The number of offspring this creature creates per litter. If this is a range, any specific litter will have a random number of offspring in this range.",
  ],
  Stat_Animal_AdultMeatAmount: ["Adult meat amount"],
  Stat_Animal_AdultMeatAmountDesc: [
    "The base amount of meat yielded by butchering an adult member of this species. The actual yield is affected by other factors such as damage to the body and butcher skill.",
  ],
  Stat_Animal_GrowthTime: ["Growth time"],
  Stat_Animal_GrowthTimeDesc: [
    "How long it normally takes for this creature to reach adulthood. This time will be longer if the creature starves.",
  ],
  Stat_Animal_MeatPerDayDuringGrowth: ["Meat per day during growth"],
  Stat_Animal_MeatPerDayDuringGrowthDesc: [
    "This creature gains this amount of meat for each day it grows, up until it reaches adulthood.\\n\\nThis value is calculated from the meat amount and growth time.",
  ],
  Stat_Animal_GrassToMaintain: ["Grass to maintain"],
  Stat_Animal_GrassToMaintainDesc: [
    "The typical number of grass plants that this creature needs in order to fulfill its dietary needs. This is based on normal grass at typical growth rates and ignores winter.",
  ],
  Stat_Animal_EggType: ["Egg type"],
  Stat_Animal_EggTypeDesc: ["The type of egg this creature lays."],
  Stat_Animal_EggsPerYear: ["Eggs per year"],
  Stat_Animal_EggsPerYearDesc: [
    "The number of eggs this creature will lay per year. Some creatures need to be fertilized to lay eggs. Egg laying will be slower if the creature starves.",
  ],
  Stat_Animal_EggNutrition: ["Egg nutrition"],
  Stat_Animal_EggNutritionDesc: [
    "The amount of nutrition in a single egg laid by this creature.",
  ],
  Stat_Animal_EggNutritionYearly: ["Egg nutrition per year"],
  Stat_Animal_EggNutritionYearlyDesc: [
    "The amount of yearly nutrition generated by eggs laid by this creature each year.\\n\\nThis value is calculated from eggs per year and egg nutrition.",
  ],
  Stat_Animal_EggMarketValue: ["Egg market value"],
  Stat_Animal_EggMarketValueDesc: ["The market value of a single laid egg."],
  Stat_Animal_EggMarketValueYearly: ["Egg value per year"],
  Stat_Animal_EggMarketValueYearlyDesc: [
    "The total value of eggs normally laid over the course of a year.\\n\\nThis is calculated from eggs per year and egg market value.",
  ],
  Stat_Animal_MilkType: ["Milk type"],
  Stat_Animal_MilkTypeDesc: ["The type of milk this creature produces."],
  Stat_Animal_MilkAmount: ["Milk amount"],
  Stat_Animal_MilkAmountDesc: [
    "The amount of milk this creature produces each time it is milked.",
  ],
  Stat_Animal_MilkGrowthTime: ["Milking interval"],
  Stat_Animal_MilkGrowthTimeDesc: [
    "The amount of time this creature needs between milkings.",
  ],
  Stat_Animal_MilkPerYear: ["Milk per year"],
  Stat_Animal_MilkPerYearDesc: [
    "The amount of milk produced by this animal over the course of a year.\\n\\nThis is calculated from milk amount and milking interval.",
  ],
  Stat_Animal_MilkValue: ["Milk market value"],
  Stat_Animal_MilkValueDesc: ["The value of one unit of this creature's milk."],
  Stat_Animal_MilkValuePerYear: ["Milk value per year"],
  Stat_Animal_MilkValuePerYearDesc: [
    "The market value of one year's worth of milk from this creature, assuming it never goes hungry and is milked instantly at the end of each milk interval.\\n\\nThis is calculated from milk per year and milk market value.",
  ],
  Stat_Animal_WoolType: ["Wool type"],
  Stat_Animal_WoolTypeDesc: ["The type of wool produced by this creature."],
  Stat_Animal_WoolAmount: ["Wool amount"],
  Stat_Animal_WoolAmountDesc: [
    "The amount of wool yielded by this creature each time it is shorn.",
  ],
  Stat_Animal_WoolGrowthTime: ["Wool shearing interval"],
  Stat_Animal_WoolGrowthTimeDesc: [
    "The time after shearing before this creature can be shorn again.",
  ],
  Stat_Animal_WoolPerYear: ["Wool amount per year"],
  Stat_Animal_WoolPerYearDesc: [
    "The amount of wool produced by this creature per year.\\n\\nThis is calculated from wool amount and wool shearing interval.",
  ],
  Stat_Animal_WoolValue: ["Wool market value"],
  Stat_Animal_WoolValueDesc: [
    "The market value of one unit of this creature's wool.",
  ],
  Stat_Animal_WoolValuePerYear: ["Wool value per year"],
  Stat_Animal_WoolValuePerYearDesc: [
    "The market value of one year's worth of wool from this creature.\\n\\nThis is calculated from wool amount per year and wool market value.",
  ],
  Stat_Studiable_Desc: [
    "How much of the total possible study you have performed on this object.",
  ],
  Stat_Source_Label: ["Source"],
  Stat_Source_OfficialExpansionReport: [
    "This content came from the official expansion",
  ],
  Stat_Source_ModReport: ["This content came from the mod"],
  FactionGreetingHostile: [
    "{0} hurls some epithets into the microphone and disconnects.",
  ],
  FactionGreetingHostileAppreciative: [
    "{0} demands that you make a gesture of goodwill, like bringing gifts to one of {0_possessive} settlements or releasing {0_possessive} faction's prisoners unharmed. Until then, {0_pronoun} is unwilling to talk.\\n\\nMuttering an insult, {0_pronoun} disconnects.",
  ],
  FactionGreetingWary: [
    "{0} greets {NEGOTIATOR_labelShort} and asks what business you want to handle.",
  ],
  FactionGreetingWarm: [
    "{0} greets {NEGOTIATOR_labelShort} warmly and asks what {LEADER_pronoun} can do to help you.",
  ],
  WorkTypeDisablesOption: ["won't do {0}"],
  Disconnect: ["Disconnect"],
  OfferGift: ["Offer gift"],
  MustBeAlly: ["must be ally"],
  NeedGoodwill: ["need {0} goodwill"],
  NeedSilverLaunchable: ["need {0} silver near trade beacons"],
  NotEnoughSilver: ["not enough silver"],
  SilverForGoodwill: ["{0} silver for {1} goodwill"],
  SilverGiftSent: ["{0} thanks you.\\n\\n(Goodwill improved by {1})"],
  RequestTrader: ["Request a trade caravan (cost: {0} goodwill)"],
  ChooseTraderKind: ["{0} asks what kind of trade caravan you want."],
  TraderSent: [
    "{0} agrees to send you a trade caravan. It will arrive within a few days.",
  ],
  WaitTime: ["wait {0}"],
  RequestAICoreInformation: [
    "Request the location of a {0} (cost: {1} silver)",
  ],
  RequestAICoreInformationResult: [
    "{0} sends the requested information and wishes you good luck.",
  ],
  NoKnownAICore: ["no more locations known"],
  RequestMilitaryAid: ["Request immediate military aid (cost: {0} goodwill)"],
  MilitaryAidConfirmMutualEnemy: [
    "{0} will not help you fight other factions who are not their enemies. This includes some who are currently threatening you, {1}. Do you still want to call for aid?",
  ],
  CallConfirm: ["Yes, call them anyway."],
  CallCancel: ["No, never mind."],
  MilitaryAidSent: ["{0} agrees to send fighters to help you."],
  CantSendMilitaryAidInTime: [
    "{0} apologizes and says they won't be able to arrive in time.\\n\\n(This faction's technology level is too low for transport pods)",
  ],
  HostileVisitorsPresent: ["hostile visitors present"],
  Dark: ["Dark"],
  Lit: ["Lit"],
  LitBrightly: ["Brightly lit"],
  PriceTypeVeryCheap: ["very cheap"],
  PriceTypeCheap: ["cheap"],
  PriceTypeNormal: ["normal"],
  PriceTypeExpensive: ["expensive"],
  PriceTypeExorbitant: ["exorbitant"],
  StoragePriorityUnstored: ["unstored"],
  StoragePriorityLow: ["low"],
  StoragePriorityNormal: ["normal"],
  StoragePriorityPreferred: ["preferred"],
  StoragePriorityImportant: ["important"],
  StoragePriorityCritical: ["critical"],
  FoodTypeFlags_VegetableOrFruit: ["vegetables"],
  FoodTypeFlags_Meat: ["raw meat"],
  FoodTypeFlags_Corpse: ["corpses"],
  FoodTypeFlags_Seed: ["seeds"],
  FoodTypeFlags_AnimalProduct: ["animal products"],
  FoodTypeFlags_Plant: ["live plants"],
  FoodTypeFlags_Tree: ["live trees"],
  FoodTypeFlags_Meal: ["meals"],
  FoodTypeFlags_Processed: ["processed foods"],
  FoodTypeFlags_Liquor: ["liquor"],
  FoodTypeFlags_Kibble: ["kibble"],
  QualityCategory_Awful: ["awful"],
  QualityCategory_Poor: ["poor"],
  QualityCategory_Normal: ["normal"],
  QualityCategory_Good: ["good"],
  QualityCategory_Excellent: ["excellent"],
  QualityCategory_Masterwork: ["masterwork"],
  QualityCategory_Legendary: ["legendary"],
  QualityCategoryShort_Awful: ["awfl"],
  QualityCategoryShort_Poor: ["poor"],
  QualityCategoryShort_Normal: ["norm"],
  QualityCategoryShort_Good: ["good"],
  QualityCategoryShort_Excellent: ["exc"],
  QualityCategoryShort_Masterwork: ["mast"],
  QualityCategoryShort_Legendary: ["legd"],
  HungerLevel_Starving: ["Starving"],
  HungerLevel_UrgentlyHungry: ["Urgently hungry"],
  HungerLevel_Hungry: ["Hungry"],
  HungerLevel_Fed: ["Fed"],
  HungerLevel_Exhausted: ["Exhausted"],
  HungerLevel_VeryTired: ["Very tired"],
  HungerLevel_Tired: ["Tired"],
  HungerLevel_Rested: ["Rested"],
  Hilliness_Flat: ["flat"],
  Hilliness_SmallHills: ["small hills"],
  Hilliness_LargeHills: ["large hills"],
  Hilliness_Mountainous: ["mountainous"],
  Hilliness_Impassable: ["impassable"],
  WorkshopInteractStage_CreatingItem: ["Creating"],
  WorkshopInteractStage_SubmittingItem: ["Submitting"],
  EItemUpdateStatus_k_EItemUpdateStatusInvalid: ["Invalid"],
  EItemUpdateStatus_k_EItemUpdateStatusPreparingConfig: [
    "Preparing config data",
  ],
  EItemUpdateStatus_k_EItemUpdateStatusPreparingContent: [
    "Preparing content files",
  ],
  EItemUpdateStatus_k_EItemUpdateStatusUploadingContent: ["Uploading content"],
  EItemUpdateStatus_k_EItemUpdateStatusUploadingPreviewFile: [
    "Uploading preview file",
  ],
  EItemUpdateStatus_k_EItemUpdateStatusCommittingChanges: [
    "Committing changes",
  ],
  ContentSource_OfficialModsFolder: ["Official content"],
  ContentSource_ModsFolder: ["Local folder"],
  ContentSource_SteamWorkshop: ["Steam Workshop"],
  MedicalCareCategory_NoCare: ["no medical care"],
  MedicalCareCategory_NoMeds: ["doctor care, but no medicine"],
  MedicalCareCategory_HerbalOrWorse: ["herbal medicine or worse"],
  MedicalCareCategory_NormalOrWorse: ["industrial-tech medicine or worse"],
  MedicalCareCategory_Best: ["best quality medicine"],
  HostilityResponseMode_Ignore: ["Ignore"],
  HostilityResponseMode_Attack: ["Attack"],
  HostilityResponseMode_Flee: ["Flee"],
  HediffGrowthMode_Growing: ["growing"],
  HediffGrowthMode_Stable: ["stable"],
  HediffGrowthMode_Remission: ["remission"],
  TechLevel_Animal: ["animal"],
  TechLevel_Neolithic: ["neolithic"],
  TechLevel_Medieval: ["medieval"],
  TechLevel_Industrial: ["industrial"],
  TechLevel_Spacer: ["spacer"],
  TechLevel_Ultra: ["ultra"],
  TechLevel_Archotech: ["archotech"],
  PlayerPawnsArriveMethod_Standing: ["Standing"],
  PlayerPawnsArriveMethod_DropPods: ["Drop pods"],
  PawnGenerationContext_All: ["all characters"],
  PawnGenerationContext_PlayerStarter: ["player starting characters"],
  PawnGenerationContext_NonPlayer: ["non-player characters"],
  ScreenShakeIntensity: ["Screen shake intensity"],
  ShowAnimalNames: ["Show animal names"],
  AnimalNameDisplayMode_TameNamed: ["Tame (named only)"],
  AnimalNameDisplayMode_TameAll: ["Tame (all)"],
  ShowMechNames: ["Show player mech names"],
  MechNameDisplayMode_WhileDrafted: ["While drafted"],
  MechNameDisplayMode_Always: ["always"],
  ShowWeaponsUnderPortrait: ["Weapons below portrait"],
  ShowWeaponsUnderPortraitTooltip: [
    "Show weapons below each person's portrait on the colonist bar at the top of the screen",
  ],
  ShowWeapons_Always: ["always"],
  ShowWeapons_WhileDrafted: ["while drafted"],
  Celsius: ["Celsius"],
  Fahrenheit: ["Fahrenheit"],
  Kelvin: ["Kelvin"],
  Direction8Way_North_Short: ["N"],
  Direction8Way_NorthEast_Short: ["NE"],
  Direction8Way_East_Short: ["E"],
  Direction8Way_SouthEast_Short: ["SE"],
  Direction8Way_South_Short: ["S"],
  Direction8Way_SouthWest_Short: ["SW"],
  Direction8Way_West_Short: ["W"],
  Direction8Way_NorthWest_Short: ["NW"],
  DietCategory_NeverEats: ["Never eats"],
  DietCategory_Herbivorous: ["Herbivorous"],
  DietCategory_Dendrovorous: ["Dendrovorous"],
  DietCategory_Ovivorous: ["Ovivorous"],
  DietCategory_Omnivorous: ["Omnivorous"],
  DietCategory_Carnivorous: ["Carnivorous"],
  DietCategory_NeverEats_Short: ["-"],
  DietCategory_Herbivorous_Short: ["H"],
  DietCategory_Dendrovorous_Short: ["D"],
  DietCategory_Ovivorous_Short: ["Ov"],
  DietCategory_Omnivorous_Short: ["O"],
  DietCategory_Carnivorous_Short: ["C"],
  FoodPoisonCause_IncompetentCook: ["incompetent cook"],
  FoodPoisonCause_FilthyKitchen: ["dirty cooking area"],
  FoodPoisonCause_Rotten: ["rotten food"],
  FoodPoisonCause_DangerousFoodType: ["dangerous food type"],
  PsychicDroneLevel_None: ["none"],
  PsychicDroneLevel_GoodMedium: ["medium"],
  PsychicDroneLevel_BadLow: ["low"],
  PsychicDroneLevel_BadMedium: ["medium"],
  PsychicDroneLevel_BadHigh: ["high"],
  PsychicDroneLevel_BadExtreme: ["extreme"],
  AutomaticPauseMode_Never: ["Never"],
  AutomaticPauseMode_MajorThreat: ["Major threats"],
  AutomaticPauseMode_AnyThreat: ["Any threat"],
  AutomaticPauseMode_AnyLetter: ["Any letter"],
  PainCategory_LowPain: ["itchy"],
  PainCategory_MediumPain: ["aching"],
  PainCategory_HighPain: ["painful"],
  ExtraFactionType_HomeFaction: ["home faction"],
  ExtraFactionType_HostFaction: ["remote host faction"],
  ExtraFactionType_MiniFaction: ["group"],
  DrugCategory: ["drug category"],
  DrugCategory_None: ["none"],
  DrugCategory_Medical: ["medical"],
  DrugCategory_Social: ["social"],
  DrugCategory_Hard: ["hard"],
  DrugCategory_Any: ["any"],
  CallOnRadio: ["Call {0}"],
  CannotUseReason: ["Cannot use: {0}"],
  CannotUseSolarFlare: ["Cannot use: EMP"],
  CannotUseNoPower: ["Cannot use: No power"],
  CannotUseNoPath: ["Cannot use: No path"],
  CannotUseReserved: ["Cannot use: Reserved"],
  CannotUseFull: ["Cannot use: Full"],
  LeaderUnavailable: ["leader {1_labelShort} is unavailable"],
  LeaderUnavailableNoLeader: ["leader is unavailable"],
  NotAllowed: ["Not allowed"],
  FireAt: ["Fire at {1_label}"],
  OutOfRange: ["out of range"],
  TooClose: ["too close"],
  CannotHitTarget: ["Cannot hit target"],
  IsIncapableOfViolenceLower: ["{1_labelShort} is incapable of violence"],
  IncapableOfViolenceLower: ["incapable of violence"],
  IsIncapableOfShootingLower: ["{0_labelShort} is incapable of shooting"],
  IsNotDraftedLower: ["{1_labelShort} is not drafted"],
  CannotOrderNonControlledLower: ["cannot order characters you do not control"],
  CannotAttackSelf: ["cannot attack self"],
  CannotAttackSameFactionMember: ["cannot attack faction ally"],
  IncapableOfFirefighting: ["Incapable of firefighting."],
  OrderManThing: ["Man {1_labelShort}"],
  MeleeAttack: ["Melee attack {1_label}"],
  MeleeAttackToDeath: ["Melee attack {1_label} to death"],
  NoPath: ["no path"],
  Burying: ["burying"],
  DesignatedFor: ["designated for {0}"],
  ForbiddenLower: ["forbidden"],
  ForbiddenOutsideAllowedAreaLower: ["outside allowed area"],
  NotInHomeArea: ["not in home area"],
  BurningLower: ["burning"],
  NoEmptyPlaceLower: ["no empty, accessible spot configured to store it"],
  NoMergeTarget: ["no stack available to merge into"],
  AlreadyFilledLower: ["already filled enough"],
  MissingMaterials: ["missing {0}"],
  NoMedicineMatchingCategory: ["No medicine for restriction '{CATEGORY}'."],
  UnderRequiredSkill: ["under required skill {0}"],
  UnderAllowedSkill: ["under allowed skill {0}"],
  AboveAllowedSkill: ["above allowed skill {0}"],
  NoReachableOutsideCell: ["no reachable outside cell"],
  MissingRequiredSkillLevel: ["missing required skill level"],
  AnimalInteractedTooRecently: ["animal interacted too recently"],
  PrisonerInteractedTooRecently: ["interacted with too recently"],
  NoUsableFood: ["no usable food"],
  NoFood: ["no food"],
  NoFoodMatchingRestrictions: ["no food matching restrictions"],
  NoIngredient: ["No {0_label}"],
  FoodBelowTitleRequirements: ["below requirements of {0}"],
  AnimalsSkillTooLow: ["animals skill too low - need {0}"],
  CantInteractAnimalDowned: ["animal downed"],
  CantInteractAnimalAsleep: ["animal sleeping"],
  CantInteractAnimalBusy: ["animal busy"],
  CantRopeAnimalNoUsableReachablePens: ["no allowed reachable pens"],
  CantRopeAnimalNoEnclosedPens: ["no enclosed pens"],
  CantRopeAnimalNoAllowedPens: ["no allowed pens"],
  CantRopeAnimalNoReachablePens: ["no reachable pens"],
  CantRopeAnimalCantTouch: ["can't touch"],
  CantRopeAnimalNoSpace: ["no space in pen"],
  CantRopeAnimalMentalState: ["{0_labelShort} is in {1} state"],
  CantRopeAnimalAlreadyInBestPen: ["already in best pen"],
  SkillTooLowForConstruction: ["{0} skill too low"],
  NoComponentsToRepair: ["need components"],
  NoFuelToRefuel: ["need {0}"],
  NoWort: ["need wort"],
  TheOnlyAvailableFoodIsInStorageOfHigherPriority: [
    "available food is in storage of higher priority",
  ],
  NoFoodToFillHopper: ["no suitable food"],
  SelfTendDisabled: ["self-tend disabled"],
  ReservedForPrisoners: ["reserved for prisoners"],
  CannotReach: ["cannot reach"],
  NotSurgeryReady: ["not ready for surgery"],
  SkillDisabled: ["skill incapable"],
  CantSowCavePlantBecauseOfLight: ["too bright"],
  CantSowCavePlantBecauseUnroofed: ["unroofed"],
  IncapableOfDeconstruction: ["incapable of deconstruction"],
  IncapableOfMining: ["incapable of mining"],
  AngersFaction: ["angers faction"],
  InstallImplantNoBodyPart: ["no body part"],
  InstallImplantNotAllowedForNonColonists: ["not a colonist"],
  InstallImplantAlreadyInstalled: ["already installed"],
  InstallImplantHediffRequired: ["requires an existing {0}"],
  InstallImplantAlreadyMaxLevel: ["max level"],
  InstallImplantMinLevel: ["requires min level {0}"],
  InstallImplantPsychicallyDeaf: ["psychically deaf"],
  UpgradeImplant: ["Upgrade {0} to level {1}"],
  SurgeryViolationFellowFactionMember: ["violation of faction ally"],
  BeingCarriedBy: ["being carried by {0_labelShort}"],
  ContainerFull: ["full"],
  AlreadyAssigned: ["already assigned"],
  ConsumeThing: ["Consume {1_labelShort}"],
  CannotGoNoPath: ["Cannot go here: No path"],
  GoHere: ["Go here"],
  Arrest: ["Arrest {0}"],
  TryToArrest: ["Try to arrest {1_label} ({2} chance)"],
  CannotArrest: ["Cannot arrest"],
  ArrestChance: ["{0} chance of arrest"],
  Capture: ["Capture {1_label}"],
  CannotCapture: ["Cannot capture"],
  Unrecruitable: ["unwaveringly loyal"],
  Rescue: ["Rescue {1_label}"],
  PutSomewhereSafe: ["Put {1_label} somewhere safe"],
  TakingToBed: ["Taking {0_labelShort} to bed."],
  CannotRescue: ["Cannot rescue"],
  CarryToCryptosleepCasket: ["Carry {1_label} to cryptosleep casket"],
  CannotCarryToCryptosleepCasket: ["Cannot carry to cryptosleep casket"],
  CarryToShuttle: ["Carry {0_label} to shuttle"],
  NoCryptosleepCasket: ["No available cryptosleep casket."],
  CryptosleepCasketGuestsNotAllowed: ["Temporary faction members not allowed."],
  CryptosleepCasketGuestPrisonersNotAllowed: ["Hosted prisoners not allowed."],
  CryptosleepCasketOccupied: ["Already occupied"],
  NoPrisonerBed: [
    "No reachable, un-reserved, enclosed prisoner-marked bed in safe temperature.",
  ],
  NoNonPrisonerBed: [
    "No reachable, un-reserved non-prisoner bed in safe temperature.",
  ],
  NoAnimalBed: ["No reachable, un-reserved animal bed in safe temperature."],
  Reserved: ["Reserved by someone else."],
  ReservedBy: ["Reserved by {1_labelShort}"],
  IsReservedBy: ["{0} is reserved by {1}."],
  TooHeavy: ["Too heavy"],
  SameFaction: ["{0_labelShort} is in the same faction."],
  Incapable: ["incapable"],
  IncapableOfCapacity: ["incapable of {0}"],
  MustHaveHediff: ["Must have {0_label}"],
  MinSkill: ["min skill"],
  Equip: ["Equip {0}"],
  EquipWarningBrawler: ["(brawler will be unhappy)"],
  CannotEquip: ["Cannot equip {0}"],
  CannotManThing: ["Cannot man {1_labelShort}"],
  ForceWear: ["Force wear {1_labelShort}"],
  CannotWear: ["Cannot wear {1_label}"],
  ForceEquipApparel: ["Force equip {1_labelShort}"],
  CannotEquipApparel: ["Cannot equip {1_label}"],
  CannotWearBecauseOfMissingBodyParts: ["missing body parts"],
  Reload: ["Reload {GEAR_labelShort} with {AMMO_label}"],
  ReloadFull: ["Full"],
  ReloadNotEnough: ["Too few"],
  ReloadCannotCarryEnough: [
    "Cannot carry enough {AMMO_label} to reload 1 charge.",
  ],
  CannotPickUp: ["Cannot pick up {1_labelShort}"],
  CannotPickUpAll: ["Cannot pick up {1_label} (all)"],
  PickUpOne: ["Pick up {1_labelShort} x1"],
  PickUpAll: ["Pick up {1_label} (all)"],
  PickUpSome: ["Pick up {1_labelShort}..."],
  PickUpCount: ["Pick up {1_labelShort} x{{0}}"],
  CannotPickUpSome: ["Cannot pick up {1_labelShort}"],
  MaxPickUpAllowed: ["{0} {1} allowed"],
  CannotGiveToPackAnimal: ["Cannot load {1_label} onto pack animal"],
  CannotGiveToPackAnimalAll: ["Cannot load {1_label} (all) onto pack animal"],
  GiveToPackAnimal: ["Load {1_label} onto pack animal"],
  GiveToPackAnimalAll: ["Load {1_label} (all) onto pack animal"],
  GiveToPackAnimalSome: ["Load {1_labelShort} onto pack animal..."],
  GiveToPackAnimalCount: ["Load {1_labelShort} x{{0}} onto pack animal"],
  CannotLoadIntoCaravan: ["Cannot load {1_label} into caravan"],
  CannotLoadIntoCaravanAll: ["Cannot load {1_label} (all) into caravan"],
  LoadIntoCaravan: ["Load {1_label} into caravan"],
  LoadIntoCaravanAll: ["Load {1_label} (all) into caravan"],
  LoadIntoCaravanSome: ["Load {1_labelShort} into caravan..."],
  LoadIntoCaravanCount: ["Load {1_labelShort} x{{0}}"],
  OverweightLower: ["overweight"],
  CannotCarryToExit: ["Cannot carry {1_label} and leave the area"],
  CarryToExit: ["Carry {1_label} and leave the area"],
  CarryToExitAndCapture: ["Capture {1_label} and leave the area"],
  Strip: ["Strip {1_label}"],
  CannotStrip: ["Cannot strip {1_label}"],
  CannotDrop: ["Cannot drop {1_label}"],
  Carry: ["Carry {0_label}"],
  CannotCarry: ["Cannot carry {0_label}"],
  QuestRelated: ["temporary faction member"],
  QuestRelated_Outfit: ["Cannot change outfits on temporary faction members"],
  WouldReplaceLockedApparel: ["would replace locked apparel"],
  CannotPlaceIn: ["Cannot place {0_label} in {1_label}"],
  PlaceIn: ["Place {0_label} in {1_label}"],
  SelfDestructHere: ["Self-destruct here"],
  Drop: ["Drop {1_label}"],
  UseMedicalBed: ["Rest until healed"],
  NotInjured: ["not injured"],
  NoDoctor: ["no doctor"],
  NotForSlaves: ["medical bed not for slaves"],
  SomeoneElseSleeping: ["occupied by {0}"],
  TradeWith: ["Trade with {0}"],
  CannotTrade: ["Cannot trade"],
  Open: ["Open {0_label}"],
  CannotOpen: ["Cannot open {0_label}"],
  EnterMap: ["Enter {0}"],
  VisitSettlement: ["Visit {0}"],
  VisitPeaceTalks: ["Visit {0}"],
  VisitEscapeShip: ["Visit {0}"],
  AttackSettlement: ["Attack {0}"],
  ApproachSite: ["Approach {0}"],
  ApproachingSite: ["Approaching {0}"],
  OfferGifts: ["Offer gifts"],
  TradeWithSettlement: ["Trade with {0}"],
  EnterCryptosleepCasket: ["Enter cryptosleep casket"],
  OpenCryptosleepCasket: ["Open cryptosleep casket"],
  EnterShuttle: ["Get in shuttle"],
  CannotGenericWork: ["Cannot {0} {1}"],
  CannotGenericWorkCustom: ["Cannot {0}"],
  CannotMissingHealthActivities: ["Cannot prioritize: Incapable of {0}"],
  CannotGenericAlreadyAm: ["Already {0} {2_labelShort}"],
  CannotGenericAlreadyAmCustom: ["Already {0}"],
  CannotPrioritizeWorkTypeDisabled: ["Cannot prioritize: Will never do {0}"],
  MissingTitleAbility: ["lacking necessary title"],
  CannotPrioritizeWorkGiverDisabled: ["Cannot prioritize: Will never {0}"],
  WillNever: ["will never {0}"],
  CannotPrioritizeNotAssignedToWorkType: [
    "Cannot prioritize: Not assigned to {0}",
  ],
  NotAssigned: ["not assigned"],
  NotAssignedToWorkType: ["not assigned to {0}"],
  CannotPrioritizeResearch: ["Cannot prioritize: Research is a long-term task"],
  CannotPrioritizeForbidden: ["Cannot prioritize: {1_label} is forbidden"],
  CannotPrioritizeCellForbidden: ["Cannot prioritize: Forbidden"],
  CannotPrioritizeForbiddenOutsideAllowedArea: ["Outside allowed area"],
  CannotPrioritizeBurying: ["Cannot prioritize burying"],
  PrioritizeGeneric: ["Prioritize {0} {1}"],
  DropAtEdge: ["Drop at edge"],
  DropInCenter: ["Drop in center"],
  AttackShuttle: ["Attack {0}"],
  AttackAndDropAtEdge: ["Attack {0}: Drop at edge"],
  AttackAndDropInCenter: ["Attack {0}: Drop in center"],
  VomitingLower: ["vomiting"],
  NotInterruptibleLower: ["not interruptible"],
  AddWaypoint: ["Add a new waypoint here"],
  RemoveWaypoint: ["Remove this waypoint"],
  RemoveAllDesignations: ["Cancel all designations"],
  DesignateAll: ["Designate all"],
  CountToDesignate: ["{0} affected"],
  ForbidAllItems: ["Forbid all items"],
  UnforbidAllItems: ["Unforbid all items"],
  LandInExistingMap: ["Zoom in and choose a landing spot in {0}"],
  TransportPodsContentsWillBeLost: ["The contents will be lost"],
  FormCaravanHere: ["Form caravan here"],
  GiveToCaravan: ["Give to {0}"],
  GiveGiftViaTransportPods: ["Give as a gift to {0} ({1})"],
  NotPartOfLaunchGroup: ["Not part of launch group"],
  FreePrisoner: ["Free prisoner"],
  OfferHelp: ["Offer help"],
  ApplyTechprint: ["apply {0}"],
  EnterCooldownBlocksEntering: ["Too dangerous"],
  NoCommsTarget: ["Nobody to call"],
  Invoke: ["Invoke {0}"],
  CannotInvoke: ["Cannot invoke {0}"],
  Power: ["power"],
  AlreadyInvoked: ["already invoked"],
  Tend: ["Tend {0}"],
  CannotTend: ["Cannot tend {0}"],
  TendingNotRequired: ["{0} does not require tending"],
  WithoutMedicine: ["without medicine"],
  RepairThing: ["Repair {0}"],
  CannotRepair: ["Cannot repair {0}"],
  CannotEnter: ["Cannot enter"],
  CannotRomance: ["Cannot romance {0}"],
  CanRomance: ["Romance {0}"],
  WarningFoodDisliked: ["disliked food"],
  CommandForbid: ["Forbid"],
  CommandAllow: ["Allow"],
  CommandForbiddenDesc: [
    "Forbidden: Your colonists are not allowed to interact with this. Click to allow.",
  ],
  CommandNotForbiddenDesc: [
    "Allowed: Your colonists are allowed to interact with this. Click to forbid.",
  ],
  CommandTogglePowerLabel: ["Toggle power"],
  CommandTogglePowerDesc: ["Toggle power."],
  CommandDesignateTogglePowerLabel: ["Designate toggle power"],
  CommandDesignateTogglePowerDesc: [
    "Designate this thing to have power toggled. A colonist will come soon to flick the switch.",
  ],
  CommandTryReconnectLabel: ["Reconnect"],
  CommandTryReconnectDesc: [
    "Try to connect to a different power net within my connection radius. This is useful if I'm connected to an unpowered net but there is a powered net nearby.",
  ],
  CommandGatherSpotToggleLabel: ["Gather spot"],
  CommandGatherSpotToggleDescActive: [
    "Active - colonists will gather around this object.",
  ],
  CommandGatherSpotToggleDescInactive: [
    "Inactive - colonists will not gather around this object.",
  ],
  CommandDraftLabel: ["Draft"],
  CommandUndraftLabel: ["Undraft"],
  CommandToggleDraftDesc: [
    "Toggle military draft.\\n\\nDrafted people take orders and fight. They will not work, eat, or rest.",
  ],
  IsIncapped: ["{1_labelShort} cannot walk."],
  ParticipatingInRitual: ["{0_labelShort} is participating in {1}."],
  CommandFireAtWillLabel: ["Fire at will"],
  CommandFireAtWillDesc: [
    "Toggle fire at will.\\n\\nWhen disabled, this character will not automatically shoot at ranged targets. Does not affect melee combat.",
  ],
  CommandClearPrioritizedWork: ["Clear prioritized work"],
  CommandClearPrioritizedWorkDesc: [
    "Clear any prioritized work you assigned. The character will go back to their usual self-directed activities.",
  ],
  CommandCancelConstructionLabel: ["Cancel"],
  CommandCancelConstructionDesc: ["Cancel this construction."],
  CommandGetOutOfBedLabel: ["Get out of bed"],
  CommandGetOutOfBedDesc: ["Get out of current bed."],
  CommandThingSetOwnerLabel: ["Set owner"],
  CommandBedSetOwnerDesc: ["Assign this bed to be owned by a specific {0}."],
  CommandThroneSetOwnerDesc: [
    "Assign this throne to be owned by a specific colonist.",
  ],
  CommandMeditationSpotSetOwnerDesc: [
    "Assign this meditation spot to be owned by a specific colonist.",
  ],
  CommandGraveAssignColonistLabel: ["Assign colonist"],
  CommandGraveAssignColonistDesc: [
    "Assign this grave to be owned by a specific colonist.",
  ],
  BuildingAssign: ["Assign"],
  BuildingReassign: ["Reassign"],
  BuildingUnassign: ["Unassign"],
  CommandBedSetForPrisonersLabel: ["For prisoners"],
  CommandBedSetForPrisonersDesc: [
    "Whether beds in this room should be used by prisoners.",
  ],
  CommandBedSetForPrisonersFailOutdoors: [
    "Only beds in enclosed spaces can be set for prisoners.",
  ],
  CommandBedSetAsMedicalLabel: ["Medical"],
  CommandBedSetAsMedicalDesc: ["Whether this bed is for medical use."],
  TurningOnPrisonerBedWarning: [
    "Turning on prisoner mode affects the whole room (since prisoners and colonists cannot sleep in the same room).\\n\\nThese people will lose ownership of their beds:",
  ],
  TurningOffPrisonerBedWarning: [
    "Turning off prisoner mode affects the whole room (since prisoners and colonists cannot sleep in the same room).\\n\\nThese people will lose ownership of their beds:",
  ],
  AreYouSure: ["Are you sure you want to do this?"],
  ChangingOwnerTypeBedWarning: [
    "Changing bed use affects the whole room (since prisoners, slaves and colonists cannot sleep in the same room).\\n\\nThese people will lose ownership of their beds:",
  ],
  CommandDetonateLabel: ["Detonate"],
  CommandDetonateDesc: ["Start the countdown to detonation."],
  CommandRenameZoneLabel: ["Rename"],
  CommandRenameZoneDesc: ["Rename this zone."],
  CommandHideZoneLabel: ["Hide"],
  CommandUnhideZoneLabel: ["Unhide"],
  CommandHideZoneDesc: ["Hide/unhide this zone."],
  CommandDeleteZoneLabel: ["Delete"],
  CommandDeleteZoneDesc: ["Delete this zone."],
  CommandCopyZoneSettingsLabel: ["Copy settings"],
  CommandCopyZoneSettingsDesc: [
    "Copy this storage's settings to the clipboard so you can paste them onto another zone.",
  ],
  CommandPasteZoneSettingsLabel: ["Paste settings"],
  CommandPasteZoneSettingsDesc: [
    "Overwrite this storage's settings with those previously copied to the clipboard.",
  ],
  CommandAllowSow: ["Allow sowing"],
  CommandAllowSowDesc: [
    "When disabled, colonists will never sow new plants in this zone. They will still harvest.",
  ],
  CommandAllowCut: ["Allow cutting"],
  CommandAllowCutDesc: [
    "When disabled, colonists will never cut plants in this zone. They will still sow new plants in spaces that are already empty, and harvest plants matching the growing zone plant type.",
  ],
  CommandSelectStoredThing: ["Select {0_label}"],
  CommandSelectStoredThingDesc: ["Select the item stored in here."],
  CommandSetForceAttackTarget: ["Set forced target"],
  CommandSetForceAttackTargetDesc: [
    "Sets a target that this turret must attack continuously as long as it can.",
  ],
  CommandStopForceAttack: ["Stop forced attack"],
  CommandStopForceAttackDesc: [
    "Stops force-attacking and allows the turret to fire as it wishes.",
  ],
  CommandStopAttackFailNotForceAttacking: ["Not currently force-attacking."],
  CommandExtractShell: ["Extract shell"],
  CommandExtractShellDesc: [
    "Unloads the current shell so it can be replaced with different ammunition.",
  ],
  MessageTargetBeyondMaximumRange: ["Target beyond maximum range."],
  MessageTargetBelowMinimumRange: ["Target below minimum range."],
  MessageTurretWontFireBecauseHoldFire: [
    "Warning: The mortar won't fire because it's set to \"Hold fire\".",
  ],
  CommandShipLaunch: ["Launch ship"],
  CommandShipLaunchDesc: [
    "Start the ship launch sequence with the current configuration.",
  ],
  CommandShipLaunchReport: ["Show launch report"],
  CommandShipLaunchReportDesc: [
    "Show a readiness report about the ship's launch capability.",
  ],
  CommandShipStartup: ["Start ship"],
  CommandShipStartupDesc: ["Wake up hibernating ship components."],
  CommandPodEject: ["Eject sleeper"],
  CommandPodEjectDesc: ["Wake up the cryptosleeper and eject them."],
  CommandPodEjectFailEmpty: ["Contains nobody."],
  CommandToggleDoorForbid: ["Passage forbidden"],
  CommandToggleDoorForbidDesc: [
    "When a door is forbidden, colonists and allies will not go through it. This doesn't affect how enemies or animals interact with the door.",
  ],
  CommandToggleDoorHoldOpen: ["Hold open"],
  CommandToggleDoorHoldOpenDesc: [
    "When active, your colonists will not close the door after passing through.",
  ],
  CommandResetTemp: ["Reset"],
  CommandResetTempDesc: ["Reset the target temperature to room temperature."],
  CommandRaiseTempDesc: ["Raise the target temperature."],
  CommandLowerTempDesc: ["Lower the target temperature."],
  CommandInstall: ["Install"],
  CommandInstallDesc: [
    "This item is currently packaged up for storage and transport. Use this command to install this item in a final location.",
  ],
  CommandReinstall: ["Reinstall at..."],
  CommandReinstallDesc: [
    "Designate this item to be uninstalled and reinstalled somewhere else.",
  ],
  CommandReplant: ["Replant"],
  CommandReplantDesc: [
    "This tree is currently packaged up for storage and transport. Use this command to replant it in a new location.",
  ],
  CommandMakeBeaconStockpileDesc: [
    "Create a stockpile around this building exactly matching the shape of the beacon's launch radius.",
  ],
  CommandMakeBeaconStockpileLabel: ["Create stockpile"],
  CommandSunLampMakeGrowingZoneDesc: [
    "Create a growing zone around this building exactly matching the shape of the lamp's light radius.",
  ],
  CommandSunLampMakeGrowingZoneLabel: ["Create growing zone"],
  CommandAutoRearm: ["Auto Rearm"],
  CommandAutoRearmDesc: [
    "If this is on, this trap will automatically be replaced after it springs.",
  ],
  CommandReleaseAnimalsLabel: ["Animals attack"],
  CommandReleaseAnimalsDesc: [
    "While this is on, mastered animals are sent forth to attack distant targets. While it is off, they remain near and guard the master.",
  ],
  CommandReleaseAnimalsFail_NoAnimals: ["No animals available."],
  CommandSquadAttack: ["Attack"],
  CommandSquadAttackDesc: [
    "Order selected colonists to attack designated target.",
  ],
  CommandMeleeAttack: ["Melee attack"],
  CommandMeleeAttackDesc: [
    "Order selected colonists to attack designated target using only fists and melee weapons.",
  ],
  CommandHoldFire: ["Hold fire"],
  CommandHoldFireDesc: ["End any ongoing attacks."],
  CommandReload_NoCharges: ["No {CHARGENOUN_plural} left."],
  CommandReload_Cooldown: ["{COOLDOWNGERUND} for {TIME}."],
  CommandReload_NoAmmo: ["Needs to be reloaded with {COUNT} {AMMO_label}."],
  CommandSelectPlantToGrowMulti: ["Select plant to grow"],
  CommandSelectPlantToGrow: ["Plant: {0}"],
  CommandSelectPlantToGrowDesc: ["Determine which plant should be sown here."],
  CommandSelectMineralToScanFor: ["Tuned to"],
  CommandSelectMineralToScanForDesc: ["Select the mineral type to scan for."],
  CommandBuildCopy: ["Build copy"],
  CommandBuildCopyDesc: ["Build a copy of this building."],
  CommandFormCaravan: ["Form caravan"],
  CommandFormCaravanDesc: [
    "Form a group of colonists able to travel to new areas. The colonists will gather all the assigned supplies and accompanying animals, leave their current area, and await further orders.",
  ],
  CommandFormCaravanDescAtSpot: [
    "This spot will be used as a meeting point for the caravan. All goods and animals will be brought here before leaving.",
  ],
  CommandReformCaravan: ["Reform caravan"],
  CommandReformCaravanDesc: [
    "Reform a group of colonists. The colonists will leave their current area and await further orders.",
  ],
  CommandReformCaravanFailHostilePawns: [
    "There are still some enemies in this area.",
  ],
  CommandSplitCaravan: ["Split"],
  CommandSplitCaravanDesc: [
    "Split this caravan into two. The caravans can be later merged back into one as long as they are close to each other.",
  ],
  CommandMergeCaravans: ["Merge"],
  CommandMergeCaravansDesc: ["Merge selected caravans."],
  CommandMergeCaravansFailCaravansNotSelected: [
    "Select all caravans which should be merged. The caravans must be close to each other.",
  ],
  CommandJoinCaravan: ["Join"],
  CommandSettle: ["Settle"],
  CommandSettleDesc: [
    "Settle in this area. Your colonists will enter this area and you will be able to start building a new home.",
  ],
  CommandSettleFailAlreadyHaveBase: ["Your faction can only have one base."],
  CommandSettleFailReachedMaximumNumberOfBases: [
    "Reached maximum number of colonies.",
  ],
  CommandSettleFailNoColonists: [
    "There isn't anybody there to claim the area.",
  ],
  CommandSettleFailEnemies: ["There are enemies in this area."],
  CommandAbandonHome: ["Abandon"],
  CommandAbandonHomeDesc: [
    "Abandon this area. The area will become inaccessible and you will not be able to return here ever again. After abandoning your home, you will be able to order one of your caravans to settle in a new area.",
  ],
  CommandAbandonHomeFailAllColonistsThere: ["All of your colonists are there."],
  CommandCancelFormingCaravan: ["Cancel forming caravan"],
  CommandCancelFormingCaravanDesc: ["Terminate the caravan formation process."],
  CommandRemoveFromCaravan: ["Remove from caravan"],
  CommandRemoveFromCaravanDesc: [
    "Remove this person or animal from the caravan.",
  ],
  CommandAddToCaravan: ["Add to caravan"],
  CommandAddToCaravanDesc: [
    "Add this person or animal to the forming caravan.",
  ],
  CommandShowMap: ["Zoom in"],
  CommandShowMapDesc: ["Zoom in on this area."],
  CommandTrade: ["Trade"],
  CommandTradeDesc: ["Trade with this faction."],
  CommandTradeFailNoNegotiator: [
    "There isn't any conscious and capable negotiator.",
  ],
  CommandTradeFailNeedPermit: [
    "None of your people have the required faction permission: {0}",
  ],
  CommandOfferGifts: ["Offer gifts"],
  CommandOfferGiftsDesc: ["Offer gifts to this faction."],
  CommandFulfillTradeOffer: ["Fulfill trade offer"],
  CommandFulfillTradeOfferDesc: [
    "Fulfill the settlement's request for goods and claim your reward.",
  ],
  CommandFulfillTradeOfferFailInsufficient: [
    "Your caravan must have {0} to fulfill this trade offer.",
  ],
  CommandFulfillTradeOfferConfirm: ["Give {0}?"],
  CommandTakeOff: ["Take off"],
  CommandTakeOffDesc: ["Get on board the ship and escape the planet."],
  CommandTakeOffConfirmation: [
    "Are you sure you want to launch the ship?\\n\\nEveryone in this area will escape the planet. Everyone else will be left behind.",
  ],
  CommandSetTargetFuelLevel: ["Set target fuel level"],
  CommandSetTargetFuelLevelDesc: [
    "Set the target fuel level. Colonists will attempt to fill this up to the target fuel level.",
  ],
  CommandToggleAllowAutoRefuel: ["Toggle automatic refuel"],
  CommandToggleAllowAutoRefuelDesc: [
    "Sets whether or not automatic refueling is allowed.",
  ],
  CommandCancelLoad: ["Cancel load"],
  CommandCancelLoadDesc: [
    "Cancel loading this with people or items and eject everything already loaded.",
  ],
  CommandLaunchGroup: ["Launch"],
  CommandLaunchGroupDesc: ["Take off and fly to a destination."],
  CommandLaunchGroupFailNotConnectedToFuelingPort: [
    "Some transport pods in this loading group are not connected to a fueling port.",
  ],
  CommandLaunchGroupFailNoFuel: [
    "Some pod launchers in this group have no fuel.",
  ],
  CommandLaunchGroupFailUnderRoof: ["Some pod launchers are under a roof."],
  CommandLoadTransporter: ["Load launch group of {0}"],
  CommandLoadTransporterDesc: [
    "Defines the selected transporter(s) as a launch group. Opens the loading dialog so you can decide who and what should be loaded inside.",
  ],
  CommandLoadTransporterFailNotConnectedToFuelingPort: [
    "The transport pod is not connected to a fueling port.",
  ],
  CommandLoadTransporterFailNoFuel: ["The pod launcher has no fuel."],
  CommandLoadTransporterSingle: ["Load"],
  CommandLoadTransporterSingleDesc: [
    "Opens the loading dialog so you can decide who and what should be loaded inside.",
  ],
  CommandSetToLoadTransporter: ["Set to load"],
  CommandSetToLoadTransporterDesc: [
    "Opens the loading dialog so you can decide who and what should be loaded inside.",
  ],
  CommandAutoloadTransporters: ["Autoload"],
  CommandAutoloadTransportersDesc: [
    "Toggle loading all required cargo automatically as soon as they become available.",
  ],
  CommandSelectPreviousTransporter: ["Select previous in launch group"],
  CommandSelectPreviousTransporterDesc: [
    "Select previous transport pod in this launch group.",
  ],
  CommandSelectAllTransporters: ["Select launch group"],
  CommandSelectAllTransportersDesc: [
    "Select all transport pods in this launch group.",
  ],
  CommandSelectNextTransporter: ["Select next in launch group"],
  CommandSelectNextTransporterDesc: [
    "Select next transport pod in this launch group.",
  ],
  CommandDesignateOpenCloseVentLabel: ["Designate open/close"],
  CommandDesignateOpenCloseVentDesc: [
    "Designate this vent to be opened or closed. A colonist will come soon to perform the task.",
  ],
  CommandRemoveWaypointLabel: ["Remove"],
  CommandRemoveWaypointDesc: ["Remove this waypoint."],
  CommandPauseCaravan: ["Rest"],
  CommandToggleCaravanPauseDesc: [
    "Start resting. This has the following benefits:\\n\\n  - People can interact socially\\n  - Forage for food {0} times faster\\n  - Visibility multiplied by {1}",
  ],
  CommandShowSellableItems: ["Show what will buy"],
  CommandShowSellableItemsDesc: ["Show everything this trader wants to buy."],
  CommandAttackSettlement: ["Attack"],
  CommandAttackSettlementDesc: ["Attack this settlement."],
  CommandSendShuttle: ["Send"],
  CommandSendShuttleDesc: [
    "Initiate takeoff and have the shuttle fly to its destination.",
  ],
  CommandSendShuttleFailUnderRoof: ["The shuttle is under a roof."],
  CommandSendShuttleFailMissingRequiredThing: [
    "Some of the required items or people are missing.",
  ],
  CommandShuttleDismiss: ["Dismiss"],
  CommandShuttleDismissDesc: ["Unload all contents and send the shuttle away."],
  CommandPlaceBlueprints: ["Place blueprints"],
  CommandPlaceBlueprintsDesc: ["Place all required blueprints where possible."],
  CommandPlaceBlueprintsSpecific: ["Place {0} blueprints"],
  CommandPlaceBlueprintsSpecificDesc: [
    "Place all {0} blueprints where possible.",
  ],
  CommandCancelMonumentMarker: ["Cancel"],
  CommandCancelMonumentMarkerDesc: ["Permanently remove this monument marker."],
  CommandViewQuest: ["View quest: {0}"],
  CommandViewQuestDesc: ["View this quest in quests tab."],
  CommandOpenLinkedQuest: ["Open linked quest"],
  CommandOpenLinkedQuestDesc: ["Open linked quest in the quests tab."],
  CommandDropPawn: ["Drop {0_nameDef}"],
  CommandDropPawnDesc: ["Drop the person being carried."],
  CommandSelectCarriedPawn: ["Select {0_nameDef}"],
  CommandSelectCarriedPawnDesc: ["Select the creature being carried."],
  CommandSelectCarriedThing: ["Select {0_label}"],
  CommandSelectCarriedThingDesc: ["Select the carried item."],
  CommandSelectContainerThing: ["Select {0_label}"],
  CommandSelectContainerThingDesc: ["Select the containing item."],
  CommandSelectCarryingPawn: ["Select {0_nameDef}"],
  CommandSelectCarryingPawnDesc: ["Select the carrying creature."],
  CommandSelectContainedPawn: ["Select {0_nameDef}"],
  CommandSelectContainedPawnDesc: ["Select the contained creature."],
  CommandSelectContainedThing: ["Select {0_label}"],
  CommandSelectContainedThingDesc: ["Select the contained item."],
  TakeDrug: ["Take drug..."],
  TakeDrugDesc: ["Choose a drug from inventory to ingest immediately."],
  BuildThing: ["Build {0}"],
  CommandLeaveRitual: ["Leave {RITUAL_label}"],
  CommandLeaveRitualDesc: [
    "Stop participating in the {RITUAL_labelDef}. The ritual will continue as long as it has at least one participant.",
  ],
  CommandLeaveLastParticipant: [
    "This is the last participant in the {RITUAL_labelDef}.",
  ],
  CommandCancelRitual: ["Cancel {RITUAL_label}"],
  CommandCancelRitualDesc: [
    "End the {RITUAL_labelDef} immediately. Ritual obligation will remain. You can restart the ritual later.",
  ],
  CommandCancelRitualConfirm: [
    "Are you sure you want to cancel {RITUAL_labelDef}?",
  ],
  LinkStorageSettings: ["Link settings"],
  LinkStorageSettingsDesc: [
    "Link storage settings for multiple selected buildings so that they share storage settings.\\n\\nThe group will start with the settings of whatever you selected first.",
  ],
  LinkStorageDisabledSelectTwo: [
    "You must select two or more buildings to link their storage settings.",
  ],
  AlreadyLinked: ["Already linked."],
  UnlinkStorageSettings: ["Unlink settings"],
  UnlinkStorageSettingsDesc: [
    "Unlink this from other buildings' storage settings so its settings can be set independently.",
  ],
  LinkedStorageSettings: ["Linked storage settings"],
  NumBuildings: ["{0} buildings"],
  StoresThings: ["Stores"],
  SelectAllLinked: ["Select all linked"],
  SelectAllLinkedDesc: ["Select all storage buildings linked to this."],
  CommandDisabledUnconscious: ["{0_labelShort} is unconscious."],
  IndefiniteArticle: ["a"],
  DefiniteArticle: ["the"],
  IndefiniteForm: ["a {0}"],
  DefiniteForm: ["the {0}"],
  Proits: ["its"],
  Prohis: ["his"],
  Proher: ["her"],
  ProitsCap: ["Its"],
  ProhisCap: ["His"],
  ProherCap: ["Her"],
  ProitObj: ["it"],
  ProhimObj: ["him"],
  ProherObj: ["her"],
  ProitObjCap: ["It"],
  ProhimObjCap: ["Him"],
  ProherObjCap: ["Her"],
  Prohe: ["he"],
  Proshe: ["she"],
  Proit: ["it"],
  ProheCap: ["He"],
  ProsheCap: ["She"],
  ProitCap: ["It"],
  ClauseSequence2: ["{0} and {1}."],
  ClauseSequence3: ["{0}. Also, {1} and {2}."],
  ClauseSequence4: ["{0} and {1}. In addition {2} and {3}."],
  ClauseSequence5: ["{0} and {1}. Additionally, {2} and {3}. Finally, {4}."],
  ClauseSequence6: ["{0}. {1} and {2}. Also, {3} and {4}. Finally, {5}."],
  ClauseSequence7: [
    "{0} and {1}. {2} and {3}. Also, {4} and {5}. Finally, {6}.",
  ],
  ClauseSequence8: [
    "{0} and {1}. Also, {2} and {3}. {4} and {5}. Finally, {6} and {7}.",
  ],
  XorY: ["{0} or {1}"],
  LetterLabelAnimalInsanitySingle: ["Mad {ANIMAL_labelShort}"],
  AnimalInsanitySingle: [
    "A local {ANIMAL_label} has gone mad. It will attack everyone it sees.",
  ],
  LetterLabelAnimalInsanityMultiple: ["Mad {0}"],
  AnimalInsanityMultiple: [
    "Some sort of psychic wave has swept over the landscape. Your colonists are okay, but...\\n\\nIt seems many of the {0} in the area have been driven insane.",
  ],
  LetterLabelCropBlight: ["Blight: {PLANTDEF_labelPlural}"],
  LetterCropBlight: [
    "Blight has been discovered on the {PLANTDEF_labelPlural}!\r\n\\nYou should cut or burn the affected plants before the blight spreads.",
  ],
  LetterLabelMiracleHeal: ["Miracle"],
  MiracleHeal: ["{0} has experienced a miraculous recovery!"],
  EnemyRaidLeaderPresent: [
    "One of the {LEADER_factionPawnsPlural} - {LEADER_labelShort}, is the leader of the faction.",
  ],
  FriendlyRaidLeaderPresent: [
    "One of the {LEADER_factionPawnsPlural} - {LEADER_labelShort}, is the leader of the faction.",
  ],
  LetterLabelRefugeePodCrash: ["Transport pod crash"],
  RefugeePodCrash: [
    "{PAWN_titleIndef} named {PAWN_nameDef} is crashing in a transport pod nearby. If {PAWN_pronoun} survives the impact, {PAWN_pronoun} will be badly wounded.",
  ],
  RefugeePodCrash_Child: ["{PAWN_nameDef} is a child of {AGE}."],
  RefugeePodCrash_Factionless: [
    "{PAWN_nameDef} is not affiliated with any faction. You can rescue {PAWN_objective} and hope {PAWN_pronoun} joins freely, or capture {PAWN_objective} for recruitment or slavery purposes.",
  ],
  RefugeePodCrash_Hostile: [
    "{PAWN_nameDef} is from your enemy {PAWN_factionName}. You can capture {PAWN_objective} for recruitment or slavery purposes.",
  ],
  RefugeePodCrash_NonHostile: [
    "{PAWN_nameDef} is from {PAWN_factionName}. If you rescue {PAWN_objective}, {PAWN_pronoun} may join freely. Otherwise, {PAWN_pronoun} will return home and spread goodwill between your factions.\\n\\nYou can also capture {PAWN_objective} for recruitment or slavery purposes, but this will anger {PAWN_possessive} faction.",
  ],
  LetterLabelWandererJoins: ["Wanderer joins: {PAWN_nameDef}"],
  LetterWandererJoins: [
    "A {PAWN_title} named {PAWN_nameDef} has arrived and wants to join the colony.\\n\\n[PAWN_pronoun] is willing to contribute, but will not leave voluntarily, claiming to have nowhere else to go. You can choose to turn {PAWN_objective} down and send {PAWN_objective} away. However, your colonists will be disturbed at sending someone away in need.",
  ],
  LetterLabelCargoPodCrash: ["Cargo pods"],
  CargoPodCrash: [
    "You have detected a cluster of cargo pods crashing nearby.\\n\\nPerhaps you'll find something useful in the wreckage.",
  ],
  AnElectricalConduit: ["an electrical conduit"],
  ShortCircuit: ["A fault in {0} has caused a short circuit."],
  ShortCircuitStartedFire: [
    "A fault in {0} has caused a short circuit which started a fire.",
  ],
  ShortCircuitDischargedEnergy: [
    "All {0} Wd of energy in the connected batteries has been discharged in an electrical explosion.",
  ],
  ShortCircuitWasLarge: [
    "This large amount of power has created an explosion of considerable size.",
  ],
  ShortCircuitWasHuge: ["That really is a huge explosion. Wow."],
  TraderArrival: [
    "A trade ship is passing nearby.\\n\\nThey are known as {0}. They are a {1}.\\n\\n{2}",
  ],
  TraderArrivalFromFaction: ["They're affiliated with {FACTION_name}."],
  TraderArrivalNoFaction: ["They are not affiliated with any faction."],
  SingleTravelerPassing: [
    "A {PAWN_title} from {1} is passing by. {PAWN_pronoun} is named {PAWN_nameFull}.",
  ],
  GroupTravelersPassing: ["A group of travelers from {0} are passing by."],
  LetterLabelSingleVisitorArrives: ["Visitor"],
  SingleVisitorArrives: [
    "{PAWN_titleIndef} from {1} is visiting the colony.\\n\\n{PAWN_pronoun} is named {PAWN_nameFull}.{3}{4}",
  ],
  SingleVisitorArrivesTraderInfo: [
    "{PAWN_pronoun} seems to have a few items to trade.",
  ],
  SingleVisitorArrivesLeaderInfo: [
    "{PAWN_pronoun} is the leader of the faction.",
  ],
  LetterLabelGroupVisitorsArrive: ["Visitors"],
  GroupVisitorsArrive: ["A group from {0} are visiting the colony.{1}{2}"],
  GroupVisitorsArriveTraderInfo: ["They seem to have a few items to trade."],
  GroupVisitorsArriveLeaderInfo: [
    "One of the visitors - {1_labelShort}, is the leader of the faction.",
  ],
  VisitorsLeaving: ["Visitors from {0} are leaving."],
  LetterLabelManhunterPackArrived: ["Manhunter pack"],
  ManhunterPackArrived: [
    "A pack of man-hunting {0} have entered the area! Driven insane by the disease known as scaria, they will roam the region, hunting for humanoid flesh.\\n\\nThey won't attack doors unless they see someone go through the door. Hide inside and you'll be safe. They also won't attack powered-off turrets, so turn your turrets off to save them.\\n\\nThe {0} will leave the area in one or two days. You can hide and wait them out, or fight them.",
  ],
  MessageAnimalInsanityPulse: [
    "The {SOURCE_label} has emitted a psychic pulse that has driven nearby animals mad.",
  ],
  LetterShipPartDroveColonistInsane: [
    "The crashed ship part has emitted a focused psychic pulse that has driven colonist {0} insane.",
  ],
  AwokeDaysAgo: ["Awoke {0} days ago"],
  ActivatedDaysAgo: ["Activated {0} days ago"],
  OpenedDaysAgo: ["Opened {0} days ago"],
  PsychicDroneLevel: ["Psychic drone level: {0}"],
  LetterLabelPsychicDroneLevelIncreased: ["Drone intensifies"],
  LetterPsychicDroneLevelIncreased: [
    "The crashed ship part is now emanating a more powerful kind of psychic drone. Every {0} humanlike in the area now feels more disturbed, terrified, and paranoid.",
  ],
  LetterLabelAgentRevealed: ["Agent"],
  LetterAgentRevealed: [
    "{0} has been revealed as an agent of your enemy {1}.\\n\\nThey are attempting to escape now.",
  ],
  LetterLabelBeaversArrived: ["Beavers!"],
  BeaversArrived: [
    "A group of hungry alphabeavers has just arrived.\\n\\nTry to eliminate them before they decimate every last source of wood in the region.",
  ],
  LetterLabelAnimalSelfTame: ["{1_kind} self-tamed"],
  LetterAnimalSelfTame: ["{0} has become tame."],
  LetterAnimalSelfTameAndNameNumerical: [
    "{0} has become tame. It is now designated {ANIMAL_nameFull}.",
  ],
  LetterAnimalSelfTameAndName: [
    "{0} has become tame. Colonists have decided to name it {ANIMAL_nameFull}.",
  ],
  LetterLabelFarmAnimalsWanderIn: ["{0} join"],
  LetterFarmAnimalsWanderIn: [
    "A group of {0}, abandoned or lost, have wandered into the area.\\n\\nThey seem accustomed to human contact and are joining the colony.",
  ],
  LetterLabelThrumboPasses: ["Rare thrumbos"],
  LetterThrumboPasses: [
    "A small herd of thrumbos have wandered into the area.\\n\\nPeaceful by nature, these rare creatures are extremely dangerous when confronted. Some traders are willing to pay a lot of money for their precious leather and horn.\\n\\nThrumbos will leave the area in a few days.",
  ],
  LetterLabelTraderCaravanArrival: ["{1} from {0}"],
  LetterTraderCaravanArrival: [
    "A caravan from {0} is approaching. They are a {1}.",
  ],
  LetterCaravanArrivalCommonWarning: [
    "They will hang around the colony for some time before leaving. You can attack them - but this will anger their faction!",
  ],
  RansomDemandTitle: ["Ransom demand at {0}"],
  RansomDemand: [
    "{1} contacts you on radio. They are holding former colonist {PAWN_labelShort} for ransom.\\n\\nThey're willing to release {PAWN_objective} back to you in exchange for {2} silver.",
  ],
  RansomDemand_Accept: ["Accept"],
  RansomDemand_Reject: ["Reject"],
  EscapeShipFoundLabel: ["Ship found"],
  EscapeShipFound: [
    "You've reached the coordinates sent by (*Name)Charlon Whitestone(/Name) and discovered the hidden starship.\\n\\nThe ship's reactor is still in deep hibernation mode, so it can't fly yet. You can start it up by interacting with the computer core.\\n\\n(*Name)Charlon Whitestone(/Name) warns you that the startup process will take about 15 days, and the energy signature will be detectable from a long distance away. This sort of energy signature indicates interstellar flight capability, and will attract gangs of desperate raiders and swarms of deadly mechanoids.\\n\\nYou will be assaulted with an intensity you've never seen. Make sure your defenses are prepared first.",
  ],
  EscapeShipFoundPeaceful: [
    "You've reached the coordinates sent by (*Name)Charlon Whitestone(/Name) and discovered the hidden starship.\\n\\nThe ship's reactor is still in deep hibernation mode, so it can't fly yet. You can start it up by interacting with the computer core.\\n\\n(*Name)Charlon Whitestone(/Name) warns you that the startup process will take about 15 days.",
  ],
  CaravanMeetingTitle: ["Caravan meeting by {0}"],
  CaravanMeeting: [
    "{0} has met peacefully with a caravan from {1}. The other caravan is composed of:\\n\\n{2}",
  ],
  CaravanMeeting_Trade: ["Trade"],
  CaravanMeeting_Attack: ["Attack"],
  CaravanMeeting_MoveOn: ["Move on"],
  CaravanMeeting_TradeIncapable: ["no caravan members capable of trading"],
  CaravanMeeting_NoPermit: [
    "need a trader with the title of {0} from {1_name}",
  ],
  LetterLabelCaravanRequest: ["Caravan request"],
  LetterCaravanRequest: [
    "A nearby settlement, {0}, contacts you with a special trade request. They would like to purchase:\\n\\n  {1} (worth {2})\\n\\nIn return, they offer:\\n\\n  {3} (worth {4})\\n\\nThis request expires after: {5}\\n\\nIf you want to make the trade, send a caravan with the requested supplies. The estimated travel time is {6}. You can review this offer by selecting {0} on the world map.",
  ],
  CaravanRequestInfo: ["Requesting: {0} ({2}) ({1} left)"],
  NormalQualityOrBetter: ["normal quality or better"],
  NotTainted: ["not tainted"],
  CaravanDemandTitle: ["Caravan demand by {0}"],
  CaravanDemand: [
    "{0} has been ambushed by a group of {2} {4} from {1}. They will attack unless you give them:\\n\\n{3}",
  ],
  CaravanDemand_Give: ["Give and pass"],
  CaravanDemand_Fight: ["Refuse and fight"],
  LetterLabelSiteNoLongerHostile: ["Quest no longer available"],
  LetterLabelSiteNoLongerHostileMulti: ["Quests no longer available"],
  LetterSiteNoLongerHostile: [
    "Because you are no longer hostile with {0}, the {1} site is no longer available.",
  ],
  LetterSiteNoLongerHostileMulti: [
    "Because you are no longer hostile with {0}, the following sites are no longer available",
  ],
  LetterLabelQuestAskerFactionHostile: ["Quest failed"],
  LetterQuestAskerFactionHostile: [
    "The quest is now incompletable because {FACTION_name} is hostile.",
  ],
  LetterLabelQuestAskerCaptured: ["Quest failed"],
  LetterQuestAskerCaptured: [
    "The quest is now incompletable because {SUBJECT_definite} has been captured.",
  ],
  LetterLabelQuestAskerDied: ["Quest failed"],
  LetterQuestAskerDied: [
    "The quest is now incompletable because {SUBJECT_definite} has died.",
  ],
  TabBills: ["Bills"],
  TabGrowing: ["Growing"],
  TabCharacter: ["Bio"],
  TabTraining: ["Training"],
  TabPrisoner: ["Prisoner"],
  TabGuest: ["Guest"],
  TabGear: ["Gear"],
  TabNeeds: ["Needs"],
  TabStorage: ["Storage"],
  TabShells: ["Shells"],
  TabHealth: ["Health"],
  TabRace: ["Race"],
  TabBasics: ["Basics"],
  TabStats: ["Stats"],
  TabRecords: ["Records"],
  TabArt: ["Art"],
  TabSocial: ["Social"],
  TabLog: ["Log"],
  TabPenAnimals: ["Animals"],
  TabPenFood: ["Food"],
  TabPenAutoCut: ["Auto-cut"],
  TabFormingCaravan: ["Caravan"],
  TabTransporterContents: ["Contents"],
  TabCasketContents: ["Contents"],
  TabWindTurbineAutoCut: ["Auto-cut"],
  AddBill: ["Add bill"],
  RecipeRequiresSkills: [
    "The recipe {0} requires the skills below. None of your colonists have these skills, so nobody will do this bill.",
  ],
  MinimumSkill: ["Min skill"],
  SuspendedCaps: ["SUSPENDED"],
  BoundWorkerIs: ["Worker: {1_labelShort}"],
  PlantVerb: ["Plant"],
  ClipboardBillNotAvailableHere: ["Copied bill cannot be pasted here"],
  ReorderBillUpTip: ["Move up"],
  ReorderBillDownTip: ["Move down"],
  DeleteBillTip: ["Delete"],
  CopyBillTip: ["Copy to the clipboard"],
  SuspendBillTip: ["Suspend"],
  PasteBillTip: ["Paste"],
  PasteBillTip_LimitReached: ["can't add more"],
  RecruitmentResistance: ["Resistance"],
  RecruitmentResistanceDesc: [
    "How much doubt this prisoner has about joining your faction. When this reaches zero, they can be recruited.",
  ],
  RecruitmentResistanceFromPawnKind: ["{0} base resistance"],
  PrisonerReleasePotentialRelationGains: ["Relations gain on release"],
  PrisonerReleaseRelationGainsDesc: [
    "The faction goodwill you will get from the prisoner's faction if you release them. This is affected by the prisoner's identity, health, and mental condition.",
  ],
  PrisonBreakMTBDays: ["Prison break interval"],
  PrisonBreakMTBDaysDescription: [
    "The average days awake between prison breaks. This is affected by mood, mobility, the number of prison doors, and time since the last prison break.\\n\\nNote that this does not include time spent asleep.",
  ],
  Never: ["Never"],
  NotWhileAsleep: ["Not while asleep"],
  CurrentlyPrisonBreaking: ["Breaking out now"],
  FactorForDoorCount: ["Multiplier for door count"],
  FactorForMovement: ["Multiplier for movement"],
  SlavePrice: ["Slave price"],
  SlavePriceDescription: ["The base market value of this slave if sold."],
  GetsFood: ["Gets food"],
  DoctorsCare: ["Doctors care"],
  GetsMedicine: ["Gets medicine"],
  ShouldTryToRecruit: ["Try to recruit"],
  ConsideredGuilty: ["Considered guilty (expires in {0})"],
  ConsideredGuiltyNoTimer: ["Considered guilty"],
  LastRecruitment: ["Last resistance reduction"],
  LastRecruitmentDescription: [
    "How much {0_nameDef}'s resistance was reduced by {1} when {0_pronoun} was last recruited.",
  ],
  OpinionOfRecruiter: ["Opinion of recruiter"],
  RecruiterNegotiationAbility: ["Recruiter negotiation ability"],
  NonRecruitable: ["Unwavering loyalty"],
  NonRecruitableTip: [
    "This prisoner is so unwaveringly loyal to their home that they refuse to be recruited entirely.",
  ],
  NonRecruitableTipCannotConvert: [
    "Their loyalty extends to their beliefs and they cannot be converted.",
  ],
  Efficiency: ["Efficiency"],
  PartEfficiency: ["Part efficiency"],
  BodyPartEfficiency: ["Body part efficiency"],
  MissingBodyPart: ["Gone"],
  DestroyedBodyPart: ["Destroyed"],
  ShatteredBodyPart: ["Shattered"],
  RemovedBodyPart: ["Removed"],
  Healthy: ["Healthy"],
  InPain: ["In pain"],
  PainLevel: ["Pain"],
  Injured: ["Injured"],
  UntendedInjury: ["untended injury"],
  NoHealthConditions: ["no health conditions"],
  WholeBody: ["Whole body"],
  DataProcessing: ["Data processing"],
  Communication: ["Communication"],
  Affects: ["Affects"],
  BleedingRate: ["Bleeding"],
  TimeToDeath: ["death in {0}"],
  WontBleedOutSoon: ["no immediate danger"],
  HealthOverview: ["Overview"],
  MedicalOperationsShort: ["Operations"],
  MedicalOperationsMechanoidsShort: ["Modifications"],
  MedicalOperations: ["Medical operations"],
  Amputate: ["amputate"],
  HarvestOrgan: ["harvest"],
  RemoveOrgan: ["remove"],
  MemoryLower: ["memory"],
  SocialInteractionsLower: ["social interactions"],
  HungerRate: ["Hunger rate"],
  FoodConsumption: ["Food consumption"],
  Tiredness: ["Tiredness"],
  PainFactor: ["Pain"],
  PreventsInfection: ["Prevents infection"],
  SelfTend: ["Self-tend"],
  SelfTendTip: [
    "{0} with self-tend enabled will automatically tend to themselves on the spot at {1} the normal efficiency.",
  ],
  DeathIn: ["death in {0}"],
  None: ["None"],
  VeryPoor: ["Very poor"],
  Poor: ["Poor"],
  Weakened: ["Weakened"],
  GoodCondition: ["OK"],
  Enhanced: ["Enhanced"],
  SeriouslyImpaired: ["Seriously impaired"],
  Impaired: ["Impaired"],
  SlightlyImpaired: ["Slightly impaired"],
  NoPain: ["None"],
  LittlePain: ["Little"],
  MediumPain: ["Medium"],
  SeverePain: ["Severe"],
  ExtremePain: ["Extreme"],
  Trainability: ["Trainability"],
  CannotTrainNotSmartEnough: ["Requires {0} trainability."],
  CannotTrainTooSmall: ["{1_labelShort} is too small to train this."],
  TrainingNeedsPrerequisite: ["Prerequisite needed: {0}"],
  Kidnapped: ["Kidnapped"],
  Lent: ["Lent to {FACTION_name}, returns in {1}"],
  Missing: ["Missing"],
  Slave: ["Slave"],
  FactionLeader: ["Faction leader"],
  OpinionOf: ["Opinion of {0}"],
  SomeonesOpinionOfMe: ["{0}'s opinion of me"],
  IAmDead: ["I'm dead"],
  IAmPsychopath: ["I'm a psychopath"],
  OverallArmor: ["Overall armor"],
  MassCarried: ["Mass carried: {0} / {1} kg"],
  ComfyTemperatureRange: ["Comfortable temperature range"],
  ArmorBlunt: ["Blunt"],
  ArmorSharp: ["Sharp"],
  ArmorHeat: ["Heat"],
  ShowAll: ["Show all"],
  ShowCombat: ["Show combat"],
  ShowSocial: ["Show social"],
  NoRecentEntries: ["no recent entries"],
  CopyLogTip: ["Copy log to the clipboard."],
  FormingCaravanStatus_GatheringAnimals: ["Gathering animals"],
  FormingCaravanStatus_GatheringAnimals_Pause: ["Gathering animals (waiting)"],
  FormingCaravanStatus_GatheringItems: ["Gathering items"],
  FormingCaravanStatus_GatheringItems_Pause: ["Gathering items (waiting)"],
  FormingCaravanStatus_GatheringDownedPawns: ["Gathering downed people"],
  FormingCaravanStatus_GatheringDownedPawns_Pause: [
    "Gathering downed people (waiting)",
  ],
  FormingCaravanStatus_Leaving: ["Leaving"],
  FormingCaravanStatus_Leaving_Pause: ["Leaving (waiting)"],
  FormingCaravanStatus_Waiting: ["Waiting"],
  CaravanMembers: ["Members"],
  CaravanAnimals: ["Animals"],
  ItemsToLoad: ["To load"],
  LoadedItems: ["Loaded"],
  PackAnimalsCountLower: ["pack animals"],
  InMentalStateCountLower: ["mentally broken"],
  RemoveSliderText: ["Remove {{0}}x {0}"],
  ContainedItems: ["Contained items"],
  ConfirmRemoveItemDialog: ["Do you really want to remove {0}?"],
  DismissQuest: [
    "Dismiss this quest and move it to the historical tab.\\n\\nThe quest can be un-dismissed at any time. Its effects and expiry times will proceed as normal. You won't recieve notifications about dismissed quests.",
  ],
  UnDismissQuest: [
    "Un-dismiss this quest.\\n\\nThe quest will be returned to the available or active tab, and notifications will be re-enabled.",
  ],
  QuestDismissed: [
    "This quest is here because it was dismissed.\\n\\nYou can un-dismiss it until it expires.",
  ],
  DeleteQuest: ["Delete this quest and remove it from the quest list forever."],
  PenFoodTab_NotEnclosed: [
    "enclose the pen marker to calculate food information",
  ],
  PenFoodTab_StockpileTotal: ["Nutrition stockpiled"],
  PenFoodTab_StockpileTotalDescription: [
    "The total nutrition of stockpiled food in the pen.",
  ],
  PenFoodTab_StockpileEmptyDays: ["Days to stockpile exhaustion"],
  PenFoodTab_StockpileEmptyDaysDescription: [
    "Nutrition consumption exceeds nutrition growth rate in this pen. The animals will eventually eat all the stockpiled food and starve.",
  ],
  PenFoodTab_AnimalType: ["Animal type"],
  PenFoodTab_Count: ["Count"],
  PenFoodTab_CurrentDay: ["Today"],
  PenFoodTab_Nutrition_Unit: ["nutrition"],
  PenFoodTab_NutritionPerDay_Unit: ["per day"],
  PenFoodTab_AddAnimal: ["Force display animal..."],
  PenFoodTab_NaturalNutritionGrowthRate: ["Nutrition growth"],
  PenFoodTab_GrowthPerSeason: ["Growth per season"],
  PenFoodTab_TotalNutritionConsumptionRate: ["Nutrition consumption"],
  PenFoodTab_NaturalNutritionGrowthRateDescription: [
    "The average nutrition provided by edible plants in this pen.",
  ],
  PenFoodTab_NutritionConsumptionDescription: [
    "The nutrition needed by animals currently in this pen.\\n\\nTo get more food, expand the pen to cover more wild plant growth, or deliver stockpiled food like haygrass to the pen.",
  ],
  PenFoodTab_NaturalNutritionGrowthRateSeasonal: [
    "Note: Plant growth rate varies due to seasons, weather, theft by wild animals, and other factors. These calculations are approximations.",
  ],
  PenFoodTab_NutritionConsumedPerDay_ColumLabel: ["Total consumption"],
  PenFoodTab_NutritionConsumedPerDay_ColumnTooltip: [
    "The total nutrition that will be consumed each day by each type of animal in this pen.",
  ],
  PenFoodTab_NutritionConsumedPerDay: [
    "Daily consumption per {ANIMALDEF_label}",
  ],
  PenFoodTab_NutritionConsumedEachAnimalLabel: ["each {CONSUMEDAMOUNT}"],
  PenFoodTab_AnimalTypeAnimalCapacity: [
    "Count that could be supported with no other animals in the pen",
  ],
  PenFoodTab_EdibleNow: ["Edible now"],
  PenAutoCut_EnabledCheckbox: ["Auto-cut plants in pen"],
  PenAutoCut_EnabledCheckboxTip: [
    "Automatically mark certain inedible plants to be cut. This makes room for edible plants to grow, which your animals can then eat.\\n\\nThis auto-designation happens periodically and only applies to certain plants.\\n\\nThis only works when the pen is enclosed.",
  ],
  AutocutUnenclosedPen: ["Pen is not enclosed"],
  AutocutUnenclosedPenTip: [
    "Pen is not enclosed now, so auto-cut won't occur.",
  ],
  WindTurbineAutoCut_EnabledCheckbox: ["Auto-cut blocking plants"],
  JumpToLocation: ["Jump to location"],
  PostponeLetter: ["Postpone"],
  RejectLetter: ["Reject"],
  ReadMore: ["Read more"],
  MoreLetters: ["You have {0} more letters"],
  LetterLabelFirstSummerWarning: ["Summer"],
  FirstSummerWarning: [
    "Summer has begun! But winter is coming.\\n\\nYour food crops won't grow in the winter cold. Be sure to store enough food to survive. You can build a walk-in refrigerator to prevent food from spoiling.\\n\\nTo prepare for winter, buy, steal, or make some parkas, or you'll freeze when you step outside.",
  ],
  LetterRelationsChange_Hostile: [
    "Relations with {0} have broken down completely. They are now hostile to you.",
  ],
  LetterRelationsChange_HostileGoodwillDescription: [
    "They will conduct periodic raids on your colony and caravans, and refuse to trade with you. If you want to improve relations, you can still offer them gifts using caravans or transport pods.\\n\\nThis happened because goodwill ({0}) has fallen below {1}. In order to restore neutral relations, goodwill must reach {2} again.",
  ],
  LetterRelationsChange_NeutralFromHostile: [
    "Relations with {0} have warmed. They now consider you neutral and will no longer attack you.",
  ],
  LetterRelationsChange_NeutralFromHostileGoodwillDescription: [
    "This happened because goodwill ({1}) has risen past {2}. If goodwill falls below {3}, {0} will become hostile again. If goodwill rises above {4}, they will become your ally and fight for you.",
  ],
  LetterRelationsChange_NeutralFromAlly: [
    "Relations with {0} have cooled. They now consider you neutral instead of allied.",
  ],
  LetterRelationsChange_NeutralFromAllyGoodwillDescription: [
    "While they will still interact peacefully with you, they will no longer send fighters to help you when you are under threat.\\n\\nThis happened because goodwill ({1}) has fallen below {2}. If goodwill falls below {3}, {0} will become hostile. If goodwill rises above {4}, they will become allied once again.",
  ],
  LetterRelationsChange_Ally: [
    "Relations with {0} have become very close. They now consider you an ally.",
  ],
  LetterRelationsChange_AllyGoodwillDescription: [
    "Allies will sometimes arrive to help fight your enemies when you are under attack. You can also call them for help at any time, at a cost of goodwill.\\n\\nYou've become allies because your goodwill ({0}) has risen past {1}. If goodwill falls below {2}, relations will return to neutral.",
  ],
  goodwill: ["goodwill"],
  Neutral: ["Neutral"],
  NeutralLower: ["neutral"],
  Death: ["Death"],
  ShortCircuitRain: [
    "A {1_label} has short-circuited due to precipitation and started a fire.",
  ],
  LetterLabelAreaRevealed: ["Area revealed"],
  AreaRevealed: ["A new area has been revealed."],
  AreaRevealedWithMechanoids: [
    "A new area has been revealed. It contains ancient, hostile mechanoids.",
  ],
  RoofCollapsed: [
    "A roof has collapsed because it was too far from any support.",
  ],
  TheseThingsCrushed: ["These things were crushed:"],
  NothingCrushed: ["Nothing was crushed."],
  LetterLabelRoofCollapsed: ["Roof collapse"],
  RecruitSuccess: ["{0} successfully recruited {1} ({2} chance)."],
  RecruitFail: ["{0} failed to recruit {1} ({2} chance)."],
  RelatedPawnInvolvedInQuest: [
    "{PAWN_nameDef} is {RELATIVE_labelShort}'s {1}. If {PAWN_nameDef} dies, {RELATIVE_labelShort} will suffer from long-lasting grief. However, if you manage to rescue {PAWN_nameDef}, {RELATIVE_labelShort} will be very happy for a long time.",
  ],
  LetterLabelBirthday: ["Birthday"],
  BirthdayChronological: [
    "It's {0}'s chronological birthday today! Biologically, {1} is {3} years old.\\n\\nChronologically, {1} just turned {2}.\\n\\nNote that since people don't age while in cryptosleep, chronological birthday is separate from biological birthday.",
  ],
  LetterBirthdayBiological: [
    "{0_nameFull} has reached the biological age of {1}.",
  ],
  BirthdayBiologicalAgeInjuries: [
    "Unfortunately, {0_nameFull} has gained the following diseases due to aging",
  ],
  LetterLabelNewDisease: ["Disease"],
  NewDisease: [
    "{PAWN} has gotten sick from {1}.\\n\\nEnsure you have a medical bed and a doctor. Make sure that {PAWN_definite} gets proper treatment and spends as much time in bed as possible.",
  ],
  NewPartDisease: [
    "{PAWN} has gotten sick from {3}. The infection is in {PAWN_possessive} {1}.\\n\\nEnsure you have a medical bed and a doctor. Make sure that {PAWN_definite} gets proper treatment and spends as much time in bed as possible.",
  ],
  NewDiseaseAnimal: ["{PAWN_labelShort} has developed an illness: {1}"],
  NewPartDiseaseAnimal: [
    "{PAWN_labelShort} has developed an illness: {3} in {PAWN_possessive} {1}",
  ],
  PawnWasFormerlyColonist: ["{0} was formerly part of your faction."],
  PawnWasFormerlyLodger: ["You previously hosted {0}."],
  PawnHasTheseRelationshipsWithColonists: [
    "{1_labelShort} has these relationships with your colonists:",
  ],
  LetterLabelAncientShrineWarning: ["Ancient danger"],
  AncientShrineWarning: [
    "As {PAWN_nameDef} draws near the ancient wall, a sense of foreboding overcomes {PAWN_objective}. {PAWN_pronoun} isn't sure why, but {PAWN_pronoun} feels that this dusty structure may contain great danger.",
  ],
  StruckMineable: ["We have struck {0}!"],
  LetterLabelAnimalManhunterRevenge: ["{0} revenge"],
  AnimalManhunterFromDamage: [
    "{1_indefinite} is attacking after being harmed!\\n\\nIt will hunt any humanoid it can reach. It will calm down when it goes to sleep.",
  ],
  AnimalManhunterFromTaming: [
    "{1_indefinite} is attacking due to a botched taming attempt!",
  ],
  AnimalManhunterOthers: [
    "Other {1_kindBasePlural} nearby have also become enraged!",
  ],
  LetterFriendlyTrapSprungLabel: ["{1_labelShort} hit trap"],
  LetterFriendlyTrapSprung: [
    "{1_labelShort} has accidentally sprung a trap and taken damage from it.",
  ],
  LetterHealthComplications: [
    "{PAWN_labelShort} has developed a health condition:\\n\\n  {1}\\n\\nThis was caused by:\\n\\n  {2}",
  ],
  LetterHealthComplicationsLabel: ["{PAWN_labelShort}: {1}"],
  LetterHediffFromRandomHediffGiver: [
    "{PAWN_labelShort} has developed a health condition: {1}.",
  ],
  LetterHediffFromRandomHediffGiverLabel: ["{PAWN_labelShort}: {1}"],
  LetterLeadersDeathLabel: ["{1} died: {0}"],
  LetterLeadersDeath: ["{OLDLEADER_nameFull}, {1} of {0}, has died."],
  LetterLeaderChangedLabel: ["New {1}: {0}"],
  LetterLeaderChanged: ["{OLDLEADER_nameFull} is no longer {1} of {0}."],
  LetterNewLeader: ["The new {0} is {NEWLEADER_nameFull}."],
  FinalStraw: ["The final straw was: {0}"],
  MentalStateReason_Mood: ["This happened because of poor mood."],
  MentalStateReason_Trait: ["This happened because of the trait: {0}."],
  MentalStateReason_Hediff: ["This happened because of: {0}."],
  MentalStateReason_BondedHumanDeath: [
    "This happened because of {0_definite}'s death.",
  ],
  LastFactionRelationsEvent: ["The last event was"],
  ViewRelatedQuest: ["View related quest"],
  ViewQuest: ["View quest"],
  LastEventsInLife: ["The last events in {PAWN_definite}'s life"],
  LetterInspirationBeginThanksToHighMoodPart: [
    "Thanks to high mood, [PAWN_nameIndef] has experienced an inspiration!",
  ],
  LetterLabelNoticedRelatedPawns: ["Relationship"],
  LetterRelatedPawnsRaidEnemy: [
    "There are people who have relationships with your {0} or prisoners in the arriving group of {1}.\\n\\nKeep in mind that even though they are related, they will still attack each other because of their bad factions relations.\\n\\nThese people are:",
  ],
  LetterRelatedPawnsRaidFriendly: [
    "There are people who have relationships with your {0} or prisoners in the arriving group of friendly {1}:",
  ],
  LetterRelatedPawnsNeutralGroup: [
    "There are people who have relationships with your {0} or prisoners in the arriving group:",
  ],
  LetterRelatedPawnsTradeShip: [
    "The orbital trader is selling people who have relationships with your {0} or prisoners:",
  ],
  LetterRelatedPawnsTradingWithSettlement: [
    "The settlement is selling people who have relationships with your {0} or prisoners:",
  ],
  LetterRelatedPawnsTradingWithOtherCaravan: [
    "The caravan is selling people who have relationships with your {0} or prisoners:",
  ],
  LetterRelatedPawnsGroupGeneric: [
    "There are people who have relationships with your {0} or prisoners in the group:",
  ],
  LetterRelatedPawnsInMapWherePlayerLanded: [
    "There are people who have relationships with your {0} or prisoners in the area where your {0} have landed.",
  ],
  LetterRelatedPawnsSettlement: [
    "There are people who have relationships with your {0} or prisoners in this settlement:",
  ],
  LetterRelatedPawnsSite: [
    "There are people who have relationships with your {0} or prisoners in this area:",
  ],
  RelationshipAppendedLetterSuffix: ["relationship"],
  RelationshipAppendedLetterTextColonist: [
    "{PAWN_nameDef} has a relationship with a colonist. {PAWN_pronoun} is {RELATIVE_labelShort}'s {1}.",
  ],
  RelationshipAppendedLetterTextPrisoner: [
    "{PAWN_nameDef} has a relationship with one of your prisoners. {PAWN_pronoun} is {RELATIVE_labelShort}'s {1}.",
  ],
  LetterLabelAffair: ["Affair"],
  LetterAffair: [
    "{PAWN1_labelShort}, married to {SPOUSE_labelShort}, has begun an affair with {PAWN2_labelShort}.",
  ],
  LetterLabelNewLovers: ["New lovers"],
  LetterNewLovers: [
    "{PAWN1_labelShort} and {PAWN2_labelShort} now want to sleep together. Consider assigning them a double bed.",
  ],
  LetterNoLongerLovers: [
    "{PAWN1_labelShort} and {PAWN2_labelShort} are no longer in a relationship.",
  ],
  LetterNoLongerLovers_BackToBirthName: [
    "{PAWN_labelShort} will change {PAWN_possessive} last name back to {PAWN_possessive} birth name.",
  ],
  LetterLabelBreakup: ["Breakup"],
  LetterLabelAcceptedProposal: ["Marriage is on!"],
  LetterLabelRejectedProposal: ["Rejected proposal"],
  LetterAcceptedProposal: [
    "At some point in the coming days or quadrums, they will have their marriage ceremony and invite all the colonists. Consider placing a marriage spot if you want to control where the ceremony occurs.",
  ],
  LetterAcceptedProposal_NameChange: [
    "{PAWN_label} will change {PAWN_possessive} last name to {1}.",
  ],
  LetterRejectedProposal: [
    "{INITIATOR_nameFull} is going to be unhappy about this.",
  ],
  LetterLabelRelationsChange_Hostile: ["Hostile: {0}"],
  LetterLabelRelationsChange_Ally: ["Allied: {0}"],
  LetterLabelRelationsChange_NeutralFromHostile: ["Enemy now neutral: {0}"],
  LetterLabelRelationsChange_NeutralFromAlly: ["Ally now neutral: {0}"],
  LetterLabelShortCircuit: ["Zzztt..."],
  LetterLabelSuffixBondedAnimalDied: ["bonded"],
  LetterPartBondedAnimalDied: [
    "{ANIMAL_definite} was bonded to {HUMAN_labelShort}. It will affect {HUMAN_labelShort}'s mood.",
  ],
  LetterPartBondedAnimalDiedMulti: [
    "It will affect mood of the following people:\\n\\n{0}",
  ],
  LetterLabelPrisonBreak: ["Prison break"],
  LetterPrisonBreak: [
    "Prisoners have staged a breakout! They've somehow defeated the door locks and are making their way out. They may seek weapons, fight, or try to escape. These prisoners are involved:\\n\\n{0}\\n\\nPrisoners are more likely to attempt breakout when they are numerous and healthy.",
  ],
  LetterLabelNewlyAddicted: ["{0} addiction"],
  LetterNewlyAddicted: [
    "{PAWN_labelShort} has developed an addiction to {1}.\\n\\n{PAWN_pronoun} now has a need for {1}, visible on {PAWN_possessive} Needs tab. {PAWN_pronoun} will automatically consume the drug to fulfil {PAWN_possessive} need. If {PAWN_pronoun} cannot get any {1}, {PAWN_pronoun} will go into withdrawal.",
  ],
  LetterLabelDrugBinge: ["{0} binge"],
  LetterDrugBinge: ["{2_label} is binging on {1}."],
  LetterLabelAllCaravanColonistsDied: ["Caravan destroyed"],
  LetterAllCaravanColonistsDied: ["All members of {0} have died."],
  LetterLabelCaravanEnteredMap: ["Caravan arrived at {0_label}"],
  LetterCaravanEnteredMap: ["{0} has arrived at {1_definite}."],
  LetterLabelCaravanEnteredEnemyBase: ["Attack begun"],
  LetterCaravanEnteredEnemyBase: [
    "{0} has arrived at {1} and is ready to begin the attack.",
  ],
  LetterLabelTransportPodsLandedInEnemyBase: ["Attack begun"],
  LetterTransportPodsLandedInEnemyBase: [
    "Your transport pods have arrived at {0}.",
  ],
  LetterShuttleLandedInEnemyBase: ["The shuttle has arrived at {0}."],
  LetterLabelFactionBaseDefeated: ["Base destroyed"],
  LetterFactionBaseDefeated: [
    "The enemy settlement {0} has been destroyed.\\n\\nIn {1}, your caravan will be attacked by enemies. They will begin sending forces to attack the caravan, unless it reforms and leaves.",
  ],
  LetterFactionBaseDefeated_FactionDestroyed: [
    "Since this was their last settlement, {0} has been defeated.",
  ],
  LetterLabelDefeatAllEnemiesQuestCompleted: ["Quest completed"],
  LetterDefeatAllEnemiesQuestCompleted: [
    "You have defeated the enemy outpost!\\n\\nThe payment from {0} has arrived, and faction relations have improved by {1}.",
  ],
  LetterLabelFoundPreciousLump: ["Distant resource scanned"],
  LetterFoundPreciousLump: [
    "Using your long-range mineral scanner, {WORKER_labelShort} has found a lump of {0} some distance away.\\n\\nUnfortunately, it won't last - others will mine it first in {1} days if we don't.\\n\\n{2}.",
  ],
  LetterLabelDeepScannerFoundLump: ["Scanned underground"],
  LetterDeepScannerFoundLump: [
    "{FINDER_nameDef} has found a lump of buried {0} using the ground-penetrating scanner!",
  ],
  LetterLabelAmbushInExistingMap: ["Ambush"],
  LetterAmbushInExistingMap: ["Your {0} have been ambushed!"],
  LetterLabelPeaceTalks_Disaster: ["Peace talks disaster"],
  LetterPeaceTalks_Disaster: [
    "The talks were a disaster. The delegates barely got past their initial greetings before the discussion broke down into insults and recriminations.\\n\\nAfter your caravan departed early, {0} from {1} caught up with it and attacked!\\n\\nRelations with {1}: {2}.",
  ],
  LetterLabelPeaceTalks_Backfire: ["Peace talks backfire"],
  LetterPeaceTalks_Backfire: [
    "The talks have backfired. Despite trading some pleasantries, the delegates made no progress on substantive issues, and multiple statements were interpreted as insults.\\n\\nRelations with {0}: {1}.",
  ],
  LetterLabelPeaceTalks_TalksFlounder: ["Peace talks flounder"],
  LetterPeaceTalks_TalksFlounder: [
    "The talks floundered. Delegates managed to communicate clearly and with basic respect, but were not able to make progress on any genuine issues.\\n\\nRelations with {0} remain unchanged.",
  ],
  LetterLabelPeaceTalks_Success: ["Peace talks success"],
  LetterPeaceTalks_Success: [
    "The talks were a success. The delegates reached new mutual understanding on several substantial issues.\\n\\nRelations with {0} have improved by {1}.",
  ],
  LetterLabelPeaceTalks_Triumph: ["Peace talks triumph"],
  LetterPeaceTalks_Triumph: [
    "The talks were a great triumph! Delegates connected quickly on a personal level and came to truly see each others' perspective on the most difficult issues of the day.\\n\\nRelations with {0} have improved by {1}.\\n\\nAs your caravan departed, {0} offered you a gift:\\n\\n{2}",
  ],
  PeaceTalksSocialXPGain: [
    "{PAWN_labelShort}, your negotiator, has gained {1} social experience.",
  ],
  LetterRunWildMentalBreak: [
    "{0} is fed up with civilization.\\n\\n{PAWN_pronoun} realized that wild creatures are always free. So, {PAWN_pronoun} has decided to leave your faction and live with the animals.\\n\\nYou can attempt to tame or arrest {PAWN_objective} to get {PAWN_objective} back.",
  ],
  LetterCatatonicMentalBreak: [
    "{0} has suffered a total mental breakdown and entered a catatonic state. {PAWN_pronoun} will recover in several days.",
  ],
  LetterLabelAICoreOffer: ["Persona Core Offer"],
  LetterAICoreOffer: [
    "{PAWN_definite} of {1} contacts you with an offer of information: the location of a persona core, which you'll need in order to build a spaceship. They inform you that this item is quite rare and usually its owners have it under heavy guard.\\n\\nCall them with your comms console if you're interested.",
  ],
  LetterCraftedLegendaryLabel: ["Legendary Work"],
  LetterCraftedLegendaryMessage: [
    "{WORKER_labelShort} has created a {CRAFTED_labelShort}.\\n\\nNews of this valuable artifact will spread across the world.",
  ],
  LetterCraftedLegendaryMessageArt: [
    "{WORKER_labelShort} has created a {CRAFTED_labelShort}.\\n\\n{0}\\n\\nNews of this valuable artifact will spread across the world.",
  ],
  LetterCraftedMasterworkLabel: ["Masterwork"],
  LetterCraftedMasterworkMessage: [
    "{WORKER_labelShort} has created a {CRAFTED_labelShort}.",
  ],
  LetterCraftedMasterworkMessageArt: [
    "{WORKER_labelShort} has created a {CRAFTED_labelShort}.\\n\\n{0}",
  ],
  LetterLabelPawnsLostBecauseMapClosed_Caravan: ["Caravan lost"],
  LetterPawnsLostBecauseMapClosed_Caravan: [
    "Your caravan has been lost. The following people and animals have been lost with it",
  ],
  LetterLabelPawnsLostBecauseMapClosed_Home: ["Inhabitants abandoned"],
  LetterPawnsLostBecauseMapClosed_Home: [
    "The following people and animals have been abandoned",
  ],
  LetterLabelHibernateComplete: ["Reactor ready"],
  LetterHibernateComplete: [
    "(*Name)Charlon Whitestone(/Name) has finished the reactor's hibernation recovery sequence. The reactor is now ready to power a liftoff.",
  ],
  LetterHibernateCompleteStandalone: [
    "The reactor's power up sequence is complete. It is now ready to power a liftoff.",
  ],
  LetterLabelVisitorsGaveGift: ["Gift from {0}"],
  LetterVisitorsGaveGift: [
    "{0} from {PAWN_factionName} have left a gift:\\n\\n{1}",
  ],
  LetterLabelFactionBaseProximity: ["Faction base proximity"],
  LetterFactionBaseProximity: [
    "Because you are so close to other factions, they feel you're encroaching on their territory.\\n\\nFor the last quadrum, faction relations have been reduced by:",
  ],
  LetterLabelCaravansBattlefieldVictory: ["Caravan battle won"],
  LetterCaravansBattlefieldVictory: [
    'Your caravan has won the battle.\\n\\nYou can reform the caravan now in the World screen by selecting the battlefield and choosing the "Reform caravan" option.\\n\\nThere\'s no need to collect items manually, the reform caravan tool can do it instantly.\\n\\nIn {0}, your caravan will be attacked by enemies. They will begin sending forces to attack the caravan, unless it reforms and leaves.',
  ],
  LetterLabelRescueQuestFinished: ["Rescuee joins"],
  LetterRescueQuestFinished: [
    'You have rescued {PAWN_nameDef} and {PAWN_pronoun} has joined your group.\\n\\nYou can take {PAWN_objective} with you by reforming the caravan in the World screen by selecting this area and choosing the "Reform caravan" option.',
  ],
  LetterLabelPredatorHuntingColonist: [
    "{PREDATOR_labelShort} hunting {PREY_definite}",
  ],
  LetterPredatorHuntingColonist: [
    "{PREDATOR} is hunting {PREY_definite} for food!",
  ],
  LetterDisease_Blocked: ["{0} blocked {1} on"],
  LetterLabelTraitDisease: ["Disease: {0}"],
  LetterTraitDisease: [
    "{PAWN_label} has gotten sick from {1}.\\n\\nEnsure you have a medical bed and a doctor. Make sure that {PAWN_pronoun} gets proper treatment and spends as much time in bed as possible.",
  ],
  LetterQuestBecameAvailable: [
    "A new quest has become available. It is called '{0}'.",
  ],
  LetterQuestRequiresAcceptance: [
    "If you don't accept the quest within {0}, it will expire.",
  ],
  LetterQuestBecameActive: [
    "A new quest has become active. It is called '{0}'.",
  ],
  LetterQuestAutomaticallyAcceptedTitle: ["Quest active: {0}"],
  LetterQuestActiveNowTime: ["It will expire in {0}."],
  LetterLabelQuestDropPodsArrived: ["Pods arrived"],
  LetterQuestDropPodsArrived: [
    "Transport pods with the following contents have arrived:\\n\\n{0}",
  ],
  LetterLabelQuestItemsAddedToCaravanInventory: [
    "{CARAVAN_label} received items",
  ],
  LetterQuestItemsAddedToCaravanInventory: [
    "{CARAVAN_label} has received the following items:\\n\\n{THINGS}",
  ],
  LetterLabelRefugeeJoins: ["{PAWN_nameDef} joins"],
  LetterRefugeeJoins: [
    "A {PAWN_title} named {PAWN_nameDef} has arrived and is joining the colony.",
  ],
  LetterLabelRescueeJoins: ["{PAWN_nameDef} joins"],
  LetterRescueeJoins: [
    "{PAWN_nameDef} is thankful that you rescued {PAWN_objective}. {PAWN_pronoun} has decided that {PAWN_pronoun} would rather stay than leave, and is joining your colony.",
  ],
  LetterLabelPawnsArriveAndJoin: ["People join"],
  LetterPawnsArriveAndJoin: [
    "The following people have arrived and joined the colony:\\n\\n{0}",
  ],
  LetterLabelPawnsArrive: ["People arrived"],
  LetterPawnsArrive: ["The following people have arrived:\\n\\n{0}"],
  LetterLabelPawnLeaving: ["{0} leaving"],
  LetterPawnLeaving: ["{0} is leaving."],
  LetterLabelPawnsLeaving: ["{0} leaving"],
  LetterPawnsLeaving: ["{0} are leaving."],
  LetterLabelPawnsKidnapped: ["{PAWN_nameDef} kidnapped"],
  LetterPawnsKidnapped: [
    "{PAWN_nameDef} has been kidnapped by {FACTION_name}!\r\n\\nHowever, {PAWN_pronoun} is not lost forever. An opportunity to rescue {PAWN_objective} may present itself in the coming days or years.",
  ],
  LetterTechprintAppliedLabel: ["Techprint applied: {PROJECT_label}"],
  LetterTechprintAppliedPartIntro: [
    "A techprint has been applied to the research project: {PROJECT_label}.",
  ],
  LetterTechprintAppliedPartJustUnlocked: [
    "You've completed the project's techprint requirements! Your researchers can now begin researching how to actually use the technology at your research benches.",
  ],
  LetterTechprintAppliedPartNotUnlockedYet: [
    "This project's techprint requirements are not yet satisfied. {0} techprints have been applied so far. The project requires {1} in total.",
  ],
  LetterTechprintAppliedPartAlreadyUnlocked: [
    "This project's techprint requirements were already satisfied. The extra techprint advanced your research efforts on {PROJECT_label}. Half the remaining research work, {0} points, has been completed.",
  ],
  LetterTechprintAppliedPartAlreadyResearched: [
    "This project is already fully researched, so the techprint didn't advance your knowledge at all.",
  ],
  LetterTechprintAppliedPartExpAwarded: [
    "By applying the techprint, {PAWN_labelShort} gained {0} experience in the {1} skill.",
  ],
  LetterQuestCompletedLabel: ["Quest completed"],
  LetterQuestFailedLabel: ["Quest failed"],
  LetterQuestConcludedLabel: ["Quest concluded"],
  LetterQuestCompletedSuccess: [
    "You have successfully completed the quest '{0}'!",
  ],
  LetterQuestCompletedFail: ["You have failed the quest '{0}'."],
  LetterQuestCompletedConcluded: ["You have concluded the quest '{0}'."],
  LetterBladelinkWeaponBondedLabel: ["Persona bond: {PAWN_labelShort}"],
  LetterBladelinkWeaponBonded: [
    "{PAWN_labelShort} has established a bond with the persona of {WEAPON_labelShort}.\r\n\\nFrom now on, {WEAPON_labelShort} will refuse to be wielded by anyone except {PAWN_labelShort}.",
  ],
  LetterLabelMechClusterArrived: ["Mechanoids arrived"],
  LetterMechClusterArrived: ["Mechanoids have arrived."],
  LetterLabelSiteCountdownStarted: ["Caravan detected"],
  LetterTextSiteCountdownStarted: [
    "Your caravan has been detected. In {0}, reinforcing {1} from {2} will begin arriving in the area.\\n\\nReform your caravan and begin moving to avoid the {1}. A timer counting down to their arrival is now visible.",
  ],
  LetterLabelUnrecruitablePawnCaptured: ["Unwavering prisoner"],
  LetterTextUnrecruitablePawnCaptured: [
    "{PAWN_nameDef} is unwaveringly loyal to their home and will refuse to be recruited entirely.\\n\\nYou can see whether someone is unwaveringly loyal by selecting them.",
  ],
  OptionalEnslaveDesc: ["enslave {PAWN_objective}"],
  LetterTextLungRot: [
    "{PAWN} has gotten sick from {1} due to long-term exposure to rot stink gas (which is given off by rotting corpses).\\n\\nEnsure you have a medical bed and a doctor. Make sure that {PAWN_definite} gets proper treatment.",
  ],
  LetterJoinOfferLabel: ["Join offer: {PAWN_nameDef}"],
  LetterJoinOfferTitle: ["{PAWN_nameDef} wishes to join your faction."],
  LetterJoinOfferText: [
    "{PAWN_nameDef} believes that {PAWN_pronoun} is happy at {MAP_definite}. {PAWN_pronoun} wishes to join you permanently.",
  ],
  LetterJoinOfferAccept: ["Accept"],
  LetterFinishedSpeech: [
    "{ORGANIZER_labelShort} has finished {ORGANIZER_possessive} speech.",
  ],
  LetterTerribleSpeech: [
    "It was truly atrocious - halting, full of awkward jokes and depressing stories.",
  ],
  LetterUninspiringSpeech: [
    "It was uninspiring - unoriginal, droning and lacking any sense of passion.",
  ],
  LetterEncouragingSpeech: ["It was encouraging and well-delivered."],
  LetterInspirationalSpeech: [
    "It was remarkably inspiring, full of intensity and purpose.",
  ],
  LetterSpeechInspiredListeners: [
    "The following people were particularly moved by the speech and are now inspired:",
  ],
  LetterSpeechInspiration: [
    "Thanks to {SPEAKER_nameIndef}'s remarkable speech, {PAWN_nameIndef} has experienced an inspiration!",
  ],
  LetterSpeechInterrupted: [
    "Because the speech was interrupted after only {0} completed, it wasn't as effective.",
  ],
  LetterSpeechCancelled: [
    "{0}'s speech was cancelled before reaching 50% completion. It had no effect.",
  ],
  LetterLabelSpeechCancelled: ["Speech cancelled"],
  ManualPriorities: ["Manual priorities"],
  HigherPriority: ["higher priority"],
  LowerPriority: ["lower priority"],
  RelevantSkills: ["Relevant skills: {0}\\nAverage of relevant skills: {1}"],
  ClickToJumpTo: ["Click to jump to:"],
  CannotDoThisWork: ["{1_labelShort} cannot do this kind of work."],
  NoneBrackets: ["(none)"],
  IncapableOfWorkTypeBecauseOfCapacities: [
    "This colonist is not able to do any work of this type because of their health condition.",
  ],
  EmergencyWorkMarker: ["E"],
  SelectedWorkTypeWithVeryBadSkill: [
    "Warning: The average of relevant skills is very low.",
  ],
  PriorityOneDoneFirst: ["Priority 1 is done first. Priority 4 is done last."],
  Priority0: ["Will not do"],
  Priority1: ["Top priority"],
  Priority2: ["High priority"],
  Priority3: ["Normal priority"],
  Priority4: ["Low priority"],
  PawnFactionInfo: [
    "{0}\\n\\nThe faction {1_nameDef} currently belongs to.\\n\\nClick to view faction.",
  ],
  WorkDisabledByBackstory: ["Disabled by {0} backstory"],
  WorkDisabledByTrait: ["Disabled by {0} trait"],
  WorkDisabledByQuest: ["Disabled by quest '{0}'"],
  ManageOutfits: ["Manage outfits"],
  Unchangeable: ["Unchangeable"],
  ClearForcedApparel: ["Clr. forced"],
  ApparelForcedLower: ["forced"],
  ApparelLockedLower: ["locked"],
  ForcedApparel: ["Forced apparel"],
  AssignTabEdit: ["Edit..."],
  ManageDrugPolicies: ["Manage drug policies"],
  ManageFoodRestrictions: ["Manage food restrictions"],
  Copy: ["Copy"],
  Paste: ["Paste"],
  AllowedArea: ["Allowed area"],
  Master: ["Master"],
  PregnantIconDesc: ["Pregnant ({0} / {1})"],
  BondedTo: ["Bonded to"],
  SterilizeAnimal: ["Sterilize animal."],
  AnimalAlreadySterile: ["Animal sterile."],
  IsPredator: [
    "This creature is a predator. When hungry, it will hunt smaller creatures - possibly including people.",
  ],
  IsInMentalState: ["This creature is currently in mental state: {0}"],
  Hostile: ["Hostile"],
  Ally: ["Ally"],
  HostileLower: ["hostile"],
  AllyLower: ["ally"],
  DefeatedLower: ["defeated"],
  HostileTo: ["Enemy of {0}"],
  EnemyOf: ["Enemy of: "],
  RecentEvents: ["Recent events"],
  OngoingEvents: ["Ongoing events"],
  CurrentGoodwillTip_PermanentEnemy: [
    "This faction is permanently hostile. They will raid your settlements and caravans. Relations with them will never improve for any reason.",
  ],
  CurrentGoodwillTip_Ally: [
    "This faction is allied. They will send fighters to help you when they can. If relations fall below {0}, they will become neutral.",
  ],
  CurrentGoodwillTip_Neutral: [
    "This faction is neutral. They will trade and talk with you freely. If relations fall below {0}, they will become hostile. If relations rise above {1}, they will become allied and start actively working to help you.",
  ],
  CurrentGoodwillTip_Hostile: [
    "This faction is hostile. They will raid your settlements and caravans. If relations rise above {0}, they will become neutral.",
  ],
  Friend: ["Friend"],
  Rival: ["Rival"],
  Acquaintance: ["Acquaintance"],
  Graph: ["Graph"],
  Messages: ["Messages"],
  Statistics: ["Statistics"],
  SelectGraph: ["Select graph"],
  Last30Days: ["Last 30 days"],
  Last100Days: ["Last 100 days"],
  Last300Days: ["Last 300 days"],
  AllDays: ["All"],
  Value: ["Value"],
  External: ["External"],
  ShowLetters: ["Show letters"],
  ShowMessages: ["Show messages"],
  PinArchivableTip: [
    "Pin or unpin this message.\\n\\nThe oldest unpinned messages will be removed automatically from the list after reaching the limit of {0} messages.",
  ],
  NoMessages: ["no messages"],
  Playtime: ["Play time"],
  Storyteller: ["Storyteller"],
  ThisMapColonyWealthTotal: ["Colony wealth (this map)"],
  ThisMapColonyWealthItems: ["Colony wealth (items) (this map)"],
  ThisMapColonyWealthBuildings: ["Colony wealth (buildings) (this map)"],
  ThisMapColonyWealthColonistsAndTameAnimals: [
    "Colony wealth (people and animals) (this map)",
  ],
  NumThreatBigs: ["Major threats"],
  NumEnemyRaids: ["Enemy raids"],
  ThisMapDamageTaken: ["Damage taken (this map)"],
  ColonistsKilled: ["Colonists killed"],
  ColonistsLaunched: ["Colonists launched into space"],
  Study: ["Study"],
  StudyThing: ["Study {0}"],
  Unresearched: ["Unresearched"],
  Finished: ["Finished"],
  InProgress: ["In Progress"],
  Locked: ["Locked"],
  ResearchPrerequisites: ["Research prerequisites"],
  ResearchTechprintRequirement: ["Techprints required {0} / {1}"],
  InsufficientTechprintsApplied: [
    "Insufficient techprints applied ({0} / {1})",
  ],
  PrerequisitesNotCompleted: ["Prerequisite(s) not completed"],
  MissingRequiredResearchFacilities: ["Missing required research facilities"],
  RequiredResearchBench: ["Required research bench"],
  RequiredResearchBenchFacilities: ["Required research bench facilities"],
  ResearchCostComparison: [
    "Project base cost {0} becomes {1} for you because of your tech level.",
  ],
  ResearchTechprintsFromFactions: [
    "Techprints are available from these factions via trade and quests:",
  ],
  TechLevelTooLow: [
    "Your faction tech level is {0}, but this project's tech level is {1}. Research speed will be multiplied by {2}.",
  ],
  UnlockedWith: ["Unlocked with"],
  FactionsTab: ["Factions"],
  NoFactions: ["No known factions"],
  AvailableQuests: ["Available"],
  ActiveQuests: ["Active"],
  HistoricalQuests: ["Historical"],
  NoQuestSelected: ["no quest selected"],
  AppearedDaysAgo: ["Appeared {0} days ago"],
  AppearedOn: ["Appeared on {0}"],
  AcceptedAgo: ["Accepted {0} ago"],
  AcceptedOn: ["Accepted on {0}"],
  AcceptedAgoBy: ["Accepted {0} ago by {1}"],
  AcceptedOnBy: ["Accepted on {0} by {1}"],
  QuestExpiresIn: ["Expires in {0}"],
  QuestExpiresOn: ["Expires on {0}"],
  QuestAveragePawnMood: ["Average guest mood (previous {0}): {1}"],
  QuestAveragePawnMoodTargets: [
    "The average mood of {0} over the previous {1}",
  ],
  ShuttleArrivesIn: ["Shuttle arrives in {0}"],
  ShuttleArrivesOn: ["Shuttle arrives on {0}"],
  ShuttleDepartsIn: ["Shuttle departs in {0}"],
  ShuttleDepartsOn: ["Shuttle departs on {0}"],
  GuestsDepartsIn: ["Guests depart in {0}"],
  GuestsDepartsOn: ["Guests depart on {0}"],
  QuestFinishedAgo: ["Finished {0} ago"],
  AcceptQuest: ["Accept quest"],
  AcceptWith: ["Accept with {0_labelShort}"],
  AcceptQuestFor: ["Accept for"],
  AcceptQuestForTip: ["Click to accept this quest for this reward."],
  QuestOutcomeInfo_OfferExpired: ["The offer expired."],
  QuestOutcomeInfo_UnknownOrSuccess: ["You completed this quest."],
  QuestOutcomeInfo_Failed: ["You failed this quest."],
  QuestOutcomeInfo_Invalid: [
    "This quest became invalid before it was accepted.",
  ],
  JumpToTargetCustom: ["Jump to {0}"],
  SelectHiveTargets: ["Select hives"],
  QuestChallengeRatingTip: [
    "Challenge rating. This is a general rating for how difficult the quest will be relative to your current strength. More challenging quests give greater rewards.\\n\\n1: Normal\\n2: Hard\\n3: Extreme\\n4: Ultimate",
  ],
  QuestAcceptanceRequirementsDescription: ["To accept this quest, you need"],
  QuestBedroomRequirementsUnsatisfied: [
    "free bedrooms that satisfy the title requirements of",
  ],
  QuestBedroomRequirementsUnsatisfiedSingle: [
    "a free bedroom that satisfies the title requirements of",
  ],
  QuestThroneRoomRequirementsUnsatisfied: [
    "a throneroom that satisfies the requirements of {PAWN_definite}'s {TITLE} title",
  ],
  QuestNoThroneRoom: ["assign a throne for {PAWN_definite}"],
  QuestNoColonistWithTitle: ["a colonist with the title of {0}"],
  QuestPawnNotOnColonyMap: ["{PAWN_definite} to be in your home colony"],
  QuestRequiresNoDangerOnMap: [
    "the map clear of enemies of the bestower's faction",
  ],
  QuestCanNotStartUntilBestowingCeremonyFinished: [
    "to finish the ongoing bestowing ceremony quest",
  ],
  ChooseRewards: ["Reward preferences"],
  ChooseRewardsDesc: [
    "Tell other factions what kinds of rewards you want in future quests. This doesn't affect quests that were already offered.",
  ],
  AcceptRoyalFavor: ["Accept {FACTION_royalFavorLabel}"],
  AcceptRoyalFavorDesc: [
    "Whether you wish to be rewarded with {FACTION_royalFavorLabel} from {FACTION_name}.\\n\\nIf this is disabled, {FACTION_name} will offer other types of rewards instead.\\n\\nThis setting only affects newly-arriving quests.",
  ],
  AcceptGoodwill: ["Accept goodwill"],
  AcceptGoodwillDesc: [
    "Whether you wish to be rewarded via improved faction relations with {FACTION_name}.\\n\\nIf this is disabled, {FACTION_name} will offer other types of rewards instead.\\n\\nThis setting only affects newly-generated quests.",
  ],
  RoyalFavorOn: [
    "You are currently opting in to receive {FACTION_royalFavorLabel}.",
  ],
  RoyalFavorOff: [
    "You are currently opting out of receiving {FACTION_royalFavorLabel}.",
  ],
  GoodwillTip: [
    "Your goodwill with {0_name} will improve by {1}.\\n\\nCurrent goodwill: {4} ({5}).\\n\\nGoodwill measures the general relationship between factions. If it falls below {2}, the faction becomes hostile and will raid your settlements and caravans. If it rises above {3}, the faction will become your ally and send fighters to help you when they can. Otherwise, the faction remains neutral and will trade and talk with you freely.",
  ],
  PawnQuestReward: ["{0_labelShort} joins"],
  QuestBetrayalOffer: ["Betrayal offer: {0} targets remain"],
  QuestBetrayalOfferTip: [
    "{0} will grant you a reward for killing all members of the {1}.",
  ],
  QuestRequiredPlayerWealth: ["a colony wealth of at least {0}"],
  QuestAlliedTo: ["alliance with {0}"],
  QuestHostileTo: ["hostile to {0}"],
  QuestNeutralTo: ["neutral to {0}"],
  QuestRequiredThingStudied: ["studied {0_labelShort}"],
  CreatesNeed: ["Creates need"],
  ClickToEdit: ["Click to edit"],
  Tutorial: ["Tutorial"],
  NewColony: ["New colony"],
  BackToGame: ["Back to game"],
  ReviewScenario: ["Review scenario"],
  Save: ["Save"],
  LoadGame: ["Load game"],
  Options: ["Options"],
  Mod: ["Mod"],
  Mods: ["Mods"],
  SaveTranslationReport: ["Save translation report"],
  GeneratingTranslationReport: ["Generating translation report"],
  CleanupTranslationFiles: ["Cleanup translation files"],
  TranslationFilesTKeyUpdate: ["Update translations files (TKey's)"],
  CleaningTranslationFiles: ["Cleaning translation files"],
  DevQuickTest: ["Dev quicktest"],
  Credits: ["Credits"],
  QuitToMainMenu: ["Quit to main menu"],
  SaveAndQuitToMainMenu: ["Save and quit to menu"],
  QuitToOS: ["Quit to OS"],
  SaveAndQuitToOS: ["Save and quit to OS"],
  FictionPrimer: ["Fiction primer"],
  LudeonBlog: ["Ludeon blog"],
  Forums: ["Forums"],
  OfficialWiki: ["Official wiki"],
  TynansTwitter: ["Tynan's twitter"],
  TynansDesignBook: ["Tynan's design book"],
  HelpTranslate: ["Help translate RimWorld"],
  BuySoundtrack: ["Buy soundtrack"],
  CreateWorld: ["Create world"],
  TranslationThanks: [
    "All translations of RimWorld are fan-made. This fan-made translation was created by the following excellent volunteers:\\n\\n{0}",
  ],
  TranslationHowToContribute: [
    "You can contribute too. Click below to learn more (opens web browser).",
  ],
  LearnMore: ["Learn more"],
  DevBuildWarning: [
    "Warning: This is an unstable development build. This means we are running design experiments and doing technical development.\\n\\nSome things will be temporarily unbalanced on purpose. This is a classic game design method where we deliberately go too far with a balance change in order to better understand balance boundaries. We can then use that information to decide on the final balance points.\\n\\nThere will also be bugs, including game-breaking ones. Save compatibility may break any time.\\n\\nIf you're okay with all of this, thanks for testing! If you don't want to be subject to our experiments, please play the latest stable version.",
  ],
  ReviewWorld: ["Review world"],
  WorldGenerate: ["Generate"],
  WorldSaveAndFinish: ["Save and finish"],
  ResetFactions: ["Reset factions"],
  PlanetCoverage: ["Globe coverage"],
  PlanetRainfall: ["Overall rainfall"],
  PlanetTemperature: ["Overall temperature"],
  PlanetPopulation: ["Population"],
  PlanetRainfall_Low: ["Low"],
  PlanetRainfall_Normal: ["Normal"],
  PlanetRainfall_High: ["High"],
  PlanetTemperature_Low: ["Low"],
  PlanetTemperature_Normal: ["Normal"],
  PlanetTemperature_High: ["High"],
  PlanetPopulation_Low: ["Sparse"],
  PlanetPopulation_Normal: ["Normal"],
  PlanetPopulation_High: ["Crowded"],
  WorldSeed: ["Seed"],
  RandomizeSeed: ["Randomize seed"],
  PlanetCoverageTip: [
    "The planet is always the same diameter, but since it's far larger than needed for play, we don't generate the whole surface because it can take a very long time. This is the percentage of the surface that you want generated.",
  ],
  WorldFactionsTab: ["Factions"],
  SelectWorld: ["Select world"],
  WorldChooseButton: ["Select"],
  NoWorldsFilesFound: ["No world files found. Create a world first."],
  BuildNowAvailable: [
    "Version {0} is now available. Check ludeon.com for more info.",
  ],
  BuildUpToDate: ["This is the latest version."],
  ErrorGettingVersionInfo: ["Error getting version info: {0}"],
  LoadingVersionInfo: ["Loading version info..."],
  GenerateWorld: ["Generate world"],
  OpenSteamWorkshop: ["Open Steam Workshop"],
  GetModsFromForum: ["Get mods from forum"],
  OpenModsDataFolder: ["Open mods data folder"],
  ShowModsDataLocation: ["Show mods data location"],
  ConfirmDisableCoreMod: [
    "Are you sure you want to disable the core mod? The game won't work at all unless you have another mod that replaces all the core functionality.\\n\\nRemember, other mods can override defs in the core mod by using the same defName.",
  ],
  ConfirmDeleteMod: [
    "Are you sure you want to delete all the content for {0}?",
  ],
  ResolveModOrder: ["Auto-sort mods"],
  SaveModChanges: ["Save and apply changes"],
  DiscardModChanges: [
    "Mod changes have not been saved. Are you sure you want to continue?",
  ],
  ModReorderConflict_MustLoadAfter: [
    "Cannot move {0}: It must be loaded after {1}.",
  ],
  ModReorderConflict_MustLoadBefore: [
    "Cannot move {0}: It must be loaded before {1}.",
  ],
  Unsubscribe: ["Unsubscribe"],
  ConfirmUnsubscribe: ["Are you sure you want to unsubscribe?"],
  ConfirmUnsubscribeFrom: ["Are you sure you want to unsubscribe from {0}?"],
  ConfirmUnsubscribeFromMultiple: [
    "Are you sure you want to unsubscribe from:\\n\\n{0}",
  ],
  Author: ["Author"],
  Enabled: ["Enabled"],
  Disabled: ["Disabled"],
  Enable: ["Enable"],
  GetMods: ["Get mods from..."],
  UnsubscribeMultiple: ["Unsubscribe from..."],
  SaveLoadList: ["Save / load list..."],
  SaveModList: ["Save mod list"],
  LoadModList: ["Load mod list"],
  AddedModsList: ["Added mods"],
  MissingModsList: ["Missing mods"],
  SharedModsList: ["Shared mods"],
  ModWebsite: ["Website"],
  ModFolder: ["Open folder"],
  ModOptions: ["Mod options"],
  FromWorkshop: ["Workshop"],
  FromForum: ["Forum"],
  MoreActions: ["Advanced..."],
  AllSelectedMods: ["All selected mods"],
  AllDisabledMods: ["All disabled mods"],
  AllIncompatibleMods: ["All incompatible mods"],
  WorkshopPage: ["Workshop page"],
  UploadToSteamWorkshop: ["Upload to Steam Workshop"],
  UpdateOnSteamWorkshop: ["Update on Steam Workshop"],
  UploadAlreadyInProgress: ["Upload already in progress."],
  WorkshopSubmissionFailed: ["Workshop submission failed.\\n\\nReason: {0}"],
  WorkshopUploadSucceeded: ["Successfully uploaded {0}."],
  Downloading: ["Downloading"],
  WorkshopId: ["Workshop ID"],
  ModDisplayFulfilledRequirements: ["Display fulfilled requirements"],
  ModClickToSelect: ["Click to select."],
  ModClickToGoToWebsite: ["Click to go to website."],
  Source: ["Source"],
  ModTargetVersion: ["Game versions"],
  ModVersion: ["Mod version"],
  ModPackageId: ["ID"],
  ModMustLoadBefore: ["This must be loaded before: {0}."],
  ModMustLoadAfter: ["This must be loaded after: {0}."],
  ModDependsOn: ["Depends on: {0}"],
  ModIncompatibleWith: ["Incompatible with: {0}"],
  ModIncompatibleWithTip: ["This mod is incompatible with: {0}."],
  ModOrderingWarning: [
    "This mod is loading in the wrong order relative to another mod. Use the 'auto-sort' button, or re-order the mods manually.",
  ],
  ModWithSameIdAlreadyActive: ["Another active mod uses the same ID: {0}."],
  ModCyclicDependency: ["There is a cyclic mod dependency starting with {0}."],
  ModUnsatisfiedDependency: ["This requires the following mods to work: {0}."],
  ModNotMadeForThisVersion: [
    "This mod was not made for this version of RimWorld, and will probably not work correctly.",
  ],
  ModNotMadeForThisVersionShort: [
    "This mod is not made for this version of RimWorld.",
  ],
  ModNotMadeForThisVersion_Newer: [
    "This mod was made for a newer version of RimWorld than this, and will probably not work correctly.",
  ],
  MessageModNeedsWellFormattedTargetVersion: [
    "Mod needs properly formatted supported version information in About.xml. Like this: <supportedVersions><li>{0}</li></supportedVersions> - <targetVersion> is deprecated. Check log for further information.",
  ],
  MessageModNeedsWellFormattedPackageId: [
    'Mod needs a unique, properly formatted packageId in About.xml. It must must meet following requirements:\\n\\n  - Alphanumeric characters and dot only.\\n  - No spaces.\\n  - At least one dot.\\n  - No repeated dots in a row, or starting or ending with a dot.\\n  - 60 characters or less.\\n  - Cannot contain word "Ludeon".\\n\\nFor example:\\n<packageId>AuthorName.ModName</packageId>\\n<packageId>AuthorName.ModName.Specific</packageId>',
  ],
  ModHadLoadFolderIssues: [
    "This mod has issues in LoadFolders.xml, that you need to resolve before uploading:",
  ],
  ModLoadFolderDoesntExist: [
    "Folder {0} specified for version {1} doesn't exist.",
  ],
  ModLoadFolderMalformedVersion: [
    "Malformed version string '{0}'. Correct format is Major.Minor (e.g. 1.1)",
  ],
  ModLoadFolderListEmpty: [
    "The list of load folders for version {0} is empty.",
  ],
  ModLoadFolderRepeatingFolder: [
    "Version {0} lists the same folder more than once: {1}.",
  ],
  ModLoadFolderOutOfOrder: [
    "Invalid version order: {0} should come before {1}.",
  ],
  ModLoadFolderOutOfOrderDefault: [
    "Invalid version order: 'default' should be defined first.",
  ],
  ModLoadFolderDefaultDeprecated: [
    "Using 'default' in load folders is deprecated. Please define folders for each version using the <v...> tags.",
  ],
  ModLoadFolderDefinesUnsupportedGameVersion: [
    "Version {0} is defined in load folders, but is not listed in 'supportedVersions' of mod's About.xml.",
  ],
  DragToReorder: ["Drag to reorder"],
  ChooseScenario: ["Choose scenario"],
  ScenariosCustom: ["Custom"],
  ScenariosSteamWorkshop: ["Steam Workshop"],
  ScenarioEditor: ["Scenario editor"],
  Delete: ["Delete"],
  Seed: ["seed"],
  Load: ["Load"],
  EditMode: ["edit mode"],
  Summary: ["Summary"],
  AddPart: ["Add part"],
  TextFieldsMustBeFilled: ["All text fields must be filled."],
  ConfirmSteamWorkshopUpload: [
    "Are you sure you want to upload this to the Steam Workshop?\\n\\nYou must agree to the Steam Workshop terms of service. Find the full terms here:\\n\\nhttp://steamcommunity.com/sharedfiles/workshoplegalagreement",
  ],
  ConfirmContentAuthor: [
    "Obviously you should only upload content that you created yourself.\\n\\nDid you create this content yourself?",
  ],
  Incompatible: ["Incompatible"],
  TagAsTranslation: ["Tag as translation"],
  TooMany: ["Too many (max {0}): "],
  CanBeUpdatedOnWorkshop: [
    "Can be updated on Workshop, since you are the author.",
  ],
  ScenarioChangedSavePrompt: [
    "This scenario has been edited.\\n\\nDo you want to save it before proceeding?",
  ],
  ChooseAIStoryteller: ["Choose AI Storyteller"],
  HowStorytellersWork: [
    "The AI Storyteller creates events like pirate raids, resource drops, or animal attacks. Their choices will affect the story of your colony. You can change these settings at any time.",
  ],
  MustChooseDifficulty: ["Please choose a difficulty setting."],
  Difficulty: ["Difficulty"],
  CommitmentMode: ["Commitment mode"],
  ReloadAnytimeMode: ["Reload anytime mode"],
  MustChoosePermadeath: [
    "Please choose commitment mode or reload anytime mode.",
  ],
  ReloadAnytimeModeInfo: [
    "You can save and load the game at any time.\\n\\nThis is a good choice if you're still learning the game, if it fits your personal playstyle, if you're using mods that may break your game, or if you intend to self-enforce commitment mode.",
  ],
  PermadeathModeInfo: [
    "You can only save when quitting the game.\\n\\nSince RimWorld is a story generator, even losing all but one person is not the end of the game - it's part of the story. The game is designed to allow recovery after losses.\\n\\nPlaying out these terrible situations makes a story with both tragedy and triumph. It's the way RimWorld was designed to be played.\\n\\nThere's a reason Luke Skywalker didn't quit and reload when his family got killed - loss and recovery is dramatic.",
  ],
  CanChangeStorytellerSettingsDuringPlay: [
    "Storyteller and playstyle can be changed any time.",
  ],
  DifficultyCustomSectionLabel: ["Custom playstyle settings"],
  DifficultyReset: ["Set to standard playstyle..."],
  DifficultyThreatSection: ["Threats"],
  Difficulty_ThreatScale_Label: ["Threat scale"],
  Difficulty_ThreatScale_Info: [
    "Adjust the size of threats like raids and infestations, and the difficulty of quests.",
  ],
  Difficulty_AllowBigThreats_Label: ["Major threats"],
  Difficulty_AllowBigThreats_Info: [
    "Allow major threats such as raids, infestations, manhunter packs, crashed mechanoid ships and more.",
  ],
  Difficulty_AllowViolentQuests_Label: ["Quest threats"],
  Difficulty_AllowViolentQuests_Info: [
    "Allow quests to present with violent threats and challenges. If this is disabled, quests will be modified to be non-violent.",
  ],
  Difficulty_AllowIntroThreats_Label: ["Intro threats"],
  Difficulty_AllowIntroThreats_Info: [
    "Enable the fixed intro threats that appear near game start.",
  ],
  Difficulty_PredatorsHuntHumanlikes_Label: ["Predators hunt humans"],
  Difficulty_PredatorsHuntHumanlikes_Info: [
    "Allow wild predators to hunt humans.",
  ],
  Difficulty_AllowExtremeWeatherIncidents_Label: ["Extreme weather"],
  Difficulty_AllowExtremeWeatherIncidents_Info: [
    "Allow extreme weather incidents such as toxic fallout, volcanic winters and flashstorms.",
  ],
  DifficultyEconomySection: ["Economy"],
  Difficulty_TradePriceFactorLoss_Label: ["Trade price disadvantage"],
  Difficulty_TradePriceFactorLoss_Info: [
    "When trading, buy prices are increased by this amount while sell prices are reduced by this amount.",
  ],
  Difficulty_CropYieldFactor_Label: ["Harvest yield"],
  Difficulty_CropYieldFactor_Info: [
    "Adjust the amount of materials produced when harvesting plants and crops. This includes harvesting plants and cutting trees.",
  ],
  Difficulty_MineYieldFactor_Label: ["Mining yield"],
  Difficulty_MineYieldFactor_Info: [
    "Adjust the amount of materials produced when mining.",
  ],
  Difficulty_ButcherYieldFactor_Label: ["Butchering yield"],
  Difficulty_ButcherYieldFactor_Info: [
    "Adjust the amount of materials produced when butchering. This includes meat, leather, and yield from shredding mechanoids.",
  ],
  Difficulty_ResearchSpeedFactor_Label: ["Research speed"],
  Difficulty_ResearchSpeedFactor_Info: ["Adjust the speed of research."],
  Difficulty_QuestRewardValueFactor_Label: ["Quest rewards"],
  Difficulty_QuestRewardValueFactor_Info: [
    "Adjust the value of rewards given for quests.\\n\\nNote: Quest reward value is also automatically scaled to compensate for threat scale. If you adjust this setting, you'll be adding an additional multiplier.",
  ],
  Difficulty_RaidLootPointsFactor_Label: ["Raid loot"],
  Difficulty_RaidLootPointsFactor_Info: [
    "Adjust the value of loot carried by raiders.\\n\\nNote: Raid loot value is also automatically scaled to compensate for threat scale. If you adjust this setting, you'll be adding an additional multiplier.",
  ],
  Difficulty_MaintenanceCostFactor_Label: ["Turret rearm cost"],
  Difficulty_MaintenanceCostFactor_Info: [
    "Adjust the cost of rearming turrets.",
  ],
  Difficulty_ScariaRotChance_Label: ["Scaria rot chance"],
  Difficulty_ScariaRotChance_Info: [
    "The probability that a corpse will immediately rot upon death, if the creature has the scaria disease.\\n\\nNote: The default settings are designed to exactly balance out the increase in animal count at higher difficulties, so all players get the same meat rewards.",
  ],
  Difficulty_EnemyDeathOnDownedChanceFactor_Label: ["Enemy death on downed"],
  Difficulty_EnemyDeathOnDownedChanceFactor_Info: [
    "Adjust the extra chance that an enemy will immediately die when downed. This affects the chances to take prisoners, and thus colony population growth rates.",
  ],
  DifficultyGeneralSection: ["General"],
  Difficulty_ColonistMoodOffset_Label: ["Colonist mood"],
  Difficulty_ColonistMoodOffset_Info: [
    "A permanent mood offset applied to every colonist and prisoner. Colonists have a base mood of 50%.",
  ],
  Difficulty_FoodPoisonChanceFactor_Label: ["Food poison chance"],
  Difficulty_FoodPoisonChanceFactor_Info: [
    "Adjust the chance that a person will get food poisoning from eating a potentially-poisoned meal.",
  ],
  Difficulty_ManhunterChanceOnDamageFactor_Label: ["Animal revenge chance"],
  Difficulty_ManhunterChanceOnDamageFactor_Info: [
    "Adjust the chance that injuring a wild animal will cause it to attack.",
  ],
  Difficulty_FriendlyFireChanceFactor_Label: ["Friendly fire"],
  Difficulty_FriendlyFireChanceFactor_Info: [
    "Adjust the chance of friendly fire.\\n\\nNote: This setting only affects direct shots which were going to hit their target. It does not prevent damage from explosions, or from shots which were going to miss their target.",
  ],
  Difficulty_AllowInstantKillChance_Label: ["Colonist instant kills"],
  Difficulty_AllowInstantKillChance_Info: [
    "Adjust the chance that a colonist can die instantly due to an attack. The incoming damage is adjusted so it will down the colonist instead.\\n\\nThis only prevents some kinds of instant kills - colonists can still be downed and bleed to death, die from fire, explosions, disease, and so on.",
  ],
  Difficulty_PlayerPawnInfectionChanceFactor_Label: ["Infection chance"],
  Difficulty_PlayerPawnInfectionChanceFactor_Info: [
    "Adjust the chance that a wound will become infected.",
  ],
  Difficulty_DiseaseIntervalFactor_Inverted_Label: ["Disease frequency"],
  Difficulty_DiseaseIntervalFactor_Inverted_Info: [
    "Adjust the frequency of random disease events.",
  ],
  Difficulty_EnemyReproductionRateFactor_Label: ["Insect spawning rate"],
  Difficulty_EnemyReproductionRateFactor_Info: [
    "Adjust the rate at which existing insect hives spawn new insects. Lower values means more time between spawn events.\\n\\nThis does not affect whether infestations can occur - only the speed at which active hives produce insects.",
  ],
  Difficulty_DeepDrillInfestationChanceFactor_Label: [
    "Deep drilling infestations",
  ],
  Difficulty_DeepDrillInfestationChanceFactor_Info: [
    "Adjust the chance that deep drilling will trigger an infestation.",
  ],
  Difficulty_PeacefulTemples_Inverted_Label: ["Map generation ancient threats"],
  Difficulty_PeacefulTemples_Inverted_Info: [
    "Ancient structures may contain dangerous threats.",
  ],
  Difficulty_AllowCaveHives_Label: ["Map generation natural hives"],
  Difficulty_AllowCaveHives_Info: [
    "Dormant insect hives may spawn in natural caves.\\n\\nThis setting only applies to map generation and does not affect active insects that may tunnel in during play.",
  ],
  Difficulty_UnwaveringPrisoners_Label: ["Add unwavering prisoners"],
  Difficulty_UnwaveringPrisoners_Info: [
    "This option adds additional capturable prisoners to the game who cannot be recruited due to unwavering loyalty.\\n\\nUnwavering prisoners are added on top of normal prisoners, so turning this off won't give more recruitable prisoners - it simply removes the unwavering ones.\\n\\nUnwavering prisoners can still be released for diplomatic gains, sold, enslaved, harvested for organs, or otherwise made use of. In general, they offer more options and resources, and make the game a bit richer and easier.",
  ],
  DifficultyPlayerToolsSection: ["Player tools"],
  Difficulty_AllowTraps_Label: ["Player can build traps"],
  Difficulty_AllowTraps_Info: [
    "Player can build traps like spike traps and IED traps.",
  ],
  Difficulty_AllowTurrets_Label: ["Player can build turrets"],
  Difficulty_AllowTurrets_Info: [
    "Player can build static turrets like mini-turrets, autocannon turrets, and uranium slug turrets.\\n\\nYou can still use captured turrets even if this is disabled.",
  ],
  Difficulty_AllowMortars_Label: ["Player can build mortars"],
  Difficulty_AllowMortars_Info: [
    "Player can build mortars.\\n\\nYou can still use captured mortars even if this is disabled.",
  ],
  Difficulty_ClassicMortars_Label: ["Classic mortars"],
  Difficulty_ClassicMortars_Info: [
    "Mortars will not require reinforced barrels to construct or reload, and are balanced for this ease of access.",
  ],
  DifficultyAdaptationSection: ["Adaptation"],
  Difficulty_AdaptationGrowthRateFactorOverZero_Label: [
    "Adaptation growth rate",
  ],
  Difficulty_AdaptationGrowthRateFactorOverZero_Info: [
    "Adaptation means the storyteller makes the game more challenging when you're doing well. An adaptation score grows over time, and is knocked down when you take damage.\\n\\nThis setting adjusts how fast the adaptation score grows over time.",
  ],
  Difficulty_AdaptationEffectFactor_Label: ["Adaptation impact"],
  Difficulty_AdaptationEffectFactor_Info: [
    "Adaptation means the storyteller makes the game more challenging when you're doing well. An adaptation score grows over time, and is knocked down when you take damage.\\n\\nThis setting adjusts how much the adaptation score affects the difficulty.",
  ],
  Difficulty_FixedWealthMode_Label: ["Wealth-independent progress mode"],
  Difficulty_FixedWealthMode_Info: [
    "Play in a wealth-independent progress mode.\\n\\nIn normal mode, the storyteller scales threats according to colonist count, player wealth, and a variety of other factors. Wealth-independent mode removes the wealth factor and replaces it with a fixed progress curve based on time. The time is counted from the founding of each colony.\\n\\nThis is only recommended for those looking for a strict skill challenge. In wealth-independent mode, it may be nearly impossible to recover from serious losses unless you found a new settlement. It's also possible to get too far ahead of the curve and find the game too easy.",
  ],
  Difficulty_FixedWealthTimeFactor_Label: ["Years until maximum threat"],
  Difficulty_FixedWealthTimeFactor_Info: [
    "The number of game years until the wealth-independent mode reaches its maximum threat level.\\n\\nNote that the storyteller will still scale threats according to colonist count and a variety of other factors.",
  ],
  DifficultyIdeologySection: ["Ideology"],
  Difficulty_LowPopConversionBoost_Label: ["Low pop conversion boost"],
  Difficulty_LowPopConversionBoost_Info: [
    "With a single colonist of the player's starting ideoligion, conversion chance to their ideoligion is multiplied by this amount. Conversion attempts against them have their impact divided by that amount.\\n\\nWith two colonists of the player's starting ideoligion, the effect is halved.\\n\\nWith three or more colonists of the player's starting ideoligion, this has no effect.",
  ],
  SelectStartingSite: ["Select starting site"],
  SelectRandomSite: ["Select random site"],
  SelectSite: ["Select site"],
  MustSelectStartingSite: ["Please select a site."],
  CannotLandBiome: ["You cannot land on this biome: {0}"],
  BiomeNotImplemented: ["Biome not implemented"],
  CannotLandImpassableMountains: ["You cannot land on impassable mountains."],
  BaseAlreadyThere: ["{0} already have a base there."],
  YourBaseAlreadyThere: ["You already have a base there."],
  TileOccupied: ["This tile is occupied."],
  FactionBaseAdjacent: [
    "Settlements cannot be directly adjacent to each other.",
  ],
  Biome: ["Biome"],
  Terrain: ["Terrain"],
  Road: ["Road"],
  River: ["River"],
  Elevation: ["Elevation"],
  Fertility: ["Fertility"],
  FertilityLower: ["fertility"],
  AvgTemp: ["Average temperature"],
  Rainfall: ["Rainfall"],
  SpecialFeatures: ["Special features"],
  HasCoast0: ["northern coast"],
  HasCoast1: ["eastern coast"],
  HasCoast2: ["southern coast"],
  HasCoast3: ["western coast"],
  HasCaves: ["caves"],
  FactionBase: ["Faction base"],
  StoneTypesHere: ["Stone types"],
  TimeZone: ["Time zone"],
  MovementDifficulty: ["Movement difficulty"],
  AnimalsCanGrazeNow: ["Animals can graze now"],
  AverageDiseaseFrequency: ["Average disease frequency"],
  PerYear: ["per year"],
  Forageability: ["Forageability"],
  ConfirmRequiredWorkTypeDisabledForEveryone: [
    "None of the selected people can do the following jobs:\\n\\n{0}\\n\\nThis can make the game more difficult than usual. Are you sure you want to continue?",
  ],
  TemperatureLower: ["temperature"],
  LightLower: ["light"],
  CreateCharacters: ["Create characters"],
  FirstNameDesc: [
    "The character's first name.\\n\\nThis is only displayed in certain menus.",
  ],
  ShortIdentifierDesc: [
    "The character's short identifier.\\n\\nThis is displayed at all times. It can be the first or last name, or a completely separate nickname.",
  ],
  LastNameDesc: [
    "The character's last name.\\n\\nThis is only displayed in certain menus.",
  ],
  Randomize: ["Randomize"],
  AgeIndicator: ["age {0}"],
  PawnSummary: ["{PAWN_race}, age {PAWN_ageFull}"],
  PawnSummaryWithGender: ["{PAWN_gender} {PAWN_race}, age {PAWN_ageFull}"],
  Backstory: ["Backstory"],
  IncapableOf: ["Incapable of"],
  Abilities: ["Abilities"],
  IncapableOfTooltipHediff: ["Caused by"],
  IncapableOfTooltipWorkTypes: ["Disabled work types:"],
  IncapableOfTooltipBackstory: ["Caused by backstory"],
  IncapableOfTooltipTitle: ["Caused by title"],
  IncapableOfTooltipTrait: ["Caused by trait"],
  IncapableOfTooltipQuest: ["Caused by quest status"],
  IncapableOfTooltipRole: ["Caused by role"],
  IncapableOfTooltipGene: ["Caused by gene"],
  Traits: ["Traits"],
  PermanentMoodEffect: ["Permanent mood effect"],
  Skills: ["Skills"],
  NoneLower: ["none"],
  Adulthood: ["Adulthood"],
  Childhood: ["Childhood"],
  Male: ["male"],
  Female: ["female"],
  MaleAndFemale: ["male and female"],
  MaleAnimal: ["male"],
  FemaleAnimal: ["female"],
  Pain: ["Pain"],
  Health: ["Health"],
  Relations: ["Relations"],
  Possessions: ["Possessions"],
  TeamSkills: ["Team skills"],
  StartingPawnsSelected: ["Selected"],
  StartingPawnsLeftBehind: ["Left behind"],
  GuiltyDesc: [
    "This colonist is considered guilty. You can freely banish, execute or arrest them, and others won't be bothered.\\n\\nGuilt expires in",
  ],
  Start: ["Start"],
  Advanced: ["Advanced"],
  Next: ["Next"],
  Back: ["Back"],
  ShowMaterials: ["Change material..."],
  Gameplay: ["Gameplay"],
  ConfirmQuit: ["Really quit? You'll lose unsaved progress."],
  EveryoneNeedsValidName: ["Each person needs a valid name."],
  RequiredWorkTypeDisabledForEveryone: [
    "None of the selected people can do the following jobs",
  ],
  Quit: ["Quit"],
  Ignore: ["Ignore"],
  GeneratingWorld: ["Generating world"],
  GeneratingPlanet: ["Generating planet"],
  GeneratingMap: ["Generating map"],
  GeneratingMapForNewEncounter: ["Generating map for new encounter"],
  ClickForMoreInfo: ["Click for more info."],
  NoMoreInfoAvailable: ["No more information is available."],
  Factions: ["Factions"],
  TotalFactionsAllowed: ["max {0} basic factions allowed"],
  MaxFactionsForType: ["max {0}"],
  FactionSelectionDesc: [
    "Select the factions in the world. You can select up to {0} factions total.",
  ],
  FactionDisabledContentWarning: [
    "Disabling {0} means less quest variety and other reduced content.",
  ],
  InsectsDisabledContentWarning: [
    "Disabling {0} means less spontaneous threat variety.",
  ],
  MechanoidsDisabledContentWarning: [
    "Disabling {0} means less quest and spontaneous threat variety.",
  ],
  FactionsDisabledWarning: [
    "Without other factions, raids, trading, and quests won't occur as normal.",
  ],
  SaveButton: ["Save"],
  ClearBinding: ["Clear"],
  ResetBinding: ["Reset to default"],
  BindingButtonToolTip: [
    "Left-click to bind this key or right-click for options",
  ],
  BindingButtonToolTipController: [
    "Click to bind this key or left trigger button for options",
  ],
  PressAnyKeyOrEsc: ["Press any key or Esc to cancel..."],
  PressAnyKeyOrEscController: ["Press any button or {Key:Cancel} to cancel..."],
  KeyBindingOverwritten: ["Key binding overwritten: {0}"],
  Audiovisuals: ["Audiovisuals"],
  MasterVolume: ["Master volume"],
  GameVolume: ["Game volume"],
  MusicVolume: ["Music volume"],
  AmbientVolume: ["Ambience volume"],
  UIVolume: ["UI volume"],
  MasterVolumeTooltip: ["Affects all sounds."],
  GameVolumeTooltip: [
    "Affects all in world sounds, e.g. chopping trees, building walls.",
  ],
  MusicVolumeTooltip: ["Affects music."],
  AmbientVolumeTooltip: ["Affects all ambient sounds, e.g. wind, insects."],
  UIVolumeTooltip: [
    "Affects all interface sounds, e.g. button clicks, messages.",
  ],
  Antialiasing: ["Anti-aliasing"],
  EdgeScreenScroll: ["Screen-edge mouse scroll"],
  PauseOnLoad: ["Pause on load"],
  PauseOnUrgentLetter: ["Pause on urgent letter"],
  AutomaticPauseModeSetting: ["Pause on letter"],
  CustomCursor: ["Disable game-specific cursor"],
  HatsShownOnlyOnMap: ["Hide hats on UI"],
  UIScale: ["UI scale"],
  KeyboardConfig: ["Keyboard configuration"],
  ControllerConfig: ["Controller configuration"],
  ModifyConfig: ["Modify"],
  ChooseLanguage: ["Choose language"],
  ResetAdaptiveTutor: ["Reset learning helper"],
  AdaptiveTutorIsReset: [
    "Tutor is reset. You will be now be re-taught all lessons from scratch.",
  ],
  SteamDeckKeyboardMode: ["Keyboard mode"],
  RunInBackground: ["Run in background"],
  DevelopmentMode: ["Development mode"],
  ResetModsConfigOnCrash: ["Auto-reset mods config on crash"],
  SimulateNotOwningRoyalty: ["Simulate not owning Royalty"],
  SimulateNotOwningIdeology: ["Simulate not owning Ideology"],
  SimulateNotOwningBiotech: ["Simulate not owning Biotech"],
  LogVerbose: ["Verbose logging"],
  SaveGameDataFolder: ["Save data folder"],
  SaveGameDataLocation: ["Save data location"],
  LogFileFolder: ["Log file folder"],
  LogFileLocation: ["Log file location"],
  OpenFolder: ["Open"],
  ShowFolder: ["Show"],
  NamesYouWantToSee: ['Preferred "Name in Game" characters'],
  NamesYouWantToSeeSubText: [
    "These characters will be more likely to appear randomly during play.",
  ],
  AddName: ["Add name"],
  TypeFirstNickOrLastName: ["Type the first name, nickname, or last name."],
  MessageAlreadyPreferredName: ["This name is already on the preferred list."],
  ChangeStoryteller: ["Storyteller settings"],
  AutosaveInterval: ["Autosave interval"],
  AutosaveIntervalTooltip: [
    "The number of in game days between each auto save.",
  ],
  TemperatureMode: ["Temperature unit"],
  ShowRealtimeClock: ["Show realtime clock"],
  DisableTinyText: ["Disable tiny font"],
  MaxNumberOfPlayerSettlements: ["Maximum number of colonies: {0}"],
  MapDragSensitivity: ["Map mouse drag sensitivity"],
  PlantWindSway: ["Plant wind sway"],
  EnableTestMapSizes: ["Enable test map sizes"],
  MaxPermadeathAutosaveIntervalInfo: [
    "Maximum autosave interval in permadeath mode is {0} day.",
  ],
  ModSettings: ["Mod Settings"],
  PermanentlyDisableDevMode: ["Permanently disable development mode"],
  TextureCompression: ["Texture compression"],
  TextureCompression_Tooltip: [
    "Turning off texture compression will use much more video memory, but makes textures look slightly better in detailed areas. Only turn this off if you know you have lots of extra video memory.\\n\\nNote that using certain mods will often consume much more video memory, so you may need to turn this on if you add certain mods.",
  ],
  SmoothCameraJumps: ["Smooth camera jumps"],
  SmoothCameraJumpsDesc: [
    "When enabled, the camera will quickly pan when focusing on a new location. When disabled, the camera will jump instantly.",
  ],
  Resolution: ["Resolution"],
  Fullscreen: ["Fullscreen"],
  BorderlessFullscreen: ["Borderless fullscreen"],
  BorderlessFullscreenInstructions: [
    'To run RimWorld in borderless fullscreen mode:\\n\\n1) Open Steam\\n2) Go to the "Library" tab at the top\\n3) Find RimWorld on the list and right-click it\\n4) Choose "Properties..."\\n5) Add "-popupwindow" without quotes to "Launch options" in the "General" tab\\n6) Restart game\\n7) If done correctly, you won\'t see this window\\n\\nHint: Use Windows Key + Shift + Left/Right to move the window between your monitors.',
  ],
  SelectMod: ["Select mod..."],
  NoConfigurableMods: ["No configurable mods loaded."],
  RestoreToDefaultSettingsLabel: ["Restore all settings to default"],
  RestoreToDefaultSettings: ["Restore defaults"],
  ResetAndRestart: [
    "All settings have been reset. The game will now restart automatically.",
  ],
  ResetAndRestartConfirmationDialog: [
    "All settings will be reset to the default and the game will be restarted. Unsaved progress will be lost,\\n\\nContinue?",
  ],
  ChangedTextureCompressionRestart: [
    "Changing texture compression settings requires a restart. Unsaved progress will be lost.\\n\\nContinue?",
  ],
  SetBackgroundImage: ["Menu background"],
  MessageSiegersAssaulting: ["Sieging {0} from {1} are assaulting the colony."],
  MessageRaidersBeginningAssault: ["{0} from {1} are beginning their assault."],
  MessageRaidersDetectedEarlyAssault: [
    "{0} from {1} have detected you and begun their assault early.",
  ],
  MessageRaidersKidnapping: [
    "{0} from {1} have decided to kidnap who they can and leave.",
  ],
  MessageRaidersStealing: [
    "{0} from {1} have decided to steal what they can and leave.",
  ],
  MessageCaravanDetectedRaidArrived: [
    "{0} from {1} have arrived and are attacking! More are on the way and will arrive in {2}.",
  ],
  MessageRaidersLeaving: ["{0} from {1} are leaving."],
  MessageRaidersGivenUpLeaving: ["{0} from {1} have given up and are leaving."],
  MessageRaidersSatisfiedLeaving: [
    "{0} from {1} are satisfied with the damage done and are leaving.",
  ],
  MessageFightersFleeing: ["{0} from {1} are fleeing."],
  MessageFriendlyFightersLeaving: ["Friendly {0} from {1} are leaving."],
  MessageVisitorsTakingWounded: ["{0} from {1} are taking a wounded guest."],
  MessageVisitorsTrappedLeaving: [
    "{0} from {1} have been trapped and are digging out to escape.",
  ],
  MessageVisitorsDangerousTemperature: [
    "{0} from {1} are leaving the map because of dangerous temperature.",
  ],
  MessageWornApparelDeterioratedAway: [
    "{0} worn by {1_nameFull} deteriorated away to nothing.",
  ],
  MessageDeterioratedAway: ["{0} has deteriorated away in storage."],
  MessageSeasonBegun: ["{0} has begun."],
  MessageShipHasLeftCommsRange: ["{0} has left comms range."],
  MessageNeedBeaconToTradeWithShip: [
    "You need a powered orbital trade beacon to trade with a ship.",
  ],
  MessageNeedRoyalTitleToCallWithShip: [
    "Caller must have the title of {0_label} or higher.",
  ],
  MessageConditionCauserDespawned: ["{0} has been destroyed."],
  MessageBillComplete: ["Bill complete: {0}."],
  MessageFullyHealed: ["{1_label} is fully healed."],
  MessagePrisonerIsEscaping: ["Prisoner {1_labelShort} is escaping."],
  MessageOutOfNearbyShellsFor: [
    "{PAWN_labelShort} found no nearby unreserved shells for {GUN_label}.",
  ],
  MessageOutOfNearbyFuelFor: [
    "{PAWN_labelShort} found no nearby unreserved {FUEL} for {GUN_label}.",
  ],
  MessageAnimalsGoPsychoHunted: [
    "Warning: {ANIMAL_kindBasePlural} have a {1} base chance to attack when harmed. Chance depends on range and hunter stealth stat.",
  ],
  MessageAnimalManhuntsOnTameFailed: [
    "Warning: {ANIMAL_kindBasePlural} may attack upon failed taming attempts ({1} chance).",
  ],
  MessageInsectTameDesignated: [
    "Only those with the insect sympathy trait can tame {INSECT_indefinite}.",
  ],
  MessageInsectsHostileOnTaming: [
    "Warning: The {PAWN_labelShort} is hostile and will attack while your colonist tries to tame it.",
  ],
  LetterLabelMessageRecruitSuccess: ["New recruit"],
  MessageRecruitSuccess: [
    "{RECRUITER_nameFull} successfully recruited {RECRUITEE_nameFull}.",
  ],
  MessageTameSuccess: ["{RECRUITER_labelShort} successfully tamed {1}."],
  MessageTameAndNameSuccess: [
    "{RECRUITER_labelShort} successfully tamed {1}. It is now called {RECRUITEE_nameFull}.",
  ],
  MessageTameNoSuitablePens: [
    "There is no suitable animal pen for {ANIMAL_labelShort}. It will eventually roam away.",
  ],
  MessageRecruitJoinOfferAccepted: ["{RECRUITEE} has joined your colony."],
  MessageColonyCannotAfford: ["The colony cannot afford this deal."],
  MessageColonyNotEnoughSilver: [
    "You do not have enough silver ready to trade.",
  ],
  MessageCriticalAlert: ["Critical alert: {0}"],
  MessageMustDesignateHarvestable: [
    "Must designate harvestable sufficiently-grown plants.",
  ],
  MessageMustDesignateHarvestableWood: [
    "Must designate wood-yielding, sufficiently-grown plants.",
  ],
  MessageMustDesignatePlants: ["Must designate plants."],
  MessageMustDesignateHaulable: [
    "Must designate haulable items. Some items are always haulable and can't be designated.",
  ],
  MessageMustDesignateMineable: ["Must designate impassable mineable rocks."],
  MessageMustDesignateHuntable: ["Must designate huntable animals."],
  MessageMustDesignateTameable: ["Must designate tameable animals."],
  MessageMustDesignateClaimable: [
    "Must designate abandoned claimable structures or items.",
  ],
  MessageMustDesignatePaintableBuildings: [
    "Must designate paintable buildings not already painted {0_label}.",
  ],
  MessageMustDesignatePaintableFloors: [
    "Must designate paintable floors which are not already painted {0_label}.",
  ],
  MessageMustDesignatePainted: ["Must designate painted buildings or floors."],
  MessageMustDesignateDeconstructibleMechCluster: [
    "You must defeat a mech cluster before you can deconstruct it.",
  ],
  MessageMustDesignateSmoothableSurface: [
    "Must designate rough stone surfaces.",
  ],
  MessageNothingCanRemoveThickRoofs: ["Nothing can remove thick roofs."],
  MessageAlreadyInStorage: [
    "This is already in storage and will be moved to high-priority storage as necessary.",
  ],
  MessageMustDesignateStrippable: [
    "Must designate corpse or downed character with strippable apparel.",
  ],
  MessageMustDesignateSlaughterable: [
    "Must designate tame animal that belongs to the colony.",
  ],
  MessageMustDesignateOpenable: ["Must designate full graves or containers."],
  MessageMustDesignateForbiddable: ["Must designate unforbidden items."],
  MessageMustDesignateUnforbiddable: ["Must designate forbidden items."],
  MessageCannotClaimWhenThreatsAreNear: [
    "Cannot claim {CLAIMABLE_labelShort} while there are combat-capable {THREAT_factionPawnsPlural} nearby.",
  ],
  MessageCannotAdoptWhileThreatsAreNear: [
    "Cannot adopt {CLAIMABLE_labelShort} while there are combat-capable {THREAT_factionPawnsPlural} nearby.",
  ],
  MessageRefusedArrest: ["{1_labelShort} has refused to be arrested!"],
  MessageNoMedicalBeds: ["There are no medical beds available."],
  MessageNoAnimalBeds: ["There are no animal beds available."],
  MessageWarningNoMedicineForRestriction: [
    "Warning: {PAWN_nameDef}'s medicine restriction ({RESTRICTIONLABEL}) prevents doing this operation. Consider changing {PAWN_possessive} medicine restriction.",
  ],
  PawnDiedBecauseOf: ["{PAWN_labelShort} has died. Cause: {1}."],
  PawnDied: ["{1_labelShort} has died."],
  MessageNoLongerDowned: ["{1_label} is no longer incapable of walking."],
  MessageInvoluntarySleep: [
    "{1_labelShort} has collapsed due to extreme exhaustion.",
  ],
  MessageMedicalOperationWillAngerFaction: ["This operation will anger {0}."],
  MessageAnimalIsPregnant: ["{PAWN_nameDef} is pregnant!"],
  MessageMiscarriedStarvation: ["{0} has miscarried due to starvation."],
  MessageMiscarriedPoorHealth: ["{0} has miscarried due to poor health."],
  MessageGaveBirth: ["{0} has given birth."],
  MessagePsylinkNoSensitivity: [
    "{PAWN_labelShort} won't be able to use the psylink while {PAWN_pronoun} has zero psychic sensitivity.",
  ],
  MessageLostImplantLevelFromHediff: [
    "{PAWN_labelShort} has lost a {1} implant level due to {2}.",
  ],
  MessageReceivedBrainDamageFromHediff: [
    "{PAWN_labelShort} has suffered {1} points of brain damage due to {2}.",
  ],
  MessageWentOverPsychicEntropyLimit: [
    "{PAWN_labelShort} has exceeded the normal limit of neural heat.",
  ],
  MessageNoHandlerSkilledEnough: [
    "No handler can tame {ANIMAL_kindBase} (requires level {1} in {2}, best handler {HANDLER_labelShort} has {4}).",
  ],
  MessageEatenByPredator: ["{EATEN_labelShort} has been eaten by {PREDATOR}."],
  MessageAttackedByPredator: [
    "{PREY_labelShort} is being attacked by {PREDATOR}!",
  ],
  MessageRoamerLeaving: [
    "{PAWN_labelShort} has started to roam away! {PAWN_pronoun} will leave the map unless an animal handler ropes {PAWN_objective} back to a pen.",
  ],
  MessageHiveReproduced: ["A bug hive has reproduced itself."],
  MessageTraderCaravanLeaving: ["The trade caravan from {0} is leaving."],
  MessageCantSelectDeadPawn: ["{1_labelShort} is dead."],
  MessageCantSelectOffMapPawn: ["{1_labelShort} is off the map."],
  MessageSocialFight: [
    "{PAWN1_labelShort} started a social fight with {PAWN2_labelShort}.",
  ],
  MessageNewMarriageCeremony: [
    "Colonists are gathering to celebrate {PAWN1_labelShort} and {PAWN2_labelShort}'s marriage.",
  ],
  MessageMarriageCeremonyStarts: [
    "{PAWN1_labelShort} and {PAWN2_labelShort} are beginning their marriage ceremony!",
  ],
  MessageMarriageCeremonyCalledOff: [
    "The marriage ceremony for {PAWN1_labelShort} and {PAWN2_labelShort} has been called off.",
  ],
  MessageNewlyMarried: [
    "{PAWN1_labelShort} and {PAWN2_labelShort} have married. Colonists are now celebrating the occasion.",
  ],
  MessageMarriageCeremonyAfterPartyFinished: [
    "The marriage ceremony for {PAWN1_labelShort} and {PAWN2_labelShort} has finished.",
  ],
  MessageNewBondRelation: [
    "{HUMAN_labelShort} and {ANIMAL_labelShort} have formed a bond.",
  ],
  MessageNewBondRelationNewName: [
    "{HUMAN_labelShort} and {1} have formed a bond. {HUMAN_labelShort} has named {ANIMAL_objective} {ANIMAL_nameFull}.",
  ],
  MessageBondedAnimalMentalBreak: [
    "{ANIMAL} has had a mental break because of {HUMAN_labelShort}'s death.",
  ],
  MessageNamedBondedAnimalMentalBreak: [
    "{ANIMAL_kindIndef} named {ANIMAL_label} has had a mental break because of {HUMAN_labelShort}'s death.",
  ],
  MessageBondedAnimalsMentalBreak: [
    "{0} animals have a mental break because of {HUMAN_labelShort}'s death.",
  ],
  MessageSuccessfullyRemovedHediff: [
    "{SURGEON_labelShort} has successfully removed {PATIENT_labelShort}'s {HEDIFF}.",
  ],
  MessageShipChunkDrop: [
    "Chunks of a spacecraft have impacted nearby. You can deconstruct them to yield resources.",
  ],
  MessageCannotSellItemsReason: ["Some items cannot be traded because of: "],
  MessageConstructionFailed: [
    "{WORKER_labelShort} failed while constructing a {0}. Some resources have been wasted.",
  ],
  MessageScreenshotSavedAs: ["Screenshot saved as: {0}"],
  MessageNoLongerSocialFighting: [
    "{PAWN1_labelShort} and {PAWN2_labelShort} are no longer social fighting.",
  ],
  MessageNoLongerBingingOnDrug: ["{2_labelShort} is no longer binging on {1}."],
  MessageNoLongerOnTargetedInsultingSpree: [
    "{PAWN_labelShort} is no longer on an insulting spree against {TARGET_label}.",
  ],
  MessageRottedAwayInStorage: ["{1_label} has rotted away in storage."],
  MessageFoodPoisoning: [
    "{PAWN_labelShort} has gotten food poisoning from: {FOOD_labelShort}. Cause: {2}.",
  ],
  MessagePawnLostWhileFormingCaravan: [
    "{0} has been removed from the caravan.",
  ],
  MessagePawnLostWhileFormingCaravan_AllLost: [
    "The caravan formation process has been terminated.",
  ],
  MessageCaravanFormationPaused: [
    "The caravan formation process will continue when everyone recovers from their mental break.",
  ],
  MessageCaravanFormationUnpaused: [
    "Your colonists will now continue forming a caravan.",
  ],
  MessageCaravanMemberHasExtremeMentalBreak: [
    "One of the caravan members has had a mental break.",
  ],
  MessageMaxPlanetCoveragePerformanceWarning: [
    "Warning: It can take a very long time to generate an entire planet.",
  ],
  MessagePlantDiedOfCold: ["{0} has died because of cold."],
  MessagePlantDiedOfRot_LeftUnharvested: [
    "{0} has died from rotting due to being left unharvested.",
  ],
  MessagePlantDiedOfRot_ExposedToLight: [
    "{0} has died due to being exposed to light.",
  ],
  MessagePlantDiedOfRot: ["{0} has died from rotting."],
  MessagePlantDiedOfPoison: ["{0} has died because of poison."],
  MessagePlantDiedOfBlight: ["{1_label} has died because of blight."],
  MessagePawnBeingBurned: [
    "{1_labelShort} is being burned by superheated air!",
  ],
  MessageAccidentalOverdose: [
    "{INGESTER} has accidentally overdosed while consuming {DRUG_labelShort}!",
  ],
  MessageCaravanArrivedAtDestination: ["{0} has arrived at its destination."],
  MessagePawnLeftMapAndCreatedCaravan: [
    "{1_labelShort} has left the area and formed a caravan.",
  ],
  MessagePawnLeftMapAndCreatedCaravan_AnimalsWantToJoin: [
    "Your animals are moving to join it.",
  ],
  MessageSettledInExistingMap: ["You have successfully settled in a new area."],
  MessagePermanentWoundHealed: [
    "{PAWN_labelShort}'s {2} has healed. Cause: {0}",
  ],
  MessageRescueeDidntJoin: [
    "[PAWN_nameDef] has recovered and decided to leave.",
  ],
  MessageTransporterUnreachable: ["Some transport pods are unreachable."],
  MessageTransportersNotAdjacent: [
    "All pod launchers connected to the selected transport pods must be adjacent.",
  ],
  MessageTransportersLoadCanceled_TransporterDestroyed: [
    "The loading process has been canceled because one of the transport pods has been destroyed.",
  ],
  MessageTransporterSingleLoadCanceled_TransporterDestroyed: [
    "The loading process has been canceled because the shuttle has been destroyed.",
  ],
  MessageTransportersLoadCanceled_FuelingPortGiverDeSpawned: [
    "The loading process has been canceled because one of the pod launchers has been destroyed.",
  ],
  MessageTransportersLoadingProcessStarted: [
    "Assigned items and people will now be loaded into the transport pods.",
  ],
  MessageTransporterSingleLoadingProcessStarted: [
    "Assigned items and people will now be loaded into the shuttle.",
  ],
  MessageTransportPodsArrived: ["Your transport pods have arrived."],
  MessageTransportPodsArrivedAndLost: [
    "Your transport pods have arrived, but since there were no colonists inside, the contents are lost.",
  ],
  MessageTransportPodsArrivedAndAddedToCaravan: [
    "Your transport pods have arrived. The contents have been added to {0}.",
  ],
  MessageFinishedLoadingTransporters: [
    "Transport pod loading complete. Launch when ready.",
  ],
  MessageFinishedLoadingTransporterSingle: [
    "Shuttle is loaded with required cargo and can launch when ready.",
  ],
  MessageCantLoadMoreIntoTransporters: [
    "Your {1} can't finish loading the transport pods because some items or people became unavailable ({2_labelShort}).",
  ],
  MessageTransportPodsDestinationIsInvalid: [
    "Selected destination is invalid.",
  ],
  MessageTransportPodsDestinationIsTooFar: [
    "Each pod launcher would need at least {0}x chemfuel to send transport pods that far.",
  ],
  MessageReformedCaravan: ["The caravan has been reformed."],
  MessageCantBanishLastColonist: ["You can't banish the last colonist."],
  MessageCantEquipCustom: ["Cannot equip: {0}."],
  MessageCantEquipIncapableOfViolence: [
    "Cannot equip: {1_labelShort} is incapable of violence.",
  ],
  MessageCantEquipIncapableOfShooting: [
    "Cannot equip: {1_labelShort} is incapable of shooting.",
  ],
  MessageCantEquipIncapableOfManipulation: ["Cannot equip: Incapable."],
  MessageCantWearApparelMissingBodyParts: [
    "Cannot wear: {1_labelShort} is missing required body parts.",
  ],
  MessageCantUnequipLockedApparel: ["This person refuses to remove this."],
  MessageWouldReplaceLockedApparel: [
    "Cannot wear: This would replace apparel {1_labelShort} refues to remove.",
  ],
  MessageSlaughteringBondedAnimal: [
    "Because they are bonded, slaughtering {DESIGNATED_labelShort} will make {BONDED_labelShort} unhappy.",
  ],
  MessageReleaseBondedAnimal: [
    "Because they are bonded, releasing {DESIGNATED_labelShort} will make {BONDED_labelShort} unhappy.",
  ],
  MessageCaravanRanOutOfFood: ["{0} has run out of food."],
  MessageCaravanDeathCorpseAddedToInventory: [
    "{PAWN_definite}'s corpse has been picked up by the caravan. It is heavy and may immobilize the caravan, but can be left behind in the caravan items tab.",
  ],
  MessageSelectOwnBaseToFormCaravan: [
    "To form a caravan, select your own colony or a site where you have people.",
  ],
  MessageScreenResTooSmallForUIScale: [
    "At this resolution and UI scale, the game interface would not fit on-screen. Please reduce UI scale or increase resolution.",
  ],
  MessageYouHaveToReformCaravanNow: [
    "You have to reform the caravan now. Everyone left behind will be abandoned.",
  ],
  MessageDefendersAttacking: ["{0} from {1} are attacking your {2}."],
  MessageMechanoidsAssembled: [
    "Mechanoids have been assembled and will defend their cluster.",
  ],
  MessageMechanoidsLeftToAssemble: ["Remaining mechanoids to assemble"],
  MessageMechanoidsReinforcementsDrop: [
    "Mech drop beacon has summoned reinforcements in drop pods nearby.",
  ],
  MessageSelfTendUnsatisfied: [
    "To self-tend, {1_labelShort} must also be assigned to Doctor work.",
  ],
  MessageCannotSelfTendEver: [
    "{1_labelShort} is incapable of doing Doctor work, and so cannot ever self-tend.",
  ],
  MessageCantAddWaypointBecauseImpassable: ["This tile is impassable."],
  MessageCantAddWaypointBecauseUnreachable: [
    "It's not possible to reach this tile from the last waypoint.",
  ],
  MessageCantAddWaypointBecauseLimit: [
    "You can't add more than {0} waypoints.",
  ],
  MessageCantRemoveWaypointBecauseFirst: ["You can't remove this waypoint."],
  MessageCantDoExecutionBecauseNoWardenCapableOfViolence: [
    "None of your wardens is capable of violence. The execution won't be performed.",
  ],
  MessageCanReformCaravanNowNoMoreEnemies: [
    "Area is now safe. You can reform the caravan on the world map.",
  ],
  MessageCanReformCaravanNowNoMoreEnemiesButUnexploredAreas: [
    "Area is now safe, but some unexplored rooms remain. You can explore further or reform the caravan on the world map.",
  ],
  MessageCantBanishDownedPawn: [
    "Cannot banish {1_labelShort} since {1_pronoun} cannot walk.",
  ],
  MessageSleepingPawnsWokenUp: ["{0} have woken up."],
  MessageMechClusterDefeated: ["Mech cluster buildings have been defeated."],
  MessageCompSpawnerSpawnedItem: ["Item produced: {0}."],
  MessageHediffCuredByItem: ["Health condition healed: {0}."],
  MessageBodyPartCuredByItem: ["Body part restored: {0}."],
  MessageResearchProjectFinishedByItem: ["Technology given: {0}."],
  MessagePawnResurrected: ["{0} has been brought back to life!"],
  MessageFailedToRescueRelative: [
    "You have failed to rescue {PAWN_labelShort}. This will make {RELATIVE_labelShort} sad.",
  ],
  MessageRescuedRelative: [
    "You have rescued {PAWN_labelShort}. This will make {RELATIVE_labelShort} happy.",
  ],
  MessageTornadoLeftMap: ["The tornado has left the map."],
  MessageTornadoDissipated: ["The tornado has dissipated."],
  MessagePeaceTalksNoDiplomat: ["No conscious, capable diplomat."],
  MessageWarningCavePlantsExposedToLight: [
    "Warning: {0} cannot live when exposed to light.",
  ],
  MessageTargetedTantrumChangedTarget: [
    "{PAWN_labelShort} couldn't reach {OLDTARGET_label} so {PAWN_pronoun} decided to redirect {PAWN_possessive} anger at {TARGET_label}.",
  ],
  MessageTargetedInsultingSpreeChangedTarget: [
    "{PAWN_labelShort} couldn't reach {OLDTARGET_label} so {PAWN_pronoun} decided to redirect {PAWN_possessive} anger at {TARGET_label}.",
  ],
  MessageMurderousRageChangedTarget: [
    "{PAWN_labelShort} has decided to redirect {PAWN_possessive} anger at {TARGET_label}.",
  ],
  MessagePlantIncompatibleWithRoof: ["{0} cannot grow underneath a roof."],
  MessageRoofIncompatibleWithPlant: ["Cannot build a roof over {0}."],
  MessagePlayerTriedToLeaveMapViaExitGrid_CanReform: [
    "To leave the area, use the 'reform caravan' button in the world view.",
  ],
  MessagePlayerTriedToLeaveMapViaExitGrid_CantReform: [
    "You can't leave the map now.",
  ],
  MessageGoodwillChanged: ["Relations with {0} have changed from {1} to {2}."],
  MessageGoodwillChangedWithReason: [
    "Relations with {0} have changed from {1} to {2} ({3}).",
  ],
  GoodwillChangedReason_AttackedPawn: ["attacked {1_labelShort}"],
  GoodwillChangedReason_UsedItem: [
    "used {ITEM_labelShort} on {TARGET_labelShort}",
  ],
  GoodwillChangedReason_UsedAbility: ["used {0} on {1}"],
  GoodwillChangedReason_RemovedBodyPart: ["harvested {0}"],
  GoodwillChangedReason_RemovedImplant: ["removed {0}"],
  GoodwillChangedReason_DowngradedImplant: ["downgraded {0}"],
  GoodwillChangedReason_NeedlesslyInstalledWorseBodyPart: [
    "needlessly installed {0}",
  ],
  GoodwillChangedReason_CapturedPawn: ["captured {1_labelShort}"],
  GoodwillChangedReason_PawnCrushed: ["{1_labelShort} crushed"],
  GoodwillChangedReason_PawnDied: ["{1_labelShort} died"],
  GoodwillChangedReason_PawnStripped: ["{0_labelShort} stripped"],
  GoodwillChangedReason_Traded: ["traded"],
  GoodwillChangedReason_AttackedCaravan: ["attacked a caravan"],
  GoodwillChangedReason_ExitedMapHealthy: [
    "{1_labelShort} exited the map healthy",
  ],
  GoodwillChangedReason_Tended: ["tended to {1_labelShort}"],
  GoodwillChangedReason_ReceivedGift: ["received a gift"],
  GoodwillChangedReason_FulfilledTradeRequest: ["fulfilled a trade offer"],
  GoodwillChangedReason_FinishedQuest: ["finished a quest"],
  GoodwillChangedReason_UsedForbiddenThing: [
    "{PAWN_labelShort} used {CULPRIT}",
  ],
  GoodwillChangedReason_SoldPawn: ["sold {0_labelShort}"],
  GoodwillChangedReason_EuthanizedPawn: ["euthanized {PAWN_labelShort}"],
  GoodwillChangedReason_RequestedMilitaryAid: ["requested military aid"],
  GoodwillChangedReason_RequestedTrader: ["requested trader caravan"],
  GoodwillChangedReason_CausedNeuroquakeEcho: ["caused neuroquake echo"],
  GoodwillChangedReason_CausedBerserk: ["caused berserk on {PAWN_labelShort}"],
  GoodwillChangeReason_AttackedFaction: ["attacked {0_name}"],
  GoodwillChangeReason_ShuttleDestroyed: ["shuttle destroyed"],
  GoodwillChangeReason_CiviliansLost: ["civilians lost"],
  GoodwillChangeReason_CommanderLost: ["commander lost"],
  MessageGiftGivenButNotAppreciated: [
    "{0} accept your gift but they don't appreciate it.",
  ],
  MessageCantGiveGiftBecauseCantCarryEncumbered: [
    "The caravan is already encumbered and can't carry anything else.",
  ],
  MessageCantGiveGiftBecauseCantCarry: [
    "The caravan can't carry that much. The gifts weigh {0} but the caravan can only carry {1} more.",
  ],
  MessageFormedCaravan: [
    "{0} has formed and is now traveling on the world map.",
  ],
  MessageFormedCaravan_Orders: ["Orders"],
  MessageBillValidationStoreZoneDeleted: [
    '{1}\'s "{0}" can no longer deliver to deleted stockpile {2}.',
  ],
  MessageBillValidationStoreZoneUnavailable: [
    '{1}\'s "{0}" can no longer deliver to unavailable stockpile {2}.',
  ],
  MessageBillValidationPawnUnavailable: [
    '{0} can no longer work on "{1}" at {2}. The restriction has been removed.',
  ],
  MessageBillValidationIncludeZoneDeleted: [
    '{1}\'s "{0}" can no longer count items in deleted stockpile {2}.',
  ],
  MessageBillValidationIncludeZoneUnavailable: [
    '{1}\'s "{0}" can no longer count items in unavailable stockpile {2}.',
  ],
  MessageBillValidationStoreZoneInsufficient: [
    '{1}\'s "{0}" can no longer deliver all products to stockpile {2}.',
  ],
  MessageAnimalReturnedWild: [
    "Because of a lack of taming maintenance, {1_labelShort} has returned to the wild.",
  ],
  MessageAnimalReturnedWildReleased: [
    "{1_labelShort} has been returned to the wild.",
  ],
  MessageAnimalLostSkill: [
    "Due to a lack of maintenance training, {ANIMAL_labelShort} has lost a skill: {1}",
  ],
  MessageTranslationReportSaved: ["Translation report written to {0}"],
  MessageCaravanArrivalActionNoLongerValid: [
    "{0} couldn't reach its destination.",
  ],
  MessageEnterCooldownBlocksEntering: ["Too dangerous to re-enter for {0}."],
  MessagePermitCooldownFinished: ['{0_labelShort} can now freely use "{1}".'],
  MessagePredatorHuntingPlayerAnimal: [
    "{PREDATOR} is hunting {PREY_definite} ({PREY_kindBase}) for food!",
  ],
  MessagePrisonerResistanceBroken: [
    "Prisoner {PRISONER_labelShort}'s resistance has been broken by {WARDEN_labelShort}.",
  ],
  MessagePrisonerResistanceBroken_RecruitAttempsWillBegin: [
    "Recruitment attempts will begin.",
  ],
  MessageModWithPackageIdAlreadyEnabled: [
    "Another mod with the package ID {0} is already active. Deactivate {1} before trying to activate this.",
  ],
  MessageDisableModsBeforeCleaningTranslationFiles: [
    "Disable all mods before using this tool.",
  ],
  MessageUnpackBeforeCleaningTranslationFiles: [
    "Unpack and then delete all compressed translation files for this language before using this tool.",
  ],
  MessageTranslationFilesCleanupDone: ["Done. Affected folders: {0}"],
  MessageCantCleanupTranslationFilesBeucaseOfXmlError: [
    "One of the translation files ({0}) couldn't be loaded. All XML parsing errors must be resolved first.",
  ],
  MessageCapturingWillAngerFaction: [
    "Warning: Capturing {PAWN_nameDef} will anger {PAWN_possessive} faction {PAWN_factionName}.",
  ],
  MessageStrippingWillAngerFaction: [
    "Warning: Stripping {PAWN_nameDef} will anger {PAWN_factionName}.",
  ],
  MessageCantShootInMelee: ["Cannot shoot in melee."],
  MessageNoColonistCanAcceptQuest: [
    "None of your {0} can accept this quest now.",
  ],
  MessageCannotAcceptQuest: ["Cannot accept this quest."],
  MessageQuestAccepted: ["{0_definite} has accepted a quest: {1}"],
  MessagePawnLeaving: ["{0} is leaving."],
  MessagePawnsLeaving: ["{0} are leaving."],
  MessageMonumentDestroyedBecauseOfDisallowedBuilding: [
    "The monument has been destroyed because you've built a disallowed building inside.",
  ],
  MessageNoResearchBenchForTechprint: [
    "Cannot apply: No reachable, un-reserved research bench available.",
  ],
  NoValidDestinationFound: ["No valid destination found for {0}"],
  MessageMinifiedTreeDied: ["An extracted tree just died."],
  MessageResearchMenuWithoutBench: [
    "Warning: Research will not begin until you build a research bench.",
  ],
  MessageActivatorProximityTriggered: [
    "{0_indefinite} has triggered a proximity activator.",
  ],
  MessageCannotSelectInvisibleStat: ["{0_label} is currently hidden."],
  MessagePrisonerCannotEquipWeapon: ["{PAWN_nameDef} is a prisoner"],
  MessageIdeoOpposedWorkTypeSelected: [
    "Warning: {0_nameDef}'s beliefs oppose {1} work. {0_pronoun} may become unhappy.",
  ],
  MessageBedLostAssignment: ["{0} is no longer assigned to {1_nameDef}."],
  MessageBedDestroyed: ["{0} assigned to {1_nameDef} was destroyed."],
  Spectate: ["spectate"],
  AssignToRole: ["Assign to {0}"],
  RitualBegun: ["{0} has begun."],
  MaxPawnsPerRole: ["The maximum number of {0}s is {1}."],
  RoleIsLocked: ["Role of {0} is locked."],
  MessageRitualNeedsAtLeastOnePerson: ["You need at least one participant."],
  MessageRitualNeedsAtLeastOneSpectator: ["You need at least one spectator."],
  MessageRitualNeedsAtLeastOneRolePawn: ["You need a {0}."],
  MessageRitualNeedsAtLeastNumRolePawn: ["You need at least {1} {0}."],
  MessageRitualPawnDowned: ["{0_labelShort} is downed."],
  MessageRitualPawnPrisonerNotSecured: [
    "{0_labelShort} is currently escaping.",
  ],
  MessageRitualPawnSlaveNotSecured: ["{0_labelShort} is currently rebelling."],
  MessageRitualPawnReleased: ["{0_labelShort} is being released."],
  MessageRitualPawnInjured: ["{0_labelShort} is injured."],
  MessageRitualRoleRequired: ["{0_labelShort} must hold one of these roles"],
  MessageRitualRoleMustBePrisoner: ["{0} must be a prisoner."],
  MessageRitualRoleMustBeAnimal: ["{0} must be an animal."],
  MessageRitualRoleMustBeHumanlike: ["{0} must be a human."],
  MessageRitualRoleCannotBeABaby: ["{0} cannot be a baby."],
  MessageRitualNoRolesAvailable: ["No roles available for {0_labelShort}."],
  MessageRitualNotOfPlayerIdeo: [
    "{0_labelShort} is not a member of any colony ideoligion.",
  ],
  MessageRitualRoleMustHaveEyes: ["{0} must have eyes"],
  MessageRitualRoleMustRequireScarification: [
    "{0_labelShort} does not require further scarification.",
  ],
  MessageRitualRoleMustRequireBlinding: [
    "{0_labelShort} does not require blinding.",
  ],
  MessageRitualRoleMustBePrisonerOrSlave: ["{0} must be a prisoner or slave."],
  MessageRitualRoleMustBeCapableOfFighting: [
    "{0_labelShort} must be capable of fighting.",
  ],
  MessageRitualRoleCannotReplaceRequiredPawn: [
    "this role cannot be played by someone else.",
  ],
  MessageRitualRolePawnRecentlyTornConnection: [
    "{0_labelShort} cannot connect to a Gauranlen tree because {0_possessive} connection was recently torn.",
  ],
  MessageRitualRolePawnHasSameIdeo: [
    "{0_labelShort} has the same ideoligion as the converter.",
  ],
  MessageRitualRoleMustBeCapableOfWardening: [
    "{0_labelShort} must be capable of wardening.",
  ],
  MessageRitualRoleMustBeCapableOfGeneric: ["{0} must be capable of {1}."],
  MessageRitualRoleMustNotBePrisonerToSpectate: ["prisoners cannot {0}."],
  MessageRitualRoleMustHaveIdeoToSpectate: ["only {0} can {1}."],
  MessageRitualRoleMustHaveIdeoToDoRole: ["only {0} can fill the role of {1}."],
  MessageRitualRoleMustBeColonist: ["must be colonist for the {0} role."],
  MessageRitualWontAttendExtremeTemperature: [
    "{0_labelShort} won't attend due to extreme temperature in the ritual area.",
  ],
  MessageRitualRoleMustBeFreeColonist: [
    "must be colonist and not enslaved for the {0} role.",
  ],
  MessageRitualRoleMustHaveLargerBodySize: [
    "{0} must have an animal with min body size of {1}.",
  ],
  MessageRitualPawnMentalState: ["{0_labelShort} is in a mental state."],
  MessageRitualPawnIsAlreadyBelievingIdeo: ["{0_labelShort} is already {1}."],
  MessageRitualCannotAssignAnyRoleFromSpectating: [
    "{0_labelShort} cannot take any other role than spectator.",
  ],
  MessageRitualRoleMustNotBeImprisonedWildMan: [
    "{0} cannot be an imprisoned wild man/woman.",
  ],
  MessageRitualRoleMustNotBeImprisoned: ["{0} must be free."],
  MessageRitualRoleCannotBeChild: ["{0} cannot be a child."],
  MessageRitualRoleCannotBeBaby: ["{0} cannot be a baby."],
  MessagePlayerMustSelectTile: ["You must select a site to continue."],
  CannotPlantThing: ["Cannot plant {0_labelShort}"],
  MessageWarningNotEnoughFertility: ["Need more fertile terrain."],
  BlockedBy: ["blocked by {0_label}."],
  AdjacentSowBlocker: ["Cannot be planted next to {0_label}."],
  TooCloseToOtherPlant: ["Too close to {0_label}."],
  TooCloseToOtherSeedPlantCell: ["Too close to {0}'s planting location."],
  MessageWarningCutImportantPlant: [
    "Warning: {0} has been marked for cutting.",
  ],
  MessageIncapableOfManipulation: [
    "{0_labelShort} is incapable of manipulation.",
  ],
  MessageActivationCanceled: ["{0_labelShort} activation canceled"],
  NothingAvailableInCategory: ["Nothing is currently buildable in category"],
  SettingsLinkedFor: ["Storage settings linked for {0} buildings."],
  SettingsUnlinkedFor: ["Storage settings unlinked for {0} buildings."],
  StorageSettingsCopiedToClipboard: ["Storage settings copied to clipboard."],
  StorageSettingsPastedFromClipboard: [
    "Storage settings pasted from clipboard.",
  ],
  Autosaving: ["Autosaving"],
  GameStartDialog: [
    "The three of you awake in your cryptosleep sarcophagi to the sound of sirens and ripping metal. You barely get to the escape pods before the ship is torn apart.\\n\\nSome time later, you land on this unknown rimworld.\\n\\nAs pieces of the shredded starship fall around you, you start making plans to survive.",
  ],
  Colony: ["Colony"],
  ChangeLanguageFromMainMenu: [
    "You can only change language from the options screen on the main menu.",
  ],
  AndLower: ["and"],
  DisabledLower: ["disabled"],
  VersionIndicator: ["Version {0}"],
  GameVersionIndicator: ["Game version"],
  DevelopmentBuildLower: ["development build"],
  CompiledOn: ["Compiled {0}"],
  LoggedIntoSteamAs: ["Logged into Steam as {0}"],
  ToCommaListAnd: ["{0} and {1}"],
  ToCommaListOr: ["{0} or {1}"],
  Yes: ["Yes"],
  No: ["No"],
  NoSubject: ["No {0}"],
  New: ["new"],
  Gender: ["Gender"],
  Sex: ["Sex"],
  expired: ["expired"],
  intervalDays: ["interval (days)"],
  repeat: ["repeat"],
  default: ["default"],
  distance: ["distance"],
  YesUppercase: ["YES"],
  NoUppercase: ["NO"],
  kg: ["kg"],
  Day: ["Day"],
  day: ["day"],
  Default: ["Default"],
  Average: ["Average"],
  Cause: ["Cause"],
  Etc: ["etc"],
  MoneyFormat: ["${0}"],
  Factors: ["Factors"],
  Uses: ["Uses"],
  Translation: ["Translation"],
  MeatLabel: ["{0} meat"],
  MeatDesc: ["Raw butchered flesh. Can be cooked into meals, or eaten raw."],
  MeatInsectDesc: [
    "Raw butchered flesh. If necessary, can be cooked into meals, or even eaten raw. Extremely unappetizing.",
  ],
  MeatHumanDesc: [
    "Raw butchered flesh. Can be cooked into meals or eaten raw, although most humans dislike the idea.",
  ],
  TechprintLabel: ["techprint ({PROJECT_label})"],
  TechprintDesc: [
    "This is a techprint for the research project '{PROJECT_label}'.\r\n\\nThe physical form of techprints can range from scraps of paper with diagrams, all the way to advanced self-contained teaching machines. Regardless of form, they play the same role. They give your researchers the confidence that an idea is possible, and a rough idea of the designs used in more established societies.\r\n\\nYour researchers need the foundational knowledge offered by techprints to know where to start on a given technology. Only after enough techprints have been applied can your researchers work out the fine details of how to make use of the technology in your particular situation.\r\n\\nApplying techprints to a satisfied project fulfills half the remaining research progress. In addition, researchers always gain a boost to their intellectual skills when applying techprints, even on already-completed technologies.",
  ],
  Unlocks: ["Unlocks"],
  CorpseLabel: ["{0} corpse"],
  CorpseDesc: ["Dead body of a {0}."],
  DeadLabel: ["{1_label} (dead)"],
  RoughStoneTerrainLabel: ["rough {0}"],
  RoughStoneTerrainDesc: ["Rough, natural {0} ground."],
  RoughHewnStoneTerrainLabel: ["rough-hewn {0}"],
  RoughHewnStoneTerrainDesc: ["Roughly cut natural {0} floor."],
  SmoothStoneTerrainLabel: ["smooth {0}"],
  SmoothStoneTerrainDesc: ["Smoothed natural {0} floor."],
  BlueprintLabelExtra: [" (blueprint)"],
  FrameLabelExtra: [" (building)"],
  FactionUnaffiliated: ["Unaffiliated"],
  StillWishContinue: ["Continue anyway?"],
  BabyTalk: ["ba,bah,boo,buh,ga,gah,goo,nyah,na,nah,noo,woo,wah,wuh,ma,mah"],
  ThingMadeOfStuffLabel: ["{0} {1}"],
  SomeonesRoom: ["{PAWN_labelShort}'s {1}"],
  CouplesRoom: ["{PAWN1_labelShort} and {PAWN2_labelShort}'s {2}"],
  StatRelatesToCurrentRoom: ["Important for this type of room."],
  DeepResourceRemaining: ["{COUNT} {RESOURCE_label} underground here."],
  VariousLabel: ["(various)"],
  ColonistDied: ["Colonist died"],
  North: ["North"],
  South: ["South"],
  West: ["West"],
  East: ["East"],
  ApplyingTechprint: ["applying techprint ({0})"],
  VariantOf: ["variant of"],
  BornOfParents: ["born to {0}"],
  ParentsUnknown: ["unknown parents"],
  Colonist: ["colonist"],
  HitPointsBasic: ["hit points"],
  WorkLeft: ["Work left"],
  Contents: ["Contents"],
  ContainedResources: ["Contained resources"],
  ForPrisonerUse: ["For prisoner use"],
  InPrisonCell: ["In prison cell: For prisoner use"],
  ForColonistUse: ["For colonist use"],
  MedicalBed: ["Medical"],
  Owner: ["Owner"],
  Owners: ["Owners"],
  AssignedColonist: ["Assigned colonist"],
  BedUncomfortableTemperature: ["Uncomfortable room temperature"],
  BedUnsafeTemperature: ["Unsafe room temperature"],
  DiedOn: ["Died on the {0}"],
  Nobody: ["Nobody"],
  Unowned: ["Unowned"],
  DeadTime: ["Dead for {0}"],
  WalkSpeed: ["walk speed {0}"],
  FertShort: ["fert."],
  DyingLower: ["dying"],
  FilthOnFeet: ["Filth on feet:"],
  NotEnoughStoredLower: ["not enough stored"],
  NothingLower: ["nothing"],
  Nothing: ["Nothing"],
  Adapted: ["Adapted"],
  FreshMissingBodyPart: ["fresh"],
  DevelopedImmunityLower: ["developed immunity"],
  NeedsTendingNow: ["Needs tending now"],
  CanTendNow: ["Can tend now"],
  TreatmentExpiresIn: ["Tending expires in {0}"],
  NextTendIn: ["Can be tended in {0}"],
  TendQuality: ["Tend quality"],
  DisappearsAtTotalTendQuality: ["Total tend quality"],
  MissingMedicalBillIngredient: ["no {0}"],
  DaysToRecover: ["{0} days to recover"],
  Ineffective: ["Ineffective"],
  Illegal: ["illegal"],
  DetectionChance: ["detection chance"],
  Race: ["Race"],
  Description: ["Description"],
  Equipment: ["Equipment"],
  Apparel: ["Apparel"],
  Inventory: ["Inventory"],
  ThingInfo: ["Information"],
  DropThing: ["Drop"],
  DropThingLodger: ["Temporary faction members will not drop their items."],
  DropThingLocked: ["This person refuses to drop this."],
  Rename: ["Rename"],
  RenameAnimal: ["Rename animal"],
  RenameColonist: ["Rename colonist"],
  RenounceTitle: ["Renounce title"],
  Execute: ["Execute"],
  ExecuteColonist: [
    "Execute guilty colonist\\n\\nIf you toggle this on, a warden will proceed to execute this person.",
  ],
  MessageColonistMarkedForExecution: [
    "{0_labelShort} is now marked for execution. The next available warden will go execute {0_objective}.",
  ],
  TitleOfFaction: ["{0} of {1}"],
  RenounceTitleDescription: [
    "This action will make {PAWN_nameDef} lose {PAWN_possessive} {TITLE} title. You will receive no compensation for renouncing the title.\\n\\nThis will have the following effects:\\n\\n{EFFECTS}",
  ],
  RenounceTitleWillLoosePermits: ["{PAWN_pronoun} will lose these permissions"],
  RenounceTitleWillLosePermitPoints: [
    "{PAWN_nameDef} will lose {POINTS} unspent permit points with {FACTION_name}.",
  ],
  RenounceTitleWillKeepPsylinkLevels: [
    "{PAWN_pronoun} will keep all {PAWN_possessive} psylink levels and psycasts.",
  ],
  UnknownLower: ["unknown"],
  On: ["On"],
  Off: ["Off"],
  PowerSwitch_Power: ["Power"],
  JoyTolerances: ["Recreation type tolerances"],
  MilkFullness: ["Milk fullness"],
  WoolGrowth: ["Wool growth"],
  EggProgress: ["Egg progress"],
  Fertilized: ["Fertilized"],
  ProgressStoppedUntilFertilized: ["Progress stopped until fertilized"],
  HatchesIn: ["Hatches in"],
  SkillTooLow: ["need {0} level {2}, have {1}"],
  Freezing: ["Freezing"],
  Overheating: ["Overheating"],
  RuinedByTemperature: ["Ruined by temperature."],
  CorpsePercentMissing: ["Missing body parts"],
  HiveReproducesIn: ["Reproduces in"],
  DormantHiveNotReproducing: ["Dormant: Not reproducing."],
  NextSpawnedItemIn: ["Next {0} in"],
  NextSpawnedResourceIn: ["Next resource in"],
  BrokenDown: ["Broken down"],
  BondBrackets: ["(bond)"],
  Fuel: ["Fuel"],
  FuelLevelGizmoLabel: ["Fuel"],
  SetTargetFuelLevel: ["Set target fuel level to {0}"],
  SetPodLauncherTargetFuelLevel: [
    "Set target fuel level to {0}\\nMax distance: {1} tiles",
  ],
  ConfiguredTargetFuelLevel: ["Target fuel level: {0}"],
  Enemies: ["enemies"],
  People: ["people"],
  TimePassed: ["time passed"],
  CurrentRadius: ["current radius"],
  RadiusExpandsIn: ["radius expands in"],
  Permanent: ["permanent"],
  CaravanResting: ["Resting"],
  UsingBedroll: ["using 1 bedroll"],
  UsingBedrolls: ["using {0} bedrolls"],
  CaravanEstimatedTimeToDestination: ["Est. time to destination: {0} days"],
  CaravanEstimatedDaysToDestination: ["Route travel time: {0} days"],
  CaravanImmobilizedByMass: ["Immobilized: Too much weight."],
  CaravanOutOfFood: ["Out of food."],
  CaravanDaysOfFood: ["Days of food: {0}"],
  CaravanDaysOfFoodRot: ["Days of food: {0} (rot in {1} days)"],
  AllCaravanMembersDowned: ["Stopped because: Everyone is downed."],
  AllCaravanMembersMentalBreak: [
    "Stopped because: Everyone is in a mental break.",
  ],
  CaravanColonistsCount: ["{0} {1}"],
  CaravanAnimal: ["1 animal"],
  CaravanAnimalsCount: ["{0} animals"],
  CaravanPrisoner: ["1 prisoner"],
  CaravanPrisonersCount: ["{0} prisoners"],
  CaravanPawnsInMentalState: ["{0} in mental state"],
  CaravanPawnsDowned: ["{0} downed"],
  CaravanTraveling: ["Traveling."],
  CaravanWaiting: ["Waiting."],
  BeingCarriedDueToIllness: ["Being carried due to illness"],
  UsingBedrollsDueToIllness: ["Using bedrolls due to illness"],
  CurrentTileMovementTime: ["Current tile movement time"],
  Visibility: ["Visibility"],
  Temperature: ["Temperature"],
  BadTemperature: ["bad temperature"],
  IdealFermentingTemperature: ["Ideal fermenting temperature"],
  DrugEffectMultiplier: ["{0} effect multiplier: {1}"],
  CaravanVisiting: ["Visiting {0}."],
  CaravanEntering: ["Entering {0}."],
  CaravanAttacking: ["Attacking {0}."],
  CaravanOfferingGifts: ["Offering gifts to {0}."],
  CaravanTrading: ["Trading with {0}."],
  WasWornByCorpse: ["Tainted from being worn by a corpse."],
  WornByCorpseChar: ["T"],
  DeterioratingUnroofed: ["unroofed"],
  DeterioratingOutdoors: ["outdoors"],
  DeterioratingRaining: ["raining"],
  Protected: ["protected"],
  DeterioratingBecauseOf: ["Deteriorating"],
  DeteriorateInDuration: ["Will deteriorate in {0}."],
  Map: ["Map"],
  CaravanDetectedRaidCountdown: ["{0} until enemies arrive"],
  CaravanDetectedRaidCountdownTip: [
    "Enemy reinforcements will arrive in this area in {0}.",
  ],
  Room: ["Room"],
  BeautyHere: ["Beauty here"],
  NoPower: ["no power"],
  WorkSpeedPenalty: ["Work speed"],
  DisabledCommand: ["Disabled"],
  ReadyForLaunch: ["Ready for launch."],
  NotReadyForLaunch: ["Not ready for launch"],
  NotAllInGroupConnectedToFuelingPort: ["no fueling port"],
  NotAllFuelingPortSourcesInGroupHaveAnyFuel: ["no fuel"],
  TransportPodInGroupHasSomethingLeftToLoad: ["loading in progress"],
  TransportPodDestinationBeyondMaximumRange: ["Beyond maximum range"],
  TransportPodNotEnoughFuel: ["Not enough fuel"],
  SettlementTrader: ["{0} of {1}"],
  RoomSurgerySuccessChanceFactor: [
    "Surgery success chance multiplier from room",
  ],
  RoomInfectionChanceFactor: ["Infection chance multiplier from room"],
  VentClosed: ["Closed"],
  WornBy: ["worn by {1_labelShort}"],
  EquippedBy: ["equipped by {1_labelShort}"],
  QuestTargetDestroyInspectString: [
    "{0} wants this destroyed.\\n    Reward: {1} ({2})",
  ],
  QuestTargetDestroyInspectStringShort: ["{0} wants this destroyed."],
  ShuttleDelayInspectString: ["Departing on shuttle in {0}"],
  ShuttleLeaveDelayInspectString: ["Departing in {0}"],
  ShouldDepartOnShuttleInspectString: ["Should depart on shuttle"],
  WorldObjectTimeout: ["Time left: {0}"],
  ClickToSortByThisColumn: ["Click to sort by this column."],
  WorkPriorityShiftClickTip: [
    "Shift + click: Increase priority\\nShift + right click: Decrease priority",
  ],
  WorkPriorityShiftClickEnableDisableTip: [
    "Shift + click: Enable all\\nShift + right click: Disable all",
  ],
  AllowedAreaShiftClickTip: [
    "Shift + click: Set all to home\\nShift + right click: Set all to unrestricted",
  ],
  CheckboxShiftClickTip: [
    "Shift + click: Check all\\nShift + right click: Uncheck all",
  ],
  KnownSiteThreatEnemyCountAppend: ["{0} {1}"],
  SkillRequirements: ["Skill Requirements"],
  Products: ["Products"],
  Requires: ["Requires"],
  NumAnyOf: ["{0}x any of"],
  Relationship: ["{0} of {1}"],
  Prisoner: ["Prisoner"],
  Refugee: ["Refugee"],
  TileMovementDifficulty: ["Terrain movement difficulty"],
  Impassable: ["Impassable"],
  CaravanMovementSpeedFull: ["Caravan movement speed"],
  DownedLower: ["downed"],
  Carried: ["resting"],
  RideableAnimalsPerPeople: ["Rideable animals / people"],
  MultiplierFromRiddenAnimals: ["Multiplier from ridden animals"],
  MultiplierForCarriedMass: ["Multiplier for carried mass: {0}"],
  RideableAnimalTip: [
    "This animal is rideable. People in a caravan will ride the fastest available animals, improving the speed of the caravan as a whole.",
  ],
  EncumberedCaravanTilesPerDayTip: [
    "This caravan can't move because it carries too much.",
  ],
  FinalCaravanPawnsMovementSpeed: ["Caravan members speed"],
  FinalCaravanMovementSpeed: ["Final speed"],
  Winter: ["Winter"],
  MovementDifficultyOffsetInWinter: ["{0} in winter"],
  RangeTo: ["to"],
  NoDietCategoryLetter: ["No letter"],
  ExpiresIn: ["Expires in"],
  CaravanLeaderCaravanName: ["{1_labelShort}'s caravan"],
  Reason: ["Reason"],
  RelationsWith: ["Relations with {0}"],
  capturedBy: ["captured by {0}"],
  yourCaravan: ["your caravan"],
  CreatureWildness: ["{0} wildness"],
  CreatureTrainability: ["{0} trainability"],
  CreatureFollowDrafted: ["Follow master while drafted"],
  CreatureFollowFieldwork: ["Follow master while doing field work"],
  ProximitySingleGoodwillChange: ["{0} with {1}"],
  EnterCooldown: ["Too dangerous to re-enter for {0}."],
  Caravan: ["Caravan"],
  HiddenOrNoSitePartDescription: ["there may be danger there."],
  PreciousLumpHostileThreat: [
    "The scanner is picking up activity around the lump. It's likely hostile.",
  ],
  PreciousLumpLabel: ["lump of {0}"],
  NoActiveResearchProjectToFinish: ["no active research project"],
  Turret: ["turret"],
  Turrets: ["turrets"],
  Mortar: ["mortar"],
  Mortars: ["mortars"],
  Enemy: ["enemy"],
  Location: ["location"],
  AnimalsLower: ["animals"],
  ItemsLower: ["items"],
  FilthLabel: ["{0} x{1}"],
  FilthLabelWithSource: ["{0} of {1} x{2}"],
  Required: ["Required"],
  GiveGiftViaTransportPodsTradeRequestWarning: [
    "Warning: You cannot complete trade requests by using transport pods.\\nIf you send the goods, the settlement will accept them as gifts but they will not reward you.\\n\\nFor trading, approach the settlement with a caravan!\\n\\nAre you sure you want to gift the loaded goods to the faction?",
  ],
  PrisonerLower: ["prisoner"],
  PrisonersLower: ["prisoners"],
  ClickToViewInQuestsTab: ["Click to view this quest in quests tab"],
  Mood: ["Mood"],
  Quest: ["Quest"],
  BringsRaidsEvery: ["Brings raids every {0}"],
  GeneratesResourcesEvery: ["Generates {0} every {1}"],
  FoliageKillRadius: ["Foliage kill radius"],
  RadiusExpandRate: ["Radius expand rate"],
  ViewHyperlink: ["View: {0}"],
  DetonationCountdown: ["Detonates in {0} days"],
  ExplosionOnDamageWarning: ["Large fire explosion if damaged."],
  MechCluster: ["Mech cluster"],
  SpawningNextPawnIn: ["Spawning in {0}"],
  MechAssemblyCompleteIn: ["{0} assembly completes in {1}."],
  MechAssemblyNextType: ["Will assemble"],
  ThingsProduced: ["produced"],
  PlantsHarvested: ["harvested"],
  PawnsKilled: ["{0} killed"],
  PawnsLent: ["Sent {0}, will return in {1}"],
  DormantCompInactive: ["Dormant"],
  DormantCompSealed: ["Sealed"],
  DormantCompBeacon: ["Ready to drop mechanoids"],
  DormantCompExpired: ["Expired"],
  InitiatesIn: ["Initiates in"],
  SendSignalOnCountdownCompTime: ["Activates in {0}"],
  PsychicEntropy: ["Neural heat"],
  PsychicEntropyShort: ["Heat"],
  PsychicEntropyPainFocus: ["{0} pain boost"],
  ConditionCauserRadius: ["radius {0}"],
  LowPsyfocus: ["low psyfocus"],
  DurationLeft: ["{0} left"],
  AnyOf: ["Any of"],
  TraitRequired: ["Requires {0} trait"],
  Goodwill: ["Goodwill"],
  NaturalGoodwill: ["Natural goodwill"],
  NaturalGoodwillRange: ["Natural goodwill range"],
  NaturalGoodwillDescription: [
    "Natural goodwill is based on faction identities and beliefs. If current goodwill is far from natural goodwill, it will slowly shift towards natural goodwill over time.\\n\\nAll goodwill effects are multiplied by {0} when moving towards natural goodwill.",
  ],
  JobReport_ReduceResistance: ["reducing resistance of {0_nameIndef}"],
  TooLargeForBed: ["Too large"],
  Warning: ["Warning"],
  HasSubquest: ["Has subquest"],
  SubquestOf: ["Subquest of"],
  Raid: ["Raid"],
  ApparelRequirementDisabledLabel: ["Disabled by"],
  Nudism: ["Nudism"],
  StudyProgress: ["Study progress"],
  StudyCompleted: ["completed"],
  AttackToDestroy: ["Attack this to destroy it."],
  RemoveByAttackingTooltip: ["Remove this by attacking it."],
  ThoughtFoodEatenFood: ["Food"],
  ThoughtFoodEatenIngredients: ["Ingredients"],
  ShieldInbuilt: ["Shield pack"],
  PuncturedWillExplode: ["Punctured - will explode soon."],
  ClickToOpenResearchTab: ["Click to open research window"],
  TargetBelongsToNPCFaction: ["Target belongs to another faction."],
  MoreLower: ["more"],
  RequiredTechprintTip: ["Requires"],
  Size: ["size"],
  Cost: ["cost"],
  BackstoryTitle: ["Title"],
  Person: ["person"],
  UserScanAbility: ["User scanning speed"],
  ScanAverageInterval: ["Random find interval"],
  ScanningProgressToGuaranteedFind: ["Progress to guaranteed find"],
  MeditatingAt: ["meditating at"],
  ContainsWort: ["Contains {0} / {1} wort."],
  ContainsBeer: ["Contains {0} / {1} beer."],
  Contains: ["Contains"],
  Fermented: ["Fermented"],
  FermentationProgress: ["Progress: {0} ({1} left)"],
  FermentationBarrelOutOfIdealTemperature: [
    "Non-ideal temperature. Fermentation speed: {0}",
  ],
  Headshot: ["Headshot"],
  TextMote_TreatSuccess: ["Treatment success!\\n{0} chance"],
  TextMote_TreatFailed: ["Treatment failed\\n{0} chance"],
  TextMote_HarvestFailed: ["Harvest\\nbotched"],
  TextMote_YieldWasted: ["Yield\\nwasted"],
  TextMote_ProductWasted: ["Product\\nwasted"],
  TextMote_RecruitFail: ["Recruit failed!\\n{0} chance"],
  TextMote_ResistanceReduced: ["Resistance\\n{0} to {1}"],
  TextMote_TameFail: ["Tame failed\\n{0} chance"],
  TextMote_TameSuccess: ["Tamed!"],
  TextMote_TrainFail: ["Failed training: {0}\\n{1} chance"],
  TextMote_TrainSuccess: ["Trained: {0}\\n{1} chance"],
  TextMote_FixBrokenDownBuildingFail: ["Repair\\nbotched"],
  TextMote_ConstructionFail: ["Construction\\nbotched"],
  TextMote_Dodge: ["Dodge"],
  TextMote_Immune: ["Immune"],
  TextMote_Tended: ["{0} tended"],
  TextMote_SkillUp: ["level {0}"],
  lowMood: ["low mood"],
  lowOpinion: ["low opinion"],
  Home: ["Home"],
  BuildRoof: ["Build roof"],
  NoRoof: ["No roof"],
  SnowClear: ["Snow clear"],
  AreaDefaultLabel: ["Area {0}"],
  NoAreaAllowed: ["Unrestricted"],
  NewArea: ["New area"],
  InvertArea: ["Invert"],
  PenUnenclosedLabel: ["Unenclosed"],
  PenOpenDoorLabel: ["open door"],
  RenameAnimalPen: ["Rename pen"],
  AnimalPenMarkerDefaultLabel: ["Pen marker {0}"],
  InPen: ["In pen"],
  Unpenned: ["not in a pen"],
  UnpennedTooltip: [
    "Animal pens can be created by building a pen marker inside an enclosed area. Your handlers will bring animals to an appropriate pen. Pens can be enclosed with fences, barricades, walls, and doors.",
  ],
  RopedByPawn: ["Roped by"],
  RopedToThing: ["Roped to"],
  RopedToSpot: ["Roped to spot."],
  PenSizeLabel: ["Pen size"],
  PenSizeDesc_VerySmall: ["Very small pen"],
  PenSizeDesc_Small: ["Small pen"],
  PenSizeDesc_Medium: ["Medium-sized pen"],
  PenSizeDesc_Large: ["Large pen"],
  PenSizeDesc_Unenclosed: ["Not enclosed - build fences"],
  PenCapacityDesc: ["{ANIMALDEF_label} capacity"],
  PenExampleAnimals: ["Example animals"],
  NoExteriorAccess: ["No exterior access - Animals cannot be moved in or out."],
  Beauty_Label: ["Beauty"],
  Zone_Label: ["Zone"],
  Roof_Label: ["Roof"],
  Terrain_Label: ["Terrain"],
  Snow_Label: ["Snow"],
  WalkSpeed_Label: ["Walk speed"],
  Fertility_Label: ["Fertility"],
  Temperature_Label: ["Temperature"],
  LightLevel_Label: ["Light level"],
  Biome_Label: ["Biome"],
  Hilliness_Label: ["Hilliness"],
  Road_Label: ["Road"],
  River_Label: ["River"],
  MovementDifficulty_Label: ["Movement difficulty"],
  Pollution_Label: ["Pollution"],
  Filth_Label: ["Filth"],
  Faction_Label: ["Faction"],
  Relationship_Label: ["Relationship"],
  CaravanColonists_Label: ["Colonists"],
  CaravanStatus_Label: ["Status"],
  CaravanTTD_Label: ["Time to destination"],
  CannotOrderNonControlled: ["Cannot order characters you do not control."],
  IsIncapableOfViolence: ["{1_labelShort} is incapable of violence."],
  IsIncapableOfViolenceShort: ["incapable of violence"],
  IsNotDrafted: ["{1_labelShort} is not drafted."],
  ApparelPreventsShooting: [
    "{PAWN_nameDef} cannot use ranged weapons due to {PAWN_possessive} {APPAREL_label}.",
  ],
  Snow: ["Snow"],
  SnowNone: ["No snow"],
  SnowDusting: ["dusting"],
  SnowThin: ["thin"],
  SnowMedium: ["medium"],
  SnowThick: ["thick"],
  GunInstalled: ["Installed"],
  MinimumRange: ["Minimum range"],
  CanFireIn: ["Can fire in"],
  CannotFire: ["Cannot fire"],
  Roofed: ["roofed"],
  ShellLoaded: ["Shell loaded: {1_label}"],
  ShellNotLoaded: ["Not loaded"],
  AlreadyActive: ["Already active"],
  OrderActivation: ["Order activation"],
  OrderActivationDesc: ["Order a colonist to activate {THING_definite}."],
  MustBeActivatedByColonist: ["Must be activated by a colonist."],
  NoNearbyFire: ["No nearby fire"],
  NoNearbyFireNoFuelUsed: ["No nearby fire. No fuel was used."],
  ChooseWhoShouldActivate: ["Choose who should activate this."],
  NoFuel: ["No fuel"],
  ReportHaulingTo: ["hauling {THING_label} to {DESTINATION}."],
  ReportHaulingToGrave: ["burying {THING_label} in {DESTINATION}."],
  ReportHauling: ["hauling {1_label}."],
  ReportHaulingUnknown: ["hauling."],
  ReportSleeping: ["sleeping."],
  ReportResting: ["resting."],
  ReportLayingDown: ["laying down."],
  WatchingSunrise: ["watching the sunrise."],
  CloudWatching: ["cloudwatching."],
  WatchingSunset: ["watching the sunset."],
  Stargazing: ["stargazing."],
  WatchingEclipse: ["watching the eclipse."],
  WatchingAurora: ["watching the aurora."],
  UsingVerb: ["using {0} on {1}."],
  UsingVerbNoTarget: ["using {0}."],
  AreaLower: ["area"],
  ReportCowering: ["cowering."],
  ReportStanding: ["standing."],
  ReportExtinguishingFire: ["extinguishing fire."],
  ReportExtinguishingFireOn: ["extinguishing fire on {TARGET_label}."],
  ReportDiggingUpCorpse: ["digging up corpse."],
  CarriedBy: ["being carried by {0_labelShort}."],
  InContainer: ["inside {0_labelShort}."],
  LordReportAttendingMarriageCeremony: ["Attending marriage ceremony"],
  LordReportAttendingParty: ["Attending party"],
  LordReportAttendingConcert: ["Attending concert"],
  LordReportHoldingConcert: ["Holding a concert"],
  LordReportGivingSpeech: ["Giving a speech"],
  LordReportListeningSpeech: ["Listening to {ORGANIZER_labelShort}'s speech"],
  LordReportFormingCaravan: ["Forming caravan"],
  WeaponMissRadius: ["Weapon miss radius"],
  ShootReportShooterAbility: ["Shooter"],
  ShootReportWeapon: ["Weapon"],
  Darkness: ["Darkness"],
  TargetProne: ["Target lying down"],
  TargetSize: ["Target size"],
  Weather: ["Weather"],
  ShootingCover: ["Cover"],
  CoverThingBlocksPercentOfShots: ["{COVER_label} stops {1}"],
  NoCoverLower: ["no cover"],
  Execution: ["Execution"],
  RecipeMake: ["make {0}"],
  RecipeMakeDescription: ["Make {0}."],
  RecipeMakeJobString: ["Making {0}."],
  RecipeAdminister: ["administer {0}"],
  RecipeAdministerJobString: ["Administering {0}."],
  TeetotalerUnhappy: ["teetotaler will be unhappy"],
  ProsthophobeUnhappy: ["body purist will be unhappy"],
  ThoughtExpiresIn: ["Expires in: {0}"],
  ThoughtNullifiedBy: ["thought disabled by"],
  ThoughtStartsExpiringIn: ["Starts expiring in: {0}"],
  ThoughtFinishesExpiringIn: ["Finishes expiring in: {0}"],
  MentalBreakThresholdExtreme: ["Extreme break threshold"],
  MentalBreakThresholdMajor: ["Major break threshold"],
  MentalBreakThresholdMinor: ["Minor break threshold"],
  PawnMainDescGendered: ["{PAWN_gender} {1}"],
  PawnMainDescFactionedWrap: ["{0} of {1}"],
  PawnTitleDescWrap: ["{0} in {1}"],
  PawnMainDescUnderFactionedWrap: ["{0} under {1}"],
  PawnMainDescLifestageWrap: ["{2_lifeStageAdjective} {0}"],
  Faction: ["Faction"],
  FactionDesc: ["The faction {PAWN_labelShort} currently belongs to."],
  ExtraFactionDesc: ["The faction {PAWN_labelShort} originally belongs to."],
  Equipped: ["Equipped"],
  EquippedNothing: ["nothing"],
  Dead: ["Dead"],
  Unconscious: ["Unconscious"],
  PainShock: ["In shock due to pain"],
  PainShockShort: ["Pain shock"],
  Incapacitated: ["Incapacitated"],
  InRestraints: ["In restraints (slowed)"],
  Carrying: ["Carrying"],
  AffectedBy: ["Affected by:"],
  Queued: ["Queued"],
  State: ["State"],
  StunLower: ["stun"],
  SlowedByDamage: ["Slowed by damage"],
  SelectNextInSquareTip: [
    "Select next thing in same square.\\n\\n(*SectionTitle)Shortcut key:(/SectionTitle) {0}\\n\\nYou can also do this by slowly clicking the same square again.",
  ],
  DefInfoTip: ["View information."],
  SelectNextInSquareTipController: [
    "Select next thing in same square.\\n\\nYou can also do this by slowly clicking the same square again.",
  ],
  HostilityReponseTip: [
    "Change how this person will react to nearby enemies when not drafted.",
  ],
  HostilityResponseCurrentMode: ["Current mode"],
  OfLower: ["of"],
  PowerNotConnected: ["Not connected to power."],
  PowerConnectedRateStored: ["Grid excess/stored: {0} W / {1} Wd"],
  PowerNeeded: ["Power needed"],
  PowerOutput: ["Power output"],
  PowerActiveNeeded: ["{0} W when active"],
  PowerBatteryStored: ["Stored"],
  PowerBatteryEfficiency: ["Efficiency"],
  SelfDischarging: ["Self-discharging"],
  TargetTemperature: ["Target temperature"],
  PowerConsumptionMode: ["Current power use"],
  PowerConsumptionHigh: ["high"],
  PowerConsumptionLow: ["low"],
  Indoors: ["Indoors"],
  IndoorsUnroofed: ["Unroofed"],
  Outdoors: ["outdoors"],
  RotStateFresh: ["Fresh"],
  RotStateRotting: ["Rotting"],
  RotStateDessicated: ["Dessicated"],
  CurrentlyFrozen: ["Frozen (won't spoil)"],
  CurrentlyRefrigerated: ["Refrigerated (spoils in {0})"],
  NotRefrigerated: ["Not refrigerated (spoils in {0})"],
  OverADecade: ["over a decade"],
  LessThanADay: ["less than a day"],
  ShotBy: ["Shot by {1_labelShort}"],
  CannotHit: ["Cannot hit target."],
  ManhunterPerHit: ["Manhunter chance per hit"],
  Ingredients: ["Ingredients"],
  IngredientsDesc: ["The ingredients used to make this meal."],
  DietaryType: ["Dietary type"],
  DietaryTypeDesc: [
    "The type of meal produced. Some people have preferences for specific types of meals.",
  ],
  OnlyStacksWithCompatibleMeals: ["only stacks with similar meals"],
  PercentGrowth: ["{0} grown"],
  GrowthRate: ["Growth rate"],
  FullyGrownIn: ["Fully grown in {0} of growth."],
  PlantNeedsLightLevel: ["Needs light level"],
  PlantResting: ["Resting"],
  OutOfIdealTemperatureRange: [
    "Non-ideal temperature. Temperature growth multiplier: {0}%",
  ],
  OutOfIdealTemperatureRangeNotGrowing: ["Non-ideal temperature. Not growing."],
  ReadyToHarvest: ["Ready to harvest."],
  Mature: ["Mature."],
  AveragePlantAge: ["Average plant age"],
  OldestPlantAge: ["Oldest plant age"],
  OutdoorGrowingPeriod: ["Growing period"],
  NoGrowingPeriod: ["Never"],
  GrowYearRound: ["Year-round"],
  GrowSeasonHereNow: ["Growing season here now."],
  CannotGrowBadSeasonTemperature: ["Cannot grow (bad seasonal temperature)."],
  Blighted: ["Blighted"],
  DyingBecauseExposedToLight: ["Dying because exposed to light"],
  AutoCutNow: ["Cut now"],
  HarvestGerund: ["harvesting"],
  CutGerund: ["cutting"],
  CutAllBlight: ["Cut all blight"],
  CutAllBlightDesc: [
    "Mark all blighted plants to be destroyed. Blighted plants will not yield any food or resources and should be destroyed before the blight spreads.",
  ],
  Zone: ["Zone"],
  GrowingZone: ["Growing zone"],
  Stockpile: ["Stockpile zone"],
  DumpingStockpile: ["Dumping stockpile zone"],
  Priority: ["Priority"],
  ClearAll: ["Clear all"],
  AllowAll: ["Allow all"],
  HitPoints: ["{0} hit points"],
  AnyQuality: ["any quality"],
  OnlyQuality: ["{0} only"],
  Undiscovered: ["Undiscovered"],
  ShowLearningHelperWhenEmptyToggleButton: [
    "Toggle visibility of the learning helper when it is empty.\\n\\nThe learning helper is always visible if there is a concept activated to be learned. This toggle makes it disappear when no concept is active.",
  ],
  ZoneVisibilityToggleButton: ["Toggle visiblity of zones."],
  ShowBeautyToggleButton: [
    "Toggle the beauty display.\\n\\nDisplays the beauty of the world as would be perceived by a character standing where the cursor is pointing.",
  ],
  ShowRoomStatsToggleButton: [
    "Toggle room stats display.\\n\\nDisplays room stats of the room where the cursor is pointing.",
  ],
  ShowColonistBarToggleButton: [
    "Toggle colonist bar.\\n\\nDisplays icons and basic status for all colonists along the top of the screen.\\n\\nYou can reorder the colonists in the colonist bar by right-click and dragging them.",
  ],
  ShowColonistBarToggleButtonController: [
    "Toggle colonist bar.\\n\\nDisplays icons and basic status for all colonists along the top of the screen.\\n\\nYou can reorder the colonists in the colonist bar by pressing the left trigger button and dragging them.",
  ],
  AutoHomeAreaToggleButton: [
    "Toggle automatically expanding the home area around new constructions.",
  ],
  AutoRebuildButton: [
    "Toggle automatic rebuild of destroyed structures in the home area.",
  ],
  CategorizedResourceReadoutToggleButton: [
    "Toggle categorized mode on the resource readout.",
  ],
  ShowAnimalNamesToggleButton: [
    "Toggle displaying animal names for tame named animals.",
  ],
  ShowRoofOverlayToggleButton: ["Toggle visibility of roofs."],
  ShowFertilityOverlayToggleButton: [
    "Toggle fertility overlay.\\n\\nThis shows how fertile the ground is, which affects what kinds of plants can grow and how fast they grow.",
  ],
  ShowTerrainAffordanceOverlayToggleButton: [
    "Toggle visibility of terrain affordance.\\n\\nThis relates to what kinds of building can be constructed at each location.\\n\\nFor example, some types of ground only accept light or medium buildings, but not heavy ones. Bridges can only be built on water.",
  ],
  LockNorthUpToggleButton: [
    "Lock the rotation of the camera so the north pole is always up.",
  ],
  UsePlanetDayNightSystemToggleButton: [
    "Toggle day/night lighting on the planet view.",
  ],
  ShowExpandingIconsToggleButton: [
    "Toggle displaying expanding icons instead of the regular icons for distant objects.",
  ],
  ShowWorldFeaturesToggleButton: ["Toggle visibility of names of landforms."],
  ShowTemperatureOverlayToggleButton: [
    "Toggle heat overlay. This shows the air temperature in each room and outdoors.\\n\\nColonists will be unhappy if the temperature is too high or too low. Exposure to extreme temperatures can lead to hypothermia, frostbite, heatstroke, burns, and death.",
  ],
  FireOn: ["fire on {1_label}"],
  Burning: ["Burning"],
  FireSizeLower: ["fire size {0}"],
  GameConditionsTip: ["Special conditions affecting the area right now."],
  TimeLeft: ["time left"],
  ImpactDate: ["impact date"],
  SourceUnknown: ["Source unknown."],
  ClickToJumpToSource: ["Click to jump to the source."],
  ClickToJumpToFlashstorm: ["Click to jump to the flashstorm."],
  CausedByQuest: ["Caused by quest: {0}"],
  NoStuffsToBuildWith: [
    "You have no usable materials from which to build this.",
  ],
  WillGetWorkSpeedPenalty: ["{0} will have work speed penalty"],
  MustPlaceUnroofed: ["Cannot be placed under a roof."],
  MustPlaceUnderThickRoof: ["Must be placed under thick roof."],
  MustPlaceHeadOnShipBeam: [
    "Must place with head attached to ship structural beam.",
  ],
  MustPlaceNextToHopperAccepter: [
    "Must be placed next to something that needs a hopper.",
  ],
  MustPlaceOnSteamGeyser: ["Must be placed directly on a steam geyser."],
  MustPlaceCoolerWithFreeSpaces: [
    "Both the hot and cold sides of the cooler must be exposed.",
  ],
  MustPlaceVentWithFreeSpaces: [
    "Both the sides must be exposed for air to pass through.",
  ],
  MustPlaceAdjacentStandable: [
    "Must be placed with standable space on all sides.",
  ],
  MustPlaceNearFuelingPort: [
    "Must be placed next to a pod launcher's fueling port.",
  ],
  MustPlaceOnDrillable: ["Must be placed on drillable resources."],
  CannotPlaceAdjacentTrap: ["Cannot be placed next to traps."],
  CannotPlaceAdjacentSameDef: [
    "Cannot be placed next to another building of the same type.",
  ],
  WindTurbine_WindPathIsBlockedBy: ["Blocked by"],
  WindTurbine_WindPathIsBlockedByRoof: ["Blocked by roof"],
  Watermill_WaterUsedTwice: ["Flow reduced: Turbulence from other watermill"],
  CasketContains: ["Contains"],
  CasketWarning: [
    "Warning!\\n\\n{PAWN_nameDef} is your last free-standing colonist! If you let {PAWN_objective} step into that casket, you may not be able to continue playing. Are you sure you want to proceed?",
  ],
  ShipReportCannotLaunch: ["Cannot launch."],
  ShipReportCanLaunch: ["Ready for launch."],
  ShipReportMissingPart: ["Missing critical component"],
  ShipReportMissingPartRequires: ["requires"],
  ShipReportNoFullPods: ["No full cryptosleep caskets"],
  ShipReportHibernating: ["Hibernating component"],
  ShipReportNotReady: ["Component not yet ready"],
  ShipNoSettlementToReturnTo: [
    "No settlement to return to. Form a settlement first.",
  ],
  HibernateWarning: [
    "(*Name)Charlon Whitestone(/Name) is ready to begin the reactor's hibernation recovery sequence.\\n\\nHe warns you that the process will take about 15 days, and the energy signature will be detectable from a long distance away.\\n\\nThis sort of energy signature indicates interstellar flight capability, and will attract gangs of desperate raiders and swarms of deadly mechanoids.\\n\\nYou will be assaulted with an intensity you've never seen. Make sure your defenses are prepared first.",
  ],
  HibernateWarningStandalone: [
    "The reactor is ready to power up.\\n\\nThe process will take about 15 days, and the energy signature will be detectable from a long distance away. This sort of energy signature indicates interstellar flight capability, and will attract gangs of desperate raiders and swarms of deadly mechanoids.\\n\\nYou will be assaulted with an intensity you've never seen. Make sure your defenses are prepared first.",
  ],
  HibernateWarningPacifist: [
    "(*Name)Charlon Whitestone(/Name) is ready to begin the reactor's hibernation recovery sequence. He warns you that the process will take about 15 days.",
  ],
  HibernateWarningStandalonePacifist: [
    "The reactor is ready to power up. The process will take about 15 days.",
  ],
  SkillNeurotrainerLabel: ["skilltrainer ({0})"],
  SkillNeurotrainerUseLabel: ["Use skilltrainer to learn {0}"],
  SkillNeurotrainerDescription: [
    "A one-use super-dose of mechanites which trains a specific skill.\\n\\nThe dose is administered through the orbit of the eye. Once released into the brain, the mechanites quickly improve the subject's skills in a specific area, transmuting themselves into neural tissue as needed.",
  ],
  SkillNeurotrainerUsed: [
    "{USER_labelShort} used {1} neurotrainer to go from level {2} to level {3}.",
  ],
  Installed: ["Installed"],
  NotInstalled: ["Not installed"],
  MinifiedTreeWillDieIn: [
    "Extracted tree will die in {time} unless replanted.",
  ],
  Title: ["Title"],
  Untitled: ["Untitled"],
  UnfinishedItem: ["Unfinished {0}"],
  UnfinishedItemWithStuff: ["Unfinished {0} {1}"],
  Quality: ["Quality"],
  quality: ["quality"],
  QualityDescription: ["An item's quality is how well-made it is."],
  QualityIs: ["Quality: {0}"],
  Mood_MentalState: ["mental state"],
  Mood_AboutToBreak: ["about to break"],
  Mood_OnEdge: ["on edge"],
  Mood_Stressed: ["stressed"],
  Mood_Neutral: ["neutral"],
  Mood_Content: ["content"],
  Mood_Happy: ["happy"],
  GameOverEveryoneDead: [
    "Everyone is dead or gone. This story is over.\\n\\nPerhaps someone else will find a use for the ruins of this place.",
  ],
  GameOverPlanetkillerImpact: [
    "At near-lightspeed, the planetkiller weapon slammed into the ground with the force of a trillion hydrogen bombs. Like a water balloon shot with a rifle, this world liquified under the impact and sprayed its molten guts across the cosmos.\\n\\nPart of {0} is now a small asteroid belt. The rest is a molten, radioactive hellscape, constantly rippling with kilometers-high planetquakes.\\n\\nYou did not survive.",
  ],
  GameOverShipLaunchedIntro: ["You've launched the ship!"],
  GameOverShipLaunchedEnding: [
    "Your machine persona will now try to guide the ship to a safe place. It might find a prosperous planet in this system. Or, it may undertake a centuries-long journey to another star. It might even decide to hide under ice on an asteroid for a few thousand years, waiting for someone to build a new glitterworld here.\\n\\nYou'll find out when you wake up.",
  ],
  GameOverColonistsEscaped: ["These colonists escaped:\\n\\n{0}"],
  GameOverColonistsLeft: ["These colonists were left behind:\\n\\n{0}"],
  GameOverInMemoryOf: ["In memory of:\\n"],
  GameOverKeepPlaying: ["Keep playing"],
  GameOverMainMenu: ["Main menu"],
  LifespanExpiry: ["Expires in:"],
  InactiveFacility: ["inactive"],
  FacilityPotentiallyLinkedTo: ["Links to"],
  FacilityNoPotentialLinks: ["Not linked to a building"],
  DiseaseGrowthModeChanged_Growing: ["{PAWN_labelShort}'s {1} is now growing."],
  DiseaseGrowthModeChanged_Stable: ["{PAWN_labelShort}'s {1} is now stable."],
  DiseaseGrowthModeChanged_Remission: [
    "{PAWN_labelShort}'s {1} is now in remission.",
  ],
  MarriageSpotUsable: ["Usable now."],
  MarriageSpotNotUsable: ["Not usable: {0}."],
  MarriageSpotNotStandable: ["blocked"],
  MarriageSpotDangerous: ["too dangerous for {1_labelShort}"],
  MarriageSpotForbidden: ["forbidden for {1_labelShort}"],
  MarriageSpotReserved: ["reserved"],
  MarriageSpotUnreachable: ["unreachable for {1_labelShort}"],
  MarriageSpotInPrisonCell: ["in prison cell"],
  NotEnjoyableOutsideTemperature: ["uncomfortable temperature"],
  ActivityIconMedicalRest: ["Medical rest"],
  ActivityIconSleeping: ["Sleeping"],
  ActivityIconFleeing: ["Fleeing"],
  ActivityIconAttacking: ["Fighting"],
  ActivityIconIdle: ["Idle"],
  ActivityIconBurning: ["Burning"],
  ActivityIconFormingCaravan: ["Forming a caravan"],
  DueForMaintenance: ["Due for maintenance."],
  DeterioratingDueToLackOfMaintenance: [
    "Deteriorating due to lack of maintenance.",
  ],
  ProgressToNextLump: ["Progress to next lump"],
  ResourceBelow: ["Resource below"],
  ProgressToNextPortion: ["Progress to next portion"],
  DeepDrillNoResources: ["No resources below."],
  DeepDrillExhausted: [
    "Deep drill resources exhausted, drill automatically forbidden. Unforbid to begin mining of {0}.",
  ],
  DeepDrillExhaustedNoFallback: ["Deep drill resources exhausted."],
  ChargesRemaining: ["Remaining charges"],
  LearningHelper: ["Learning helper"],
  LearningHelperTooltip: [
    "In-game tutor that aims to teach you information about topics relevant to your colony's current state",
  ],
  MarkLearned: ["Mark as learned"],
  AlreadyLearned: ["Already learned"],
  Filter: ["Filter"],
  CompassTip: [
    "Shows the north direction. Click to rotate the camera so the north pole is up.",
  ],
  RoutePlannerButtonTip: [
    "Click to enter the planning mode where you can plan your journey and calculate distance between waypoints.",
  ],
  RoutePlannerAddTwoOrMoreWaypoints: ["Add two or more waypoints."],
  RoutePlannerAddOneOrMoreWaypoints: ["Add one or more waypoints."],
  RoutePlannerEstTimeToFinalDest: ["Total route time: {0}"],
  RoutePlannerUsingAverageTicksPerMoveWarning: [
    "Planning mode uses the default caravan speed. Your speed may vary.",
  ],
  RoutePlannerUsingTicksPerMoveOfCaravan: ["Calculating for: {0}"],
  RoutePlannerPressRMBToAddAndRemoveWaypoints: [
    "Right mouse button: Add/remove waypoints.",
  ],
  RoutePlannerPressRMBToAddAndRemoveWaypointsController: [
    "Left trigger button: Add/remove waypoints.",
  ],
  RoutePlannerPressEscapeToExit: ["ESC: Exit planning mode."],
  RoutePlannerPressEscapeToExitController: [
    "{Key:Cancel}: Exit planning mode.",
  ],
  RoutePlannerPressEscapeToReturnToCaravanFormationDialog: [
    "ESC: Return to the caravan formation dialog.",
  ],
  RoutePlannerPressEscapeToReturnToCaravanFormationDialogController: [
    "{Key:Cancel}: Return to the caravan formation dialog.",
  ],
  EstimatedTimeToWaypoint: ["Est. travel time: {0}"],
  EstimatedTimeToWaypointFromPrevious: [
    "Est. travel time (from previous waypoint): {0}",
  ],
  EstimatedTimeToTile: ["Est. travel time: {0}"],
  ForagedFoodAmount: ["Foraged food amount"],
  OutfitAnything: ["Anything"],
  OutfitWorker: ["Worker"],
  OutfitSoldier: ["Soldier"],
  OutfitNudist: ["Nudist"],
  HibernatableHibernating: ["Hibernating"],
  HibernatableStartingUp: ["Starting up"],
  ClickToSeeAvailableOrders_WorldObject: ["{0}: See available orders..."],
  ClickToSeeAvailableOrders_Empty: ["See available orders..."],
  PawnTooltipWithDescAndPrimaryEquip: ["{0} ({1})\\n{2}\\n{3}"],
  PawnTooltipWithDescNoPrimaryEquip: ["{0} ({1})\\n{2}"],
  PawnTooltipWithPrimaryEquipNoDesc: ["{0}\\n{1}\\n{2}"],
  PawnTooltipNoDescNoPrimaryEquip: ["{0}\\n{1}"],
  PawnTooltipPsychicEntropyStats: ["Fall rate: {0} / s ({1}s until zero)"],
  PawnTooltipPsychicEntropyDesc: [
    "Neural heat increases after using a psychic power. Surpassing the normal limit may cause a psychic breakdown lasting days.\\n\\nNeural heat dissipates naturally over time. This process can be accelerated by wearing eltex apparel or being in pain.",
  ],
  PawnTooltipPsychicEntropyPainFocus: [
    "Pain boost\\n\\nPain focuses the mind and speeds up neural heat dissipation.\\n\\nPain level: {0}\\nBonus to heat recovery: {1}",
  ],
  PawnTooltipPsychicEntropyLimit: [
    "Toggle neural heat limiter. Exceeding your heat limit may cause a psychic breakdown lasting days. It won't cause permanent damage.",
  ],
  PawnTooltipPsyfocus: ["Psyfocus: {0}"],
  PawnTooltipGenderAndKindLabel: ["{0} {1}"],
  Reward_Pawn_DropPod: [
    "a {0_age}-year-old {0_title} named {0_nameDef} will arrive in a transport pod {0_relationInfoInParentheses}",
  ],
  Reward_Pawn_WalkIn: [
    "a {0_age}-year-old {0_title} named {0_nameDef} will arrive and join you {0_relationInfoInParentheses}",
  ],
  Reward_Pawn_Caravan: [
    "a {0_age}-year-old {0_title} named {0_nameDef} will join you {0_relationInfoInParentheses}",
  ],
  Reward_Items: [
    "transport pods with the following resources will arrive (total value {1}):\r\n\\n{0}",
  ],
  Reward_Items_Caravan: ["you will receive (total value {1}):\r\n\\n{0}"],
  Reward_Goodwill: ["your faction relations with {0_name} will improve by {1}"],
  Reward_PassageOffworld: ["you will be taken to the stars"],
  Reward_PassageOffworld_Label: ["Passage offworld"],
  Reward_CampLoot: ["you can loot everything from the camp"],
  Reward_CampLoot_Label: ["Camp loot"],
  Reward_VisitorsHelp: ["the visitors will work and fight for you"],
  Reward_VisitorsHelp_Label: ["Visitors' help"],
  Reward_BestowingCeremony_Label: ["New psylink level"],
  Reward_BestowingCeremony: ["{PAWNNAME} gains psylink"],
  Reward_ShuttleLoot_Label: ["Shuttle loot"],
  Reward_ShuttleLoot: ["you can deconstruct and loot the shuttle"],
  Reward_PossibleFutureReward_Label: ["Possible future reward"],
  Reward_PossibleFutureReward: ["a reward possibly granted in the future"],
  Reward_Title_Label: ["{TITLE} title"],
  Reward_Title: ["{PAWNNAME} gains {TITLE} title from {FACTION}"],
  TotalValue: ["value {0}"],
  BondedWith: ["Bonded to: {0}"],
  NotBonded: ["Not yet bonded"],
  BladelinkBondedToSomeoneElse: ["bonded to someone else"],
  BladelinkAlreadyBonded: ["(existing bond)"],
  BladelinkAlreadyBondedDialog: [
    "A person can only bond with one persona weapon at a time.\\n\\nTo equip and bond with {WEAPON_labelShort}, {PAWN_nameDef}'s currently bonded weapon {BONDEDWEAPON_labelShort} must first be destroyed.",
  ],
  BladelinkAlreadyBondedMessage: [
    "{PAWN_nameDef} is already bonded to {BONDEDWEAPON_labelShort}",
  ],
  Biocoded: ["biocoded {0}"],
  CodedFor: ["Biocoding: {0}"],
  BiocodedCodedForSomeoneElse: ["biocoded"],
  InterceptsProjectilesEvery: ["Intercepts {0} every {1}"],
  InterceptsProjectiles: ["Intercepts {0}"],
  InterceptsProjectiles_GroundProjectiles: ["ground projectiles"],
  InterceptsProjectiles_AerialProjectiles: ["aerial projectiles"],
  AffectedGender: ["Affected gender"],
  CausedByHediff: ["Caused by: {0}"],
  HealingCureHediff: ["{0_nameDef}'s {1} was cured."],
  HealingRestoreBodyPart: ["{0_nameDef}'s {1} was restored."],
  WarningBuildingCausesHostility: [
    "Caution: Placing a building here will anger {FACTION_name}!",
  ],
  ChooseLandingSite: ["Choose landing site"],
  Ritual: ["ritual"],
  RitualTakesPlaceAt: ["Takes place at"],
  RitualTargetThingDefsInfo: ["Any {0}"],
  LordReportAttending: ["Attending {0}"],
  RitualCalledOff: ["{0} has been canceled."],
  RitualNobodyAttended: [
    "{0} was not completed because of lack of attendance.",
  ],
  RitualFinished: ["{0} has been completed."],
  RitualEndsIn: ["ends in {0}"],
  RitualStartAnyTime: ["Can start any time"],
  RitualStartEvent: ["Can start after event"],
  RitualFocusObjects: ["Focus objects"],
  RitualParticipatingRoles: ["Participating roles"],
  Organizers: ["Organizers"],
  QualityFactors: ["Quality factors"],
  QualityFactorTooltipUncertain: [
    "This condition may be fulfilled, depending on how things play out.\\n\\nIf it is fulfilled, the quality bonus will apply.",
  ],
  QualityFactorTooltipNotFulfilled: [
    "This condition is not fulfilled.\\n\\nThe quality bonus will not apply.",
  ],
  Spectators: ["Spectators"],
  NotParticipating: ["Not participating"],
  DragPawnsToRolesInfo: ["Drag and drop or left/right click to move people."],
  DragPawnsToRolesInfoController: ["Drag and drop or click to move people."],
  RitualBeginSlaveDesc: ["A slave. The human property of others."],
  RitualBeginSleepingDesc: [
    "{0_labelShort} is sleeping. If included in the ritual, {0_pronoun} will wake up to participate.",
  ],
  RitualBeginSleepingWarning: [
    "Some of the selected participants are sleeping. They will wake up once you start the ritual.",
  ],
  RitualRoleRequiresSocialRole: [
    "This position is best done by a colonist holding the social role of {0}.\\n\\nIf someone without this role fills this position, you won't get the following bonus(es)",
  ],
  RitualRoleCantSubstitute: ["No substitute available for the role of {0}."],
  RitualOutcomeProgress: ["{0} progress"],
  RitualOutcomeQualityAbstract: ["{0} quality depends on"],
  RitualOutcomeQualitySpecific: [
    "{0} total quality was {1}, determined by these factors",
  ],
  RitualOutcomeChances: ["Outcome chances at {0} quality"],
  RitualOutcomePerformedRecently: ["Performed recently"],
  RitualQualityExpectations: ["{0} expectations"],
  RitualAmbienceSound: ["Ritual ambience sound"],
  RitualQualityLowWarning: [
    "Total {0} quality is below {1}. Proceeding will most likely negatively impact your colony.\\n\\nAre you sure?",
  ],
  AbilitySpeechDisabledNoSpot: ["No reachable appropriate place to speak."],
  AbilityDisabledNoCapacity: ["{0_labelShort} is incapable of {1}."],
  RitualOutcomeExtraDesc_Mood: [
    "Everyone participating in the ritual gains {0} mood for {1} days.",
  ],
  RitualOutcomeNoQuality: [
    "This ritual has no quality offsets, so the best outcome is always expected",
  ],
  ChooseParticipants: ["Choose who should participate in {RITUAL_labelDef}."],
  Begin: ["Begin"],
  BeginRitual: ["Begin {0}"],
  BeginRitualFor: ["Begin {0} for {1}"],
  QualityOutOf: ["{0} (out of {1})"],
  DateRitualNoObligation: [
    "{0} is a date-specific ritual. You'll be able to start it in {1}, on the {2}.",
  ],
  PreceptReplaceWith: ["Replace with"],
  RitualSeatOf: ["Ritual seat of {IDEOS}"],
  ExpectedRitualQuality: ["Expected quality"],
  StartingQuality: ["Starting quality"],
  ExpectedRitualDuration: ["Expected duration"],
  RitualPredictedOutcomeDescPawnStat: ["{PAWN_labelShort}'s {1}"],
  RitualPredictedOutcomeDescRoomBeauty: ["Room beauty"],
  RitualPredictedOutcomeDescParticipantCount: ["Participants"],
  RitualPredictedOutcomeDescPawnExpectations: [
    "{PAWN_labelShort}'s expectations",
  ],
  RitualOutcomeLovedOnePresentLabel: ["Loved one present"],
  RitualOutcomeLovedOnePresentTip: [
    "Any person that {PAWN_labelShort} considers their friend or more.",
  ],
  RitualOutcomeLabelAnyOfThese: ["Any of these"],
  RitualRoleReplaces: ["Replaces {PAWN_labelShort}"],
  Present: ["present"],
  Used: ["{0} used"],
  StartingRitualQuality: ["{0} starting quality"],
  OutcomeBonusDesc_Quality: ["up to {0} quality"],
  OutcomeBonusDesc_QualitySingleOffset: ["{0} quality"],
  OutcomeLetterLabel: ["{OUTCOMELABEL} {RITUALLABEL}"],
  MaxValue: ["{0} max"],
  ThingOf: ["{0} of"],
  ThingOfSource: ["{0} of {1}"],
  ThingOfTwoSources: ["{0} of {1} and {2}"],
  BlindSmoke: ["blind smoke"],
  ToxGas: ["tox gas"],
  RotStink: ["rot stink"],
  AbilityDisabledUndrafted: ["must be drafted."],
  AbilityOnCooldown: ["ability on cooldown. It will be available in {0}."],
  AbilityAlreadyQueued: ["ability already queued."],
  AbilityReadyLabel: ["Ability ready: {0}"],
  AbilityReadyText: ["{0_nameDef} is ready to use {1}."],
  AbilityDisabledInRitual: ["{0_labelShort} is participating in {1}."],
  Charges: ["Charges"],
  PawnIsInMentalState: ["{0_nameDef} is in an aggressive mental state."],
  DisabledWorkLabel: ["Disabled work"],
  GlowerChangeColor: ["change color"],
  GlowerChangeColorDescription: ["Change the color of the light."],
  GlowerChangeColorNeedsResearch: [
    "You must research {0} to change light color.",
  ],
  ShieldPersonalTip: [
    "A personal shield that will attempt to stop incoming projectiles or shrapnel. It prevents the wearer from firing out, and shuts down instantly if hit by an EMP.",
  ],
  UnrecruitableDesc: [
    "{PAWN_nameDef} is so loyal to {PAWN_possessive} home that {PAWN_pronoun} will refuse to be recruited if taken prisoner.",
  ],
  Random: ["Random"],
  PlantThing: ["Plant {0_label}"],
  PlantThingDesc: ["Plant a {0_label} in a chosen area."],
  CancelPlantThing: ["Cancel planting {0_label}"],
  CancelPlantThingDesc: ["Cancel planting the {0_label}."],
  AbilitySpeechDisabledAnotherGatheringInProgress: [
    "another gathering is in progress.",
  ],
  AbilitySpeechCooldown: ["Next speech ready in"],
  AbilitySpeechTargetsLabel: ["Initiated at"],
  Wiki: ["Wiki"],
  WikiTip: ["Opens Web browser to see the RimWorld wiki and get help playing."],
  Menu: ["Menu"],
  ScenPart_PlayerFaction: ["Your faction will be a {0}."],
  ScenPart_StartWithPawn: ["Start with 1 person."],
  ScenPart_StartWithPawns: ["Start with {0} people."],
  ScenPart_StartWithPawns_OutOf: ["chosen from"],
  RandomPet: ["random pet"],
  ScenPart_StartingResearchFinished: ["Start with research: {0}"],
  ScenPart_ArriveInDropPods: ["Arrive in drop pods."],
  ScenPart_StatFactor: [
    'The stat "{0}" will be universally multiplied by {1}.',
  ],
  ScenPart_PawnsHaveHediff: ["{0} have a {1} chance to start with {2}."],
  ConfigurableSeverity: ["severity: {0}"],
  ScenPart_SetNeed: [
    "{0} have a {1} chance to have their {2} set between {3} and {4}.",
  ],
  ConfigurableLevel: ["level: {0}"],
  ScenPart_PawnsHaveTrait: ["{0} have a {1} chance to start with trait: {2}"],
  ScenPart_OnPawnDeathExplode: [
    "Characters and creatures explode on death ({0}, radius {1}).",
  ],
  ScenPart_PawnsAreNaked: ["{0} have a {1} chance to start naked."],
  ScenPart_StartingPawnAgeMin: ["Your people will be at least {0} years old."],
  ScenPart_StartingPawnAgeMax: ["Your people will be at most {0} years old."],
  ScenPart_StartingPawnAgeRange: [
    "Your people will be between {0} and {1} years old.",
  ],
  ScenPart_StartWith: ["Start with"],
  ScenPart_MapScatteredWith: ["Map is scattered with"],
  ScenPart_PermaGameCondition: ["Permanent game condition(s)"],
  ScenPart_DisableIncident: ["Incident(s) disabled"],
  ScenPart_CreateIncident: ["Incident created"],
  ScenPart_DisallowBuilding: ["Can never build"],
  Level: ["Level"],
  SkillLevel: ["Skill level"],
  ProgressToNextLevel: ["Progress to next learned level"],
  Experience: ["Experience"],
  Passion: ["Passion"],
  PassionNone: ["No passion"],
  PassionMinor: ["Passion"],
  PassionMajor: ["Burning passion"],
  LearningSpeed: ["Learning speed"],
  LearnedMaxToday: [
    "Learned max today ({0}/{1}, further learning multiplied by {2})",
  ],
  ChildrenLearn: [
    "Children learn skills by watching adults work and by taking lessons at a lesson desk.",
  ],
  EffectsAtLevel: ["Effects at level {0}"],
  SkillMax: ["MAX"],
  LearnedLevel: ["Learned level"],
  NegativeLevelAdjustedToZero: ["Negative level adjusted to zero."],
  LevelCappedAtMax: ["Level capped at {0}."],
  GeneLabelWithDesc: ["{GENE_label} gene"],
  Skill0: ["Barely heard of it"],
  Skill1: ["Utter beginner"],
  Skill2: ["Beginner"],
  Skill3: ["Basic familiarity"],
  Skill4: ["Some familiarity"],
  Skill5: ["Significant familiarity"],
  Skill6: ["Capable amateur"],
  Skill7: ["Weak professional"],
  Skill8: ["Employable professional"],
  Skill9: ["Solid professional"],
  Skill10: ["Skilled professional"],
  Skill11: ["Very skilled professional"],
  Skill12: ["Expert"],
  Skill13: ["Strong expert"],
  Skill14: ["Master"],
  Skill15: ["Strong master"],
  Skill16: ["Region-known master"],
  Skill17: ["Region-leading master"],
  Skill18: ["Planet-known master"],
  Skill19: ["Planet-leading master"],
  Skill20: ["Legendary master"],
  LetterDay: ["d"],
  LetterHour: ["h"],
  LetterMinute: ["m"],
  LetterSecond: ["s"],
  LetterYear: ["y"],
  DaysLower: ["days"],
  HoursLower: ["hours"],
  SecondsLower: ["seconds"],
  SeasonSpring: ["spring"],
  SeasonSummer: ["summer"],
  SeasonFall: ["fall"],
  SeasonWinter: ["winter"],
  SeasonPermanentSummer: ["permanent summer"],
  SeasonPermanentWinter: ["permanent winter"],
  QuadrumAprimay: ["Aprimay"],
  QuadrumJugust: ["Jugust"],
  QuadrumSeptober: ["Septober"],
  QuadrumDecembary: ["Decembary"],
  QuadrumAprimay_Short: ["Apr"],
  QuadrumJugust_Short: ["Jug"],
  QuadrumSeptober_Short: ["Sep"],
  QuadrumDecembary_Short: ["Dec"],
  Born: ["Born: {0}"],
  AgeChronological: ["Chronological age: {0} years, {1} quadrums, {2} days"],
  AgeBiological: ["Biological age: {0} years, {1} quadrums, {2} days"],
  Period1Year: ["1 year"],
  PeriodYears: ["{0} years"],
  Period1Quadrum: ["1 quadrum"],
  PeriodQuadrums: ["{0} quadrums"],
  Period1Day: ["1 day"],
  PeriodDays: ["{0} days"],
  Period1Hour: ["1 hour"],
  PeriodHours: ["{0} hours"],
  Period1Second: ["1 second"],
  PeriodSeconds: ["{0} seconds"],
  Started: ["Started"],
  Lasted: ["Lasted"],
  OccurredTimeAgo: ["occurred {0} ago"],
  TimeAgo: ["{0} ago"],
  TabTerrain: ["Terrain"],
  TabPlanet: ["Planet"],
  TabCaravanFeeding: ["Feeding"],
  TabCaravanSocial: ["Social"],
  TabCaravanHealth: ["Health"],
  TabCaravanNeeds: ["Needs"],
  TabCaravanGear: ["Gear"],
  TabCaravanItems: ["Items"],
  AbandonSliderText: ["Abandon {{0}}x {0}"],
  ConfirmAbandonItemDialog: [
    "Do you really want to abandon {0}?\\n\\nAbandoned items vanish and can never be recovered.",
  ],
  AbandonTip: ["Abandon"],
  BanishTip: ["Banish"],
  AbandonSpecificCountTip: ["Abandon specific count"],
  AbandonAllTip: ["Abandon (all)"],
  AbandonItemTipExtraText: [
    "Abandoned items vanish and can never be recovered.",
  ],
  BanishTipWillDie: ["{1_labelShort} will most likely die."],
  CaravanColonists: ["Colonists"],
  CaravanPrisonersAndAnimals: ["Prisoners and animals"],
  CaravanItems: ["Inventory"],
  OpenSpecificTabButtonTip: ["Click to open a tab with more details."],
  CaravanPrisoners: ["Prisoners"],
  CaravanWeaponsAndApparel: ["Equippable items"],
  NoneCapable: ["None capable"],
  GainingJoyBecauseCaravanNotMoving: ["Caravan not moving"],
  DragToRearrange: ["Drag to rearrange."],
  AssignDrugPolicies: ["Assign drug policies"],
  BeCarriedIfSickTip: [
    "Whether this person or animal should be carried by other caravan members when sick.\\n\\nCarried caravan members can rest even if the caravan is moving, but they slow it down.",
  ],
  PlanetSeed: ["Seed"],
  PlanetCoverageShort: ["Coverage"],
  WorkTagNone: ["none"],
  WorkTagIntellectual: ["intellectual"],
  WorkTagManualDumb: ["dumb labor"],
  WorkTagManualSkilled: ["skilled labor"],
  WorkTagViolent: ["violent"],
  WorkTagShooting: ["shooting"],
  WorkTagCaring: ["caring"],
  WorkTagSocial: ["social"],
  WorkTagAnimals: ["animals"],
  WorkTagArtistic: ["artistic"],
  WorkTagCrafting: ["crafting"],
  WorkTagCooking: ["cooking"],
  WorkTagFirefighting: ["firefighting"],
  WorkTagCleaning: ["cleaning"],
  WorkTagHauling: ["hauling"],
  WorkTagPlantWork: ["plant work"],
  WorkTagMining: ["mining"],
  WorkTagHunting: ["hunting"],
  WorkTagConstructing: ["constructing"],
  WorkTagCommoner: ["commoner work"],
  WorkTagAllWork: ["all work"],
  friendlyNameNative: ["English"],
  friendlyNameEnglish: ["English"],
  canBeTiny: ["true"],
  languageWorkerClass: ["LanguageWorker_English"],
  credits: ["\r\n  "],
};
