{"version":3,"sources":["../index.ts"],"sourcesContent":["import xml2js, { ParserOptions } from \"xml2js\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport _ from \"lodash\";\r\nconst root = process.cwd();\r\nconst valueMap: Record<string, any> = {};\r\n\r\n// 收集可能的value值\r\nfunction collectValue(value: string, name: string, filePath: string) {\r\n  const arr = valueMap[name];\r\n  if (arr) {\r\n    arr.push({ value, path: path.relative(root, filePath) });\r\n  } else {\r\n    valueMap[name] = [{ value, path: path.relative(root, filePath) }];\r\n  }\r\n}\r\n// 解析path的xml文件为obj\r\nasync function parseXmlByPath(filePath: string, options?: ParserOptions) {\r\n  const content = fs.readFileSync(filePath);\r\n  const parser = new xml2js.Parser(options);\r\n  return await parser.parseStringPromise(content);\r\n}\r\n\r\n// 查找所有xml文件\r\nfunction findXmlFiles(folderPath: string) {\r\n  const files = fs.readdirSync(folderPath);\r\n  let xmlFilesPatch: string[] = [];\r\n\r\n  files.forEach((file) => {\r\n    const filePath = path.join(folderPath, file);\r\n    const stat = fs.statSync(filePath);\r\n\r\n    if (stat.isDirectory()) {\r\n      // 如果是文件夹，则递归调用 findXmlFilesh 函数\r\n      xmlFilesPatch = xmlFilesPatch.concat(findXmlFiles(filePath));\r\n    } else if (path.extname(file) === \".xml\") {\r\n      // 如果是 .xml 文件，则将其添加到结果数组中\r\n      xmlFilesPatch.push(filePath);\r\n    }\r\n  });\r\n  return xmlFilesPatch;\r\n}\r\n\r\nasync function main() {\r\n  const pathList = findXmlFiles(path.join(root, \"./packages/Core/Defs\"));\r\n  const parsed = [];\r\n  for (const filePath of pathList) {\r\n    const obj = await parseXmlByPath(filePath, {\r\n      valueProcessors: [\r\n        (value, name) => {\r\n          collectValue(value, name, filePath);\r\n        },\r\n      ],\r\n    });\r\n    parsed.push({ parseResult: obj, filePath });\r\n  }\r\n  _.each(valueMap, (value, key) => {\r\n    valueMap[key] = _.unionBy(value, \"value\");\r\n  });\r\n  fs.writeFileSync(\r\n    path.join(root, \"./valueMap.js\"),\r\n    `export default \\n${JSON.stringify(valueMap)}\\n`\r\n  );\r\n  // console.dir(valueMap, { depth: null });\r\n}\r\nmain();\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,YAA+B;AACtC,OAAO,UAAU;AACjB,OAAO,QAAQ;AACf,OAAO,OAAO;AACd,IAAM,OAAO,QAAQ,IAAI;AACzB,IAAM,WAAgC,CAAC;AAGvC,SAAS,aAAa,OAAe,MAAc,UAAkB;AACnE,QAAM,MAAM,SAAS,IAAI;AACzB,MAAI,KAAK;AACP,QAAI,KAAK,EAAE,OAAO,MAAM,KAAK,SAAS,MAAM,QAAQ,EAAE,CAAC;AAAA,EACzD,OAAO;AACL,aAAS,IAAI,IAAI,CAAC,EAAE,OAAO,MAAM,KAAK,SAAS,MAAM,QAAQ,EAAE,CAAC;AAAA,EAClE;AACF;AAEA,SAAe,eAAe,UAAkB,SAAyB;AAAA;AACvE,UAAM,UAAU,GAAG,aAAa,QAAQ;AACxC,UAAM,SAAS,IAAI,OAAO,OAAO,OAAO;AACxC,WAAO,MAAM,OAAO,mBAAmB,OAAO;AAAA,EAChD;AAAA;AAGA,SAAS,aAAa,YAAoB;AACxC,QAAM,QAAQ,GAAG,YAAY,UAAU;AACvC,MAAI,gBAA0B,CAAC;AAE/B,QAAM,QAAQ,CAAC,SAAS;AACtB,UAAM,WAAW,KAAK,KAAK,YAAY,IAAI;AAC3C,UAAM,OAAO,GAAG,SAAS,QAAQ;AAEjC,QAAI,KAAK,YAAY,GAAG;AAEtB,sBAAgB,cAAc,OAAO,aAAa,QAAQ,CAAC;AAAA,IAC7D,WAAW,KAAK,QAAQ,IAAI,MAAM,QAAQ;AAExC,oBAAc,KAAK,QAAQ;AAAA,IAC7B;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAEA,SAAe,OAAO;AAAA;AACpB,UAAM,WAAW,aAAa,KAAK,KAAK,MAAM,sBAAsB,CAAC;AACrE,UAAM,SAAS,CAAC;AAChB,eAAW,YAAY,UAAU;AAC/B,YAAM,MAAM,MAAM,eAAe,UAAU;AAAA,QACzC,iBAAiB;AAAA,UACf,CAAC,OAAO,SAAS;AACf,yBAAa,OAAO,MAAM,QAAQ;AAAA,UACpC;AAAA,QACF;AAAA,MACF,CAAC;AACD,aAAO,KAAK,EAAE,aAAa,KAAK,SAAS,CAAC;AAAA,IAC5C;AACA,MAAE,KAAK,UAAU,CAAC,OAAO,QAAQ;AAC/B,eAAS,GAAG,IAAI,EAAE,QAAQ,OAAO,OAAO;AAAA,IAC1C,CAAC;AACD,OAAG;AAAA,MACD,KAAK,KAAK,MAAM,eAAe;AAAA,MAC/B;AAAA,EAAoB,KAAK,UAAU,QAAQ,CAAC;AAAA;AAAA,IAC9C;AAAA,EAEF;AAAA;AACA,KAAK;","names":[]}